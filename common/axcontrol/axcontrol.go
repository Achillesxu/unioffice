//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package axcontrol ;import (_b "bytes";_cg "encoding/binary";_d "errors";_g "fmt";_gd "github.com/unidoc/unioffice/common/tempstorage";_bg "github.com/unidoc/unioffice/internal/mscfb";_gg "github.com/unidoc/unioffice/internal/mscfb/rw";_bf "github.com/unidoc/unioffice/schema/schemas.microsoft.com/office/activeX";
_bb "io";);

// GetWidth returns width of the SpinButton in HIMETRIC (0.01mm)
func (_efef *SpinButtonControl )GetWidth ()uint32 {return _efef ._afb ._cacc };func (_dee *ScrollBarControl )readDataBlock (_becb *_gg .Reader )error {_dee ._gdac =&scrollBarDataBlock {};if _dee ._dbdf ._ecdda {if _dede :=_becb .ReadProperty (&_dee ._gdac ._dgcg );
_dede !=nil {return _dede ;};};if _dee ._dbdf ._gaeg {if _ebe :=_becb .ReadProperty (&_dee ._gdac ._gdeed );_ebe !=nil {return _ebe ;};};if _dee ._dbdf ._efa {if _ddga :=_becb .ReadProperty (&_dee ._gdac ._cege );_ddga !=nil {return _ddga ;};};if _dee ._dbdf ._fabfb {if _fcad :=_becb .ReadProperty (&_dee ._gdac ._gcea );
_fcad !=nil {return _fcad ;};};if _dee ._dbdf ._affab {if _fbg :=_becb .ReadProperty (&_dee ._gdac ._gaa );_fbg !=nil {return _fbg ;};};if _dee ._dbdf ._fegb {if _fbe :=_becb .ReadProperty (&_dee ._gdac ._eabb );_fbe !=nil {return _fbe ;};};if _dee ._dbdf ._dbfd {if _abgd :=_becb .ReadProperty (&_dee ._gdac ._gcc );
_abgd !=nil {return _abgd ;};};if _dee ._dbdf ._ccccg {if _ebdc :=_becb .ReadProperty (&_dee ._gdac ._adaa );_ebdc !=nil {return _ebdc ;};};if _dee ._dbdf ._cabc {if _adae :=_becb .ReadProperty (&_dee ._gdac ._feb );_adae !=nil {return _adae ;};};if _dee ._dbdf ._efac {if _bffb :=_becb .ReadProperty (&_dee ._gdac ._gbgf );
_bffb !=nil {return _bffb ;};};if _dee ._dbdf ._geae {if _beec :=_becb .ReadProperty (&_dee ._gdac ._bfde );_beec !=nil {return _beec ;};};if _dee ._dbdf ._dcdg {if _ccbf :=_becb .ReadProperty (&_dee ._gdac ._acafe );_ccbf !=nil {return _ccbf ;};};if _dee ._dbdf ._ddcc {if _bffd :=_becb .ReadProperty (&_dee ._gdac ._cdd );
_bffd !=nil {return _bffd ;};};if _dee ._dbdf ._gegb {if _ddfc :=_becb .ReadProperty (&_dee ._gdac ._aad );_ddfc !=nil {return _ddfc ;};};if _dee ._dbdf ._aab {if _eeea :=_becb .ReadProperty (&_dee ._gdac ._ega );_eeea !=nil {return _eeea ;};};return nil ;
};type scrollBarDataBlock struct{_dgcg uint32 ;_gdeed uint32 ;_cege uint32 ;_gcea uint8 ;_gaa int32 ;_eabb int32 ;_gcc int32 ;_adaa int32 ;_feb int32 ;_gbgf int32 ;_bfde int32 ;_acafe uint32 ;_cdd uint32 ;_aad uint32 ;_ega uint16 ;};

// SetBackColor sets a button text color value from a system palette for a label control.
func (_bgag *LabelControl )SetBackColor (backColor uint32 ){_bgag ._fbb ._gag =true ;_bgag ._bge ._ffb =backColor ;};func (_eda *guidAndPicture )importFromReader (_adfa *_gg .Reader )error {_affa :=_b .NewBuffer ([]byte {});if _ ,_bdf :=_bb .CopyN (_affa ,_adfa ,int64 (_dgb ));
_bdf !=nil {return _bdf ;};_baec :=_affa .Bytes ();for _gbfd :=0;_gbfd < _dgb ;_gbfd ++{if _baec [_gbfd ]!=_afga [_gbfd ]{return _g .Errorf ("\u0049\u006e\u0076\u0061\u006c\u0069d\u0020\u0047\u0055\u0049\u0044\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u0025v\u0020\u0061\u0074\u0020\u0069\u006e\u0064e\u0078\u0020\u0025\u0076",_baec [_gbfd ],_gbfd );
};};_eda ._cedc =_baec ;_eda ._feef =&stdPicture {};if _ffg :=_adfa .ReadProperty (&_eda ._feef ._gacd );_ffg !=nil {return _ffg ;};if _eda ._feef ._gacd !=_cef {return _g .Errorf ("\u0049\u006e\u0076\u0061li\u0064\u0020\u0070\u0072\u0065\u0061\u006d\u0062\u006c\u0065\u0020\u0025\u0076",_eda ._feef ._gacd );
};if _cbg :=_adfa .ReadProperty (&_eda ._feef ._ceaab );_cbg !=nil {return _cbg ;};if _eda ._feef ._ceaab !=0{_bac :=_b .NewBuffer ([]byte {});if _ ,_cega :=_bb .Copy (_bac ,_adfa );_cega !=nil {return _cega ;};_eda ._feef ._fefb =_bac ;};return nil ;};
type morphDataControlStringValue struct{*morphDataControl };func (_caa *ImageControl )readDataBlock (_eac *_gg .Reader )error {_caa ._fba =&imageDataBlock {};if _caa ._add ._ccd {if _bdeb :=_eac .ReadProperty (&_caa ._fba ._acc );_bdeb !=nil {return _bdeb ;
};};if _caa ._add ._ege {if _dddb :=_eac .ReadProperty (&_caa ._fba ._fcd );_dddb !=nil {return _dddb ;};};if _caa ._add ._ebd {if _ead :=_eac .ReadProperty (&_caa ._fba ._ggf );_ead !=nil {return _ead ;};};if _caa ._add ._ecff {if _aedc :=_eac .ReadProperty (&_caa ._fba ._dcc );
_aedc !=nil {return _aedc ;};};if _caa ._add ._fabd {if _ddf :=_eac .ReadProperty (&_caa ._fba ._geb );_ddf !=nil {return _ddf ;};};if _caa ._add ._agf {if _aaec :=_eac .ReadProperty (&_caa ._fba ._cccg );_aaec !=nil {return _aaec ;};};if _caa ._add ._ffa {if _fffd :=_eac .ReadProperty (&_caa ._fba ._geegg );
_fffd !=nil {return _fffd ;};};if _caa ._add ._bcg {if _bfbf :=_eac .ReadProperty (&_caa ._fba ._gggd );_bfbf !=nil {return _bfbf ;};};if _caa ._add ._fbfe {if _cbgc :=_eac .ReadProperty (&_caa ._fba ._adfc );_cbgc !=nil {return _cbgc ;};};if _caa ._add ._eab {if _afag :=_eac .ReadProperty (&_caa ._fba ._dca );
_afag !=nil {return _afag ;};};return nil ;};

// SetCaption sets a caption string for a morph control.
func (_gebe *morphDataControl )SetCaption (caption string ){if _gebe ._efe {_gebe ._cfe ._deb =true ;_gebe ._dbe ._gagb =uint32 (len (caption ));_gebe ._cgbf ._fbda =caption ;};};

// OptionButtonDataControl is a representation of an option button ActiveX form.
type OptionButtonDataControl struct{*morphDataControlBoolValue };func (_gea *morphDataControl )readExtraDataBlock (_gace *_gg .Reader )error {_gea ._cgbf =&morphDataExtraDataBlock {};if _gea ._cfe ._aefg {var _aeccd uint64 ;if _ecb :=_gace .ReadPairProperty (&_aeccd );
_ecb !=nil {return _ecb ;};_gea ._cgbf ._aegb =uint32 (_aeccd );_gea ._cgbf ._cgfe =uint32 (_aeccd >>32);};if _gea ._dbe ._cec > 0{_dafa ,_agfg :=_gace .ReadStringProperty (_gea ._dbe ._cec );if _agfg !=nil {return _agfg ;};_gea ._cgbf ._fdbd =_dafa ;};
if _gea ._dbe ._gagb > 0{_ffaf ,_ded :=_gace .ReadStringProperty (_gea ._dbe ._gagb );if _ded !=nil {return _ded ;};_gea ._cgbf ._fbda =_ffaf ;};if _gea ._dbe ._fdc > 0{_dfg ,_eecb :=_gace .ReadStringProperty (_gea ._dbe ._fdc );if _eecb !=nil {return _eecb ;
};_gea ._cgbf ._edbab =_dfg ;};return nil ;};func (_gega *morphDataControl )writeColumnInfo (_cdbe *_gg .Writer )error {return nil };func (_df *CommandButtonControl )writePropMask (_agb *_gg .Writer )error {_edgg :=uint32 (0);_edgg =_gg .PushLeftUI32 (_edgg ,_df ._bda ._gbf );
_edgg =_gg .PushLeftUI32 (_edgg ,_df ._bda ._eaaa );_edgg =_gg .PushLeftUI32 (_edgg ,_df ._bda ._ag );_edgg =_gg .PushLeftUI32 (_edgg ,_df ._bda ._fac );_edgg =_gg .PushLeftUI32 (_edgg ,_df ._bda ._bad );_edgg =_gg .PushLeftUI32 (_edgg ,_df ._bda ._ced );
_edgg =_gg .PushLeftUI32 (_edgg ,_df ._bda ._dag );_edgg =_gg .PushLeftUI32 (_edgg ,_df ._bda ._aff );_edgg =_gg .PushLeftUI32 (_edgg ,_df ._bda ._bfaf );_edgg =_gg .PushLeftUI32 (_edgg ,_df ._bda ._afe );_edgg =_gg .PushLeftUI32 (_edgg ,_df ._bda ._baeg );
_edgg >>=21;return _cg .Write (_agb ,_cg .LittleEndian ,_edgg );};func (_caf *morphDataControl )writeColumnInfoDataBlock (_cdef *_gg .Writer )error {return nil };

// SetWidth sets width of the ScrollBar in HIMETRIC (0.01mm)
func (_feg *ScrollBarControl )SetWidth (width uint32 ){_feg ._dbdf ._gcdb =true ;_feg ._gfdd ._cccgc =width ;};

// SetHeight sets height of the morphDataControl in HIMETRIC (0.01mm)
func (_gacc *morphDataControl )SetHeight (height uint32 ){_gacc ._cfe ._aefg =true ;_gacc ._cgbf ._aegb =height ;};func (_ebce *LabelControl )writePropMask (_bef *_gg .Writer )error {_dagg :=uint32 (0);_dagg =_gg .PushLeftUI32 (_dagg ,_ebce ._fbb ._deg );
_dagg =_gg .PushLeftUI32 (_dagg ,_ebce ._fbb ._gag );_dagg =_gg .PushLeftUI32 (_dagg ,_ebce ._fbb ._ddcb );_dagg =_gg .PushLeftUI32 (_dagg ,_ebce ._fbb ._bdd );_dagg =_gg .PushLeftUI32 (_dagg ,_ebce ._fbb ._fbfb );_dagg =_gg .PushLeftUI32 (_dagg ,_ebce ._fbb ._efb );
_dagg =_gg .PushLeftUI32 (_dagg ,_ebce ._fbb ._fdeb );_dagg =_gg .PushLeftUI32 (_dagg ,_ebce ._fbb ._adbd );_dagg =_gg .PushLeftUI32 (_dagg ,_ebce ._fbb ._fce );_dagg =_gg .PushLeftUI32 (_dagg ,_ebce ._fbb ._fadb );_dagg =_gg .PushLeftUI32 (_dagg ,_ebce ._fbb ._cad );
_dagg =_gg .PushLeftUI32 (_dagg ,_ebce ._fbb ._bdabc );_dagg =_gg .PushLeftUI32 (_dagg ,_ebce ._fbb ._babf );_dagg >>=19;return _cg .Write (_bef ,_cg .LittleEndian ,_dagg );};

// GetValue gets a value from a control which value can be represented as a string.
func (_adg *morphDataControlStringValue )GetValue ()string {return _adg .getValueString ()};type commandButtonDataBlock struct{_ga uint32 ;_cca uint32 ;_gf uint32 ;_fee uint32 ;_bbg bool ;_gac uint32 ;_fad uint8 ;_gca uint16 ;_eef rune ;_gaf uint16 ;};
func (_ebb *CommandButtonControl )writeDataBlock (_dde *_gg .Writer )error {if _ebb ._bda ._gbf {if _de :=_dde .WriteProperty (_ebb ._fab ._ga );_de !=nil {return _de ;};};if _ebb ._bda ._eaaa {if _aaf :=_dde .WriteProperty (_ebb ._fab ._cca );_aaf !=nil {return _aaf ;
};};if _ebb ._bda ._ag {if _cbe :=_dde .WriteProperty (_ebb ._fab ._gf );_cbe !=nil {return _cbe ;};};if _ebb ._bda ._fac {_baf :=_aeg (_ebb ._fab ._fee ,_ebb ._fab ._bbg );if _aef :=_dde .WriteProperty (_baf );_aef !=nil {return _aef ;};};if _ebb ._bda ._bad {if _cedb :=_dde .WriteProperty (_ebb ._fab ._gac );
_cedb !=nil {return _cedb ;};};if _ebb ._bda ._dag {if _ceaa :=_dde .WriteProperty (_ebb ._fab ._fad );_ceaa !=nil {return _ceaa ;};};if _ebb ._bda ._aff {if _aed :=_dde .WriteProperty (_ebb ._fab ._gca );_aed !=nil {return _aed ;};};if _ebb ._bda ._bfaf {if _fag :=_dde .WriteProperty (_ebb ._fab ._eef );
_fag !=nil {return _fag ;};};if _ebb ._bda ._baeg {if _bcd :=_dde .WriteProperty (_ebb ._fab ._gaf );_bcd !=nil {return _bcd ;};};return _dde .AlignLength (4);};const (FmPictureAlignmentTopLeft FmPictureAlignment =iota ;FmPictureAlignmentTopRight ;FmPictureAlignmentCenter ;
FmPictureAlignmentBottomLeft ;FmPictureAlignmentBottomRight ;);func (_aba *morphDataControl )getValueBool ()bool {return _aba ._cfe ._afgb &&_aba ._cgbf ._fdbd =="\u0031";};type morphDataDataBlock struct{_abec uint32 ;_ffae uint32 ;_ddb uint32 ;_aafd uint32 ;
_aead byte ;_eade byte ;_acdd byte ;_abee byte ;_eag rune ;_gaec uint32 ;_bgfa uint16 ;_dgg int16 ;_gddd int16 ;_ddef uint16 ;_dfff uint16 ;_dbg uint8 ;_bfe uint8 ;_fbcd uint8 ;_dfee uint8 ;_cga uint8 ;_cec uint32 ;_ceca bool ;_gagb uint32 ;_cdeb bool ;
_eefb uint32 ;_bcb uint32 ;_ggc uint32 ;_effc uint16 ;_gfdb uint16 ;_afed rune ;_fdc uint32 ;_bfg bool ;};type scrollBarPropMask struct{_ecdda bool ;_gaeg bool ;_efa bool ;_fabfb bool ;_gcdb bool ;_affab bool ;_fegb bool ;_dbfd bool ;_ccccg bool ;_cabc bool ;
_efac bool ;_geae bool ;_dcdg bool ;_ddcc bool ;_gegb bool ;_aab bool ;};func _ebfd (_dfae *_gg .Reader )(*SpinButtonControl ,error ){_bcef :=&SpinButtonControl {};if _ddge :=_bcef .readPropMask (_dfae );_ddge !=nil {return nil ,_ddge ;};if _fdd :=_bcef .readDataBlock (_dfae );
_fdd !=nil {return nil ,_fdd ;};if _eacf :=_bcef .readExtraDataBlock (_dfae );_eacf !=nil {return nil ,_eacf ;};if _dgce :=_bcef .readStreamDataM (_dfae ,_bcef ._ecddc ._bfabe );_dgce !=nil {return nil ,_dgce ;};if _cdac :=_bcef .readTheRest (_dfae );_cdac !=nil {return nil ,_cdac ;
};return _bcef ,nil ;};

// GetMax gets a button max value.
func (_bfdf *SpinButtonControl )GetMax ()int32 {return _bfdf ._bebd ._cegg };

// SetBackColor sets a button text color value from a system palette for a scrollBar control.
func (_bgbe *ScrollBarControl )SetBackColor (backColor uint32 ){_bgbe ._dbdf ._gaeg =true ;_bgbe ._gdac ._gdeed =backColor ;};func (_gbe *morphDataControl )setValueBool (_fade bool ){_gbe ._cfe ._afgb =true ;_gbe ._dbe ._cec =1;_gbe ._dbe ._ceca =true ;
_fcca :="\u0030";if _fade {_fcca ="\u0031";};_gbe ._cgbf ._fdbd =_fcca ;};

// SpinButtonControl is a representation of a spinButton ActiveX form.
type SpinButtonControl struct{controlBase ;_ecddc *spinButtonPropMask ;_bebd *spinButtonDataBlock ;_afb *spinButtonExtraDataBlock ;_dgef *streamData ;};

// GetWidth returns width of the morphDataControl in HIMETRIC (0.01mm)
func (_fcbc *morphDataControl )GetWidth ()uint32 {return _fcbc ._cgbf ._cgfe };func (_beca *ImageControl )readExtraDataBlock (_egd *_gg .Reader )error {_beca ._fefc =&imageExtraDataBlock {};if _beca ._add ._gbb {var _abe uint64 ;if _beg :=_egd .ReadPairProperty (&_abe );
_beg !=nil {return _beg ;};_beca ._fefc ._dged =uint32 (_abe );_beca ._fefc ._gbg =uint32 (_abe >>32);};return nil ;};func (_dfa *controlBase )getPictureBytes ()[]byte {return _dfa ._faa ._cgd .getStdPictureBytes ()};type morphDataPropMask struct{_cgef bool ;
_edae bool ;_ccg bool ;_eged bool ;_fgbc bool ;_fgfe bool ;_dddf bool ;_befa bool ;_aefg bool ;_fage bool ;_eabd bool ;_age bool ;_dgc bool ;_dda bool ;_ecee bool ;_acdg bool ;_ebcb bool ;_dgbf bool ;_afea bool ;_faded bool ;_abba bool ;_afgb bool ;_deb bool ;
_dgfd bool ;_ceba bool ;_dgfb bool ;_ggded bool ;_cacf bool ;_fcaf bool ;_aecc bool ;};

// GetCaption gets a caption string from a commandButton control.
func (_db *CommandButtonControl )GetCaption ()string {return _db ._ddg ._gdcd };func _dbf (_agbb *_gg .Reader )(*morphDataControl ,error ){_bacb :=&morphDataControl {};if _ebg :=_bacb .readPropMask (_agbb );_ebg !=nil {return nil ,_ebg ;};if _bbf :=_bacb .readDataBlock (_agbb );
_bbf !=nil {return nil ,_bbf ;};if _bgc :=_bacb .readExtraDataBlock (_agbb );_bgc !=nil {return nil ,_bgc ;};if _dbc :=_bacb .readStreamDataMP (_agbb ,_bacb ._cfe ._ggded ,_bacb ._cfe ._cacf );_dbc !=nil {return nil ,_dbc ;};switch _bacb ._dbe ._acdd {case _adc ,_ggfb :if _ccf :=_bacb .readColumnInfo (_agbb );
_ccf !=nil {return nil ,_ccf ;};if _eba :=_bacb .readColumnInfoPropMask (_agbb );_eba !=nil {return nil ,_eba ;};if _adbc :=_bacb .readColumnInfoDataBlock (_agbb );_adbc !=nil {return nil ,_adbc ;};};if _acg :=_bacb .readTheRest (_agbb );_acg !=nil {return nil ,_acg ;
};return _bacb ,nil ;};

// SetHeight sets height of the ScrollBar in HIMETRIC (0.01mm)
func (_ggb *ScrollBarControl )SetHeight (height uint32 ){_ggb ._dbdf ._gcdb =true ;_ggb ._gfdd ._ccfd =height ;};func (_efbbg *controlBase )readStreamDataM (_cafg *_gg .Reader ,_ggea bool )error {_efbbg ._faa =&streamData {};if _ggea {_efbbg ._faa ._fgfdb =&guidAndPicture {};
if _facf :=_efbbg ._faa ._fgfdb .importFromReader (_cafg );_facf !=nil {return _facf ;};};return nil ;};

// GetPosition gets a button position value.
func (_efbb *SpinButtonControl )GetPosition ()int32 {return _efbb ._bebd ._adee };func (_cgcb *morphDataControl )getValueString ()string {if _cgcb ._cfe ._afgb {return _cgcb ._cgbf ._fdbd ;};return "";};

// ExportToByteArray makes a byte array from a control as it is stored in .bin files.
func (_bca *Control )ExportToByteArray ()([]byte ,error ){_geg ,_eb :=_gd .Open (_bca ._dd );if _eb !=nil {return nil ,_eb ;};defer _geg .Close ();_bdg ,_eb :=_bg .New (_geg );if _eb !=nil {return nil ,_eb ;};_fae :=_gg .NewWriter ();if _bfa :=_cg .Write (_fae ,_cg .LittleEndian ,&_bca ._cb );
_bfa !=nil {return nil ,_bfa ;};if _gda :=_cg .Write (_fae ,_cg .LittleEndian ,&_bca ._gc );_gda !=nil {return nil ,_gda ;};if _ff :=_cg .Write (_fae ,_cg .LittleEndian ,uint16 (0));_ff !=nil {return nil ,_ff ;};var _af error ;if _ecc :=_bca .Choice ;_ecc !=nil {if _ecc .CheckBox !=nil {_af =_ecc .CheckBox .export (_fae );
}else if _ecc .TextBox !=nil {_af =_ecc .TextBox .export (_fae );}else if _ecc .ComboBox !=nil {_af =_ecc .ComboBox .export (_fae );}else if _ecc .ListBox !=nil {_af =_ecc .ListBox .export (_fae );}else if _ecc .OptionButton !=nil {_af =_ecc .OptionButton .export (_fae );
}else if _ecc .ToggleButton !=nil {_af =_ecc .ToggleButton .export (_fae );}else if _ecc .Label !=nil {_af =_ecc .Label .export (_fae );}else if _ecc .SpinButton !=nil {_af =_ecc .SpinButton .export (_fae );}else if _ecc .CommandButton !=nil {_af =_ecc .CommandButton .export (_fae );
}else if _ecc .ScrollBar !=nil {_af =_ecc .ScrollBar .export (_fae );}else {_af =_ecc ._bc .writeTheRest (_fae );};};if _af !=nil {return nil ,_af ;};if _gdcg :=_fae .WriteByteAt (byte (_bca ._gdc ),2);_gdcg !=nil {return nil ,_gdcg ;};if _bce :=_fae .WriteByteAt (byte (_bca ._gdc >>8),3);
_bce !=nil {return nil ,_bce ;};_afa ,_eb :=_bdg .GetEntry ("\u0063\u006f\u006e\u0074\u0065\u006e\u0074\u0073");if _eb !=nil {return nil ,_eb ;};if _aee :=_afa .SetEntryContent (_fae .Bytes ());_aee !=nil {return nil ,_aee ;};return _bdg .Export ();};

// SetMin sets a button min value.
func (_dcagg *ScrollBarControl )SetMin (min int32 ){_dcagg ._dbdf ._affab =true ;_dcagg ._gdac ._gaa =min ;};func (_bae *CommandButtonControl )export (_cd *_gg .Writer )error {if _eaa :=_bae .writePropMask (_cd );_eaa !=nil {return _eaa ;};if _ceb :=_bae .writeDataBlock (_cd );
_ceb !=nil {return _ceb ;};if _bea :=_bae .writeExtraDataBlock (_cd );_bea !=nil {return _bea ;};_bae ._aecb =uint16 (_cd .Len ()-4);if _gdcc :=_bae .writeStreamDataPM (_cd );_gdcc !=nil {return _gdcc ;};return _bae .writeTheRest (_cd );};type commandButtonPropMask struct{_gbf bool ;
_eaaa bool ;_ag bool ;_fac bool ;_bad bool ;_ced bool ;_dag bool ;_aff bool ;_bfaf bool ;_afe bool ;_baeg bool ;};func (_ecfa *ScrollBarControl )export (_faae *_gg .Writer )error {if _dgabe :=_ecfa .writePropMask (_faae );_dgabe !=nil {return _dgabe ;};
if _egde :=_ecfa .writeDataBlock (_faae );_egde !=nil {return _egde ;};if _efeg :=_ecfa .writeExtraDataBlock (_faae );_efeg !=nil {return _efeg ;};_ecfa ._aecb =uint16 (_faae .Len ()-4);if _baaa :=_ecfa .writeStreamDataM (_faae );_baaa !=nil {return _baaa ;
};return _ecfa .writeTheRest (_faae );};func (_egf *LabelControl )readExtraDataBlock (_cfff *_gg .Reader )error {_egf ._affd =&labelExtraDataBlock {};if _egf ._bge ._addg > 0{_dgfc ,_aac :=_cfff .ReadStringProperty (_egf ._bge ._addg );if _aac !=nil {return _aac ;
};_egf ._affd ._edd =_dgfc ;};if _egf ._fbb ._efb {var _fadc uint64 ;if _daa :=_cfff .ReadPairProperty (&_fadc );_daa !=nil {return _daa ;};_egf ._affd ._dcee =uint32 (_fadc );_egf ._affd ._gagg =uint32 (_fadc >>32);};return nil ;};

// GetPosition gets a button position value.
func (_bgee *ScrollBarControl )GetPosition ()int32 {return _bgee ._gdac ._gcc };

// GetForeColor gets a button text color value for a system palette from a label control.
func (_gbda *LabelControl )GetForeColor ()uint32 {return _gbda ._bge ._cgbc };func (_cff *CommandButtonControl )readPropMask (_cgg *_gg .Reader )error {var _ca uint32 ;if _gcd :=_cg .Read (_cgg ,_cg .LittleEndian ,&_ca );_gcd !=nil {return _gcd ;};_cff ._bda =&commandButtonPropMask {};
_cff ._bda ._gbf ,_ca =_gg .PopRightUI32 (_ca );_cff ._bda ._eaaa ,_ca =_gg .PopRightUI32 (_ca );_cff ._bda ._ag ,_ca =_gg .PopRightUI32 (_ca );_cff ._bda ._fac ,_ca =_gg .PopRightUI32 (_ca );_cff ._bda ._bad ,_ca =_gg .PopRightUI32 (_ca );_cff ._bda ._ced ,_ca =_gg .PopRightUI32 (_ca );
_cff ._bda ._dag ,_ca =_gg .PopRightUI32 (_ca );_cff ._bda ._aff ,_ca =_gg .PopRightUI32 (_ca );_cff ._bda ._bfaf ,_ca =_gg .PopRightUI32 (_ca );_cff ._bda ._afe ,_ca =_gg .PopRightUI32 (_ca );_cff ._bda ._baeg ,_ca =_gg .PopRightUI32 (_ca );return nil ;
};var _dgb =len (_afga );type spinButtonExtraDataBlock struct{_cacc uint32 ;_cbd uint32 ;};func (_afg *controlBase )writeTheRest (_baeb *_gg .Writer )error {_ ,_acd :=_baeb .Write (_afg ._aage );return _acd ;};const _ggfb =3;func _cde (_bdc *_gg .Reader )(*ImageControl ,error ){_eeb :=&ImageControl {};
if _fff :=_eeb .readPropMask (_bdc );_fff !=nil {return nil ,_fff ;};if _fbab :=_eeb .readDataBlock (_bdc );_fbab !=nil {return nil ,_fbab ;};if _dff :=_eeb .readExtraDataBlock (_bdc );_dff !=nil {return nil ,_dff ;};if _bdb :=_eeb .readStreamDataPM (_bdc ,_eeb ._add ._ffa ,_eeb ._add ._eab );
_bdb !=nil {return nil ,_bdb ;};if _abg :=_eeb .readTheRest (_bdc );_abg !=nil {return nil ,_abg ;};return _eeb ,nil ;};

// GetForeColor gets a button text color value for a system palette from a scrollBar control.
func (_gge *ScrollBarControl )GetForeColor ()uint32 {return _gge ._gdac ._dgcg };func _cea (_fbf *_gg .Reader )(*CommandButtonControl ,error ){_gdb :=&CommandButtonControl {};if _dce :=_gdb .readPropMask (_fbf );_dce !=nil {return nil ,_dce ;};if _dge :=_gdb .readDataBlock (_fbf );
_dge !=nil {return nil ,_dge ;};if _eccb :=_gdb .readExtraDataBlock (_fbf );_eccb !=nil {return nil ,_eccb ;};if _ac :=_gdb .readStreamDataPM (_fbf ,_gdb ._bda ._aff ,_gdb ._bda ._baeg );_ac !=nil {return nil ,_ac ;};if _ddd :=_gdb .readTheRest (_fbf );
_ddd !=nil {return nil ,_ddd ;};return _gdb ,nil ;};type morphDataColumnInfoDataBlock struct{};

// SetMin sets a button min value.
func (_acgc *SpinButtonControl )SetMin (min int32 ){_acgc ._ecddc ._eae =true ;_acgc ._bebd ._fgcd =min };

// SetHeight sets height of the Label in HIMETRIC (0.01mm)
func (_cda *LabelControl )SetHeight (height uint32 ){_cda ._fbb ._efb =true ;_cda ._affd ._dcee =height };

// SetForeColor sets a button text color value from a system palette for a spinButton control.
func (_gbfc *SpinButtonControl )SetForeColor (foreColor uint32 ){_gbfc ._ecddc ._adaee =true ;_gbfc ._bebd ._abbb =foreColor ;};

// GetMin gets a button min value.
func (_cede *ScrollBarControl )GetMin ()int32 {return _cede ._gdac ._gaa };const (FmPictureSizeModeClip FmPictureSizeMode =iota ;FmPictureSizeModeStretch ;_ ;FmPictureSizeModeZoom ;);

// GetCaption gets a caption string from a label control.
func (_acb *LabelControl )GetCaption ()string {return _acb ._affd ._edd };const _cef uint32 =0x0000746C;func (_feed *controlBase )writeStreamDataMP (_edc *_gg .Writer )error {if _feed ._faa !=nil {if _feed ._faa ._fgfdb !=nil {if _eadcb :=_feed ._faa ._fgfdb .export (_edc );
_eadcb !=nil {return _eadcb ;};};if _feed ._faa ._cgd !=nil {if _dgae :=_feed ._faa ._cgd .export (_edc );_dgae !=nil {return _dgae ;};};};return nil ;};func (_cce *controlBase )setMouseIconBytes (_dgf []byte ){if _cce ._faa ._fgfdb ==nil {_cce ._faa ._fgfdb =&guidAndPicture {};
};_cce ._faa ._fgfdb .setStdPictureBytes (_dgf );};func (_cgfac *morphDataControl )export (_gcad *_gg .Writer )error {if _aagg :=_cgfac .writePropMask (_gcad );_aagg !=nil {return _aagg ;};if _gcfc :=_cgfac .writeDataBlock (_gcad );_gcfc !=nil {return _gcfc ;
};if _cbcb :=_cgfac .writeExtraDataBlock (_gcad );_cbcb !=nil {return _cbcb ;};_cgfac ._aecb =uint16 (_gcad .Len ()-4);if _egb :=_cgfac .writeStreamDataMP (_gcad );_egb !=nil {return _egb ;};return _cgfac .writeTheRest (_gcad );};func (_ddcg *ImageControl )writeDataBlock (_fgb *_gg .Writer )error {if _ddcg ._add ._ccd {if _aaae :=_fgb .WriteProperty (_ddcg ._fba ._acc );
_aaae !=nil {return _aaae ;};};if _ddcg ._add ._ege {if _ade :=_fgb .WriteProperty (_ddcg ._fba ._fcd );_ade !=nil {return _ade ;};};if _ddcg ._add ._ebd {if _cfca :=_fgb .WriteProperty (_ddcg ._fba ._ggf );_cfca !=nil {return _cfca ;};};if _ddcg ._add ._ecff {if _bfafd :=_fgb .WriteProperty (_ddcg ._fba ._dcc );
_bfafd !=nil {return _bfafd ;};};if _ddcg ._add ._fabd {if _fge :=_fgb .WriteProperty (_ddcg ._fba ._geb );_fge !=nil {return _fge ;};};if _ddcg ._add ._agf {if _egg :=_fgb .WriteProperty (_ddcg ._fba ._cccg );_egg !=nil {return _egg ;};};if _ddcg ._add ._ffa {if _fffa :=_fgb .WriteProperty (_ddcg ._fba ._geegg );
_fffa !=nil {return _fffa ;};};if _ddcg ._add ._bcg {if _fcg :=_fgb .WriteProperty (_ddcg ._fba ._gggd );_fcg !=nil {return _fcg ;};};if _ddcg ._add ._fbfe {if _ccac :=_fgb .WriteProperty (_ddcg ._fba ._adfc );_ccac !=nil {return _ccac ;};};if _ddcg ._add ._eab {if _fcf :=_fgb .WriteProperty (_ddcg ._fba ._dca );
_fcf !=nil {return _fcf ;};};return _fgb .AlignLength (4);};

// LabelControl is a representation of a label ActiveX form.
type LabelControl struct{controlBase ;_fbb *labelPropMask ;_bge *labelDataBlock ;_affd *labelExtraDataBlock ;_gab *streamData ;};type imageExtraDataBlock struct{_gbg uint32 ;_dged uint32 ;};

// GetWidth returns width of the CommandButton in HIMETRIC (0.01mm)
func (_cgfa *CommandButtonControl )GetWidth ()uint32 {return _cgfa ._ddg ._aece };

// ControlChoice represents an ActiveX control inside a wrapper.
type ControlChoice struct{CheckBox *CheckBoxDataControl ;TextBox *TextBoxDataControl ;ListBox *ListBoxDataControl ;ComboBox *ComboBoxDataControl ;OptionButton *OptionButtonDataControl ;ToggleButton *ToggleButtonDataControl ;Label *LabelControl ;Image *ImageControl ;
SpinButton *SpinButtonControl ;CommandButton *CommandButtonControl ;ScrollBar *ScrollBarControl ;_bc *controlBase ;};

// GetWidth returns width of the Label in HIMETRIC (0.01mm)
func (_ece *LabelControl )GetWidth ()uint32 {return _ece ._affd ._gagg };type imageDataBlock struct{_acc uint32 ;_fcd uint32 ;_ggf byte ;_dcc uint8 ;_geb byte ;_cccg byte ;_geegg uint16 ;_gggd byte ;_adfc uint32 ;_dca uint16 ;};

// GetWidth returns width of the ScrollBar in HIMETRIC (0.01mm)
func (_aacg *ScrollBarControl )GetWidth ()uint32 {return _aacg ._gfdd ._cccgc };func (_baegf *morphDataControl )readPropMask (_fgbd *_gg .Reader )error {var _bgf uint64 ;if _dcfb :=_cg .Read (_fgbd ,_cg .LittleEndian ,&_bgf );_dcfb !=nil {return _dcfb ;
};_baegf ._cfe =&morphDataPropMask {};_baegf ._cfe ._cgef ,_bgf =_gg .PopRightUI64 (_bgf );_baegf ._cfe ._edae ,_bgf =_gg .PopRightUI64 (_bgf );_baegf ._cfe ._ccg ,_bgf =_gg .PopRightUI64 (_bgf );_baegf ._cfe ._eged ,_bgf =_gg .PopRightUI64 (_bgf );_baegf ._cfe ._fgbc ,_bgf =_gg .PopRightUI64 (_bgf );
_baegf ._cfe ._fgfe ,_bgf =_gg .PopRightUI64 (_bgf );_baegf ._cfe ._dddf ,_bgf =_gg .PopRightUI64 (_bgf );_baegf ._cfe ._befa ,_bgf =_gg .PopRightUI64 (_bgf );_baegf ._cfe ._aefg ,_bgf =_gg .PopRightUI64 (_bgf );_baegf ._cfe ._fage ,_bgf =_gg .PopRightUI64 (_bgf );
_baegf ._cfe ._eabd ,_bgf =_gg .PopRightUI64 (_bgf );_baegf ._cfe ._age ,_bgf =_gg .PopRightUI64 (_bgf );_baegf ._cfe ._dgc ,_bgf =_gg .PopRightUI64 (_bgf );_baegf ._cfe ._dda ,_bgf =_gg .PopRightUI64 (_bgf );_baegf ._cfe ._ecee ,_bgf =_gg .PopRightUI64 (_bgf );
_baegf ._cfe ._acdg ,_bgf =_gg .PopRightUI64 (_bgf );_baegf ._cfe ._ebcb ,_bgf =_gg .PopRightUI64 (_bgf );_baegf ._cfe ._dgbf ,_bgf =_gg .PopRightUI64 (_bgf );_baegf ._cfe ._afea ,_bgf =_gg .PopRightUI64 (_bgf );_bgf >>=1;_baegf ._cfe ._faded ,_bgf =_gg .PopRightUI64 (_bgf );
_baegf ._cfe ._abba ,_bgf =_gg .PopRightUI64 (_bgf );_baegf ._cfe ._afgb ,_bgf =_gg .PopRightUI64 (_bgf );_baegf ._cfe ._deb ,_bgf =_gg .PopRightUI64 (_bgf );_baegf ._cfe ._dgfd ,_bgf =_gg .PopRightUI64 (_bgf );_baegf ._cfe ._ceba ,_bgf =_gg .PopRightUI64 (_bgf );
_baegf ._cfe ._dgfb ,_bgf =_gg .PopRightUI64 (_bgf );_baegf ._cfe ._ggded ,_bgf =_gg .PopRightUI64 (_bgf );_baegf ._cfe ._cacf ,_bgf =_gg .PopRightUI64 (_bgf );_baegf ._cfe ._fcaf ,_bgf =_gg .PopRightUI64 (_bgf );_bgf >>=1;_bgf >>=1;_baegf ._cfe ._aecc ,_bgf =_gg .PopRightUI64 (_bgf );
return nil ;};

// TextBoxDataControl is a representation of a text box ActiveX form.
type TextBoxDataControl struct{*morphDataControlStringValue };

// GetHeight returns height of the ScrollBar in HIMETRIC (0.01mm)
func (_acgd *ScrollBarControl )GetHeight ()uint32 {return _acgd ._gfdd ._ccfd };func _gb (_ce uint32 )(bool ,uint32 ){if _ce ==0{return false ,0;};_ecf :=_ce >=1<<31;if _ecf {_ce -=1<<31;};return _ecf ,_ce ;};func (_agg *morphDataControl )setValueString (_dafc string ){_agg ._cfe ._afgb =true ;
_agg ._dbe ._cec =uint32 (len (_dafc ));_agg ._cgbf ._fdbd =_dafc ;};const _dac =4;type morphDataControlBoolValue struct{*morphDataControl };func (_ddeg *LabelControl )export (_cdg *_gg .Writer )error {if _bfac :=_ddeg .writePropMask (_cdg );_bfac !=nil {return _bfac ;
};if _fcdb :=_ddeg .writeDataBlock (_cdg );_fcdb !=nil {return _fcdb ;};if _fed :=_ddeg .writeExtraDataBlock (_cdg );_fed !=nil {return _fed ;};_ddeg ._aecb =uint16 (_cdg .Len ()-4);if _bgeg :=_ddeg .writeStreamDataPM (_cdg );_bgeg !=nil {return _bgeg ;
};return _ddeg .writeTheRest (_cdg );};

// GetForeColor gets a button text color value for a system palette from a spinButton control.
func (_cebc *SpinButtonControl )GetForeColor ()uint32 {return _cebc ._bebd ._abbb };type morphDataColumnInfo struct{};

// Control represents an ActiveX control wrapper.
type Control struct{TargetAttr string ;Ocx *_bf .Ocx ;Choice *ControlChoice ;_dd string ;_cb uint8 ;_gc uint8 ;_gdc uint16 ;};

// SetValue sets a value for a control which value can be represented as boolean (on/off).
func (_baa *morphDataControlBoolValue )SetValue (value bool ){_baa .setValueBool (value )};

// SetWidth sets width of the CommandButton in HIMETRIC (0.01mm)
func (_dcf *CommandButtonControl )SetWidth (width uint32 ){_dcf ._bda ._ced =true ;_dcf ._ddg ._aece =width ;};const _adeg =6;func (_cbec *controlBase )getMouseIconBytes ()[]byte {return _cbec ._faa ._fgfdb .getStdPictureBytes ()};func (_adfb *controlBase )writeStreamDataPM (_dea *_gg .Writer )error {if _adfb ._faa !=nil {if _adfb ._faa ._cgd !=nil {if _afaf :=_adfb ._faa ._cgd .export (_dea );
_afaf !=nil {return _afaf ;};};if _adfb ._faa ._fgfdb !=nil {if _dbbe :=_adfb ._faa ._fgfdb .export (_dea );_dbbe !=nil {return _dbbe ;};};};return nil ;};

// ImageControl is a representation of an image ActiveX form.
type ImageControl struct{controlBase ;_add *imagePropMask ;_fba *imageDataBlock ;_fefc *imageExtraDataBlock ;_cgb *streamData ;};

// FmPictureAlignment represents one of the five picture aignments according to MS-OFORMS document.
type FmPictureAlignment byte ;func (_caag *ScrollBarControl )readExtraDataBlock (_eced *_gg .Reader )error {_caag ._gfdd =&scrollBarExtraDataBlock {};if _caag ._dbdf ._gcdb {var _gceb uint64 ;if _bddf :=_eced .ReadPairProperty (&_gceb );_bddf !=nil {return _bddf ;
};_caag ._gfdd ._ccfd =uint32 (_gceb );_caag ._gfdd ._cccgc =uint32 (_gceb >>32);};return nil ;};

// GetMax gets a button max value.
func (_dcea *ScrollBarControl )GetMax ()int32 {return _dcea ._gdac ._eabb };func (_efbbe *SpinButtonControl )readPropMask (_ddac *_gg .Reader )error {var _gacb uint32 ;if _fefa :=_cg .Read (_ddac ,_cg .LittleEndian ,&_gacb );_fefa !=nil {return _fefa ;
};_efbbe ._ecddc =&spinButtonPropMask {};_efbbe ._ecddc ._adaee ,_gacb =_gg .PopRightUI32 (_gacb );_efbbe ._ecddc ._afef ,_gacb =_gg .PopRightUI32 (_gacb );_efbbe ._ecddc ._ggfc ,_gacb =_gg .PopRightUI32 (_gacb );_efbbe ._ecddc ._dcda ,_gacb =_gg .PopRightUI32 (_gacb );
_gacb >>=1;_efbbe ._ecddc ._eae ,_gacb =_gg .PopRightUI32 (_gacb );_efbbe ._ecddc ._bfff ,_gacb =_gg .PopRightUI32 (_gacb );_efbbe ._ecddc ._bagf ,_gacb =_gg .PopRightUI32 (_gacb );_efbbe ._ecddc ._egad ,_gacb =_gg .PopRightUI32 (_gacb );_efbbe ._ecddc ._bgcb ,_gacb =_gg .PopRightUI32 (_gacb );
_efbbe ._ecddc ._acgcc ,_gacb =_gg .PopRightUI32 (_gacb );_efbbe ._ecddc ._egbb ,_gacb =_gg .PopRightUI32 (_gacb );_efbbe ._ecddc ._gcgd ,_gacb =_gg .PopRightUI32 (_gacb );_efbbe ._ecddc ._bfabe ,_gacb =_gg .PopRightUI32 (_gacb );_efbbe ._ecddc ._cgag ,_gacb =_gg .PopRightUI32 (_gacb );
return nil ;};type imagePropMask struct{_edb bool ;_ccd bool ;_ege bool ;_ebd bool ;_ecff bool ;_fabd bool ;_agf bool ;_gbb bool ;_ffa bool ;_bcg bool ;_cag bool ;_fbfe bool ;_eab bool ;};func (_cac *ImageControl )writeExtraDataBlock (_abf *_gg .Writer )error {if _cac ._add ._gbb {_bga :=uint64 (_cac ._fefc ._gbg )<<32|uint64 (_cac ._fefc ._dged );
if _daf :=_abf .WritePropertyNoAlign (_bga );_daf !=nil {return _daf ;};};return nil ;};const _adc =2;

// FmPictureSizeMode represents one of the three picture size modes according to MS-OFORMS document.
type FmPictureSizeMode byte ;func (_ebf *morphDataControl )readColumnInfoDataBlock (_dcfd *_gg .Reader )error {return nil };

// ImportFromFile makes a Control from a file in a storage.
func ImportFromFile (storagePath string )(*Control ,error ){_bbd ,_e :=_gd .Open (storagePath );if _e !=nil {return nil ,_e ;};defer _bbd .Close ();_ed ,_e :=_bg .New (_bbd );if _e !=nil {return nil ,_e ;};_ge ,_e :=_ef (_ed );if _e !=nil {return nil ,_e ;
};_a ,_e :=_ed .GetEntry ("\u0063\u006f\u006e\u0074\u0065\u006e\u0074\u0073");if _e !=nil {return nil ,_e ;};_f :=make ([]byte ,_a .Size );_ ,_e =_a .Read (_f );if _e !=nil {return nil ,_e ;};_ea :=&Control {_dd :storagePath };_ad ,_e :=_gg .NewReader (_f );
if _e !=nil {return nil ,_e ;};if _edg :=_cg .Read (_ad ,_cg .LittleEndian ,&_ea ._cb );_edg !=nil {return nil ,_edg ;};if _fa :=_cg .Read (_ad ,_cg .LittleEndian ,&_ea ._gc );_fa !=nil {return nil ,_fa ;};if _ada :=_cg .Read (_ad ,_cg .LittleEndian ,&_ea ._gdc );
_ada !=nil {return nil ,_ada ;};switch _ge {case "\u0043\u0068\u0065\u0063\u006b\u0042\u006f\u0078":_aa ,_gde :=_dbf (_ad );if _gde !=nil {return nil ,_gde ;};_aa ._efe =true ;_ea .Choice =&ControlChoice {CheckBox :&CheckBoxDataControl {&morphDataControlBoolValue {_aa }}};
case "\u0054e\u0078\u0074\u0042\u006f\u0078":_gga ,_dg :=_dbf (_ad );if _dg !=nil {return nil ,_dg ;};_gga ._efe =true ;_ea .Choice =&ControlChoice {TextBox :&TextBoxDataControl {&morphDataControlStringValue {_gga }}};case "\u0043\u006f\u006d\u0062\u006f\u0042\u006f\u0078":_ecd ,_cf :=_dbf (_ad );
if _cf !=nil {return nil ,_cf ;};_ecd ._efe =true ;_ea .Choice =&ControlChoice {ComboBox :&ComboBoxDataControl {&morphDataControlStringValue {_ecd }}};case "\u004ci\u0073\u0074\u0042\u006f\u0078":_fg ,_fc :=_dbf (_ad );if _fc !=nil {return nil ,_fc ;};
_fg ._efe =true ;_ea .Choice =&ControlChoice {ListBox :&ListBoxDataControl {&morphDataControlStringValue {_fg }}};case "\u004f\u0070\u0074i\u006f\u006e\u0042\u0075\u0074\u0074\u006f\u006e":_ae ,_dc :=_dbf (_ad );if _dc !=nil {return nil ,_dc ;};_ae ._efe =true ;
_ea .Choice =&ControlChoice {OptionButton :&OptionButtonDataControl {&morphDataControlBoolValue {_ae }}};case "\u0054\u006f\u0067g\u006c\u0065\u0042\u0075\u0074\u0074\u006f\u006e":_ee ,_cgf :=_dbf (_ad );if _cgf !=nil {return nil ,_cgf ;};_ee ._efe =true ;
_ea .Choice =&ControlChoice {ToggleButton :&ToggleButtonDataControl {&morphDataControlBoolValue {_ee }}};case "\u004c\u0061\u0062e\u006c":_cc ,_fca :=_edag (_ad );if _fca !=nil {return nil ,_fca ;};_ea .Choice =&ControlChoice {Label :_cc };case "\u0053\u0070\u0069\u006e\u0042\u0075\u0074\u0074\u006f\u006e":_dcg ,_gdd :=_ebfd (_ad );
if _gdd !=nil {return nil ,_gdd ;};_ea .Choice =&ControlChoice {SpinButton :_dcg };case "\u0043\u006f\u006d\u006d\u0061\u006e\u0064\u0042\u0075\u0074\u0074\u006f\u006e":_fe ,_fga :=_cea (_ad );if _fga !=nil {return nil ,_fga ;};_ea .Choice =&ControlChoice {CommandButton :_fe };
case "\u0053c\u0072\u006f\u006c\u006c\u0042\u0061r":_be ,_bfb :=_begc (_ad );if _bfb !=nil {return nil ,_bfb ;};_ea .Choice =&ControlChoice {ScrollBar :_be };default:_bd :=&controlBase {};if _aec :=_bd .readTheRest (_ad );_aec !=nil {return nil ,_aec ;
};_ea .Choice =&ControlChoice {_bc :_bd };};return _ea ,nil ;};

// SetWidth sets width of the SpinButton in HIMETRIC (0.01mm)
func (_bagaf *SpinButtonControl )SetWidth (width uint32 ){_bagaf ._ecddc ._dcda =true ;_bagaf ._afb ._cacc =width ;};func (_gecff *ScrollBarControl )writeDataBlock (_ggge *_gg .Writer )error {if _gecff ._dbdf ._ecdda {if _cdc :=_ggge .WriteProperty (_gecff ._gdac ._dgcg );
_cdc !=nil {return _cdc ;};};if _gecff ._dbdf ._gaeg {if _fgg :=_ggge .WriteProperty (_gecff ._gdac ._gdeed );_fgg !=nil {return _fgg ;};};if _gecff ._dbdf ._efa {if _fccgb :=_ggge .WriteProperty (_gecff ._gdac ._cege );_fccgb !=nil {return _fccgb ;};};
if _gecff ._dbdf ._fabfb {if _dgbc :=_ggge .WriteProperty (_gecff ._gdac ._gcea );_dgbc !=nil {return _dgbc ;};};if _gecff ._dbdf ._affab {if _gaab :=_ggge .WriteProperty (_gecff ._gdac ._gaa );_gaab !=nil {return _gaab ;};};if _gecff ._dbdf ._fegb {if _affc :=_ggge .WriteProperty (_gecff ._gdac ._eabb );
_affc !=nil {return _affc ;};};if _gecff ._dbdf ._dbfd {if _aade :=_ggge .WriteProperty (_gecff ._gdac ._gcc );_aade !=nil {return _aade ;};};if _gecff ._dbdf ._ccccg {if _edeb :=_ggge .WriteProperty (_gecff ._gdac ._adaa );_edeb !=nil {return _edeb ;};
};if _gecff ._dbdf ._cabc {if _fgac :=_ggge .WriteProperty (_gecff ._gdac ._feb );_fgac !=nil {return _fgac ;};};if _gecff ._dbdf ._efac {if _dba :=_ggge .WriteProperty (_gecff ._gdac ._gbgf );_dba !=nil {return _dba ;};};if _gecff ._dbdf ._geae {if _adfe :=_ggge .WriteProperty (_gecff ._gdac ._bfde );
_adfe !=nil {return _adfe ;};};if _gecff ._dbdf ._dcdg {if _efad :=_ggge .WriteProperty (_gecff ._gdac ._acafe );_efad !=nil {return _efad ;};};if _gecff ._dbdf ._ddcc {if _ccebc :=_ggge .WriteProperty (_gecff ._gdac ._cdd );_ccebc !=nil {return _ccebc ;
};};if _gecff ._dbdf ._gegb {if _dgge :=_ggge .WriteProperty (_gecff ._gdac ._aad );_dgge !=nil {return _dgge ;};};if _gecff ._dbdf ._aab {if _fgfd :=_ggge .WriteProperty (_gecff ._gdac ._ega );_fgfd !=nil {return _fgfd ;};};return _ggge .AlignLength (4);
};type controlBase struct{_aecb uint16 ;_efe bool ;_faa *streamData ;_aage []byte ;};func (_cfaf *LabelControl )writeDataBlock (_egdf *_gg .Writer )error {if _cfaf ._fbb ._deg {if _gce :=_egdf .WriteProperty (_cfaf ._bge ._cgbc );_gce !=nil {return _gce ;
};};if _cfaf ._fbb ._gag {if _afd :=_egdf .WriteProperty (_cfaf ._bge ._ffb );_afd !=nil {return _afd ;};};if _cfaf ._fbb ._ddcb {if _fffc :=_egdf .WriteProperty (_cfaf ._bge ._gegf );_fffc !=nil {return _fffc ;};};if _cfaf ._fbb ._bdd {_aga :=_aeg (_cfaf ._bge ._addg ,_cfaf ._bge ._ddeb );
if _fccg :=_egdf .WriteProperty (_aga );_fccg !=nil {return _fccg ;};};if _cfaf ._fbb ._fbfb {if _fcaa :=_egdf .WriteProperty (_cfaf ._bge ._bbca );_fcaa !=nil {return _fcaa ;};};if _cfaf ._fbb ._fdeb {if _fcfg :=_egdf .WriteProperty (_cfaf ._bge ._bee );
_fcfg !=nil {return _fcfg ;};};if _cfaf ._fbb ._adbd {if _gfb :=_egdf .WriteProperty (_cfaf ._bge ._fbd );_gfb !=nil {return _gfb ;};};if _cfaf ._fbb ._fce {if _cbc :=_egdf .WriteProperty (_cfaf ._bge ._gage );_cbc !=nil {return _cbc ;};};if _cfaf ._fbb ._fadb {if _eff :=_egdf .WriteProperty (_cfaf ._bge ._agba );
_eff !=nil {return _eff ;};};if _cfaf ._fbb ._cad {if _bbce :=_egdf .WriteProperty (_cfaf ._bge ._eeg );_bbce !=nil {return _bbce ;};};if _cfaf ._fbb ._bdabc {if _edgb :=_egdf .WriteProperty (_cfaf ._bge ._cae );_edgb !=nil {return _edgb ;};};if _cfaf ._fbb ._babf {if _aea :=_egdf .WriteProperty (_cfaf ._bge ._gbbf );
_aea !=nil {return _aea ;};};return _egdf .AlignLength (4);};

// ScrollBarControl is a representation of a scrollBar ActiveX form.
type ScrollBarControl struct{controlBase ;_dbdf *scrollBarPropMask ;_gdac *scrollBarDataBlock ;_gfdd *scrollBarExtraDataBlock ;_eeeb *streamData ;};func (_eca *ScrollBarControl )writePropMask (_egbc *_gg .Writer )error {_egbd :=uint32 (0);_egbd =_gg .PushLeftUI32 (_egbd ,_eca ._dbdf ._ecdda );
_egbd =_gg .PushLeftUI32 (_egbd ,_eca ._dbdf ._gaeg );_egbd =_gg .PushLeftUI32 (_egbd ,_eca ._dbdf ._efa );_egbd =_gg .PushLeftUI32 (_egbd ,_eca ._dbdf ._gcdb );_egbd =_gg .PushLeftUI32 (_egbd ,_eca ._dbdf ._fabfb );_egbd =_gg .PushLeftUI32 (_egbd ,_eca ._dbdf ._affab );
_egbd =_gg .PushLeftUI32 (_egbd ,_eca ._dbdf ._fegb );_egbd =_gg .PushLeftUI32 (_egbd ,_eca ._dbdf ._dbfd );_egbd >>=1;_egbd =_gg .PushLeftUI32 (_egbd ,_eca ._dbdf ._ccccg );_egbd =_gg .PushLeftUI32 (_egbd ,_eca ._dbdf ._cabc );_egbd =_gg .PushLeftUI32 (_egbd ,_eca ._dbdf ._efac );
_egbd =_gg .PushLeftUI32 (_egbd ,_eca ._dbdf ._geae );_egbd =_gg .PushLeftUI32 (_egbd ,_eca ._dbdf ._dcdg );_egbd =_gg .PushLeftUI32 (_egbd ,_eca ._dbdf ._ddcc );_egbd =_gg .PushLeftUI32 (_egbd ,_eca ._dbdf ._gegb );_egbd =_gg .PushLeftUI32 (_egbd ,_eca ._dbdf ._aab );
_egbd >>=15;return _cg .Write (_egbc ,_cg .LittleEndian ,_egbd );};

// SetCaption sets a caption string for a label control.
func (_gfd *LabelControl )SetCaption (caption string ){_gfd ._fbb ._bdd =true ;_gfd ._bge ._addg =uint32 (len (caption ));_gfd ._affd ._edd =caption ;};

// GetBackColor gets a button text color value for a system palette from a scrollBar control.
func (_egdd *ScrollBarControl )GetBackColor ()uint32 {return _egdd ._gdac ._gdeed };func _ef (_cge *_bg .Reader )(string ,error ){_da ,_fd :=_cge .GetEntry ("\u0043o\u006d\u0070\u004f\u0062\u006a");if _fd !=nil {return "",_fd ;};_fef :=make ([]byte ,_da .Size );
_ ,_fd =_da .Read (_fef );if _fd !=nil {return "",_fd ;};_edf :=_b .Split (_fef ,[]byte ("\u002e"));if len (_edf )< 2{return "",_d .New ("\u0055\u006e\u006bn\u006f\u0077\u006e\u0020\u0066\u006f\u0072\u006d");};return string (_edf [len (_edf )-2]),nil ;
};func (_ab *CommandButtonControl )readDataBlock (_fdb *_gg .Reader )error {_ab ._fab =&commandButtonDataBlock {};if _ab ._bda ._gbf {if _cfa :=_fdb .ReadProperty (&_ab ._fab ._ga );_cfa !=nil {return _cfa ;};};if _ab ._bda ._eaaa {if _ddc :=_fdb .ReadProperty (&_ab ._fab ._cca );
_ddc !=nil {return _ddc ;};};if _ab ._bda ._ag {if _ceg :=_fdb .ReadProperty (&_ab ._fab ._gf );_ceg !=nil {return _ceg ;};};if _ab ._bda ._fac {var _cba uint32 ;if _gae :=_fdb .ReadProperty (&_cba );_gae !=nil {return _gae ;};_ab ._fab ._bbg ,_ab ._fab ._fee =_gb (_cba );
};if _ab ._bda ._bad {if _gbd :=_fdb .ReadProperty (&_ab ._fab ._gac );_gbd !=nil {return _gbd ;};};if _ab ._bda ._dag {if _cfc :=_fdb .ReadProperty (&_ab ._fab ._fad );_cfc !=nil {return _cfc ;};};if _ab ._bda ._aff {if _geeg :=_fdb .ReadProperty (&_ab ._fab ._gca );
_geeg !=nil {return _geeg ;};};if _ab ._bda ._bfaf {if _dga :=_fdb .ReadProperty (&_ab ._fab ._eef );_dga !=nil {return _dga ;};};if _ab ._bda ._baeg {if _afc :=_fdb .ReadProperty (&_ab ._fab ._gaf );_afc !=nil {return _afc ;};};return nil ;};func (_eeed *morphDataControl )readColumnInfoPropMask (_dbce *_gg .Reader )error {return nil };
func (_fbfc *controlBase )readTheRest (_gdf *_gg .Reader )error {_bec :=_b .NewBuffer ([]byte {});_ ,_aca :=_bb .Copy (_bec ,_gdf );if _aca !=nil {return _aca ;};_fbfc ._aage =_bec .Bytes ();return nil ;};func (_cagg *morphDataControl )readColumnInfo (_bcdb *_gg .Reader )error {return nil };


// SetMax sets a button max value.
func (_gdgg *SpinButtonControl )SetMax (max int32 ){_gdgg ._ecddc ._bfff =true ;_gdgg ._bebd ._cegg =max };func (_beaa *morphDataControl )writeColumnInfoPropMask (_fdebf *_gg .Writer )error {return nil };func (_gafb *LabelControl )writeExtraDataBlock (_fcbb *_gg .Writer )error {if _gafb ._bge ._addg > 0{if _gcg :=_fcbb .WriteStringProperty (_gafb ._affd ._edd );
_gcg !=nil {return _gcg ;};};if _gafb ._fbb ._efb {_fcgg :=uint64 (_gafb ._affd ._gagg )<<32|uint64 (_gafb ._affd ._dcee );if _gfbd :=_fcbb .WritePropertyNoAlign (_fcgg );_gfbd !=nil {return _gfbd ;};};return nil ;};type commandButtonExtraDataBlock struct{_aece uint32 ;
_aag uint32 ;_gdcd string ;};type guidAndPicture struct{_cedc []byte ;_feef *stdPicture ;};

// GetHeight returns height of the CommandButton in HIMETRIC (0.01mm)
func (_ba *CommandButtonControl )GetHeight ()uint32 {return _ba ._ddg ._aag };

// GetBackColor gets a button text color value for a system palette from a label control.
func (_ggde *LabelControl )GetBackColor ()uint32 {return _ggde ._bge ._ffb };func (_ggg *ImageControl )readPropMask (_ffd *_gg .Reader )error {var _bfd uint32 ;if _dfe :=_cg .Read (_ffd ,_cg .LittleEndian ,&_bfd );_dfe !=nil {return _dfe ;};_ggg ._add =&imagePropMask {};
_bfd >>=2;_ggg ._add ._edb ,_bfd =_gg .PopRightUI32 (_bfd );_ggg ._add ._ccd ,_bfd =_gg .PopRightUI32 (_bfd );_ggg ._add ._ege ,_bfd =_gg .PopRightUI32 (_bfd );_ggg ._add ._ebd ,_bfd =_gg .PopRightUI32 (_bfd );_ggg ._add ._ecff ,_bfd =_gg .PopRightUI32 (_bfd );
_ggg ._add ._fabd ,_bfd =_gg .PopRightUI32 (_bfd );_ggg ._add ._agf ,_bfd =_gg .PopRightUI32 (_bfd );_ggg ._add ._gbb ,_bfd =_gg .PopRightUI32 (_bfd );_ggg ._add ._ffa ,_bfd =_gg .PopRightUI32 (_bfd );_ggg ._add ._bcg ,_bfd =_gg .PopRightUI32 (_bfd );_ggg ._add ._cag ,_bfd =_gg .PopRightUI32 (_bfd );
_ggg ._add ._fbfe ,_bfd =_gg .PopRightUI32 (_bfd );_ggg ._add ._eab ,_bfd =_gg .PopRightUI32 (_bfd );return nil ;};type morphDataColumnInfoPropMask struct{};func (_aeff *CommandButtonControl )readExtraDataBlock (_fcc *_gg .Reader )error {_aeff ._ddg =&commandButtonExtraDataBlock {};
if _aeff ._fab ._fee > 0{_abb ,_eg :=_fcc .ReadStringProperty (_aeff ._fab ._fee );if _eg !=nil {return _eg ;};_aeff ._ddg ._gdcd =_abb ;};if _aeff ._bda ._ced {var _bfc uint64 ;if _ggad :=_fcc .ReadPairProperty (&_bfc );_ggad !=nil {return _ggad ;};_aeff ._ddg ._aag =uint32 (_bfc );
_aeff ._ddg ._aece =uint32 (_bfc >>32);};return nil ;};

// SetForeColor sets a button text color value from a system palette for a scrollBar control.
func (_daff *ScrollBarControl )SetForeColor (foreColor uint32 ){_daff ._dbdf ._ecdda =true ;_daff ._gdac ._dgcg =foreColor ;};func (_fcb *guidAndPicture )export (_dfab *_gg .Writer )error {if _ ,_ecdd :=_bb .Copy (_dfab ,_b .NewBuffer (_fcb ._cedc ));_ecdd !=nil {return _ecdd ;
};if _acaf :=_dfab .WriteProperty (_fcb ._feef ._gacd );_acaf !=nil {return _acaf ;};if _dcef :=_dfab .WriteProperty (_fcb ._feef ._ceaab );_dcef !=nil {return _dcef ;};_ ,_ecg :=_bb .Copy (_dfab ,_fcb ._feef ._fefb );if _ecg !=nil {return _ecg ;};return nil ;
};

// SetHeight sets height of the SpinButton in HIMETRIC (0.01mm)
func (_eadc *SpinButtonControl )SetHeight (height uint32 ){_eadc ._ecddc ._dcda =true ;_eadc ._afb ._cbd =height ;};

// CommandButtonControl is a representation of a commandButton ActiveX form.
type CommandButtonControl struct{controlBase ;_bda *commandButtonPropMask ;_fab *commandButtonDataBlock ;_ddg *commandButtonExtraDataBlock ;_ebc *streamData ;};

// SetBackColor sets a button text color value from a system palette for a spinButton control.
func (_aafdb *SpinButtonControl )SetBackColor (backColor uint32 ){_aafdb ._ecddc ._afef =true ;_aafdb ._bebd ._cbeee =backColor ;};func (_cdb *morphDataControl )writePropMask (_ddgg *_gg .Writer )error {_dccb :=uint64 (0);_dccb =_gg .PushLeftUI64 (_dccb ,_cdb ._cfe ._cgef );
_dccb =_gg .PushLeftUI64 (_dccb ,_cdb ._cfe ._edae );_dccb =_gg .PushLeftUI64 (_dccb ,_cdb ._cfe ._ccg );_dccb =_gg .PushLeftUI64 (_dccb ,_cdb ._cfe ._eged );_dccb =_gg .PushLeftUI64 (_dccb ,_cdb ._cfe ._fgbc );_dccb =_gg .PushLeftUI64 (_dccb ,_cdb ._cfe ._fgfe );
_dccb =_gg .PushLeftUI64 (_dccb ,_cdb ._cfe ._dddf );_dccb =_gg .PushLeftUI64 (_dccb ,_cdb ._cfe ._befa );_dccb =_gg .PushLeftUI64 (_dccb ,_cdb ._cfe ._aefg );_dccb =_gg .PushLeftUI64 (_dccb ,_cdb ._cfe ._fage );_dccb =_gg .PushLeftUI64 (_dccb ,_cdb ._cfe ._eabd );
_dccb =_gg .PushLeftUI64 (_dccb ,_cdb ._cfe ._age );_dccb =_gg .PushLeftUI64 (_dccb ,_cdb ._cfe ._dgc );_dccb =_gg .PushLeftUI64 (_dccb ,_cdb ._cfe ._dda );_dccb =_gg .PushLeftUI64 (_dccb ,_cdb ._cfe ._ecee );_dccb =_gg .PushLeftUI64 (_dccb ,_cdb ._cfe ._acdg );
_dccb =_gg .PushLeftUI64 (_dccb ,_cdb ._cfe ._ebcb );_dccb =_gg .PushLeftUI64 (_dccb ,_cdb ._cfe ._dgbf );_dccb =_gg .PushLeftUI64 (_dccb ,_cdb ._cfe ._afea );_dccb >>=1;_dccb =_gg .PushLeftUI64 (_dccb ,_cdb ._cfe ._faded );_dccb =_gg .PushLeftUI64 (_dccb ,_cdb ._cfe ._abba );
_dccb =_gg .PushLeftUI64 (_dccb ,_cdb ._cfe ._afgb );_dccb =_gg .PushLeftUI64 (_dccb ,_cdb ._cfe ._deb );_dccb =_gg .PushLeftUI64 (_dccb ,_cdb ._cfe ._dgfd );_dccb =_gg .PushLeftUI64 (_dccb ,_cdb ._cfe ._ceba );_dccb =_gg .PushLeftUI64 (_dccb ,_cdb ._cfe ._dgfb );
_dccb =_gg .PushLeftUI64 (_dccb ,_cdb ._cfe ._ggded );_dccb =_gg .PushLeftUI64 (_dccb ,_cdb ._cfe ._cacf );_dccb =_gg .PushLeftUI64 (_dccb ,_cdb ._cfe ._fcaf );_dccb >>=1;_dccb =_gg .PushLeftUI64 (_dccb ,true );_dccb =_gg .PushLeftUI64 (_dccb ,_cdb ._cfe ._aecc );
_dccb >>=31;return _cg .Write (_ddgg ,_cg .LittleEndian ,_dccb );};func (_fcgb *LabelControl )readDataBlock (_fgf *_gg .Reader )error {_fcgb ._bge =&labelDataBlock {};if _fcgb ._fbb ._deg {if _badc :=_fgf .ReadProperty (&_fcgb ._bge ._cgbc );_badc !=nil {return _badc ;
};};if _fcgb ._fbb ._gag {if _cgc :=_fgf .ReadProperty (&_fcgb ._bge ._ffb );_cgc !=nil {return _cgc ;};};if _fcgb ._fbb ._ddcb {if _gcff :=_fgf .ReadProperty (&_fcgb ._bge ._gegf );_gcff !=nil {return _gcff ;};};if _fcgb ._fbb ._bdd {var _cceb uint32 ;
if _bafg :=_fgf .ReadProperty (&_cceb );_bafg !=nil {return _bafg ;};_fcgb ._bge ._ddeb ,_fcgb ._bge ._addg =_gb (_cceb );};if _fcgb ._fbb ._fbfb {if _gecf :=_fgf .ReadProperty (&_fcgb ._bge ._bbca );_gecf !=nil {return _gecf ;};};if _fcgb ._fbb ._fdeb {if _fda :=_fgf .ReadProperty (&_fcgb ._bge ._bee );
_fda !=nil {return _fda ;};};if _fcgb ._fbb ._adbd {if _cbga :=_fgf .ReadProperty (&_fcgb ._bge ._fbd );_cbga !=nil {return _cbga ;};};if _fcgb ._fbb ._fce {if _fcge :=_fgf .ReadProperty (&_fcgb ._bge ._gage );_fcge !=nil {return _fcge ;};};if _fcgb ._fbb ._fadb {if _dddg :=_fgf .ReadProperty (&_fcgb ._bge ._agba );
_dddg !=nil {return _dddg ;};};if _fcgb ._fbb ._cad {if _fbc :=_fgf .ReadProperty (&_fcgb ._bge ._eeg );_fbc !=nil {return _fbc ;};};if _fcgb ._fbb ._bdabc {if _cbgd :=_fgf .ReadProperty (&_fcgb ._bge ._cae );_cbgd !=nil {return _cbgd ;};};if _fcgb ._fbb ._babf {if _afeb :=_fgf .ReadProperty (&_fcgb ._bge ._gbbf );
_afeb !=nil {return _afeb ;};};return nil ;};

// SetValue sets a value for a control which value can be represented as a string.
func (_fbfea *morphDataControlStringValue )SetValue (value string ){_fbfea .setValueString (value )};func (_caad *controlBase )readStreamDataPM (_caab *_gg .Reader ,_cdgc ,_ebadc bool )error {_caad ._faa =&streamData {};if _cdgc {_caad ._faa ._cgd =&guidAndPicture {};
if _dfgd :=_caad ._faa ._cgd .importFromReader (_caab );_dfgd !=nil {return _dfgd ;};};if _ebadc {_caad ._faa ._fgfdb =&guidAndPicture {};if _dfb :=_caad ._faa ._fgfdb .importFromReader (_caab );_dfb !=nil {return _dfb ;};};return nil ;};func (_ffbf *SpinButtonControl )writeExtraDataBlock (_fcdf *_gg .Writer )error {if _ffbf ._ecddc ._dcda {_aaag :=uint64 (_ffbf ._afb ._cacc )<<32|uint64 (_ffbf ._afb ._cbd );
if _dgacb :=_fcdf .WritePropertyNoAlign (_aaag );_dgacb !=nil {return _dgacb ;};};return nil ;};type labelPropMask struct{_deg bool ;_gag bool ;_ddcb bool ;_bdd bool ;_fbfb bool ;_efb bool ;_fdeb bool ;_adbd bool ;_fce bool ;_fadb bool ;_cad bool ;_bdabc bool ;
_babf bool ;};type stdPicture struct{_gacd uint32 ;_ceaab uint32 ;_fefb *_b .Buffer ;};func (_ecda *morphDataControl )writeExtraDataBlock (_cadc *_gg .Writer )error {if _ecda ._cfe ._aefg {_dadb :=uint64 (_ecda ._cgbf ._cgfe )<<32|uint64 (_ecda ._cgbf ._aegb );
if _ggcf :=_cadc .WritePropertyNoAlign (_dadb );_ggcf !=nil {return _ggcf ;};};if _ecda ._dbe ._cec > 0{if _beaf :=_cadc .WriteStringProperty (_ecda ._cgbf ._fdbd );_beaf !=nil {return _beaf ;};};if _ecda ._dbe ._gagb > 0{if _badf :=_cadc .WriteStringProperty (_ecda ._cgbf ._fbda );
_badf !=nil {return _badf ;};};if _ecda ._dbe ._fdc > 0{if _gggde :=_cadc .WriteStringProperty (_ecda ._cgbf ._edbab );_gggde !=nil {return _gggde ;};};return nil ;};type labelExtraDataBlock struct{_gagg uint32 ;_dcee uint32 ;_edd string ;};var _afga =[]byte {0x04,0x52,0xE3,0x0B,0x91,0x8F,0xCE,0x11,0x9D,0xE3,0,0xAA,0,0x4B,0xB8,0x51};


// SetForeColor sets a button text color value from a system palette for a label control.
func (_efg *LabelControl )SetForeColor (foreColor uint32 ){_efg ._fbb ._deg =true ;_efg ._bge ._cgbc =foreColor ;};func (_gec *CommandButtonControl )writeExtraDataBlock (_bde *_gg .Writer )error {if _gec ._fab ._fee > 0{if _bceb :=_bde .WriteStringProperty (_gec ._ddg ._gdcd );
_bceb !=nil {return _bceb ;};};if _gec ._bda ._ced {_dae :=uint64 (_gec ._ddg ._aece )<<32|uint64 (_gec ._ddg ._aag );if _dddd :=_bde .WritePropertyNoAlign (_dae );_dddd !=nil {return _dddd ;};};return nil ;};func _aeg (_adb uint32 ,_adf bool )uint32 {if _adb ==0{return 0;
};if _adf {_adb |=1<<31;};return _adb ;};

// GetValue gets a value from a control which value can be represented as boolean (on/off).
func (_dcge *morphDataControlBoolValue )GetValue ()bool {return _dcge .getValueBool ()};func (_cdea *SpinButtonControl )writeDataBlock (_abeec *_gg .Writer )error {if _cdea ._ecddc ._adaee {if _fadf :=_abeec .WriteProperty (_cdea ._bebd ._abbb );_fadf !=nil {return _fadf ;
};};if _cdea ._ecddc ._afef {if _afbb :=_abeec .WriteProperty (_cdea ._bebd ._cbeee );_afbb !=nil {return _afbb ;};};if _cdea ._ecddc ._ggfc {if _fbaf :=_abeec .WriteProperty (_cdea ._bebd ._fbfbf );_fbaf !=nil {return _fbaf ;};};if _cdea ._ecddc ._eae {if _ffdg :=_abeec .WriteProperty (_cdea ._bebd ._fgcd );
_ffdg !=nil {return _ffdg ;};};if _cdea ._ecddc ._bfff {if _ebea :=_abeec .WriteProperty (_cdea ._bebd ._cegg );_ebea !=nil {return _ebea ;};};if _cdea ._ecddc ._bagf {if _bbe :=_abeec .WriteProperty (_cdea ._bebd ._adee );_bbe !=nil {return _bbe ;};};
if _cdea ._ecddc ._egad {if _fccb :=_abeec .WriteProperty (_cdea ._bebd ._gaea );_fccb !=nil {return _fccb ;};};if _cdea ._ecddc ._bgcb {if _acad :=_abeec .WriteProperty (_cdea ._bebd ._bfcf );_acad !=nil {return _acad ;};};if _cdea ._ecddc ._acgcc {if _bfeb :=_abeec .WriteProperty (_cdea ._bebd ._bdgb );
_bfeb !=nil {return _bfeb ;};};if _cdea ._ecddc ._egbb {if _bfcd :=_abeec .WriteProperty (_cdea ._bebd ._dafg );_bfcd !=nil {return _bfcd ;};};if _cdea ._ecddc ._gcgd {if _dbdg :=_abeec .WriteProperty (_cdea ._bebd ._gaecd );_dbdg !=nil {return _dbdg ;
};};if _cdea ._ecddc ._bfabe {if _fcde :=_abeec .WriteProperty (_cdea ._bebd ._fgba );_fcde !=nil {return _fcde ;};};if _cdea ._ecddc ._cgag {if _febe :=_abeec .WriteProperty (_cdea ._bebd ._cedba );_febe !=nil {return _febe ;};};return _abeec .AlignLength (4);
};func (_ccc *guidAndPicture )setStdPictureBytes (_gcf []byte ){if _gcf ==nil {return ;};if _ccc ._cedc ==nil {_ccc ._cedc =_afga ;};if _ccc ._feef ==nil {_ccc ._feef =&stdPicture {_gacd :_cef };};_ccc ._feef ._ceaab =uint32 (len (_gcf ));_ccc ._feef ._fefb =_b .NewBuffer (_gcf );
};

// SetBackColor sets a button text color value from a system palette for a commandButton control.
func (_fb *CommandButtonControl )SetBackColor (backColor uint32 ){_fb ._bda ._eaaa =true ;_fb ._fab ._cca =backColor ;};type scrollBarExtraDataBlock struct{_cccgc uint32 ;_ccfd uint32 ;};func (_edef *SpinButtonControl )readDataBlock (_agd *_gg .Reader )error {_edef ._bebd =&spinButtonDataBlock {};
if _edef ._ecddc ._adaee {if _edbg :=_agd .ReadProperty (&_edef ._bebd ._abbb );_edbg !=nil {return _edbg ;};};if _edef ._ecddc ._afef {if _def :=_agd .ReadProperty (&_edef ._bebd ._cbeee );_def !=nil {return _def ;};};if _edef ._ecddc ._ggfc {if _dfec :=_agd .ReadProperty (&_edef ._bebd ._fbfbf );
_dfec !=nil {return _dfec ;};};if _edef ._ecddc ._eae {if _efbbf :=_agd .ReadProperty (&_edef ._bebd ._fgcd );_efbbf !=nil {return _efbbf ;};};if _edef ._ecddc ._bfff {if _ggca :=_agd .ReadProperty (&_edef ._bebd ._cegg );_ggca !=nil {return _ggca ;};};
if _edef ._ecddc ._bagf {if _daac :=_agd .ReadProperty (&_edef ._bebd ._adee );_daac !=nil {return _daac ;};};if _edef ._ecddc ._egad {if _bfcc :=_agd .ReadProperty (&_edef ._bebd ._gaea );_bfcc !=nil {return _bfcc ;};};if _edef ._ecddc ._bgcb {if _ceeg :=_agd .ReadProperty (&_edef ._bebd ._bfcf );
_ceeg !=nil {return _ceeg ;};};if _edef ._ecddc ._acgcc {if _cdag :=_agd .ReadProperty (&_edef ._bebd ._bdgb );_cdag !=nil {return _cdag ;};};if _edef ._ecddc ._egbb {if _bbfe :=_agd .ReadProperty (&_edef ._bebd ._dafg );_bbfe !=nil {return _bbfe ;};};
if _edef ._ecddc ._gcgd {if _faad :=_agd .ReadProperty (&_edef ._bebd ._gaecd );_faad !=nil {return _faad ;};};if _edef ._ecddc ._bfabe {if _cdbf :=_agd .ReadProperty (&_edef ._bebd ._fgba );_cdbf !=nil {return _cdbf ;};};if _edef ._ecddc ._cgag {if _cgaa :=_agd .ReadProperty (&_edef ._bebd ._cedba );
_cgaa !=nil {return _cgaa ;};};return nil ;};

// GetBackColor gets a button text color value for a system palette from a spinButton control.
func (_daaf *SpinButtonControl )GetBackColor ()uint32 {return _daaf ._bebd ._cbeee };func (_eebc *SpinButtonControl )readExtraDataBlock (_ddgaa *_gg .Reader )error {_eebc ._afb =&spinButtonExtraDataBlock {};if _eebc ._ecddc ._dcda {var _cfeb uint64 ;if _gdfe :=_ddgaa .ReadPairProperty (&_cfeb );
_gdfe !=nil {return _gdfe ;};_eebc ._afb ._cbd =uint32 (_cfeb );_eebc ._afb ._cacc =uint32 (_cfeb >>32);};return nil ;};

// CheckBoxDataControl is a representation of a check box ActiveX form.
type CheckBoxDataControl struct{*morphDataControlBoolValue };

// SetWidth sets width of the morphDataControl in HIMETRIC (0.01mm)
func (_efd *morphDataControl )SetWidth (width uint32 ){_efd ._cfe ._aefg =true ;_efd ._cgbf ._cgfe =width ;};

// SetForeColor sets a button text color value from a system palette for a commandButton control.
func (_aaa *CommandButtonControl )SetForeColor (foreColor uint32 ){_aaa ._bda ._gbf =true ;_aaa ._fab ._ga =foreColor ;};type labelDataBlock struct{_cgbc uint32 ;_ffb uint32 ;_gegf uint32 ;_addg uint32 ;_ddeb bool ;_bbca uint32 ;_bee uint8 ;_fbd uint32 ;
_gage uint16 ;_agba uint16 ;_eeg uint16 ;_cae rune ;_gbbf uint16 ;};type spinButtonPropMask struct{_adaee bool ;_afef bool ;_ggfc bool ;_dcda bool ;_eae bool ;_bfff bool ;_bagf bool ;_egad bool ;_bgcb bool ;_acgcc bool ;_egbb bool ;_gcgd bool ;_bfabe bool ;
_cgag bool ;};func (_baed *controlBase )readStreamDataMP (_gbbfc *_gg .Reader ,_gedg ,_fbea bool )error {_baed ._faa =&streamData {};if _gedg {_baed ._faa ._fgfdb =&guidAndPicture {};if _ddggb :=_baed ._faa ._fgfdb .importFromReader (_gbbfc );_ddggb !=nil {return _ddggb ;
};};if _fbea {_baed ._faa ._cgd =&guidAndPicture {};if _eafb :=_baed ._faa ._cgd .importFromReader (_gbbfc );_eafb !=nil {return _eafb ;};};return nil ;};

// GetBackColor gets a button text color value for a system palette from a commandButton control.
func (_gdee *CommandButtonControl )GetBackColor ()uint32 {return _gdee ._fab ._cca };

// GetCaption gets a caption string from a morph control.
func (_dcefe *morphDataControl )GetCaption ()string {if _dcefe ._efe &&_dcefe ._cfe ._deb {return _dcefe ._cgbf ._fbda ;};return "";};func (_ddegd *ScrollBarControl )readPropMask (_efgg *_gg .Reader )error {var _ceaf uint32 ;if _dffg :=_cg .Read (_efgg ,_cg .LittleEndian ,&_ceaf );
_dffg !=nil {return _dffg ;};_ddegd ._dbdf =&scrollBarPropMask {};_ddegd ._dbdf ._ecdda ,_ceaf =_gg .PopRightUI32 (_ceaf );_ddegd ._dbdf ._gaeg ,_ceaf =_gg .PopRightUI32 (_ceaf );_ddegd ._dbdf ._efa ,_ceaf =_gg .PopRightUI32 (_ceaf );_ddegd ._dbdf ._gcdb ,_ceaf =_gg .PopRightUI32 (_ceaf );
_ddegd ._dbdf ._fabfb ,_ceaf =_gg .PopRightUI32 (_ceaf );_ddegd ._dbdf ._affab ,_ceaf =_gg .PopRightUI32 (_ceaf );_ddegd ._dbdf ._fegb ,_ceaf =_gg .PopRightUI32 (_ceaf );_ddegd ._dbdf ._dbfd ,_ceaf =_gg .PopRightUI32 (_ceaf );_ceaf >>=1;_ddegd ._dbdf ._ccccg ,_ceaf =_gg .PopRightUI32 (_ceaf );
_ddegd ._dbdf ._cabc ,_ceaf =_gg .PopRightUI32 (_ceaf );_ddegd ._dbdf ._efac ,_ceaf =_gg .PopRightUI32 (_ceaf );_ddegd ._dbdf ._geae ,_ceaf =_gg .PopRightUI32 (_ceaf );_ddegd ._dbdf ._dcdg ,_ceaf =_gg .PopRightUI32 (_ceaf );_ddegd ._dbdf ._ddcc ,_ceaf =_gg .PopRightUI32 (_ceaf );
_ddegd ._dbdf ._gegb ,_ceaf =_gg .PopRightUI32 (_ceaf );_ddegd ._dbdf ._aab ,_ceaf =_gg .PopRightUI32 (_ceaf );return nil ;};

// GetHeight returns height of the morphDataControl in HIMETRIC (0.01mm)
func (_dfaf *morphDataControl )GetHeight ()uint32 {return _dfaf ._cgbf ._aegb };

// GetForeColor gets a button text color value for a system palette from a commandButton control.
func (_fde *CommandButtonControl )GetForeColor ()uint32 {return _fde ._fab ._ga };

// SetWidth sets width of the Label in HIMETRIC (0.01mm)
func (_cbecg *LabelControl )SetWidth (width uint32 ){_cbecg ._fbb ._efb =true ;_cbecg ._affd ._gagg =width ;};func (_gafbe *SpinButtonControl )export (_ffdf *_gg .Writer )error {if _gdbe :=_gafbe .writePropMask (_ffdf );_gdbe !=nil {return _gdbe ;};if _gfe :=_gafbe .writeDataBlock (_ffdf );
_gfe !=nil {return _gfe ;};if _fcfa :=_gafbe .writeExtraDataBlock (_ffdf );_fcfa !=nil {return _fcfa ;};_gafbe ._aecb =uint16 (_ffdf .Len ()-4);if _dbdd :=_gafbe .writeStreamDataM (_ffdf );_dbdd !=nil {return _dbdd ;};return _gafbe .writeTheRest (_ffdf );
};func _edag (_adff *_gg .Reader )(*LabelControl ,error ){_cegaa :=&LabelControl {};if _fgc :=_cegaa .readPropMask (_adff );_fgc !=nil {return nil ,_fgc ;};if _bfbb :=_cegaa .readDataBlock (_adff );_bfbb !=nil {return nil ,_bfbb ;};if _fccd :=_cegaa .readExtraDataBlock (_adff );
_fccd !=nil {return nil ,_fccd ;};if _dcag :=_cegaa .readStreamDataPM (_adff ,_cegaa ._fbb ._cad ,_cegaa ._fbb ._babf );_dcag !=nil {return nil ,_dcag ;};if _ged :=_cegaa .readTheRest (_adff );_ged !=nil {return nil ,_ged ;};return _cegaa ,nil ;};

// GetMin gets a button min value.
func (_dgca *SpinButtonControl )GetMin ()int32 {return _dgca ._bebd ._fgcd };type morphDataExtraDataBlock struct{_cgfe uint32 ;_aegb uint32 ;_fdbd string ;_fbda string ;_edbab string ;};

// SetHeight sets height of the CommandButton in HIMETRIC (0.01mm)
func (_fabf *CommandButtonControl )SetHeight (height uint32 ){_fabf ._bda ._ced =true ;_fabf ._ddg ._aag =height ;};

// GetHeight returns height of the SpinButton in HIMETRIC (0.01mm)
func (_aecec *SpinButtonControl )GetHeight ()uint32 {return _aecec ._afb ._cbd };

// SetMax sets a button max value.
func (_acba *ScrollBarControl )SetMax (max int32 ){_acba ._dbdf ._fegb =true ;_acba ._gdac ._eabb =max };func (_ccbd *morphDataControl )writeDataBlock (_bgb *_gg .Writer )error {if _ccbd ._cfe ._cgef {if _dgab :=_bgb .WriteProperty (_ccbd ._dbe ._abec );
_dgab !=nil {return _dgab ;};};if _ccbd ._cfe ._edae {if _bag :=_bgb .WriteProperty (_ccbd ._dbe ._ffae );_bag !=nil {return _bag ;};};if _ccbd ._cfe ._ccg {if _bcgc :=_bgb .WriteProperty (_ccbd ._dbe ._ddb );_bcgc !=nil {return _bcgc ;};};if _ccbd ._cfe ._eged {if _aacf :=_bgb .WriteProperty (_ccbd ._dbe ._aafd );
_aacf !=nil {return _aacf ;};};if _ccbd ._cfe ._fgbc {if _cab :=_bgb .WriteProperty (_ccbd ._dbe ._aead );_cab !=nil {return _cab ;};};if _ccbd ._cfe ._fgfe {if _fbfd :=_bgb .WriteProperty (_ccbd ._dbe ._eade );_fbfd !=nil {return _fbfd ;};};if _ccbd ._cfe ._dddf {if _afeae :=_bgb .WriteProperty (_ccbd ._dbe ._acdd );
_afeae !=nil {return _afeae ;};};if _ccbd ._cfe ._befa {if _gdg :=_bgb .WriteProperty (_ccbd ._dbe ._abee );_gdg !=nil {return _gdg ;};};if _ccbd ._cfe ._fage {if _aacfc :=_bgb .WriteProperty (_ccbd ._dbe ._eag );_aacfc !=nil {return _aacfc ;};};if _ccbd ._cfe ._eabd {if _fcdc :=_bgb .WriteProperty (_ccbd ._dbe ._gaec );
_fcdc !=nil {return _fcdc ;};};if _ccbd ._cfe ._age {if _eebb :=_bgb .WriteProperty (_ccbd ._dbe ._bgfa );_eebb !=nil {return _eebb ;};};if _ccbd ._cfe ._dgc {if _bdea :=_bgb .WriteProperty (_ccbd ._dbe ._dgg );_bdea !=nil {return _bdea ;};};if _ccbd ._cfe ._dda {if _edba :=_bgb .WriteProperty (_ccbd ._dbe ._gddd );
_edba !=nil {return _edba ;};};if _ccbd ._cfe ._ecee {if _ccef :=_bgb .WriteProperty (_ccbd ._dbe ._ddef );_ccef !=nil {return _ccef ;};};if _ccbd ._cfe ._acdg {if _gba :=_bgb .WriteProperty (_ccbd ._dbe ._dfff );_gba !=nil {return _gba ;};};if _ccbd ._cfe ._ebcb {if _dad :=_bgb .WriteProperty (_ccbd ._dbe ._dbg );
_dad !=nil {return _dad ;};};if _ccbd ._cfe ._dgbf {if _bcda :=_bgb .WriteProperty (_ccbd ._dbe ._bfe );_bcda !=nil {return _bcda ;};};if _ccbd ._cfe ._afea {if _ffdc :=_bgb .WriteProperty (_ccbd ._dbe ._fbcd );_ffdc !=nil {return _ffdc ;};};if _ccbd ._cfe ._faded {if _dfaff :=_bgb .WriteProperty (_ccbd ._dbe ._dfee );
_dfaff !=nil {return _dfaff ;};};if _ccbd ._cfe ._abba {if _geda :=_bgb .WriteProperty (_ccbd ._dbe ._cga );_geda !=nil {return _geda ;};};if _ccbd ._cfe ._afgb {_ebad :=_aeg (_ccbd ._dbe ._cec ,_ccbd ._dbe ._ceca );if _acdb :=_bgb .WriteProperty (_ebad );
_acdb !=nil {return _acdb ;};};if _ccbd ._cfe ._deb {_baga :=_aeg (_ccbd ._dbe ._gagb ,_ccbd ._dbe ._cdeb );if _bfab :=_bgb .WriteProperty (_baga );_bfab !=nil {return _bfab ;};};if _ccbd ._cfe ._dgfd {if _cee :=_bgb .WriteProperty (_ccbd ._dbe ._eefb );
_cee !=nil {return _cee ;};};if _ccbd ._cfe ._ceba {if _ddbg :=_bgb .WriteProperty (_ccbd ._dbe ._bcb );_ddbg !=nil {return _ddbg ;};};if _ccbd ._cfe ._dgfb {if _bbb :=_bgb .WriteProperty (_ccbd ._dbe ._ggc );_bbb !=nil {return _bbb ;};};if _ccbd ._cfe ._ggded {if _fedg :=_bgb .WriteProperty (_ccbd ._dbe ._effc );
_fedg !=nil {return _fedg ;};};if _ccbd ._cfe ._cacf {if _ccbe :=_bgb .WriteProperty (_ccbd ._dbe ._gfdb );_ccbe !=nil {return _ccbe ;};};if _ccbd ._cfe ._fcaf {if _dbd :=_bgb .WriteProperty (_ccbd ._dbe ._afed );_dbd !=nil {return _dbd ;};};if _ccbd ._cfe ._aecc {_fbdf :=_aeg (_ccbd ._dbe ._fdc ,_ccbd ._dbe ._bfg );
if _efgc :=_bgb .WriteProperty (_fbdf );_efgc !=nil {return _efgc ;};};return _bgb .AlignLength (4);};

// SetPosition sets a button position value.
func (_bbfb *ScrollBarControl )SetPosition (position int32 ){_bbfb ._dbdf ._dbfd =true ;_bbfb ._gdac ._gcc =position ;};

// SetCaption sets a caption string for a commandButton control.
func (_gee *CommandButtonControl )SetCaption (caption string ){_gee ._bda ._fac =true ;_gee ._fab ._fee =uint32 (len (caption ));_gee ._ddg ._gdcd =caption ;};

// SetPosition sets a button position value.
func (_dacb *SpinButtonControl )SetPosition (position int32 ){_dacb ._ecddc ._bagf =true ;_dacb ._bebd ._adee =position ;};func (_cbee *SpinButtonControl )writePropMask (_gfbe *_gg .Writer )error {_dec :=uint32 (0);_dec =_gg .PushLeftUI32 (_dec ,_cbee ._ecddc ._adaee );
_dec =_gg .PushLeftUI32 (_dec ,_cbee ._ecddc ._afef );_dec =_gg .PushLeftUI32 (_dec ,_cbee ._ecddc ._ggfc );_dec =_gg .PushLeftUI32 (_dec ,_cbee ._ecddc ._dcda );_dec >>=1;_dec =_gg .PushLeftUI32 (_dec ,_cbee ._ecddc ._eae );_dec =_gg .PushLeftUI32 (_dec ,_cbee ._ecddc ._bfff );
_dec =_gg .PushLeftUI32 (_dec ,_cbee ._ecddc ._bagf );_dec =_gg .PushLeftUI32 (_dec ,_cbee ._ecddc ._egad );_dec =_gg .PushLeftUI32 (_dec ,_cbee ._ecddc ._bgcb );_dec =_gg .PushLeftUI32 (_dec ,_cbee ._ecddc ._acgcc );_dec =_gg .PushLeftUI32 (_dec ,_cbee ._ecddc ._egbb );
_dec =_gg .PushLeftUI32 (_dec ,_cbee ._ecddc ._gcgd );_dec =_gg .PushLeftUI32 (_dec ,_cbee ._ecddc ._bfabe );_dec =_gg .PushLeftUI32 (_dec ,_cbee ._ecddc ._cgag );_dec >>=17;return _cg .Write (_gfbe ,_cg .LittleEndian ,_dec );};

// GetHeight returns height of the Label in HIMETRIC (0.01mm)
func (_fdbf *LabelControl )GetHeight ()uint32 {return _fdbf ._affd ._dcee };type spinButtonDataBlock struct{_abbb uint32 ;_cbeee uint32 ;_fbfbf uint32 ;_fgcd int32 ;_cegg int32 ;_adee int32 ;_gaea int32 ;_bfcf int32 ;_bdgb int32 ;_dafg uint32 ;_gaecd uint32 ;
_fgba uint16 ;_cedba uint8 ;};func (_bcaf *ImageControl )writePropMask (_bade *_gg .Writer )error {_ceaaf :=uint32 (0);_ceaaf >>=2;_ceaaf =_gg .PushLeftUI32 (_ceaaf ,_bcaf ._add ._edb );_ceaaf =_gg .PushLeftUI32 (_ceaaf ,_bcaf ._add ._ccd );_ceaaf =_gg .PushLeftUI32 (_ceaaf ,_bcaf ._add ._ege );
_ceaaf =_gg .PushLeftUI32 (_ceaaf ,_bcaf ._add ._ebd );_ceaaf =_gg .PushLeftUI32 (_ceaaf ,_bcaf ._add ._ecff );_ceaaf =_gg .PushLeftUI32 (_ceaaf ,_bcaf ._add ._fabd );_ceaaf =_gg .PushLeftUI32 (_ceaaf ,_bcaf ._add ._agf );_ceaaf =_gg .PushLeftUI32 (_ceaaf ,_bcaf ._add ._gbb );
_ceaaf =_gg .PushLeftUI32 (_ceaaf ,_bcaf ._add ._ffa );_ceaaf =_gg .PushLeftUI32 (_ceaaf ,_bcaf ._add ._bcg );_ceaaf =_gg .PushLeftUI32 (_ceaaf ,_bcaf ._add ._cag );_ceaaf =_gg .PushLeftUI32 (_ceaaf ,_bcaf ._add ._fbfe );_ceaaf =_gg .PushLeftUI32 (_ceaaf ,_bcaf ._add ._eab );
_ceaaf >>=17;return _cg .Write (_bade ,_cg .LittleEndian ,_ceaaf );};func (_gffb *guidAndPicture )getStdPictureBytes ()[]byte {if _gffb !=nil &&_gffb ._feef !=nil &&_gffb ._feef ._fefb !=nil {return _gffb ._feef ._fefb .Bytes ();};return nil ;};

// ToggleButtonDataControl is a representation of a toggle button ActiveX form.
type ToggleButtonDataControl struct{*morphDataControlBoolValue };const _addc =1;func (_daef *ImageControl )export (_dbb *_gg .Writer )error {if _ace :=_daef .writePropMask (_dbb );_ace !=nil {return _ace ;};if _eaf :=_daef .writeDataBlock (_dbb );_eaf !=nil {return _eaf ;
};if _bdab :=_daef .writeExtraDataBlock (_dbb );_bdab !=nil {return _bdab ;};_daef ._aecb =uint16 (_dbb .Len ()-4);if _eec :=_daef .writeStreamDataPM (_dbb );_eec !=nil {return _eec ;};return _daef .writeTheRest (_dbb );};

// ComboBoxDataControl is a representation of a combo box ActiveX form.
type ComboBoxDataControl struct{*morphDataControlStringValue };func (_aae *controlBase )setPictureBytes (_bff []byte ){if _aae ._faa ._cgd ==nil {_aae ._faa ._cgd =&guidAndPicture {};};_aae ._faa ._cgd .setStdPictureBytes (_bff );};func (_ffag *controlBase )writeStreamDataM (_adbcf *_gg .Writer )error {if _ffag ._faa !=nil {if _ffag ._faa ._fgfdb !=nil {if _dcdf :=_ffag ._faa ._fgfdb .export (_adbcf );
_dcdf !=nil {return _dcdf ;};};};return nil ;};func _begc (_fbca *_gg .Reader )(*ScrollBarControl ,error ){_edfe :=&ScrollBarControl {};if _faba :=_edfe .readPropMask (_fbca );_faba !=nil {return nil ,_faba ;};if _affb :=_edfe .readDataBlock (_fbca );_affb !=nil {return nil ,_affb ;
};if _affg :=_edfe .readExtraDataBlock (_fbca );_affg !=nil {return nil ,_affg ;};if _gfba :=_edfe .readStreamDataM (_fbca ,_edfe ._dbdf ._aab );_gfba !=nil {return nil ,_gfba ;};if _dcbe :=_edfe .readTheRest (_fbca );_dcbe !=nil {return nil ,_dcbe ;};
return _edfe ,nil ;};const _faaa =5;

// ListBoxDataControl is a representation of a list box ActiveX form.
type ListBoxDataControl struct{*morphDataControlStringValue };func (_fbcc *morphDataControl )readDataBlock (_bdde *_gg .Reader )error {_fbcc ._dbe =&morphDataDataBlock {};if _fbcc ._cfe ._cgef {if _bgad :=_bdde .ReadProperty (&_fbcc ._dbe ._abec );_bgad !=nil {return _bgad ;
};};if _fbcc ._cfe ._edae {if _gffe :=_bdde .ReadProperty (&_fbcc ._dbe ._ffae );_gffe !=nil {return _gffe ;};};if _fbcc ._cfe ._ccg {if _bgfd :=_bdde .ReadProperty (&_fbcc ._dbe ._ddb );_bgfd !=nil {return _bgfd ;};};if _fbcc ._cfe ._eged {if _abc :=_bdde .ReadProperty (&_fbcc ._dbe ._aafd );
_abc !=nil {return _abc ;};};if _fbcc ._cfe ._fgbc {if _dgag :=_bdde .ReadProperty (&_fbcc ._dbe ._aead );_dgag !=nil {return _dgag ;};};if _fbcc ._cfe ._fgfe {if _ggdg :=_bdde .ReadProperty (&_fbcc ._dbe ._eade );_ggdg !=nil {return _ggdg ;};};if _fbcc ._cfe ._dddf {if _bfef :=_bdde .ReadProperty (&_fbcc ._dbe ._acdd );
_bfef !=nil {return _bfef ;};};if _fbcc ._cfe ._befa {if _fadea :=_bdde .ReadProperty (&_fbcc ._dbe ._abee );_fadea !=nil {return _fadea ;};};if _fbcc ._cfe ._fage {if _bcgd :=_bdde .ReadProperty (&_fbcc ._dbe ._eag );_bcgd !=nil {return _bcgd ;};};if _fbcc ._cfe ._eabd {if _fcdg :=_bdde .ReadProperty (&_fbcc ._dbe ._gaec );
_fcdg !=nil {return _fcdg ;};};if _fbcc ._cfe ._age {if _ggdeb :=_bdde .ReadProperty (&_fbcc ._dbe ._bgfa );_ggdeb !=nil {return _ggdeb ;};};if _fbcc ._cfe ._dgc {if _eegc :=_bdde .ReadProperty (&_fbcc ._dbe ._dgg );_eegc !=nil {return _eegc ;};};if _fbcc ._cfe ._dda {if _gfa :=_bdde .ReadProperty (&_fbcc ._dbe ._gddd );
_gfa !=nil {return _gfa ;};};if _fbcc ._cfe ._ecee {if _cccc :=_bdde .ReadProperty (&_fbcc ._dbe ._ddef );_cccc !=nil {return _cccc ;};};if _fbcc ._cfe ._acdg {if _fceg :=_bdde .ReadProperty (&_fbcc ._dbe ._dfff );_fceg !=nil {return _fceg ;};};if _fbcc ._cfe ._ebcb {if _bfgf :=_bdde .ReadProperty (&_fbcc ._dbe ._dbg );
_bfgf !=nil {return _bfgf ;};};if _fbcc ._cfe ._dgbf {if _eecg :=_bdde .ReadProperty (&_fbcc ._dbe ._bfe );_eecg !=nil {return _eecg ;};};if _fbcc ._cfe ._afea {if _agfb :=_bdde .ReadProperty (&_fbcc ._dbe ._fbcd );_agfb !=nil {return _agfb ;};};if _fbcc ._cfe ._faded {if _ebgg :=_bdde .ReadProperty (&_fbcc ._dbe ._dfee );
_ebgg !=nil {return _ebgg ;};};if _fbcc ._cfe ._abba {if _dcgc :=_bdde .ReadProperty (&_fbcc ._dbe ._cga );_dcgc !=nil {return _dcgc ;};};if _fbcc ._cfe ._afgb {var _ccbg uint32 ;if _fefba :=_bdde .ReadProperty (&_ccbg );_fefba !=nil {return _fefba ;};
_fbcc ._dbe ._ceca ,_fbcc ._dbe ._cec =_gb (_ccbg );};if _fbcc ._cfe ._deb {var _gagd uint32 ;if _fgab :=_bdde .ReadProperty (&_gagd );_fgab !=nil {return _fgab ;};_fbcc ._dbe ._cdeb ,_fbcc ._dbe ._gagb =_gb (_gagd );};if _fbcc ._cfe ._dgfd {if _cfg :=_bdde .ReadProperty (&_fbcc ._dbe ._eefb );
_cfg !=nil {return _cfg ;};};if _fbcc ._cfe ._ceba {if _dagf :=_bdde .ReadProperty (&_fbcc ._dbe ._bcb );_dagf !=nil {return _dagf ;};};if _fbcc ._cfe ._dgfb {if _dcd :=_bdde .ReadProperty (&_fbcc ._dbe ._ggc );_dcd !=nil {return _dcd ;};};if _fbcc ._cfe ._ggded {if _ede :=_bdde .ReadProperty (&_fbcc ._dbe ._effc );
_ede !=nil {return _ede ;};};if _fbcc ._cfe ._cacf {if _eee :=_bdde .ReadProperty (&_fbcc ._dbe ._gfdb );_eee !=nil {return _eee ;};};if _fbcc ._cfe ._fcaf {if _aacd :=_bdde .ReadProperty (&_fbcc ._dbe ._afed );_aacd !=nil {return _aacd ;};};if _fbcc ._cfe ._aecc {var _fdac uint32 ;
if _eaac :=_bdde .ReadProperty (&_fdac );_eaac !=nil {return _eaac ;};_fbcc ._dbe ._bfg ,_fbcc ._dbe ._fdc =_gb (_fdac );};return nil ;};func (_gdeb *ScrollBarControl )writeExtraDataBlock (_ecgf *_gg .Writer )error {if _gdeb ._dbdf ._gcdb {_ddbf :=uint64 (_gdeb ._gfdd ._cccgc )<<32|uint64 (_gdeb ._gfdd ._ccfd );
if _fbfa :=_ecgf .WritePropertyNoAlign (_ddbf );_fbfa !=nil {return _fbfa ;};};return nil ;};func (_bdad *LabelControl )readPropMask (_ccb *_gg .Reader )error {var _abd uint32 ;if _dgac :=_cg .Read (_ccb ,_cg .LittleEndian ,&_abd );_dgac !=nil {return _dgac ;
};_bdad ._fbb =&labelPropMask {};_bdad ._fbb ._deg ,_abd =_gg .PopRightUI32 (_abd );_bdad ._fbb ._gag ,_abd =_gg .PopRightUI32 (_abd );_bdad ._fbb ._ddcb ,_abd =_gg .PopRightUI32 (_abd );_bdad ._fbb ._bdd ,_abd =_gg .PopRightUI32 (_abd );_bdad ._fbb ._fbfb ,_abd =_gg .PopRightUI32 (_abd );
_bdad ._fbb ._efb ,_abd =_gg .PopRightUI32 (_abd );_bdad ._fbb ._fdeb ,_abd =_gg .PopRightUI32 (_abd );_bdad ._fbb ._adbd ,_abd =_gg .PopRightUI32 (_abd );_bdad ._fbb ._fce ,_abd =_gg .PopRightUI32 (_abd );_bdad ._fbb ._fadb ,_abd =_gg .PopRightUI32 (_abd );
_bdad ._fbb ._cad ,_abd =_gg .PopRightUI32 (_abd );_bdad ._fbb ._bdabc ,_abd =_gg .PopRightUI32 (_abd );_bdad ._fbb ._babf ,_abd =_gg .PopRightUI32 (_abd );return nil ;};type streamData struct{_fgfdb *guidAndPicture ;_cgd *guidAndPicture ;};type morphDataControl struct{controlBase ;
_cfe *morphDataPropMask ;_dbe *morphDataDataBlock ;_cgbf *morphDataExtraDataBlock ;_dgbg *streamData ;_dcb *morphDataColumnInfo ;_gcab *morphDataColumnInfoPropMask ;_acf *morphDataColumnInfoDataBlock ;};