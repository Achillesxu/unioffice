//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package axcontrol ;import (_c "bytes";_ee "encoding/binary";_b "errors";_f "fmt";_g "github.com/unidoc/unioffice/common/tempstorage";_ge "github.com/unidoc/unioffice/internal/mscfb";_ac "github.com/unidoc/unioffice/internal/mscfb/rw";_ag "github.com/unidoc/unioffice/schema/schemas.microsoft.com/office/activeX";_e "io";);type commandButtonPropMask struct{_gdc bool ;_afe bool ;_dge bool ;_eegc bool ;_bfg bool ;_dfb bool ;_bda bool ;_eff bool ;_gcb bool ;_adcef bool ;_bdb bool ;};func (_abeb *LabelControl )readDataBlock (_ccca *_ac .Reader )error {_abeb ._daf =&labelDataBlock {};if _abeb ._gefe ._dbe {if _ecaa :=_ccca .ReadProperty (&_abeb ._daf ._dcd );_ecaa !=nil {return _ecaa ;};};if _abeb ._gefe ._fgd {if _ddcd :=_ccca .ReadProperty (&_abeb ._daf ._eddd );_ddcd !=nil {return _ddcd ;};};if _abeb ._gefe ._bggg {if _bggc :=_ccca .ReadProperty (&_abeb ._daf ._dfbc );_bggc !=nil {return _bggc ;};};if _abeb ._gefe ._dce {var _cgdb uint32 ;if _eaf :=_ccca .ReadProperty (&_cgdb );_eaf !=nil {return _eaf ;};_abeb ._daf ._afeb ,_abeb ._daf ._ced =_edb (_cgdb );};if _abeb ._gefe ._fbgf {if _cdbe :=_ccca .ReadProperty (&_abeb ._daf ._cfcd );_cdbe !=nil {return _cdbe ;};};if _abeb ._gefe ._gfc {if _ebec :=_ccca .ReadProperty (&_abeb ._daf ._gdga );_ebec !=nil {return _ebec ;};};if _abeb ._gefe ._cbf {if _cbeb :=_ccca .ReadProperty (&_abeb ._daf ._cdeg );_cbeb !=nil {return _cbeb ;};};if _abeb ._gefe ._cgd {if _edbf :=_ccca .ReadProperty (&_abeb ._daf ._adbbf );_edbf !=nil {return _edbf ;};};if _abeb ._gefe ._fbfd {if _acb :=_ccca .ReadProperty (&_abeb ._daf ._egd );_acb !=nil {return _acb ;};};if _abeb ._gefe ._fgg {if _egf :=_ccca .ReadProperty (&_abeb ._daf ._eag );_egf !=nil {return _egf ;};};if _abeb ._gefe ._agg {if _badc :=_ccca .ReadProperty (&_abeb ._daf ._dbg );_badc !=nil {return _badc ;};};if _abeb ._gefe ._ded {if _eba :=_ccca .ReadProperty (&_abeb ._daf ._adg );_eba !=nil {return _eba ;};};return nil ;};

// Control represents an ActiveX control wrapper.
type Control struct{TargetAttr string ;Ocx *_ag .Ocx ;Choice *ControlChoice ;_fd string ;_fa uint8 ;_ae uint8 ;_ed uint16 ;};func (_gcae *LabelControl )writeExtraDataBlock (_adef *_ac .Writer )error {if _gcae ._daf ._ced > 0{if _aaf :=_adef .WriteStringProperty (_gcae ._fgcca ._aacb );_aaf !=nil {return _aaf ;};};if _gcae ._gefe ._dbdd {_bgab :=uint64 (_gcae ._fgcca ._geb )<<32|uint64 (_gcae ._fgcca ._gfcc );if _afgc :=_adef .WritePropertyNoAlign (_bgab );_afgc !=nil {return _afgc ;};};return nil ;};const _cef =4;type scrollBarExtraDataBlock struct{_ebfb uint32 ;_adcee uint32 ;};

// GetForeColor gets a button text color value for a system palette from a spinButton control.
func (_gadd *SpinButtonControl )GetForeColor ()uint32 {return _gadd ._dbed ._ddaag };type commandButtonExtraDataBlock struct{_beed uint32 ;_beg uint32 ;_fae string ;};

// SetWidth sets width of the ScrollBar in HIMETRIC (0.01mm)
func (_abea *ScrollBarControl )SetWidth (width uint32 ){_abea ._eafb ._bdec =true ;_abea ._cfea ._ebfb =width ;};

// GetMin gets a button min value.
func (_ggd *SpinButtonControl )GetMin ()int32 {return _ggd ._dbed ._bfbf };type scrollBarPropMask struct{_bcdd bool ;_abdd bool ;_fdf bool ;_eccc bool ;_bdec bool ;_cbbg bool ;_cbc bool ;_eeab bool ;_ffgea bool ;_acg bool ;_aage bool ;_dcef bool ;_efca bool ;_edee bool ;_fbgd bool ;_gafd bool ;};type spinButtonExtraDataBlock struct{_ddee uint32 ;_efeb uint32 ;};func (_gggg *controlBase )getPictureBytes ()[]byte {return _gggg ._bdaa ._gfce .getStdPictureBytes ()};const _fge =1;func (_fbf *guidAndPicture )getStdPictureBytes ()[]byte {if _fbf !=nil &&_fbf ._ecg !=nil &&_fbf ._ecg ._gcbb !=nil {return _fbf ._ecg ._gcbb .Bytes ();};return nil ;};

// SetForeColor sets a button text color value from a system palette for a commandButton control.
func (_gdf *CommandButtonControl )SetForeColor (foreColor uint32 ){_gdf ._ggg ._gdc =true ;_gdf ._adf ._gaf =foreColor ;};func (_fcdc *ScrollBarControl )writeExtraDataBlock (_beda *_ac .Writer )error {if _fcdc ._eafb ._bdec {_fade :=uint64 (_fcdc ._cfea ._ebfb )<<32|uint64 (_fcdc ._cfea ._adcee );if _gcgf :=_beda .WritePropertyNoAlign (_fade );_gcgf !=nil {return _gcgf ;};};return nil ;};func (_cgge *morphDataControl )setValueString (_gcaeg string ){_cgge ._ead ._aeeb =true ;_cgge ._age ._feca =uint32 (len (_gcaeg ));_cgge ._efg ._dfe =_gcaeg ;};type imageExtraDataBlock struct{_fcdb uint32 ;_fcaf uint32 ;};func (_bea *morphDataControl )readColumnInfo (_cdfa *_ac .Reader )error {return nil };func _fb (_edg uint32 ,_gc bool )uint32 {if _edg ==0{return 0;};if _gc {_edg |=1<<31;};return _edg ;};type morphDataControlStringValue struct{*morphDataControl };type commandButtonDataBlock struct{_gaf uint32 ;_cee uint32 ;_aee uint32 ;_dfa uint32 ;_dcb bool ;_gaba uint32 ;_acc uint8 ;_fgf uint16 ;_fbe rune ;_fac uint16 ;};func (_bfdb *morphDataControl )getValueBool ()bool {return _bfdb ._ead ._aeeb &&_bfdb ._efg ._dfe =="\u0031";};

// GetPosition gets a button position value.
func (_gdgg *SpinButtonControl )GetPosition ()int32 {return _gdgg ._dbed ._gfdb };const _ffa =5;

// SetCaption sets a caption string for a label control.
func (_ggfa *LabelControl )SetCaption (caption string ){_ggfa ._gefe ._dce =true ;_ggfa ._daf ._ced =uint32 (len (caption ));_ggfa ._fgcca ._aacb =caption ;};func (_ggbb *ScrollBarControl )writeDataBlock (_ddeg *_ac .Writer )error {if _ggbb ._eafb ._bcdd {if _afbd :=_ddeg .WriteProperty (_ggbb ._ggaf ._edea );_afbd !=nil {return _afbd ;};};if _ggbb ._eafb ._abdd {if _fefa :=_ddeg .WriteProperty (_ggbb ._ggaf ._dfbga );_fefa !=nil {return _fefa ;};};if _ggbb ._eafb ._fdf {if _fcaff :=_ddeg .WriteProperty (_ggbb ._ggaf ._aeea );_fcaff !=nil {return _fcaff ;};};if _ggbb ._eafb ._eccc {if _dgca :=_ddeg .WriteProperty (_ggbb ._ggaf ._ebfc );_dgca !=nil {return _dgca ;};};if _ggbb ._eafb ._cbbg {if _eabac :=_ddeg .WriteProperty (_ggbb ._ggaf ._edab );_eabac !=nil {return _eabac ;};};if _ggbb ._eafb ._cbc {if _bcfc :=_ddeg .WriteProperty (_ggbb ._ggaf ._fad );_bcfc !=nil {return _bcfc ;};};if _ggbb ._eafb ._eeab {if _daac :=_ddeg .WriteProperty (_ggbb ._ggaf ._ffab );_daac !=nil {return _daac ;};};if _ggbb ._eafb ._ffgea {if _gddc :=_ddeg .WriteProperty (_ggbb ._ggaf ._cfeb );_gddc !=nil {return _gddc ;};};if _ggbb ._eafb ._acg {if _fdaf :=_ddeg .WriteProperty (_ggbb ._ggaf ._dfbe );_fdaf !=nil {return _fdaf ;};};if _ggbb ._eafb ._aage {if _ecaac :=_ddeg .WriteProperty (_ggbb ._ggaf ._aefab );_ecaac !=nil {return _ecaac ;};};if _ggbb ._eafb ._dcef {if _cba :=_ddeg .WriteProperty (_ggbb ._ggaf ._edgd );_cba !=nil {return _cba ;};};if _ggbb ._eafb ._efca {if _gbac :=_ddeg .WriteProperty (_ggbb ._ggaf ._bdg );_gbac !=nil {return _gbac ;};};if _ggbb ._eafb ._edee {if _fadb :=_ddeg .WriteProperty (_ggbb ._ggaf ._efbd );_fadb !=nil {return _fadb ;};};if _ggbb ._eafb ._fbgd {if _gcab :=_ddeg .WriteProperty (_ggbb ._ggaf ._cgda );_gcab !=nil {return _gcab ;};};if _ggbb ._eafb ._gafd {if _abfd :=_ddeg .WriteProperty (_ggbb ._ggaf ._efdb );_abfd !=nil {return _abfd ;};};return _ddeg .AlignLength (4);};func (_addb *CommandButtonControl )writeExtraDataBlock (_dddb *_ac .Writer )error {if _addb ._adf ._dfa > 0{if _bcb :=_dddb .WriteStringProperty (_addb ._adbb ._fae );_bcb !=nil {return _bcb ;};};if _addb ._ggg ._dfb {_baf :=uint64 (_addb ._adbb ._beed )<<32|uint64 (_addb ._adbb ._beg );if _cabg :=_dddb .WritePropertyNoAlign (_baf );_cabg !=nil {return _cabg ;};};return nil ;};

// SetValue sets a value for a control which value can be represented as a string.
func (_caff *morphDataControlStringValue )SetValue (value string ){_caff .setValueString (value )};func _gfg (_dbb *_ac .Reader )(*morphDataControl ,error ){_afag :=&morphDataControl {};if _dgbf :=_afag .readPropMask (_dbb );_dgbf !=nil {return nil ,_dgbf ;};if _dgd :=_afag .readDataBlock (_dbb );_dgd !=nil {return nil ,_dgd ;};if _dea :=_afag .readExtraDataBlock (_dbb );_dea !=nil {return nil ,_dea ;};if _fdbc :=_afag .readStreamDataMP (_dbb ,_afag ._ead ._ggge ,_afag ._ead ._cfd );_fdbc !=nil {return nil ,_fdbc ;};switch _afag ._age ._bed {case _adag ,_gbc :if _egbb :=_afag .readColumnInfo (_dbb );_egbb !=nil {return nil ,_egbb ;};if _cfbb :=_afag .readColumnInfoPropMask (_dbb );_cfbb !=nil {return nil ,_cfbb ;};if _defa :=_afag .readColumnInfoDataBlock (_dbb );_defa !=nil {return nil ,_defa ;};};if _fdbf :=_afag .readTheRest (_dbb );_fdbf !=nil {return nil ,_fdbf ;};return _afag ,nil ;};func (_dfbd *guidAndPicture )setStdPictureBytes (_db []byte ){if _db ==nil {return ;};if _dfbd ._bcd ==nil {_dfbd ._bcd =_ffb ;};if _dfbd ._ecg ==nil {_dfbd ._ecg =&stdPicture {_gfb :_afad };};_dfbd ._ecg ._bbd =uint32 (len (_db ));_dfbd ._ecg ._gcbb =_c .NewBuffer (_db );};const (FmPictureAlignmentTopLeft FmPictureAlignment =iota ;FmPictureAlignmentTopRight ;FmPictureAlignmentCenter ;FmPictureAlignmentBottomLeft ;FmPictureAlignmentBottomRight ;);

// GetHeight returns height of the CommandButton in HIMETRIC (0.01mm)
func (_caf *CommandButtonControl )GetHeight ()uint32 {return _caf ._adbb ._beg };

// GetCaption gets a caption string from a label control.
func (_gdfc *LabelControl )GetCaption ()string {return _gdfc ._fgcca ._aacb };func (_bcce *morphDataControl )readPropMask (_gged *_ac .Reader )error {var _cafdg uint64 ;if _facb :=_ee .Read (_gged ,_ee .LittleEndian ,&_cafdg );_facb !=nil {return _facb ;};_bcce ._ead =&morphDataPropMask {};_bcce ._ead ._dgef ,_cafdg =_ac .PopRightUI64 (_cafdg );_bcce ._ead ._egaf ,_cafdg =_ac .PopRightUI64 (_cafdg );_bcce ._ead ._egde ,_cafdg =_ac .PopRightUI64 (_cafdg );_bcce ._ead ._gcd ,_cafdg =_ac .PopRightUI64 (_cafdg );_bcce ._ead ._eafd ,_cafdg =_ac .PopRightUI64 (_cafdg );_bcce ._ead ._aabc ,_cafdg =_ac .PopRightUI64 (_cafdg );_bcce ._ead ._bgad ,_cafdg =_ac .PopRightUI64 (_cafdg );_bcce ._ead ._eed ,_cafdg =_ac .PopRightUI64 (_cafdg );_bcce ._ead ._geda ,_cafdg =_ac .PopRightUI64 (_cafdg );_bcce ._ead ._fcadf ,_cafdg =_ac .PopRightUI64 (_cafdg );_bcce ._ead ._gde ,_cafdg =_ac .PopRightUI64 (_cafdg );_bcce ._ead ._cad ,_cafdg =_ac .PopRightUI64 (_cafdg );_bcce ._ead ._cgc ,_cafdg =_ac .PopRightUI64 (_cafdg );_bcce ._ead ._gba ,_cafdg =_ac .PopRightUI64 (_cafdg );_bcce ._ead ._befca ,_cafdg =_ac .PopRightUI64 (_cafdg );_bcce ._ead ._ebd ,_cafdg =_ac .PopRightUI64 (_cafdg );_bcce ._ead ._eabc ,_cafdg =_ac .PopRightUI64 (_cafdg );_bcce ._ead ._dcg ,_cafdg =_ac .PopRightUI64 (_cafdg );_bcce ._ead ._gdgf ,_cafdg =_ac .PopRightUI64 (_cafdg );_cafdg >>=1;_bcce ._ead ._edfe ,_cafdg =_ac .PopRightUI64 (_cafdg );_bcce ._ead ._caba ,_cafdg =_ac .PopRightUI64 (_cafdg );_bcce ._ead ._aeeb ,_cafdg =_ac .PopRightUI64 (_cafdg );_bcce ._ead ._gedac ,_cafdg =_ac .PopRightUI64 (_cafdg );_bcce ._ead ._abc ,_cafdg =_ac .PopRightUI64 (_cafdg );_bcce ._ead ._fcdd ,_cafdg =_ac .PopRightUI64 (_cafdg );_bcce ._ead ._cgb ,_cafdg =_ac .PopRightUI64 (_cafdg );_bcce ._ead ._ggge ,_cafdg =_ac .PopRightUI64 (_cafdg );_bcce ._ead ._cfd ,_cafdg =_ac .PopRightUI64 (_cafdg );_bcce ._ead ._dbeb ,_cafdg =_ac .PopRightUI64 (_cafdg );_cafdg >>=1;_cafdg >>=1;_bcce ._ead ._gfbf ,_cafdg =_ac .PopRightUI64 (_cafdg );return nil ;};func (_adde *controlBase )setPictureBytes (_dca []byte ){if _adde ._bdaa ._gfce ==nil {_adde ._bdaa ._gfce =&guidAndPicture {};};_adde ._bdaa ._gfce .setStdPictureBytes (_dca );};func (_cddd *guidAndPicture )importFromReader (_bgdb *_ac .Reader )error {_fcd :=_c .NewBuffer ([]byte {});if _ ,_gcc :=_e .CopyN (_fcd ,_bgdb ,int64 (_eegg ));_gcc !=nil {return _gcc ;};_ebe :=_fcd .Bytes ();for _gca :=0;_gca < _eegg ;_gca ++{if _ebe [_gca ]!=_ffb [_gca ]{return _f .Errorf ("\u0049\u006e\u0076\u0061\u006c\u0069d\u0020\u0047\u0055\u0049\u0044\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u0025v\u0020\u0061\u0074\u0020\u0069\u006e\u0064e\u0078\u0020\u0025\u0076",_ebe [_gca ],_gca );};};_cddd ._bcd =_ebe ;_cddd ._ecg =&stdPicture {};if _cafd :=_bgdb .ReadProperty (&_cddd ._ecg ._gfb );_cafd !=nil {return _cafd ;};if _cddd ._ecg ._gfb !=_afad {return _f .Errorf ("\u0049\u006e\u0076\u0061li\u0064\u0020\u0070\u0072\u0065\u0061\u006d\u0062\u006c\u0065\u0020\u0025\u0076",_cddd ._ecg ._gfb );};if _ceef :=_bgdb .ReadProperty (&_cddd ._ecg ._bbd );_ceef !=nil {return _ceef ;};if _cddd ._ecg ._bbd !=0{_eea :=_c .NewBuffer ([]byte {});if _ ,_dac :=_e .Copy (_eea ,_bgdb );_dac !=nil {return _dac ;};_cddd ._ecg ._gcbb =_eea ;};return nil ;};

// CommandButtonControl is a representation of a commandButton ActiveX form.
type CommandButtonControl struct{controlBase ;_ggg *commandButtonPropMask ;_adf *commandButtonDataBlock ;_adbb *commandButtonExtraDataBlock ;_bag *streamData ;};func (_aegb *SpinButtonControl )readPropMask (_gdea *_ac .Reader )error {var _cabe uint32 ;if _faeb :=_ee .Read (_gdea ,_ee .LittleEndian ,&_cabe );_faeb !=nil {return _faeb ;};_aegb ._efga =&spinButtonPropMask {};_aegb ._efga ._gfae ,_cabe =_ac .PopRightUI32 (_cabe );_aegb ._efga ._cgbe ,_cabe =_ac .PopRightUI32 (_cabe );_aegb ._efga ._dcbd ,_cabe =_ac .PopRightUI32 (_cabe );_aegb ._efga ._ecccb ,_cabe =_ac .PopRightUI32 (_cabe );_cabe >>=1;_aegb ._efga ._bedb ,_cabe =_ac .PopRightUI32 (_cabe );_aegb ._efga ._afgfe ,_cabe =_ac .PopRightUI32 (_cabe );_aegb ._efga ._egad ,_cabe =_ac .PopRightUI32 (_cabe );_aegb ._efga ._abb ,_cabe =_ac .PopRightUI32 (_cabe );_aegb ._efga ._gebc ,_cabe =_ac .PopRightUI32 (_cabe );_aegb ._efga ._dcgg ,_cabe =_ac .PopRightUI32 (_cabe );_aegb ._efga ._ebgcg ,_cabe =_ac .PopRightUI32 (_cabe );_aegb ._efga ._aeba ,_cabe =_ac .PopRightUI32 (_cabe );_aegb ._efga ._edcb ,_cabe =_ac .PopRightUI32 (_cabe );_aegb ._efga ._gbae ,_cabe =_ac .PopRightUI32 (_cabe );return nil ;};func (_dfbb *ScrollBarControl )export (_afab *_ac .Writer )error {if _cefg :=_dfbb .writePropMask (_afab );_cefg !=nil {return _cefg ;};if _aga :=_dfbb .writeDataBlock (_afab );_aga !=nil {return _aga ;};if _eac :=_dfbb .writeExtraDataBlock (_afab );_eac !=nil {return _eac ;};_dfbb ._dff =uint16 (_afab .Len ()-4);if _daec :=_dfbb .writeStreamDataM (_afab );_daec !=nil {return _daec ;};return _dfbb .writeTheRest (_afab );};

// GetForeColor gets a button text color value for a system palette from a commandButton control.
func (_ecc *CommandButtonControl )GetForeColor ()uint32 {return _ecc ._adf ._gaf };type morphDataColumnInfoPropMask struct{};func (_efe *ScrollBarControl )readDataBlock (_feg *_ac .Reader )error {_efe ._ggaf =&scrollBarDataBlock {};if _efe ._eafb ._bcdd {if _cdgg :=_feg .ReadProperty (&_efe ._ggaf ._edea );_cdgg !=nil {return _cdgg ;};};if _efe ._eafb ._abdd {if _abcg :=_feg .ReadProperty (&_efe ._ggaf ._dfbga );_abcg !=nil {return _abcg ;};};if _efe ._eafb ._fdf {if _acf :=_feg .ReadProperty (&_efe ._ggaf ._aeea );_acf !=nil {return _acf ;};};if _efe ._eafb ._eccc {if _aaae :=_feg .ReadProperty (&_efe ._ggaf ._ebfc );_aaae !=nil {return _aaae ;};};if _efe ._eafb ._cbbg {if _cdfb :=_feg .ReadProperty (&_efe ._ggaf ._edab );_cdfb !=nil {return _cdfb ;};};if _efe ._eafb ._cbc {if _eada :=_feg .ReadProperty (&_efe ._ggaf ._fad );_eada !=nil {return _eada ;};};if _efe ._eafb ._eeab {if _aagc :=_feg .ReadProperty (&_efe ._ggaf ._ffab );_aagc !=nil {return _aagc ;};};if _efe ._eafb ._ffgea {if _bac :=_feg .ReadProperty (&_efe ._ggaf ._cfeb );_bac !=nil {return _bac ;};};if _efe ._eafb ._acg {if _afdg :=_feg .ReadProperty (&_efe ._ggaf ._dfbe );_afdg !=nil {return _afdg ;};};if _efe ._eafb ._aage {if _agde :=_feg .ReadProperty (&_efe ._ggaf ._aefab );_agde !=nil {return _agde ;};};if _efe ._eafb ._dcef {if _fceb :=_feg .ReadProperty (&_efe ._ggaf ._edgd );_fceb !=nil {return _fceb ;};};if _efe ._eafb ._efca {if _ecfab :=_feg .ReadProperty (&_efe ._ggaf ._bdg );_ecfab !=nil {return _ecfab ;};};if _efe ._eafb ._edee {if _fef :=_feg .ReadProperty (&_efe ._ggaf ._efbd );_fef !=nil {return _fef ;};};if _efe ._eafb ._fbgd {if _cgceb :=_feg .ReadProperty (&_efe ._ggaf ._cgda );_cgceb !=nil {return _cgceb ;};};if _efe ._eafb ._gafd {if _afea :=_feg .ReadProperty (&_efe ._ggaf ._efdb );_afea !=nil {return _afea ;};};return nil ;};func (_aac *LabelControl )writePropMask (_bfb *_ac .Writer )error {_adaa :=uint32 (0);_adaa =_ac .PushLeftUI32 (_adaa ,_aac ._gefe ._dbe );_adaa =_ac .PushLeftUI32 (_adaa ,_aac ._gefe ._fgd );_adaa =_ac .PushLeftUI32 (_adaa ,_aac ._gefe ._bggg );_adaa =_ac .PushLeftUI32 (_adaa ,_aac ._gefe ._dce );_adaa =_ac .PushLeftUI32 (_adaa ,_aac ._gefe ._fbgf );_adaa =_ac .PushLeftUI32 (_adaa ,_aac ._gefe ._dbdd );_adaa =_ac .PushLeftUI32 (_adaa ,_aac ._gefe ._gfc );_adaa =_ac .PushLeftUI32 (_adaa ,_aac ._gefe ._cbf );_adaa =_ac .PushLeftUI32 (_adaa ,_aac ._gefe ._cgd );_adaa =_ac .PushLeftUI32 (_adaa ,_aac ._gefe ._fbfd );_adaa =_ac .PushLeftUI32 (_adaa ,_aac ._gefe ._fgg );_adaa =_ac .PushLeftUI32 (_adaa ,_aac ._gefe ._agg );_adaa =_ac .PushLeftUI32 (_adaa ,_aac ._gefe ._ded );_adaa >>=19;return _ee .Write (_bfb ,_ee .LittleEndian ,_adaa );};type imageDataBlock struct{_fcad uint32 ;_ddf uint32 ;_fcdf byte ;_ggag uint8 ;_bad byte ;_efd byte ;_gff uint16 ;_gedc byte ;_eae uint32 ;_aagb uint16 ;};

// OptionButtonDataControl is a representation of an option button ActiveX form.
type OptionButtonDataControl struct{*morphDataControlBoolValue };func (_ecca *CommandButtonControl )export (_abe *_ac .Writer )error {if _gea :=_ecca .writePropMask (_abe );_gea !=nil {return _gea ;};if _dc :=_ecca .writeDataBlock (_abe );_dc !=nil {return _dc ;};if _fbd :=_ecca .writeExtraDataBlock (_abe );_fbd !=nil {return _fbd ;};_ecca ._dff =uint16 (_abe .Len ()-4);if _ff :=_ecca .writeStreamDataPM (_abe );_ff !=nil {return _ff ;};return _ecca .writeTheRest (_abe );};func (_fbcf *morphDataControl )readColumnInfoDataBlock (_efda *_ac .Reader )error {return nil };func (_gbe *ImageControl )writeExtraDataBlock (_bcg *_ac .Writer )error {if _gbe ._dgc ._bgg {_afgd :=uint64 (_gbe ._aeg ._fcdb )<<32|uint64 (_gbe ._aeg ._fcaf );if _befcb :=_bcg .WritePropertyNoAlign (_afgd );_befcb !=nil {return _befcb ;};};return nil ;};

// SetBackColor sets a button text color value from a system palette for a spinButton control.
func (_aae *SpinButtonControl )SetBackColor (backColor uint32 ){_aae ._efga ._cgbe =true ;_aae ._dbed ._dfgd =backColor ;};

// ImportFromFile makes a Control from a file in a storage.
func ImportFromFile (storagePath string )(*Control ,error ){_gf ,_d :=_g .Open (storagePath );if _d !=nil {return nil ,_d ;};defer _gf .Close ();_gd ,_d :=_ge .New (_gf );if _d !=nil {return nil ,_d ;};_ad ,_d :=_aa (_gd );if _d !=nil {return nil ,_d ;};_eb ,_d :=_gd .GetEntry ("\u0063\u006f\u006e\u0074\u0065\u006e\u0074\u0073");if _d !=nil {return nil ,_d ;};_ba :=make ([]byte ,_eb .Size );_ ,_d =_eb .Read (_ba );if _d !=nil {return nil ,_d ;};_af :=&Control {_fd :storagePath };_bf ,_d :=_ac .NewReader (_ba );if _d !=nil {return nil ,_d ;};if _cc :=_ee .Read (_bf ,_ee .LittleEndian ,&_af ._fa );_cc !=nil {return nil ,_cc ;};if _gdb :=_ee .Read (_bf ,_ee .LittleEndian ,&_af ._ae );_gdb !=nil {return nil ,_gdb ;};if _fag :=_ee .Read (_bf ,_ee .LittleEndian ,&_af ._ed );_fag !=nil {return nil ,_fag ;};switch _ad {case "\u0043\u0068\u0065\u0063\u006b\u0042\u006f\u0078":_acd ,_cbe :=_gfg (_bf );if _cbe !=nil {return nil ,_cbe ;};_acd ._abd =true ;_af .Choice =&ControlChoice {CheckBox :&CheckBoxDataControl {&morphDataControlBoolValue {_acd }}};case "\u0054e\u0078\u0074\u0042\u006f\u0078":_afg ,_eeg :=_gfg (_bf );if _eeg !=nil {return nil ,_eeg ;};_afg ._abd =true ;_af .Choice =&ControlChoice {TextBox :&TextBoxDataControl {&morphDataControlStringValue {_afg }}};case "\u0043\u006f\u006d\u0062\u006f\u0042\u006f\u0078":_be ,_adc :=_gfg (_bf );if _adc !=nil {return nil ,_adc ;};_be ._abd =true ;_af .Choice =&ControlChoice {ComboBox :&ComboBoxDataControl {&morphDataControlStringValue {_be }}};case "\u004ci\u0073\u0074\u0042\u006f\u0078":_ec ,_eca :=_gfg (_bf );if _eca !=nil {return nil ,_eca ;};_ec ._abd =true ;_af .Choice =&ControlChoice {ListBox :&ListBoxDataControl {&morphDataControlStringValue {_ec }}};case "\u004f\u0070\u0074i\u006f\u006e\u0042\u0075\u0074\u0074\u006f\u006e":_gef ,_ce :=_gfg (_bf );if _ce !=nil {return nil ,_ce ;};_gef ._abd =true ;_af .Choice =&ControlChoice {OptionButton :&OptionButtonDataControl {&morphDataControlBoolValue {_gef }}};case "\u0054\u006f\u0067g\u006c\u0065\u0042\u0075\u0074\u0074\u006f\u006e":_ef ,_fda :=_gfg (_bf );if _fda !=nil {return nil ,_fda ;};_ef ._abd =true ;_af .Choice =&ControlChoice {ToggleButton :&ToggleButtonDataControl {&morphDataControlBoolValue {_ef }}};case "\u004c\u0061\u0062e\u006c":_ca ,_cd :=_ccc (_bf );if _cd !=nil {return nil ,_cd ;};_af .Choice =&ControlChoice {Label :_ca };case "\u0053\u0070\u0069\u006e\u0042\u0075\u0074\u0074\u006f\u006e":_da ,_df :=_dgbe (_bf );if _df !=nil {return nil ,_df ;};_af .Choice =&ControlChoice {SpinButton :_da };case "\u0043\u006f\u006d\u006d\u0061\u006e\u0064\u0042\u0075\u0074\u0074\u006f\u006e":_ccg ,_agd :=_gab (_bf );if _agd !=nil {return nil ,_agd ;};_af .Choice =&ControlChoice {CommandButton :_ccg };case "\u0053c\u0072\u006f\u006c\u006c\u0042\u0061r":_fc ,_afb :=_cdfc (_bf );if _afb !=nil {return nil ,_afb ;};_af .Choice =&ControlChoice {ScrollBar :_fc };default:_eeb :=&controlBase {};if _edf :=_eeb .readTheRest (_bf );_edf !=nil {return nil ,_edf ;};_af .Choice =&ControlChoice {_cb :_eeb };};return _af ,nil ;};type spinButtonPropMask struct{_gfae bool ;_cgbe bool ;_dcbd bool ;_ecccb bool ;_bedb bool ;_afgfe bool ;_egad bool ;_abb bool ;_gebc bool ;_dcgg bool ;_ebgcg bool ;_aeba bool ;_edcb bool ;_gbae bool ;};

// SetForeColor sets a button text color value from a system palette for a spinButton control.
func (_fbff *SpinButtonControl )SetForeColor (foreColor uint32 ){_fbff ._efga ._gfae =true ;_fbff ._dbed ._ddaag =foreColor ;};

// GetForeColor gets a button text color value for a system palette from a label control.
func (_eefa *LabelControl )GetForeColor ()uint32 {return _eefa ._daf ._dcd };

// GetBackColor gets a button text color value for a system palette from a spinButton control.
func (_bccf *SpinButtonControl )GetBackColor ()uint32 {return _bccf ._dbed ._dfgd };func (_edc *LabelControl )readPropMask (_ega *_ac .Reader )error {var _aab uint32 ;if _cge :=_ee .Read (_ega ,_ee .LittleEndian ,&_aab );_cge !=nil {return _cge ;};_edc ._gefe =&labelPropMask {};_edc ._gefe ._dbe ,_aab =_ac .PopRightUI32 (_aab );_edc ._gefe ._fgd ,_aab =_ac .PopRightUI32 (_aab );_edc ._gefe ._bggg ,_aab =_ac .PopRightUI32 (_aab );_edc ._gefe ._dce ,_aab =_ac .PopRightUI32 (_aab );_edc ._gefe ._fbgf ,_aab =_ac .PopRightUI32 (_aab );_edc ._gefe ._dbdd ,_aab =_ac .PopRightUI32 (_aab );_edc ._gefe ._gfc ,_aab =_ac .PopRightUI32 (_aab );_edc ._gefe ._cbf ,_aab =_ac .PopRightUI32 (_aab );_edc ._gefe ._cgd ,_aab =_ac .PopRightUI32 (_aab );_edc ._gefe ._fbfd ,_aab =_ac .PopRightUI32 (_aab );_edc ._gefe ._fgg ,_aab =_ac .PopRightUI32 (_aab );_edc ._gefe ._agg ,_aab =_ac .PopRightUI32 (_aab );_edc ._gefe ._ded ,_aab =_ac .PopRightUI32 (_aab );return nil ;};

// GetMax gets a button max value.
func (_dfbgb *SpinButtonControl )GetMax ()int32 {return _dfbgb ._dbed ._eaec };

// ExportToByteArray makes a byte array from a control as it is stored in .bin files.
func (_gdd *Control )ExportToByteArray ()([]byte ,error ){_aff ,_fe :=_g .Open (_gdd ._fd );if _fe !=nil {return nil ,_fe ;};defer _aff .Close ();_fgc ,_fe :=_ge .New (_aff );if _fe !=nil {return nil ,_fe ;};_bc :=_ac .NewWriter ();if _adb :=_ee .Write (_bc ,_ee .LittleEndian ,&_gdd ._fa );_adb !=nil {return nil ,_adb ;};if _fgcc :=_ee .Write (_bc ,_ee .LittleEndian ,&_gdd ._ae );_fgcc !=nil {return nil ,_fgcc ;};if _adce :=_ee .Write (_bc ,_ee .LittleEndian ,uint16 (0));_adce !=nil {return nil ,_adce ;};var _add error ;if _cda :=_gdd .Choice ;_cda !=nil {if _cda .CheckBox !=nil {_add =_cda .CheckBox .export (_bc );}else if _cda .TextBox !=nil {_add =_cda .TextBox .export (_bc );}else if _cda .ComboBox !=nil {_add =_cda .ComboBox .export (_bc );}else if _cda .ListBox !=nil {_add =_cda .ListBox .export (_bc );}else if _cda .OptionButton !=nil {_add =_cda .OptionButton .export (_bc );}else if _cda .ToggleButton !=nil {_add =_cda .ToggleButton .export (_bc );}else if _cda .Label !=nil {_add =_cda .Label .export (_bc );}else if _cda .SpinButton !=nil {_add =_cda .SpinButton .export (_bc );}else if _cda .CommandButton !=nil {_add =_cda .CommandButton .export (_bc );}else if _cda .ScrollBar !=nil {_add =_cda .ScrollBar .export (_bc );}else {_add =_cda ._cb .writeTheRest (_bc );};};if _add !=nil {return nil ,_add ;};if _gb :=_bc .WriteByteAt (byte (_gdd ._ed ),2);_gb !=nil {return nil ,_gb ;};if _ab :=_bc .WriteByteAt (byte (_gdd ._ed >>8),3);_ab !=nil {return nil ,_ab ;};_dd ,_fe :=_fgc .GetEntry ("\u0063\u006f\u006e\u0074\u0065\u006e\u0074\u0073");if _fe !=nil {return nil ,_fe ;};if _eg :=_dd .SetEntryContent (_bc .Bytes ());_eg !=nil {return nil ,_eg ;};return _fgc .Export ();};func _gab (_cf *_ac .Reader )(*CommandButtonControl ,error ){_cbb :=&CommandButtonControl {};if _addf :=_cbb .readPropMask (_cf );_addf !=nil {return nil ,_addf ;};if _afa :=_cbb .readDataBlock (_cf );_afa !=nil {return nil ,_afa ;};if _fgb :=_cbb .readExtraDataBlock (_cf );_fgb !=nil {return nil ,_fgb ;};if _bg :=_cbb .readStreamDataPM (_cf ,_cbb ._ggg ._eff ,_cbb ._ggg ._bdb );_bg !=nil {return nil ,_bg ;};if _cff :=_cbb .readTheRest (_cf );_cff !=nil {return nil ,_cff ;};return _cbb ,nil ;};

// SetBackColor sets a button text color value from a system palette for a label control.
func (_eeec *LabelControl )SetBackColor (backColor uint32 ){_eeec ._gefe ._fgd =true ;_eeec ._daf ._eddd =backColor ;};

// SpinButtonControl is a representation of a spinButton ActiveX form.
type SpinButtonControl struct{controlBase ;_efga *spinButtonPropMask ;_dbed *spinButtonDataBlock ;_eabb *spinButtonExtraDataBlock ;_adgc *streamData ;};func (_fdbe *morphDataControl )readColumnInfoPropMask (_cfdba *_ac .Reader )error {return nil };

// SetMax sets a button max value.
func (_fffe *SpinButtonControl )SetMax (max int32 ){_fffe ._efga ._afgfe =true ;_fffe ._dbed ._eaec =max };func (_afcc *morphDataControl )readExtraDataBlock (_eeac *_ac .Reader )error {_afcc ._efg =&morphDataExtraDataBlock {};if _afcc ._ead ._geda {var _cgdc uint64 ;if _feed :=_eeac .ReadPairProperty (&_cgdc );_feed !=nil {return _feed ;};_afcc ._efg ._bba =uint32 (_cgdc );_afcc ._efg ._bcac =uint32 (_cgdc >>32);};if _afcc ._age ._feca > 0{_gbbc ,_fcb :=_eeac .ReadStringProperty (_afcc ._age ._feca );if _fcb !=nil {return _fcb ;};_afcc ._efg ._dfe =_gbbc ;};if _afcc ._age ._dbeg > 0{_aebe ,_dccc :=_eeac .ReadStringProperty (_afcc ._age ._dbeg );if _dccc !=nil {return _dccc ;};_afcc ._efg ._edfa =_aebe ;};if _afcc ._age ._cafg > 0{_gad ,_acbb :=_eeac .ReadStringProperty (_afcc ._age ._cafg );if _acbb !=nil {return _acbb ;};_afcc ._efg ._eeag =_gad ;};return nil ;};func (_aef *CommandButtonControl )readDataBlock (_eef *_ac .Reader )error {_aef ._adf =&commandButtonDataBlock {};if _aef ._ggg ._gdc {if _gga :=_eef .ReadProperty (&_aef ._adf ._gaf );_gga !=nil {return _gga ;};};if _aef ._ggg ._afe {if _fbc :=_eef .ReadProperty (&_aef ._adf ._cee );_fbc !=nil {return _fbc ;};};if _aef ._ggg ._dge {if _agdf :=_eef .ReadProperty (&_aef ._adf ._aee );_agdf !=nil {return _agdf ;};};if _aef ._ggg ._eegc {var _geg uint32 ;if _ddd :=_eef .ReadProperty (&_geg );_ddd !=nil {return _ddd ;};_aef ._adf ._dcb ,_aef ._adf ._dfa =_edb (_geg );};if _aef ._ggg ._bfg {if _cdd :=_eef .ReadProperty (&_aef ._adf ._gaba );_cdd !=nil {return _cdd ;};};if _aef ._ggg ._bda {if _cdf :=_eef .ReadProperty (&_aef ._adf ._acc );_cdf !=nil {return _cdf ;};};if _aef ._ggg ._eff {if _dga :=_eef .ReadProperty (&_aef ._adf ._fgf );_dga !=nil {return _dga ;};};if _aef ._ggg ._gcb {if _bb :=_eef .ReadProperty (&_aef ._adf ._fbe );_bb !=nil {return _bb ;};};if _aef ._ggg ._bdb {if _effe :=_eef .ReadProperty (&_aef ._adf ._fac );_effe !=nil {return _effe ;};};return nil ;};

// GetHeight returns height of the morphDataControl in HIMETRIC (0.01mm)
func (_ebea *morphDataControl )GetHeight ()uint32 {return _ebea ._efg ._bba };

// ComboBoxDataControl is a representation of a combo box ActiveX form.
type ComboBoxDataControl struct{*morphDataControlStringValue };func (_fcdfa *morphDataControl )writeExtraDataBlock (_adea *_ac .Writer )error {if _fcdfa ._ead ._geda {_ecea :=uint64 (_fcdfa ._efg ._bcac )<<32|uint64 (_fcdfa ._efg ._bba );if _egfe :=_adea .WritePropertyNoAlign (_ecea );_egfe !=nil {return _egfe ;};};if _fcdfa ._age ._feca > 0{if _gag :=_adea .WriteStringProperty (_fcdfa ._efg ._dfe );_gag !=nil {return _gag ;};};if _fcdfa ._age ._dbeg > 0{if _cgce :=_adea .WriteStringProperty (_fcdfa ._efg ._edfa );_cgce !=nil {return _cgce ;};};if _fcdfa ._age ._cafg > 0{if _abacb :=_adea .WriteStringProperty (_fcdfa ._efg ._eeag );_abacb !=nil {return _abacb ;};};return nil ;};

// GetBackColor gets a button text color value for a system palette from a scrollBar control.
func (_gcde *ScrollBarControl )GetBackColor ()uint32 {return _gcde ._ggaf ._dfbga };func (_aea *morphDataControl )writeDataBlock (_ccad *_ac .Writer )error {if _aea ._ead ._dgef {if _ddfe :=_ccad .WriteProperty (_aea ._age ._fff );_ddfe !=nil {return _ddfe ;};};if _aea ._ead ._egaf {if _gfga :=_ccad .WriteProperty (_aea ._age ._fdc );_gfga !=nil {return _gfga ;};};if _aea ._ead ._egde {if _fgfg :=_ccad .WriteProperty (_aea ._age ._fgadc );_fgfg !=nil {return _fgfg ;};};if _aea ._ead ._gcd {if _fcfg :=_ccad .WriteProperty (_aea ._age ._baaf );_fcfg !=nil {return _fcfg ;};};if _aea ._ead ._eafd {if _egg :=_ccad .WriteProperty (_aea ._age ._adcg );_egg !=nil {return _egg ;};};if _aea ._ead ._aabc {if _fddd :=_ccad .WriteProperty (_aea ._age ._efcg );_fddd !=nil {return _fddd ;};};if _aea ._ead ._bgad {if _ddg :=_ccad .WriteProperty (_aea ._age ._bed );_ddg !=nil {return _ddg ;};};if _aea ._ead ._eed {if _babg :=_ccad .WriteProperty (_aea ._age ._bggd );_babg !=nil {return _babg ;};};if _aea ._ead ._fcadf {if _ffge :=_ccad .WriteProperty (_aea ._age ._bfa );_ffge !=nil {return _ffge ;};};if _aea ._ead ._gde {if _edad :=_ccad .WriteProperty (_aea ._age ._gaa );_edad !=nil {return _edad ;};};if _aea ._ead ._cad {if _ecbc :=_ccad .WriteProperty (_aea ._age ._dcc );_ecbc !=nil {return _ecbc ;};};if _aea ._ead ._cgc {if _gdcfag :=_ccad .WriteProperty (_aea ._age ._aefa );_gdcfag !=nil {return _gdcfag ;};};if _aea ._ead ._gba {if _fafg :=_ccad .WriteProperty (_aea ._age ._deb );_fafg !=nil {return _fafg ;};};if _aea ._ead ._befca {if _geaf :=_ccad .WriteProperty (_aea ._age ._efcce );_geaf !=nil {return _geaf ;};};if _aea ._ead ._ebd {if _bcfe :=_ccad .WriteProperty (_aea ._age ._cfdb );_bcfe !=nil {return _bcfe ;};};if _aea ._ead ._eabc {if _dgag :=_ccad .WriteProperty (_aea ._age ._dec );_dgag !=nil {return _dgag ;};};if _aea ._ead ._dcg {if _cbd :=_ccad .WriteProperty (_aea ._age ._bca );_cbd !=nil {return _cbd ;};};if _aea ._ead ._gdgf {if _cffb :=_ccad .WriteProperty (_aea ._age ._gfd );_cffb !=nil {return _cffb ;};};if _aea ._ead ._edfe {if _ecfa :=_ccad .WriteProperty (_aea ._age ._cgbc );_ecfa !=nil {return _ecfa ;};};if _aea ._ead ._caba {if _fgac :=_ccad .WriteProperty (_aea ._age ._dgcbe );_fgac !=nil {return _fgac ;};};if _aea ._ead ._aeeb {_ecab :=_fb (_aea ._age ._feca ,_aea ._age ._beee );if _cfbdf :=_ccad .WriteProperty (_ecab );_cfbdf !=nil {return _cfbdf ;};};if _aea ._ead ._gedac {_aabf :=_fb (_aea ._age ._dbeg ,_aea ._age ._fdag );if _fdddd :=_ccad .WriteProperty (_aabf );_fdddd !=nil {return _fdddd ;};};if _aea ._ead ._abc {if _afee :=_ccad .WriteProperty (_aea ._age ._bdfe );_afee !=nil {return _afee ;};};if _aea ._ead ._fcdd {if _fafc :=_ccad .WriteProperty (_aea ._age ._beff );_fafc !=nil {return _fafc ;};};if _aea ._ead ._cgb {if _bgabb :=_ccad .WriteProperty (_aea ._age ._aeb );_bgabb !=nil {return _bgabb ;};};if _aea ._ead ._ggge {if _ddfd :=_ccad .WriteProperty (_aea ._age ._bfea );_ddfd !=nil {return _ddfd ;};};if _aea ._ead ._cfd {if _egdeb :=_ccad .WriteProperty (_aea ._age ._dba );_egdeb !=nil {return _egdeb ;};};if _aea ._ead ._dbeb {if _aagbd :=_ccad .WriteProperty (_aea ._age ._ffc );_aagbd !=nil {return _aagbd ;};};if _aea ._ead ._gfbf {_egfg :=_fb (_aea ._age ._cafg ,_aea ._age ._dde );if _gbcg :=_ccad .WriteProperty (_egfg );_gbcg !=nil {return _gbcg ;};};return _ccad .AlignLength (4);};func (_dgad *ImageControl )readExtraDataBlock (_bga *_ac .Reader )error {_dgad ._aeg =&imageExtraDataBlock {};if _dgad ._dgc ._bgg {var _ecbf uint64 ;if _bbb :=_bga .ReadPairProperty (&_ecbf );_bbb !=nil {return _bbb ;};_dgad ._aeg ._fcaf =uint32 (_ecbf );_dgad ._aeg ._fcdb =uint32 (_ecbf >>32);};return nil ;};

// SetHeight sets height of the CommandButton in HIMETRIC (0.01mm)
func (_fcf *CommandButtonControl )SetHeight (height uint32 ){_fcf ._ggg ._dfb =true ;_fcf ._adbb ._beg =height ;};

// SetForeColor sets a button text color value from a system palette for a scrollBar control.
func (_eaba *ScrollBarControl )SetForeColor (foreColor uint32 ){_eaba ._eafb ._bcdd =true ;_eaba ._ggaf ._edea =foreColor ;};func (_fca *CommandButtonControl )readExtraDataBlock (_cab *_ac .Reader )error {_fca ._adbb =&commandButtonExtraDataBlock {};if _fca ._adf ._dfa > 0{_ebgb ,_egc :=_cab .ReadStringProperty (_fca ._adf ._dfa );if _egc !=nil {return _egc ;};_fca ._adbb ._fae =_ebgb ;};if _fca ._ggg ._dfb {var _bdf uint64 ;if _ggc :=_cab .ReadPairProperty (&_bdf );_ggc !=nil {return _ggc ;};_fca ._adbb ._beg =uint32 (_bdf );_fca ._adbb ._beed =uint32 (_bdf >>32);};return nil ;};func _cdfc (_dbf *_ac .Reader )(*ScrollBarControl ,error ){_gfab :=&ScrollBarControl {};if _acdc :=_gfab .readPropMask (_dbf );_acdc !=nil {return nil ,_acdc ;};if _bedc :=_gfab .readDataBlock (_dbf );_bedc !=nil {return nil ,_bedc ;};if _bfga :=_gfab .readExtraDataBlock (_dbf );_bfga !=nil {return nil ,_bfga ;};if _ebgc :=_gfab .readStreamDataM (_dbf ,_gfab ._eafb ._gafd );_ebgc !=nil {return nil ,_ebgc ;};if _dbba :=_gfab .readTheRest (_dbf );_dbba !=nil {return nil ,_dbba ;};return _gfab ,nil ;};

// GetWidth returns width of the ScrollBar in HIMETRIC (0.01mm)
func (_abfg *ScrollBarControl )GetWidth ()uint32 {return _abfg ._cfea ._ebfb };

// GetWidth returns width of the Label in HIMETRIC (0.01mm)
func (_ccf *LabelControl )GetWidth ()uint32 {return _ccf ._fgcca ._geb };

// GetHeight returns height of the ScrollBar in HIMETRIC (0.01mm)
func (_aca *ScrollBarControl )GetHeight ()uint32 {return _aca ._cfea ._adcee };func _aa (_fga *_ge .Reader )(string ,error ){_aag ,_ecb :=_fga .GetEntry ("\u0043o\u006d\u0070\u004f\u0062\u006a");if _ecb !=nil {return "",_ecb ;};_gdg :=make ([]byte ,_aag .Size );_ ,_ecb =_aag .Read (_gdg );if _ecb !=nil {return "",_ecb ;};_bee :=_c .Split (_gdg ,[]byte ("\u002e"));if len (_bee )< 2{return "",_b .New ("\u0055\u006e\u006bn\u006f\u0077\u006e\u0020\u0066\u006f\u0072\u006d");};return string (_bee [len (_bee )-2]),nil ;};

// TextBoxDataControl is a representation of a text box ActiveX form.
type TextBoxDataControl struct{*morphDataControlStringValue };

// GetValue gets a value from a control which value can be represented as boolean (on/off).
func (_bde *morphDataControlBoolValue )GetValue ()bool {return _bde .getValueBool ()};func (_gcaa *guidAndPicture )export (_fee *_ac .Writer )error {if _ ,_bfe :=_e .Copy (_fee ,_c .NewBuffer (_gcaa ._bcd ));_bfe !=nil {return _bfe ;};if _gdgc :=_fee .WriteProperty (_gcaa ._ecg ._gfb );_gdgc !=nil {return _gdgc ;};if _gac :=_fee .WriteProperty (_gcaa ._ecg ._bbd );_gac !=nil {return _gac ;};_ ,_cde :=_e .Copy (_fee ,_gcaa ._ecg ._gcbb );if _cde !=nil {return _cde ;};return nil ;};

// GetWidth returns width of the SpinButton in HIMETRIC (0.01mm)
func (_gfee *SpinButtonControl )GetWidth ()uint32 {return _gfee ._eabb ._ddee };

// SetValue sets a value for a control which value can be represented as boolean (on/off).
func (_gdbd *morphDataControlBoolValue )SetValue (value bool ){_gdbd .setValueBool (value )};var _ffb =[]byte {0x04,0x52,0xE3,0x0B,0x91,0x8F,0xCE,0x11,0x9D,0xE3,0,0xAA,0,0x4B,0xB8,0x51};func (_cfee *ScrollBarControl )writePropMask (_bcgf *_ac .Writer )error {_ebgg :=uint32 (0);_ebgg =_ac .PushLeftUI32 (_ebgg ,_cfee ._eafb ._bcdd );_ebgg =_ac .PushLeftUI32 (_ebgg ,_cfee ._eafb ._abdd );_ebgg =_ac .PushLeftUI32 (_ebgg ,_cfee ._eafb ._fdf );_ebgg =_ac .PushLeftUI32 (_ebgg ,_cfee ._eafb ._bdec );_ebgg =_ac .PushLeftUI32 (_ebgg ,_cfee ._eafb ._eccc );_ebgg =_ac .PushLeftUI32 (_ebgg ,_cfee ._eafb ._cbbg );_ebgg =_ac .PushLeftUI32 (_ebgg ,_cfee ._eafb ._cbc );_ebgg =_ac .PushLeftUI32 (_ebgg ,_cfee ._eafb ._eeab );_ebgg >>=1;_ebgg =_ac .PushLeftUI32 (_ebgg ,_cfee ._eafb ._ffgea );_ebgg =_ac .PushLeftUI32 (_ebgg ,_cfee ._eafb ._acg );_ebgg =_ac .PushLeftUI32 (_ebgg ,_cfee ._eafb ._aage );_ebgg =_ac .PushLeftUI32 (_ebgg ,_cfee ._eafb ._dcef );_ebgg =_ac .PushLeftUI32 (_ebgg ,_cfee ._eafb ._efca );_ebgg =_ac .PushLeftUI32 (_ebgg ,_cfee ._eafb ._edee );_ebgg =_ac .PushLeftUI32 (_ebgg ,_cfee ._eafb ._fbgd );_ebgg =_ac .PushLeftUI32 (_ebgg ,_cfee ._eafb ._gafd );_ebgg >>=15;return _ee .Write (_bcgf ,_ee .LittleEndian ,_ebgg );};

// GetBackColor gets a button text color value for a system palette from a label control.
func (_gfa *LabelControl )GetBackColor ()uint32 {return _gfa ._daf ._eddd };func (_fdcd *SpinButtonControl )readExtraDataBlock (_eggc *_ac .Reader )error {_fdcd ._eabb =&spinButtonExtraDataBlock {};if _fdcd ._efga ._ecccb {var _bdef uint64 ;if _cce :=_eggc .ReadPairProperty (&_bdef );_cce !=nil {return _cce ;};_fdcd ._eabb ._efeb =uint32 (_bdef );_fdcd ._eabb ._ddee =uint32 (_bdef >>32);};return nil ;};

// SetForeColor sets a button text color value from a system palette for a label control.
func (_gdcfa *LabelControl )SetForeColor (foreColor uint32 ){_gdcfa ._gefe ._dbe =true ;_gdcfa ._daf ._dcd =foreColor ;};

// SetHeight sets height of the ScrollBar in HIMETRIC (0.01mm)
func (_dddf *ScrollBarControl )SetHeight (height uint32 ){_dddf ._eafb ._bdec =true ;_dddf ._cfea ._adcee =height ;};type controlBase struct{_dff uint16 ;_abd bool ;_bdaa *streamData ;_geaa []byte ;};

// SetWidth sets width of the Label in HIMETRIC (0.01mm)
func (_faa *LabelControl )SetWidth (width uint32 ){_faa ._gefe ._dbdd =true ;_faa ._fgcca ._geb =width };func (_dcca *morphDataControl )readDataBlock (_ccgf *_ac .Reader )error {_dcca ._age =&morphDataDataBlock {};if _dcca ._ead ._dgef {if _fagf :=_ccgf .ReadProperty (&_dcca ._age ._fff );_fagf !=nil {return _fagf ;};};if _dcca ._ead ._egaf {if _ccdc :=_ccgf .ReadProperty (&_dcca ._age ._fdc );_ccdc !=nil {return _ccdc ;};};if _dcca ._ead ._egde {if _geff :=_ccgf .ReadProperty (&_dcca ._age ._fgadc );_geff !=nil {return _geff ;};};if _dcca ._ead ._gcd {if _cade :=_ccgf .ReadProperty (&_dcca ._age ._baaf );_cade !=nil {return _cade ;};};if _dcca ._ead ._eafd {if _baed :=_ccgf .ReadProperty (&_dcca ._age ._adcg );_baed !=nil {return _baed ;};};if _dcca ._ead ._aabc {if _bcec :=_ccgf .ReadProperty (&_dcca ._age ._efcg );_bcec !=nil {return _bcec ;};};if _dcca ._ead ._bgad {if _fdeb :=_ccgf .ReadProperty (&_dcca ._age ._bed );_fdeb !=nil {return _fdeb ;};};if _dcca ._ead ._eed {if _gcg :=_ccgf .ReadProperty (&_dcca ._age ._bggd );_gcg !=nil {return _gcg ;};};if _dcca ._ead ._fcadf {if _bdcb :=_ccgf .ReadProperty (&_dcca ._age ._bfa );_bdcb !=nil {return _bdcb ;};};if _dcca ._ead ._gde {if _bfc :=_ccgf .ReadProperty (&_dcca ._age ._gaa );_bfc !=nil {return _bfc ;};};if _dcca ._ead ._cad {if _egbc :=_ccgf .ReadProperty (&_dcca ._age ._dcc );_egbc !=nil {return _egbc ;};};if _dcca ._ead ._cgc {if _dffg :=_ccgf .ReadProperty (&_dcca ._age ._aefa );_dffg !=nil {return _dffg ;};};if _dcca ._ead ._gba {if _ebgef :=_ccgf .ReadProperty (&_dcca ._age ._deb );_ebgef !=nil {return _ebgef ;};};if _dcca ._ead ._befca {if _afbb :=_ccgf .ReadProperty (&_dcca ._age ._efcce );_afbb !=nil {return _afbb ;};};if _dcca ._ead ._ebd {if _cbebc :=_ccgf .ReadProperty (&_dcca ._age ._cfdb );_cbebc !=nil {return _cbebc ;};};if _dcca ._ead ._eabc {if _bege :=_ccgf .ReadProperty (&_dcca ._age ._dec );_bege !=nil {return _bege ;};};if _dcca ._ead ._dcg {if _acda :=_ccgf .ReadProperty (&_dcca ._age ._bca );_acda !=nil {return _acda ;};};if _dcca ._ead ._gdgf {if _dddc :=_ccgf .ReadProperty (&_dcca ._age ._gfd );_dddc !=nil {return _dddc ;};};if _dcca ._ead ._edfe {if _edcg :=_ccgf .ReadProperty (&_dcca ._age ._cgbc );_edcg !=nil {return _edcg ;};};if _dcca ._ead ._caba {if _degd :=_ccgf .ReadProperty (&_dcca ._age ._dgcbe );_degd !=nil {return _degd ;};};if _dcca ._ead ._aeeb {var _addd uint32 ;if _eec :=_ccgf .ReadProperty (&_addd );_eec !=nil {return _eec ;};_dcca ._age ._beee ,_dcca ._age ._feca =_edb (_addd );};if _dcca ._ead ._gedac {var _fdg uint32 ;if _bcgd :=_ccgf .ReadProperty (&_fdg );_bcgd !=nil {return _bcgd ;};_dcca ._age ._fdag ,_dcca ._age ._dbeg =_edb (_fdg );};if _dcca ._ead ._abc {if _ebdf :=_ccgf .ReadProperty (&_dcca ._age ._bdfe );_ebdf !=nil {return _ebdf ;};};if _dcca ._ead ._fcdd {if _faf :=_ccgf .ReadProperty (&_dcca ._age ._beff );_faf !=nil {return _faf ;};};if _dcca ._ead ._cgb {if _ecbb :=_ccgf .ReadProperty (&_dcca ._age ._aeb );_ecbb !=nil {return _ecbb ;};};if _dcca ._ead ._ggge {if _bceb :=_ccgf .ReadProperty (&_dcca ._age ._bfea );_bceb !=nil {return _bceb ;};};if _dcca ._ead ._cfd {if _bbec :=_ccgf .ReadProperty (&_dcca ._age ._dba );_bbec !=nil {return _bbec ;};};if _dcca ._ead ._dbeb {if _afd :=_ccgf .ReadProperty (&_dcca ._age ._ffc );_afd !=nil {return _afd ;};};if _dcca ._ead ._gfbf {var _feag uint32 ;if _gfe :=_ccgf .ReadProperty (&_feag );_gfe !=nil {return _gfe ;};_dcca ._age ._dde ,_dcca ._age ._cafg =_edb (_feag );};return nil ;};

// CheckBoxDataControl is a representation of a check box ActiveX form.
type CheckBoxDataControl struct{*morphDataControlBoolValue };func (_bcbe *ImageControl )export (_ade *_ac .Writer )error {if _gge :=_bcbe .writePropMask (_ade );_gge !=nil {return _gge ;};if _cg :=_bcbe .writeDataBlock (_ade );_cg !=nil {return _cg ;};if _gbd :=_bcbe .writeExtraDataBlock (_ade );_gbd !=nil {return _gbd ;};_bcbe ._dff =uint16 (_ade .Len ()-4);if _befc :=_bcbe .writeStreamDataPM (_ade );_befc !=nil {return _befc ;};return _bcbe .writeTheRest (_ade );};func (_fed *SpinButtonControl )writeDataBlock (_fgbc *_ac .Writer )error {if _fed ._efga ._gfae {if _bdbb :=_fgbc .WriteProperty (_fed ._dbed ._ddaag );_bdbb !=nil {return _bdbb ;};};if _fed ._efga ._cgbe {if _bdffc :=_fgbc .WriteProperty (_fed ._dbed ._dfgd );_bdffc !=nil {return _bdffc ;};};if _fed ._efga ._dcbd {if _affd :=_fgbc .WriteProperty (_fed ._dbed ._efgb );_affd !=nil {return _affd ;};};if _fed ._efga ._bedb {if _ffbb :=_fgbc .WriteProperty (_fed ._dbed ._bfbf );_ffbb !=nil {return _ffbb ;};};if _fed ._efga ._afgfe {if _agdef :=_fgbc .WriteProperty (_fed ._dbed ._eaec );_agdef !=nil {return _agdef ;};};if _fed ._efga ._egad {if _bdbbf :=_fgbc .WriteProperty (_fed ._dbed ._gfdb );_bdbbf !=nil {return _bdbbf ;};};if _fed ._efga ._abb {if _abbe :=_fgbc .WriteProperty (_fed ._dbed ._aebef );_abbe !=nil {return _abbe ;};};if _fed ._efga ._gebc {if _cded :=_fgbc .WriteProperty (_fed ._dbed ._ecaf );_cded !=nil {return _cded ;};};if _fed ._efga ._dcgg {if _dbeda :=_fgbc .WriteProperty (_fed ._dbed ._cfebg );_dbeda !=nil {return _dbeda ;};};if _fed ._efga ._ebgcg {if _fabg :=_fgbc .WriteProperty (_fed ._dbed ._dgdf );_fabg !=nil {return _fabg ;};};if _fed ._efga ._aeba {if _gbgf :=_fgbc .WriteProperty (_fed ._dbed ._eegca );_gbgf !=nil {return _gbgf ;};};if _fed ._efga ._edcb {if _abef :=_fgbc .WriteProperty (_fed ._dbed ._bff );_abef !=nil {return _abef ;};};if _fed ._efga ._gbae {if _gfge :=_fgbc .WriteProperty (_fed ._dbed ._bdcg );_gfge !=nil {return _gfge ;};};return _fgbc .AlignLength (4);};func (_cdg *morphDataControl )getValueString ()string {if _cdg ._ead ._aeeb {return _cdg ._efg ._dfe ;};return "";};

// GetCaption gets a caption string from a morph control.
func (_fbea *morphDataControl )GetCaption ()string {if _fbea ._abd &&_fbea ._ead ._gedac {return _fbea ._efg ._edfa ;};return "";};

// SetWidth sets width of the CommandButton in HIMETRIC (0.01mm)
func (_dae *CommandButtonControl )SetWidth (width uint32 ){_dae ._ggg ._dfb =true ;_dae ._adbb ._beed =width ;};func (_ege *morphDataControl )writeColumnInfoDataBlock (_dbgb *_ac .Writer )error {return nil };func (_ccfc *LabelControl )writeDataBlock (_aggc *_ac .Writer )error {if _ccfc ._gefe ._dbe {if _cac :=_aggc .WriteProperty (_ccfc ._daf ._dcd );_cac !=nil {return _cac ;};};if _ccfc ._gefe ._fgd {if _cfe :=_aggc .WriteProperty (_ccfc ._daf ._eddd );_cfe !=nil {return _cfe ;};};if _ccfc ._gefe ._bggg {if _gbg :=_aggc .WriteProperty (_ccfc ._daf ._dfbc );_gbg !=nil {return _gbg ;};};if _ccfc ._gefe ._dce {_afgf :=_fb (_ccfc ._daf ._ced ,_ccfc ._daf ._afeb );if _cfb :=_aggc .WriteProperty (_afgf );_cfb !=nil {return _cfb ;};};if _ccfc ._gefe ._fbgf {if _ddaa :=_aggc .WriteProperty (_ccfc ._daf ._cfcd );_ddaa !=nil {return _ddaa ;};};if _ccfc ._gefe ._gfc {if _egdf :=_aggc .WriteProperty (_ccfc ._daf ._gdga );_egdf !=nil {return _egdf ;};};if _ccfc ._gefe ._cbf {if _gbgg :=_aggc .WriteProperty (_ccfc ._daf ._cdeg );_gbgg !=nil {return _gbgg ;};};if _ccfc ._gefe ._cgd {if _daeee :=_aggc .WriteProperty (_ccfc ._daf ._adbbf );_daeee !=nil {return _daeee ;};};if _ccfc ._gefe ._fbfd {if _efcc :=_aggc .WriteProperty (_ccfc ._daf ._egd );_efcc !=nil {return _efcc ;};};if _ccfc ._gefe ._fgg {if _bfgf :=_aggc .WriteProperty (_ccfc ._daf ._eag );_bfgf !=nil {return _bfgf ;};};if _ccfc ._gefe ._agg {if _fab :=_aggc .WriteProperty (_ccfc ._daf ._dbg );_fab !=nil {return _fab ;};};if _ccfc ._gefe ._ded {if _aefg :=_aggc .WriteProperty (_ccfc ._daf ._adg );_aefg !=nil {return _aefg ;};};return _aggc .AlignLength (4);};const _adag =2;

// GetForeColor gets a button text color value for a system palette from a scrollBar control.
func (_eccd *ScrollBarControl )GetForeColor ()uint32 {return _eccd ._ggaf ._edea };

// GetHeight returns height of the SpinButton in HIMETRIC (0.01mm)
func (_dfaa *SpinButtonControl )GetHeight ()uint32 {return _dfaa ._eabb ._efeb };func (_cgeg *LabelControl )readExtraDataBlock (_fcdff *_ac .Reader )error {_cgeg ._fgcca =&labelExtraDataBlock {};if _cgeg ._daf ._ced > 0{_cgg ,_dbgc :=_fcdff .ReadStringProperty (_cgeg ._daf ._ced );if _dbgc !=nil {return _dbgc ;};_cgeg ._fgcca ._aacb =_cgg ;};if _cgeg ._gefe ._dbdd {var _acba uint64 ;if _gccf :=_fcdff .ReadPairProperty (&_acba );_gccf !=nil {return _gccf ;};_cgeg ._fgcca ._gfcc =uint32 (_acba );_cgeg ._fgcca ._geb =uint32 (_acba >>32);};return nil ;};func (_fabc *morphDataControl )writePropMask (_fcfe *_ac .Writer )error {_dedc :=uint64 (0);_dedc =_ac .PushLeftUI64 (_dedc ,_fabc ._ead ._dgef );_dedc =_ac .PushLeftUI64 (_dedc ,_fabc ._ead ._egaf );_dedc =_ac .PushLeftUI64 (_dedc ,_fabc ._ead ._egde );_dedc =_ac .PushLeftUI64 (_dedc ,_fabc ._ead ._gcd );_dedc =_ac .PushLeftUI64 (_dedc ,_fabc ._ead ._eafd );_dedc =_ac .PushLeftUI64 (_dedc ,_fabc ._ead ._aabc );_dedc =_ac .PushLeftUI64 (_dedc ,_fabc ._ead ._bgad );_dedc =_ac .PushLeftUI64 (_dedc ,_fabc ._ead ._eed );_dedc =_ac .PushLeftUI64 (_dedc ,_fabc ._ead ._geda );_dedc =_ac .PushLeftUI64 (_dedc ,_fabc ._ead ._fcadf );_dedc =_ac .PushLeftUI64 (_dedc ,_fabc ._ead ._gde );_dedc =_ac .PushLeftUI64 (_dedc ,_fabc ._ead ._cad );_dedc =_ac .PushLeftUI64 (_dedc ,_fabc ._ead ._cgc );_dedc =_ac .PushLeftUI64 (_dedc ,_fabc ._ead ._gba );_dedc =_ac .PushLeftUI64 (_dedc ,_fabc ._ead ._befca );_dedc =_ac .PushLeftUI64 (_dedc ,_fabc ._ead ._ebd );_dedc =_ac .PushLeftUI64 (_dedc ,_fabc ._ead ._eabc );_dedc =_ac .PushLeftUI64 (_dedc ,_fabc ._ead ._dcg );_dedc =_ac .PushLeftUI64 (_dedc ,_fabc ._ead ._gdgf );_dedc >>=1;_dedc =_ac .PushLeftUI64 (_dedc ,_fabc ._ead ._edfe );_dedc =_ac .PushLeftUI64 (_dedc ,_fabc ._ead ._caba );_dedc =_ac .PushLeftUI64 (_dedc ,_fabc ._ead ._aeeb );_dedc =_ac .PushLeftUI64 (_dedc ,_fabc ._ead ._gedac );_dedc =_ac .PushLeftUI64 (_dedc ,_fabc ._ead ._abc );_dedc =_ac .PushLeftUI64 (_dedc ,_fabc ._ead ._fcdd );_dedc =_ac .PushLeftUI64 (_dedc ,_fabc ._ead ._cgb );_dedc =_ac .PushLeftUI64 (_dedc ,_fabc ._ead ._ggge );_dedc =_ac .PushLeftUI64 (_dedc ,_fabc ._ead ._cfd );_dedc =_ac .PushLeftUI64 (_dedc ,_fabc ._ead ._dbeb );_dedc >>=1;_dedc =_ac .PushLeftUI64 (_dedc ,true );_dedc =_ac .PushLeftUI64 (_dedc ,_fabc ._ead ._gfbf );_dedc >>=31;return _ee .Write (_fcfe ,_ee .LittleEndian ,_dedc );};func (_acfe *SpinButtonControl )export (_faad *_ac .Writer )error {if _abdc :=_acfe .writePropMask (_faad );_abdc !=nil {return _abdc ;};if _bdaf :=_acfe .writeDataBlock (_faad );_bdaf !=nil {return _bdaf ;};if _dbc :=_acfe .writeExtraDataBlock (_faad );_dbc !=nil {return _dbc ;};_acfe ._dff =uint16 (_faad .Len ()-4);if _dffa :=_acfe .writeStreamDataM (_faad );_dffa !=nil {return _dffa ;};return _acfe .writeTheRest (_faad );};

// SetBackColor sets a button text color value from a system palette for a scrollBar control.
func (_ebf *ScrollBarControl )SetBackColor (backColor uint32 ){_ebf ._eafb ._abdd =true ;_ebf ._ggaf ._dfbga =backColor ;};

// GetWidth returns width of the CommandButton in HIMETRIC (0.01mm)
func (_dg *CommandButtonControl )GetWidth ()uint32 {return _dg ._adbb ._beed };type morphDataColumnInfoDataBlock struct{};func (_fbee *controlBase )setMouseIconBytes (_aaa []byte ){if _fbee ._bdaa ._cgag ==nil {_fbee ._bdaa ._cgag =&guidAndPicture {};};_fbee ._bdaa ._cgag .setStdPictureBytes (_aaa );};type scrollBarDataBlock struct{_edea uint32 ;_dfbga uint32 ;_aeea uint32 ;_ebfc uint8 ;_edab int32 ;_fad int32 ;_ffab int32 ;_cfeb int32 ;_dfbe int32 ;_aefab int32 ;_edgd int32 ;_bdg uint32 ;_efbd uint32 ;_cgda uint32 ;_efdb uint16 ;};func (_ebbg *controlBase )readStreamDataMP (_daed *_ac .Reader ,_aegbg ,_abeac bool )error {_ebbg ._bdaa =&streamData {};if _aegbg {_ebbg ._bdaa ._cgag =&guidAndPicture {};if _dffgf :=_ebbg ._bdaa ._cgag .importFromReader (_daed );_dffgf !=nil {return _dffgf ;};};if _abeac {_ebbg ._bdaa ._gfce =&guidAndPicture {};if _cbbe :=_ebbg ._bdaa ._gfce .importFromReader (_daed );_cbbe !=nil {return _cbbe ;};};return nil ;};type morphDataControlBoolValue struct{*morphDataControl };func (_adec *ImageControl )writePropMask (_cag *_ac .Writer )error {_cafda :=uint32 (0);_cafda >>=2;_cafda =_ac .PushLeftUI32 (_cafda ,_adec ._dgc ._ecf );_cafda =_ac .PushLeftUI32 (_cafda ,_adec ._dgc ._gbb );_cafda =_ac .PushLeftUI32 (_cafda ,_adec ._dgc ._cca );_cafda =_ac .PushLeftUI32 (_cafda ,_adec ._dgc ._gegd );_cafda =_ac .PushLeftUI32 (_cafda ,_adec ._dgc ._bbee );_cafda =_ac .PushLeftUI32 (_cafda ,_adec ._dgc ._gdff );_cafda =_ac .PushLeftUI32 (_cafda ,_adec ._dgc ._aefb );_cafda =_ac .PushLeftUI32 (_cafda ,_adec ._dgc ._bgg );_cafda =_ac .PushLeftUI32 (_cafda ,_adec ._dgc ._ddc );_cafda =_ac .PushLeftUI32 (_cafda ,_adec ._dgc ._fdb );_cafda =_ac .PushLeftUI32 (_cafda ,_adec ._dgc ._bdfb );_cafda =_ac .PushLeftUI32 (_cafda ,_adec ._dgc ._dgcb );_cafda =_ac .PushLeftUI32 (_cafda ,_adec ._dgc ._baa );_cafda >>=17;return _ee .Write (_cag ,_ee .LittleEndian ,_cafda );};func (_cga *LabelControl )export (_gbdg *_ac .Writer )error {if _afef :=_cga .writePropMask (_gbdg );_afef !=nil {return _afef ;};if _bfd :=_cga .writeDataBlock (_gbdg );_bfd !=nil {return _bfd ;};if _dab :=_cga .writeExtraDataBlock (_gbdg );_dab !=nil {return _dab ;};_cga ._dff =uint16 (_gbdg .Len ()-4);if _efb :=_cga .writeStreamDataPM (_gbdg );_efb !=nil {return _efb ;};return _cga .writeTheRest (_gbdg );};

// SetHeight sets height of the Label in HIMETRIC (0.01mm)
func (_bdbg *LabelControl )SetHeight (height uint32 ){_bdbg ._gefe ._dbdd =true ;_bdbg ._fgcca ._gfcc =height ;};

// ListBoxDataControl is a representation of a list box ActiveX form.
type ListBoxDataControl struct{*morphDataControlStringValue };

// GetMax gets a button max value.
func (_aadf *ScrollBarControl )GetMax ()int32 {return _aadf ._ggaf ._fad };

// ToggleButtonDataControl is a representation of a toggle button ActiveX form.
type ToggleButtonDataControl struct{*morphDataControlBoolValue };

// ImageControl is a representation of an image ActiveX form.
type ImageControl struct{controlBase ;_dgc *imagePropMask ;_gcf *imageDataBlock ;_aeg *imageExtraDataBlock ;_gfba *streamData ;};func _edb (_bd uint32 )(bool ,uint32 ){if _bd ==0{return false ,0;};_gg :=_bd >=1<<31;if _gg {_bd -=1<<31;};return _gg ,_bd ;};type labelDataBlock struct{_dcd uint32 ;_eddd uint32 ;_dfbc uint32 ;_ced uint32 ;_afeb bool ;_cfcd uint32 ;_gdga uint8 ;_cdeg uint32 ;_adbbf uint16 ;_egd uint16 ;_eag uint16 ;_dbg rune ;_adg uint16 ;};func (_bffd *controlBase )readStreamDataM (_cbbgg *_ac .Reader ,_gagb bool )error {_bffd ._bdaa =&streamData {};if _gagb {_bffd ._bdaa ._cgag =&guidAndPicture {};if _bge :=_bffd ._bdaa ._cgag .importFromReader (_cbbgg );_bge !=nil {return _bge ;};};return nil ;};type stdPicture struct{_gfb uint32 ;_bbd uint32 ;_gcbb *_c .Buffer ;};const _afad uint32 =0x0000746C;

// GetValue gets a value from a control which value can be represented as a string.
func (_ffbe *morphDataControlStringValue )GetValue ()string {return _ffbe .getValueString ()};func (_faeg *SpinButtonControl )writeExtraDataBlock (_bdd *_ac .Writer )error {if _faeg ._efga ._ecccb {_aeaa :=uint64 (_faeg ._eabb ._ddee )<<32|uint64 (_faeg ._eabb ._efeb );if _acgg :=_bdd .WritePropertyNoAlign (_aeaa );_acgg !=nil {return _acgg ;};};return nil ;};var _eegg =len (_ffb );

// SetHeight sets height of the morphDataControl in HIMETRIC (0.01mm)
func (_bdc *morphDataControl )SetHeight (height uint32 ){_bdc ._ead ._geda =true ;_bdc ._efg ._bba =height ;};type morphDataExtraDataBlock struct{_bcac uint32 ;_bba uint32 ;_dfe string ;_edfa string ;_eeag string ;};

// FmPictureSizeMode represents one of the three picture size modes according to MS-OFORMS document.
type FmPictureSizeMode byte ;

// GetBackColor gets a button text color value for a system palette from a commandButton control.
func (_fce *CommandButtonControl )GetBackColor ()uint32 {return _fce ._adf ._cee };func (_cbfa *morphDataControl )setValueBool (_ccd bool ){_cbfa ._ead ._aeeb =true ;_cbfa ._age ._feca =1;_cbfa ._age ._beee =true ;_aggb :="\u0030";if _ccd {_aggb ="\u0031";};_cbfa ._efg ._dfe =_aggb ;};

// SetBackColor sets a button text color value from a system palette for a commandButton control.
func (_ga *CommandButtonControl )SetBackColor (backColor uint32 ){_ga ._ggg ._afe =true ;_ga ._adf ._cee =backColor ;};func (_bce *CommandButtonControl )writeDataBlock (_ggb *_ac .Writer )error {if _bce ._ggg ._gdc {if _ggbg :=_ggb .WriteProperty (_bce ._adf ._gaf );_ggbg !=nil {return _ggbg ;};};if _bce ._ggg ._afe {if _ebge :=_ggb .WriteProperty (_bce ._adf ._cee );_ebge !=nil {return _ebge ;};};if _bce ._ggg ._dge {if _fgad :=_ggb .WriteProperty (_bce ._adf ._aee );_fgad !=nil {return _fgad ;};};if _bce ._ggg ._eegc {_bae :=_fb (_bce ._adf ._dfa ,_bce ._adf ._dcb );if _de :=_ggb .WriteProperty (_bae );_de !=nil {return _de ;};};if _bce ._ggg ._bfg {if _ffg :=_ggb .WriteProperty (_bce ._adf ._gaba );_ffg !=nil {return _ffg ;};};if _bce ._ggg ._bda {if _fde :=_ggb .WriteProperty (_bce ._adf ._acc );_fde !=nil {return _fde ;};};if _bce ._ggg ._eff {if _fddc :=_ggb .WriteProperty (_bce ._adf ._fgf );_fddc !=nil {return _fddc ;};};if _bce ._ggg ._gcb {if _dgae :=_ggb .WriteProperty (_bce ._adf ._fbe );_dgae !=nil {return _dgae ;};};if _bce ._ggg ._bdb {if _gdcf :=_ggb .WriteProperty (_bce ._adf ._fac );_gdcf !=nil {return _gdcf ;};};return _ggb .AlignLength (4);};type guidAndPicture struct{_bcd []byte ;_ecg *stdPicture ;};type labelPropMask struct{_dbe bool ;_fgd bool ;_bggg bool ;_dce bool ;_fbgf bool ;_dbdd bool ;_gfc bool ;_cbf bool ;_cgd bool ;_fbfd bool ;_fgg bool ;_agg bool ;_ded bool ;};

// SetMax sets a button max value.
func (_eecc *ScrollBarControl )SetMax (max int32 ){_eecc ._eafb ._cbc =true ;_eecc ._ggaf ._fad =max };func _ada (_edd *_ac .Reader )(*ImageControl ,error ){_ged :=&ImageControl {};if _bbe :=_ged .readPropMask (_edd );_bbe !=nil {return nil ,_bbe ;};if _fgbg :=_ged .readDataBlock (_edd );_fgbg !=nil {return nil ,_fgbg ;};if _dbd :=_ged .readExtraDataBlock (_edd );_dbd !=nil {return nil ,_dbd ;};if _bcc :=_ged .readStreamDataPM (_edd ,_ged ._dgc ._ddc ,_ged ._dgc ._baa );_bcc !=nil {return nil ,_bcc ;};if _ebb :=_ged .readTheRest (_edd );_ebb !=nil {return nil ,_ebb ;};return _ged ,nil ;};

// GetHeight returns height of the Label in HIMETRIC (0.01mm)
func (_cdb *LabelControl )GetHeight ()uint32 {return _cdb ._fgcca ._gfcc };type morphDataControl struct{controlBase ;_ead *morphDataPropMask ;_age *morphDataDataBlock ;_efg *morphDataExtraDataBlock ;_gcaad *streamData ;_dcac *morphDataColumnInfo ;_ece *morphDataColumnInfoPropMask ;_egdfe *morphDataColumnInfoDataBlock ;};

// FmPictureAlignment represents one of the five picture aignments according to MS-OFORMS document.
type FmPictureAlignment byte ;func (_edgg *controlBase )readStreamDataPM (_cgde *_ac .Reader ,_adab ,_fdeeg bool )error {_edgg ._bdaa =&streamData {};if _adab {_edgg ._bdaa ._gfce =&guidAndPicture {};if _bcbf :=_edgg ._bdaa ._gfce .importFromReader (_cgde );_bcbf !=nil {return _bcbf ;};};if _fdeeg {_edgg ._bdaa ._cgag =&guidAndPicture {};if _aegbge :=_edgg ._bdaa ._cgag .importFromReader (_cgde );_aegbge !=nil {return _aegbge ;};};return nil ;};

// GetWidth returns width of the morphDataControl in HIMETRIC (0.01mm)
func (_ebcg *morphDataControl )GetWidth ()uint32 {return _ebcg ._efg ._bcac };func (_aefad *ScrollBarControl )readExtraDataBlock (_eacg *_ac .Reader )error {_aefad ._cfea =&scrollBarExtraDataBlock {};if _aefad ._eafb ._bdec {var _affg uint64 ;if _cfa :=_eacg .ReadPairProperty (&_affg );_cfa !=nil {return _cfa ;};_aefad ._cfea ._adcee =uint32 (_affg );_aefad ._cfea ._ebfb =uint32 (_affg >>32);};return nil ;};func (_bgb *controlBase )writeTheRest (_fgbf *_ac .Writer )error {_ ,_dgg :=_fgbf .Write (_bgb ._geaa );return _dgg ;};

// SetWidth sets width of the morphDataControl in HIMETRIC (0.01mm)
func (_bcf *morphDataControl )SetWidth (width uint32 ){_bcf ._ead ._geda =true ;_bcf ._efg ._bcac =width };type morphDataColumnInfo struct{};type spinButtonDataBlock struct{_ddaag uint32 ;_dfgd uint32 ;_efgb uint32 ;_bfbf int32 ;_eaec int32 ;_gfdb int32 ;_aebef int32 ;_ecaf int32 ;_cfebg int32 ;_dgdf uint32 ;_eegca uint32 ;_bff uint16 ;_bdcg uint8 ;};

// ScrollBarControl is a representation of a scrollBar ActiveX form.
type ScrollBarControl struct{controlBase ;_eafb *scrollBarPropMask ;_ggaf *scrollBarDataBlock ;_cfea *scrollBarExtraDataBlock ;_dfbg *streamData ;};func _ccc (_edae *_ac .Reader )(*LabelControl ,error ){_fdbg :=&LabelControl {};if _bbbd :=_fdbg .readPropMask (_edae );_bbbd !=nil {return nil ,_bbbd ;};if _baab :=_fdbg .readDataBlock (_edae );_baab !=nil {return nil ,_baab ;};if _abf :=_fdbg .readExtraDataBlock (_edae );_abf !=nil {return nil ,_abf ;};if _febf :=_fdbg .readStreamDataPM (_edae ,_fdbg ._gefe ._fgg ,_fdbg ._gefe ._ded );_febf !=nil {return nil ,_febf ;};if _gcba :=_fdbg .readTheRest (_edae );_gcba !=nil {return nil ,_gcba ;};return _fdbg ,nil ;};

// SetPosition sets a button position value.
func (_eagf *SpinButtonControl )SetPosition (position int32 ){_eagf ._efga ._egad =true ;_eagf ._dbed ._gfdb =position ;};

// ControlChoice represents an ActiveX control inside a wrapper.
type ControlChoice struct{CheckBox *CheckBoxDataControl ;TextBox *TextBoxDataControl ;ListBox *ListBoxDataControl ;ComboBox *ComboBoxDataControl ;OptionButton *OptionButtonDataControl ;ToggleButton *ToggleButtonDataControl ;Label *LabelControl ;Image *ImageControl ;SpinButton *SpinButtonControl ;CommandButton *CommandButtonControl ;ScrollBar *ScrollBarControl ;_cb *controlBase ;};func (_ebc *controlBase )getMouseIconBytes ()[]byte {return _ebc ._bdaa ._cgag .getStdPictureBytes ()};type imagePropMask struct{_ecf bool ;_gbb bool ;_cca bool ;_gegd bool ;_bbee bool ;_gdff bool ;_aefb bool ;_bgg bool ;_ddc bool ;_fdb bool ;_bdfb bool ;_dgcb bool ;_baa bool ;};func (_cdege *controlBase )writeStreamDataPM (_fcedd *_ac .Writer )error {if _cdege ._bdaa !=nil {if _cdege ._bdaa ._gfce !=nil {if _dgcf :=_cdege ._bdaa ._gfce .export (_fcedd );_dgcf !=nil {return _dgcf ;};};if _cdege ._bdaa ._cgag !=nil {if _abefc :=_cdege ._bdaa ._cgag .export (_fcedd );_abefc !=nil {return _abefc ;};};};return nil ;};

// SetCaption sets a caption string for a morph control.
func (_adfa *morphDataControl )SetCaption (caption string ){if _adfa ._abd {_adfa ._ead ._gedac =true ;_adfa ._age ._dbeg =uint32 (len (caption ));_adfa ._efg ._edfa =caption ;};};

// SetWidth sets width of the SpinButton in HIMETRIC (0.01mm)
func (_dbgg *SpinButtonControl )SetWidth (width uint32 ){_dbgg ._efga ._ecccb =true ;_dbgg ._eabb ._ddee =width ;};func (_fgacf *SpinButtonControl )writePropMask (_fadee *_ac .Writer )error {_bbcg :=uint32 (0);_bbcg =_ac .PushLeftUI32 (_bbcg ,_fgacf ._efga ._gfae );_bbcg =_ac .PushLeftUI32 (_bbcg ,_fgacf ._efga ._cgbe );_bbcg =_ac .PushLeftUI32 (_bbcg ,_fgacf ._efga ._dcbd );_bbcg =_ac .PushLeftUI32 (_bbcg ,_fgacf ._efga ._ecccb );_bbcg >>=1;_bbcg =_ac .PushLeftUI32 (_bbcg ,_fgacf ._efga ._bedb );_bbcg =_ac .PushLeftUI32 (_bbcg ,_fgacf ._efga ._afgfe );_bbcg =_ac .PushLeftUI32 (_bbcg ,_fgacf ._efga ._egad );_bbcg =_ac .PushLeftUI32 (_bbcg ,_fgacf ._efga ._abb );_bbcg =_ac .PushLeftUI32 (_bbcg ,_fgacf ._efga ._gebc );_bbcg =_ac .PushLeftUI32 (_bbcg ,_fgacf ._efga ._dcgg );_bbcg =_ac .PushLeftUI32 (_bbcg ,_fgacf ._efga ._ebgcg );_bbcg =_ac .PushLeftUI32 (_bbcg ,_fgacf ._efga ._aeba );_bbcg =_ac .PushLeftUI32 (_bbcg ,_fgacf ._efga ._edcb );_bbcg =_ac .PushLeftUI32 (_bbcg ,_fgacf ._efga ._gbae );_bbcg >>=17;return _ee .Write (_fadee ,_ee .LittleEndian ,_bbcg );};func (_addg *CommandButtonControl )readPropMask (_fdd *_ac .Reader )error {var _daa uint32 ;if _ebg :=_ee .Read (_fdd ,_ee .LittleEndian ,&_daa );_ebg !=nil {return _ebg ;};_addg ._ggg =&commandButtonPropMask {};_addg ._ggg ._gdc ,_daa =_ac .PopRightUI32 (_daa );_addg ._ggg ._afe ,_daa =_ac .PopRightUI32 (_daa );_addg ._ggg ._dge ,_daa =_ac .PopRightUI32 (_daa );_addg ._ggg ._eegc ,_daa =_ac .PopRightUI32 (_daa );_addg ._ggg ._bfg ,_daa =_ac .PopRightUI32 (_daa );_addg ._ggg ._dfb ,_daa =_ac .PopRightUI32 (_daa );_addg ._ggg ._bda ,_daa =_ac .PopRightUI32 (_daa );_addg ._ggg ._eff ,_daa =_ac .PopRightUI32 (_daa );_addg ._ggg ._gcb ,_daa =_ac .PopRightUI32 (_daa );_addg ._ggg ._adcef ,_daa =_ac .PopRightUI32 (_daa );_addg ._ggg ._bdb ,_daa =_ac .PopRightUI32 (_daa );return nil ;};

// SetMin sets a button min value.
func (_gbgd *SpinButtonControl )SetMin (min int32 ){_gbgd ._efga ._bedb =true ;_gbgd ._dbed ._bfbf =min };func (_dabe *morphDataControl )writeColumnInfo (_affb *_ac .Writer )error {return nil };func (_cabd *ImageControl )writeDataBlock (_deg *_ac .Writer )error {if _cabd ._dgc ._gbb {if _fbg :=_deg .WriteProperty (_cabd ._gcf ._fcad );_fbg !=nil {return _fbg ;};};if _cabd ._dgc ._cca {if _efc :=_deg .WriteProperty (_cabd ._gcf ._ddf );_efc !=nil {return _efc ;};};if _cabd ._dgc ._gegd {if _fced :=_deg .WriteProperty (_cabd ._gcf ._fcdf );_fced !=nil {return _fced ;};};if _cabd ._dgc ._bbee {if _fdea :=_deg .WriteProperty (_cabd ._gcf ._ggag );_fdea !=nil {return _fdea ;};};if _cabd ._dgc ._gdff {if _efa :=_deg .WriteProperty (_cabd ._gcf ._bad );_efa !=nil {return _efa ;};};if _cabd ._dgc ._aefb {if _afc :=_deg .WriteProperty (_cabd ._gcf ._efd );_afc !=nil {return _afc ;};};if _cabd ._dgc ._ddc {if _eab :=_deg .WriteProperty (_cabd ._gcf ._gff );_eab !=nil {return _eab ;};};if _cabd ._dgc ._fdb {if _afgg :=_deg .WriteProperty (_cabd ._gcf ._gedc );_afgg !=nil {return _afgg ;};};if _cabd ._dgc ._dgcb {if _gedb :=_deg .WriteProperty (_cabd ._gcf ._eae );_gedb !=nil {return _gedb ;};};if _cabd ._dgc ._baa {if _effb :=_deg .WriteProperty (_cabd ._gcf ._aagb );_effb !=nil {return _effb ;};};return _deg .AlignLength (4);};func (_egb *ImageControl )readDataBlock (_ede *_ac .Reader )error {_egb ._gcf =&imageDataBlock {};if _egb ._dgc ._gbb {if _dag :=_ede .ReadProperty (&_egb ._gcf ._fcad );_dag !=nil {return _dag ;};};if _egb ._dgc ._cca {if _afac :=_ede .ReadProperty (&_egb ._gcf ._ddf );_afac !=nil {return _afac ;};};if _egb ._dgc ._gegd {if _ggf :=_ede .ReadProperty (&_egb ._gcf ._fcdf );_ggf !=nil {return _ggf ;};};if _egb ._dgc ._bbee {if _feb :=_ede .ReadProperty (&_egb ._gcf ._ggag );_feb !=nil {return _feb ;};};if _egb ._dgc ._gdff {if _dda :=_ede .ReadProperty (&_egb ._gcf ._bad );_dda !=nil {return _dda ;};};if _egb ._dgc ._aefb {if _def :=_ede .ReadProperty (&_egb ._gcf ._efd );_def !=nil {return _def ;};};if _egb ._dgc ._ddc {if _bec :=_ede .ReadProperty (&_egb ._gcf ._gff );_bec !=nil {return _bec ;};};if _egb ._dgc ._fdb {if _daee :=_ede .ReadProperty (&_egb ._gcf ._gedc );_daee !=nil {return _daee ;};};if _egb ._dgc ._dgcb {if _edbb :=_ede .ReadProperty (&_egb ._gcf ._eae );_edbb !=nil {return _edbb ;};};if _egb ._dgc ._baa {if _fdba :=_ede .ReadProperty (&_egb ._gcf ._aagb );_fdba !=nil {return _fdba ;};};return nil ;};const _bdff =6;func (_bdfc *controlBase )writeStreamDataMP (_efcf *_ac .Writer )error {if _bdfc ._bdaa !=nil {if _bdfc ._bdaa ._cgag !=nil {if _gbgc :=_bdfc ._bdaa ._cgag .export (_efcf );_gbgc !=nil {return _gbgc ;};};if _bdfc ._bdaa ._gfce !=nil {if _eebd :=_bdfc ._bdaa ._gfce .export (_efcf );_eebd !=nil {return _eebd ;};};};return nil ;};type streamData struct{_cgag *guidAndPicture ;_gfce *guidAndPicture ;};func (_ecae *ScrollBarControl )readPropMask (_badb *_ac .Reader )error {var _aaba uint32 ;if _fbfc :=_ee .Read (_badb ,_ee .LittleEndian ,&_aaba );_fbfc !=nil {return _fbfc ;};_ecae ._eafb =&scrollBarPropMask {};_ecae ._eafb ._bcdd ,_aaba =_ac .PopRightUI32 (_aaba );_ecae ._eafb ._abdd ,_aaba =_ac .PopRightUI32 (_aaba );_ecae ._eafb ._fdf ,_aaba =_ac .PopRightUI32 (_aaba );_ecae ._eafb ._bdec ,_aaba =_ac .PopRightUI32 (_aaba );_ecae ._eafb ._eccc ,_aaba =_ac .PopRightUI32 (_aaba );_ecae ._eafb ._cbbg ,_aaba =_ac .PopRightUI32 (_aaba );_ecae ._eafb ._cbc ,_aaba =_ac .PopRightUI32 (_aaba );_ecae ._eafb ._eeab ,_aaba =_ac .PopRightUI32 (_aaba );_aaba >>=1;_ecae ._eafb ._ffgea ,_aaba =_ac .PopRightUI32 (_aaba );_ecae ._eafb ._acg ,_aaba =_ac .PopRightUI32 (_aaba );_ecae ._eafb ._aage ,_aaba =_ac .PopRightUI32 (_aaba );_ecae ._eafb ._dcef ,_aaba =_ac .PopRightUI32 (_aaba );_ecae ._eafb ._efca ,_aaba =_ac .PopRightUI32 (_aaba );_ecae ._eafb ._edee ,_aaba =_ac .PopRightUI32 (_aaba );_ecae ._eafb ._fbgd ,_aaba =_ac .PopRightUI32 (_aaba );_ecae ._eafb ._gafd ,_aaba =_ac .PopRightUI32 (_aaba );return nil ;};func (_cada *controlBase )writeStreamDataM (_ddfg *_ac .Writer )error {if _cada ._bdaa !=nil {if _cada ._bdaa ._cgag !=nil {if _bgbf :=_cada ._bdaa ._cgag .export (_ddfg );_bgbf !=nil {return _bgbf ;};};};return nil ;};

// GetCaption gets a caption string from a commandButton control.
func (_aba *CommandButtonControl )GetCaption ()string {return _aba ._adbb ._fae };

// SetPosition sets a button position value.
func (_ffff *ScrollBarControl )SetPosition (position int32 ){_ffff ._eafb ._eeab =true ;_ffff ._ggaf ._ffab =position ;};

// GetPosition gets a button position value.
func (_bgc *ScrollBarControl )GetPosition ()int32 {return _bgc ._ggaf ._ffab };type morphDataDataBlock struct{_fff uint32 ;_fdc uint32 ;_fgadc uint32 ;_baaf uint32 ;_adcg byte ;_efcg byte ;_bed byte ;_bggd byte ;_bfa rune ;_gaa uint32 ;_dcc uint16 ;_aefa int16 ;_deb int16 ;_efcce uint16 ;_cfdb uint16 ;_dec uint8 ;_bca uint8 ;_gfd uint8 ;_cgbc uint8 ;_dgcbe uint8 ;_feca uint32 ;_beee bool ;_dbeg uint32 ;_fdag bool ;_bdfe uint32 ;_beff uint32 ;_aeb uint32 ;_bfea uint16 ;_dba uint16 ;_ffc rune ;_cafg uint32 ;_dde bool ;};func (_adbc *CommandButtonControl )writePropMask (_bab *_ac .Writer )error {_bgd :=uint32 (0);_bgd =_ac .PushLeftUI32 (_bgd ,_adbc ._ggg ._gdc );_bgd =_ac .PushLeftUI32 (_bgd ,_adbc ._ggg ._afe );_bgd =_ac .PushLeftUI32 (_bgd ,_adbc ._ggg ._dge );_bgd =_ac .PushLeftUI32 (_bgd ,_adbc ._ggg ._eegc );_bgd =_ac .PushLeftUI32 (_bgd ,_adbc ._ggg ._bfg );_bgd =_ac .PushLeftUI32 (_bgd ,_adbc ._ggg ._dfb );_bgd =_ac .PushLeftUI32 (_bgd ,_adbc ._ggg ._bda );_bgd =_ac .PushLeftUI32 (_bgd ,_adbc ._ggg ._eff );_bgd =_ac .PushLeftUI32 (_bgd ,_adbc ._ggg ._gcb );_bgd =_ac .PushLeftUI32 (_bgd ,_adbc ._ggg ._adcef );_bgd =_ac .PushLeftUI32 (_bgd ,_adbc ._ggg ._bdb );_bgd >>=21;return _ee .Write (_bab ,_ee .LittleEndian ,_bgd );};type morphDataPropMask struct{_dgef bool ;_egaf bool ;_egde bool ;_gcd bool ;_eafd bool ;_aabc bool ;_bgad bool ;_eed bool ;_geda bool ;_fcadf bool ;_gde bool ;_cad bool ;_cgc bool ;_gba bool ;_befca bool ;_ebd bool ;_eabc bool ;_dcg bool ;_gdgf bool ;_edfe bool ;_caba bool ;_aeeb bool ;_gedac bool ;_abc bool ;_fcdd bool ;_cgb bool ;_ggge bool ;_cfd bool ;_dbeb bool ;_gfbf bool ;};

// SetMin sets a button min value.
func (_fdee *ScrollBarControl )SetMin (min int32 ){_fdee ._eafb ._cbbg =true ;_fdee ._ggaf ._edab =min };func (_ea *ImageControl )readPropMask (_ggga *_ac .Reader )error {var _cfc uint32 ;if _abac :=_ee .Read (_ggga ,_ee .LittleEndian ,&_cfc );_abac !=nil {return _abac ;};_ea ._dgc =&imagePropMask {};_cfc >>=2;_ea ._dgc ._ecf ,_cfc =_ac .PopRightUI32 (_cfc );_ea ._dgc ._gbb ,_cfc =_ac .PopRightUI32 (_cfc );_ea ._dgc ._cca ,_cfc =_ac .PopRightUI32 (_cfc );_ea ._dgc ._gegd ,_cfc =_ac .PopRightUI32 (_cfc );_ea ._dgc ._bbee ,_cfc =_ac .PopRightUI32 (_cfc );_ea ._dgc ._gdff ,_cfc =_ac .PopRightUI32 (_cfc );_ea ._dgc ._aefb ,_cfc =_ac .PopRightUI32 (_cfc );_ea ._dgc ._bgg ,_cfc =_ac .PopRightUI32 (_cfc );_ea ._dgc ._ddc ,_cfc =_ac .PopRightUI32 (_cfc );_ea ._dgc ._fdb ,_cfc =_ac .PopRightUI32 (_cfc );_ea ._dgc ._bdfb ,_cfc =_ac .PopRightUI32 (_cfc );_ea ._dgc ._dgcb ,_cfc =_ac .PopRightUI32 (_cfc );_ea ._dgc ._baa ,_cfc =_ac .PopRightUI32 (_cfc );return nil ;};type labelExtraDataBlock struct{_geb uint32 ;_gfcc uint32 ;_aacb string ;};

// LabelControl is a representation of a label ActiveX form.
type LabelControl struct{controlBase ;_gefe *labelPropMask ;_daf *labelDataBlock ;_fgcca *labelExtraDataBlock ;_gffa *streamData ;};const (FmPictureSizeModeClip FmPictureSizeMode =iota ;FmPictureSizeModeStretch ;_ ;FmPictureSizeModeZoom ;);func (_aad *controlBase )readTheRest (_eee *_ac .Reader )error {_bef :=_c .NewBuffer ([]byte {});_ ,_eebg :=_e .Copy (_bef ,_eee );if _eebg !=nil {return _eebg ;};_aad ._geaa =_bef .Bytes ();return nil ;};func (_ecfg *SpinButtonControl )readDataBlock (_ccae *_ac .Reader )error {_ecfg ._dbed =&spinButtonDataBlock {};if _ecfg ._efga ._gfae {if _ccfd :=_ccae .ReadProperty (&_ecfg ._dbed ._ddaag );_ccfd !=nil {return _ccfd ;};};if _ecfg ._efga ._cgbe {if _gcag :=_ccae .ReadProperty (&_ecfg ._dbed ._dfgd );_gcag !=nil {return _gcag ;};};if _ecfg ._efga ._dcbd {if _gadc :=_ccae .ReadProperty (&_ecfg ._dbed ._efgb );_gadc !=nil {return _gadc ;};};if _ecfg ._efga ._bedb {if _fddf :=_ccae .ReadProperty (&_ecfg ._dbed ._bfbf );_fddf !=nil {return _fddf ;};};if _ecfg ._efga ._afgfe {if _ccgb :=_ccae .ReadProperty (&_ecfg ._dbed ._eaec );_ccgb !=nil {return _ccgb ;};};if _ecfg ._efga ._egad {if _beae :=_ccae .ReadProperty (&_ecfg ._dbed ._gfdb );_beae !=nil {return _beae ;};};if _ecfg ._efga ._abb {if _dgf :=_ccae .ReadProperty (&_ecfg ._dbed ._aebef );_dgf !=nil {return _dgf ;};};if _ecfg ._efga ._gebc {if _abacg :=_ccae .ReadProperty (&_ecfg ._dbed ._ecaf );_abacg !=nil {return _abacg ;};};if _ecfg ._efga ._dcgg {if _gfgab :=_ccae .ReadProperty (&_ecfg ._dbed ._cfebg );_gfgab !=nil {return _gfgab ;};};if _ecfg ._efga ._ebgcg {if _fdafd :=_ccae .ReadProperty (&_ecfg ._dbed ._dgdf );_fdafd !=nil {return _fdafd ;};};if _ecfg ._efga ._aeba {if _gage :=_ccae .ReadProperty (&_ecfg ._dbed ._eegca );_gage !=nil {return _gage ;};};if _ecfg ._efga ._edcb {if _egda :=_ccae .ReadProperty (&_ecfg ._dbed ._bff );_egda !=nil {return _egda ;};};if _ecfg ._efga ._gbae {if _acdg :=_ccae .ReadProperty (&_ecfg ._dbed ._bdcg );_acdg !=nil {return _acdg ;};};return nil ;};

// SetHeight sets height of the SpinButton in HIMETRIC (0.01mm)
func (_ggfd *SpinButtonControl )SetHeight (height uint32 ){_ggfd ._efga ._ecccb =true ;_ggfd ._eabb ._efeb =height ;};

// GetMin gets a button min value.
func (_aade *ScrollBarControl )GetMin ()int32 {return _aade ._ggaf ._edab };

// SetCaption sets a caption string for a commandButton control.
func (_abab *CommandButtonControl )SetCaption (caption string ){_abab ._ggg ._eegc =true ;_abab ._adf ._dfa =uint32 (len (caption ));_abab ._adbb ._fae =caption ;};func _dgbe (_agc *_ac .Reader )(*SpinButtonControl ,error ){_bbc :=&SpinButtonControl {};if _faba :=_bbc .readPropMask (_agc );_faba !=nil {return nil ,_faba ;};if _fba :=_bbc .readDataBlock (_agc );_fba !=nil {return nil ,_fba ;};if _ddb :=_bbc .readExtraDataBlock (_agc );_ddb !=nil {return nil ,_ddb ;};if _ccaa :=_bbc .readStreamDataM (_agc ,_bbc ._efga ._edcb );_ccaa !=nil {return nil ,_ccaa ;};if _cfec :=_bbc .readTheRest (_agc );_cfec !=nil {return nil ,_cfec ;};return _bbc ,nil ;};func (_bfde *morphDataControl )export (_cfbd *_ac .Writer )error {if _becc :=_bfde .writePropMask (_cfbd );_becc !=nil {return _becc ;};if _fea :=_bfde .writeDataBlock (_cfbd );_fea !=nil {return _fea ;};if _ceg :=_bfde .writeExtraDataBlock (_cfbd );_ceg !=nil {return _ceg ;};_bfde ._dff =uint16 (_cfbd .Len ()-4);if _ccb :=_bfde .writeStreamDataMP (_cfbd );_ccb !=nil {return _ccb ;};return _bfde .writeTheRest (_cfbd );};func (_cccf *morphDataControl )writeColumnInfoPropMask (_aead *_ac .Writer )error {return nil };const _gbc =3;