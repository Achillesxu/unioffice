//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

// Package diskstore implements tempStorage interface
// by using disk as a storage
package diskstore ;import (_c "github.com/unidoc/unioffice/common/tempstorage";_g "io/ioutil";_gd "os";_ga "strings";);type diskStorage struct{};

// RemoveAll removes all files in the directory
func (_d diskStorage )RemoveAll (dir string )error {if _ga .HasPrefix (dir ,_gd .TempDir ()){return _gd .RemoveAll (dir );};return nil ;};

// TempFile creates a new temp directory by calling ioutil TempDir
func (_cc diskStorage )TempDir (pattern string )(string ,error ){return _g .TempDir ("",pattern )};

// Add is not applicable in the diskstore implementation
func (_be diskStorage )Add (path string )error {return nil };

// Open opens file from disk according to a path
func (_ag diskStorage )Open (path string )(_c .File ,error ){return _gd .OpenFile (path ,_gd .O_RDWR ,0644);};

// TempFile creates a new temp file by calling ioutil TempFile
func (_b diskStorage )TempFile (dir ,pattern string )(_c .File ,error ){return _g .TempFile (dir ,pattern );};

// SetAsStorage sets temp storage as a disk storage
func SetAsStorage (){_a :=diskStorage {};_c .SetAsStorage (&_a )};