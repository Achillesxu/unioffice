//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

// Package diskstore implements tempStorage interface
// by using disk as a storage
package diskstore ;import (_e "github.com/unidoc/unioffice/common/tempstorage";_c "io/ioutil";_g "os";_df "strings";);

// SetAsStorage sets temp storage as a disk storage
func SetAsStorage (){_gc :=diskStorage {};_e .SetAsStorage (&_gc )};

// TempFile creates a new temp file by calling ioutil TempFile
func (_cd diskStorage )TempFile (dir ,pattern string )(_e .File ,error ){return _c .TempFile (dir ,pattern );};

// TempFile creates a new temp directory by calling ioutil TempDir
func (_ac diskStorage )TempDir (pattern string )(string ,error ){return _c .TempDir ("",pattern )};

// Add is not applicable in the diskstore implementation
func (_b diskStorage )Add (path string )error {return nil };

// Open opens file from disk according to a path
func (_a diskStorage )Open (path string )(_e .File ,error ){return _g .OpenFile (path ,_g .O_RDWR ,0644)};

// RemoveAll removes all files in the directory
func (_gcf diskStorage )RemoveAll (dir string )error {if _df .HasPrefix (dir ,_g .TempDir ()){return _g .RemoveAll (dir );};return nil ;};type diskStorage struct{};