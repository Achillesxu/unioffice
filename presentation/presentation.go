//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package presentation ;import (_cf "archive/zip";_ff "bytes";_fb "encoding/xml";_d "errors";_cdg "fmt";_ce "github.com/unidoc/unioffice";_gd "github.com/unidoc/unioffice/common";_a "github.com/unidoc/unioffice/common/license";_bb "github.com/unidoc/unioffice/common/tempstorage";_f "github.com/unidoc/unioffice/drawing";_cg "github.com/unidoc/unioffice/measurement";_ffg "github.com/unidoc/unioffice/schema/soo/dml";_cfb "github.com/unidoc/unioffice/schema/soo/dml/chart";_e "github.com/unidoc/unioffice/schema/soo/ofc/sharedTypes";_gac "github.com/unidoc/unioffice/schema/soo/pkg/relationships";_cac "github.com/unidoc/unioffice/schema/soo/pml";_g "github.com/unidoc/unioffice/zippkg";_bd "image";_fef "image/jpeg";_cd "io";_fc "log";_ga "os";_fe "path";_ca "strconv";_c "strings";);

// SlideMaster is the slide master for a presentation.
type SlideMaster struct{_adag *Presentation ;_fgbc _gd .Relationships ;_bffd *_cac .SldMaster ;};

// AddSlide adds a new slide to the presentation.
func (_fbd *Presentation )AddSlide ()Slide {_cfbd :=_cac .NewCT_SlideIdListEntry ();_cfbd .IdAttr =_fbd .nextSlideID ();_fbd ._ae .SldIdLst .SldId =append (_fbd ._ae .SldIdLst .SldId ,_cfbd );_aed :=_cac .NewSld ();_aed .CSld .SpTree .NvGrpSpPr .CNvPr .IdAttr =1;_aed .CSld .SpTree .GrpSpPr .Xfrm =_ffg .NewCT_GroupTransform2D ();_aed .CSld .SpTree .GrpSpPr .Xfrm .Off =_ffg .NewCT_Point2D ();_aed .CSld .SpTree .GrpSpPr .Xfrm .Off .XAttr .ST_CoordinateUnqualified =_ce .Int64 (0);_aed .CSld .SpTree .GrpSpPr .Xfrm .Off .YAttr .ST_CoordinateUnqualified =_ce .Int64 (0);_aed .CSld .SpTree .GrpSpPr .Xfrm .Ext =_ffg .NewCT_PositiveSize2D ();_aed .CSld .SpTree .GrpSpPr .Xfrm .Ext .CxAttr =int64 (0*_cg .Point );_aed .CSld .SpTree .GrpSpPr .Xfrm .Ext .CyAttr =int64 (0*_cg .Point );_aed .CSld .SpTree .GrpSpPr .Xfrm .ChOff =_aed .CSld .SpTree .GrpSpPr .Xfrm .Off ;_aed .CSld .SpTree .GrpSpPr .Xfrm .ChExt =_aed .CSld .SpTree .GrpSpPr .Xfrm .Ext ;_fbd ._cab =append (_fbd ._cab ,_aed );_caba :=_fbd ._ag .AddAutoRelationship (_ce .DocTypePresentation ,_ce .OfficeDocumentType ,len (_fbd ._cab ),_ce .SlideType );_cfbd .RIdAttr =_caba .ID ();_ceg :=_ce .AbsoluteFilename (_ce .DocTypePresentation ,_ce .SlideType ,len (_fbd ._cab ));_fbd .ContentTypes .AddOverride (_ceg ,_ce .SlideContentType );_accb :=_gd .NewRelationships ();_fbd ._bdb =append (_fbd ._bdb ,_accb );_accb .AddAutoRelationship (_ce .DocTypePresentation ,_ce .SlideType ,len (_fbd ._ced ),_ce .SlideLayoutType );return Slide {_cfbd ,_aed ,_fbd };};

// AddParagraph adds a new paragraph to a placeholder.
func (_gaa PlaceHolder )AddParagraph ()_f .Paragraph {_cdb :=_f .MakeParagraph (_ffg .NewCT_TextParagraph ());_gaa ._fea .TxBody .P =append (_gaa ._fea .TxBody .P ,_cdb .X ());return _cdb ;};

// PlaceHolder is a place holder from a slide.
type PlaceHolder struct{_fea *_cac .CT_Shape ;_ef *_cac .Sld ;};

// OpenTemplate opens a template file.
func OpenTemplate (fn string )(*Presentation ,error ){_gc ,_gag :=Open (fn );if _gag !=nil {return nil ,_gag ;};return _gc ,nil ;};

// PlaceHolders returns all of the content place holders within a given slide.
func (_def Slide )PlaceHolders ()[]PlaceHolder {_adf :=[]PlaceHolder {};for _ ,_cfdc :=range _def ._edca .CSld .SpTree .Choice {for _ ,_fcag :=range _cfdc .Sp {if _fcag .NvSpPr !=nil &&_fcag .NvSpPr .NvPr !=nil &&_fcag .NvSpPr .NvPr .Ph !=nil {_adf =append (_adf ,PlaceHolder {_fcag ,_def ._edca });};};};return _adf ;};func _cdaf (_eda []*_cac .CT_GroupShapeChoice )[]*_cac .CT_GroupShapeChoice {var _gfd []*_cac .CT_GroupShapeChoice ;for _ ,_faa :=range _eda {if len (_faa .Pic )==0{_gfd =append (_gfd ,_faa );};};return _gfd ;};

// AddParagraph adds a paragraph to the text box
func (_fcab TextBox )AddParagraph ()_f .Paragraph {_afg :=_ffg .NewCT_TextParagraph ();_fcab ._gcdb .TxBody .P =append (_fcab ._gcdb .TxBody .P ,_afg );return _f .MakeParagraph (_afg );};

// ShowCommentsAttr returns the WebPr property.
func (_fbgg ViewProperties )ShowCommentsAttr ()*bool {return _fbgg ._abga .ShowCommentsAttr };

// X returns the inner wrapped XML type.
func (_dgaa ViewProperties )X ()*_cac .ViewPr {return _dgaa ._abga };

// SaveAsTemplate writes the presentation out to a writer in the Zip package format as a template
func (_cddb *Presentation )SaveAsTemplate (w _cd .Writer )error {return _cddb .save (w ,true )};

// LastViewAttr returns the LastViewAttr property.
func (_gacd ViewProperties )LastViewAttr ()_cac .ST_ViewType {return _gacd ._abga .LastViewAttr };

// Name returns the name of the slide layout.
func (_bce SlideLayout )Name ()string {if _bce ._ffgfe .CSld !=nil &&_bce ._ffgfe .CSld .NameAttr !=nil {return *_bce ._ffgfe .CSld .NameAttr ;};return "";};

// Type returns the placeholder type
func (_eb PlaceHolder )Type ()_cac .ST_PlaceholderType {return _eb ._fea .NvSpPr .NvPr .Ph .TypeAttr };

// Properties returns the properties of the TextBox.
func (_fg Image )Properties ()_f .ShapeProperties {if _fg ._ac .SpPr ==nil {_fg ._ac .SpPr =_ffg .NewCT_ShapeProperties ();};return _f .MakeShapeProperties (_fg ._ac .SpPr );};

// SlideLayouts returns the slide layouts defined in the presentation.
func (_ebf *Presentation )SlideLayouts ()[]SlideLayout {_ebae :=[]SlideLayout {};for _ ,_gdaa :=range _ebf ._ced {_ebae =append (_ebae ,SlideLayout {_gdaa });};return _ebae ;};

// AddTextBox adds an empty textbox to a slide.
func (_gae Slide )AddTextBox ()TextBox {_ffaa :=_cac .NewCT_GroupShapeChoice ();_gae ._edca .CSld .SpTree .Choice =append (_gae ._edca .CSld .SpTree .Choice ,_ffaa );_ggb :=_cac .NewCT_Shape ();_ffaa .Sp =append (_ffaa .Sp ,_ggb );_ggb .SpPr =_ffg .NewCT_ShapeProperties ();_ggb .SpPr .Xfrm =_ffg .NewCT_Transform2D ();_ggb .SpPr .PrstGeom =_ffg .NewCT_PresetGeometry2D ();_ggb .SpPr .PrstGeom .PrstAttr =_ffg .ST_ShapeTypeRect ;_ggb .NvSpPr =_cac .NewCT_ShapeNonVisual ();_ggb .NvSpPr .CNvSpPr =_ffg .NewCT_NonVisualDrawingShapeProps ();_bffg :=true ;_ggb .NvSpPr .CNvSpPr .TxBoxAttr =&_bffg ;_ggb .TxBody =_ffg .NewCT_TextBody ();_ggb .TxBody .BodyPr =_ffg .NewCT_TextBodyProperties ();_ggb .TxBody .BodyPr .WrapAttr =_ffg .ST_TextWrappingTypeSquare ;_ggb .TxBody .BodyPr .SpAutoFit =_ffg .NewCT_TextShapeAutofit ();_egf :=TextBox {_ggb };_egf .Properties ().SetWidth (3*_cg .Inch );_egf .Properties ().SetHeight (1*_cg .Inch );_egf .Properties ().SetPosition (0,0);return _egf ;};

// SetTextAnchor controls the text anchoring
func (_fage TextBox )SetTextAnchor (a _ffg .ST_TextAnchoringType ){_fage ._gcdb .TxBody .BodyPr =_ffg .NewCT_TextBodyProperties ();_fage ._gcdb .TxBody .BodyPr .AnchorAttr =a ;};

// ClrMru returns the ClrMru property.
func (_de PresentationProperties )ClrMru ()*_ffg .CT_ColorMRU {return _de ._abc .ClrMru };func (_aae *Presentation )save (_bca _cd .Writer ,_gdf bool )error {if _dbed :=_aae ._ae .Validate ();_dbed !=nil {_fc .Printf ("\u0076\u0061\u006c\u0069\u0064\u0061\u0074\u0069\u006f\u006e\u0020\u0065\u0072\u0072\u006fr\u0020i\u006e\u0020\u0064\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u003a\u0020\u0025\u0073",_dbed );};if !_a .GetLicenseKey ().IsLicensed ()&&!_baa {_cdg .Println ("\u0055\u006e\u006ci\u0063\u0065\u006e\u0073e\u0064\u0020\u0076\u0065\u0072\u0073\u0069o\u006e\u0020\u006f\u0066\u0020\u0055\u006e\u0069\u004f\u0066\u0066\u0069\u0063\u0065");_cdg .Println ("\u002d\u0020\u0047e\u0074\u0020\u0061\u0020\u0074\u0072\u0069\u0061\u006c\u0020\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0020\u006f\u006e\u0020\u0068\u0074\u0074\u0070\u0073\u003a\u002f\u002fu\u006e\u0069\u0064\u006f\u0063\u002e\u0069\u006f");return _d .New ("\u0075\u006e\u0069\u006f\u0066\u0066\u0069\u0063\u0065\u0020\u006ci\u0063\u0065\u006e\u0073\u0065\u0020\u0072\u0065\u0071\u0075i\u0072\u0065\u0064");};if _gdf {_aae .ContentTypes .RemoveOverride ("\u0061\u0070\u0070\u006c\u0069\u0063\u0061t\u0069\u006f\u006e\u002f\u0076\u006e\u0064\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002d\u006ff\u0066\u0069\u0063\u0065\u0064\u006f\u0063\u0075\u006de\u006e\u0074\u002e\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002e\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u002e\u006d\u0061\u0069\u006e\u002b\u0078\u006d\u006c");_aae .ContentTypes .EnsureOverride ("/\u0070\u0070\u0074\u002fpr\u0065s\u0065\u006e\u0074\u0061\u0074i\u006f\u006e\u002e\u0078\u006d\u006c","\u0061\u0070pl\u0069\u0063\u0061\u0074\u0069\u006f\u006e\u002f\u0076\u006e\u0064\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066o\u0072\u006d\u0061\u0074s\u002d\u006f\u0066\u0066ic\u0065\u0064o\u0063u\u006d\u0065\u006e\u0074\u002e\u0070r\u0065\u0073\u0065n\u0074\u0061t\u0069\u006f\u006e\u006d\u006c\u002e\u0074\u0065\u006d\u0070\u006c\u0061\u0074\u0065.\u006d\u0061\u0069\u006e\u002b\u0078\u006d\u006c");}else {_aae .ContentTypes .RemoveOverride ("\u0061\u0070pl\u0069\u0063\u0061\u0074\u0069\u006f\u006e\u002f\u0076\u006e\u0064\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066o\u0072\u006d\u0061\u0074s\u002d\u006f\u0066\u0066ic\u0065\u0064o\u0063u\u006d\u0065\u006e\u0074\u002e\u0070r\u0065\u0073\u0065n\u0074\u0061t\u0069\u006f\u006e\u006d\u006c\u002e\u0074\u0065\u006d\u0070\u006c\u0061\u0074\u0065.\u006d\u0061\u0069\u006e\u002b\u0078\u006d\u006c");_aae .ContentTypes .EnsureOverride ("/\u0070\u0070\u0074\u002fpr\u0065s\u0065\u006e\u0074\u0061\u0074i\u006f\u006e\u002e\u0078\u006d\u006c","\u0061\u0070\u0070\u006c\u0069\u0063\u0061t\u0069\u006f\u006e\u002f\u0076\u006e\u0064\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002d\u006ff\u0066\u0069\u0063\u0065\u0064\u006f\u0063\u0075\u006de\u006e\u0074\u002e\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002e\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u002e\u006d\u0061\u0069\u006e\u002b\u0078\u006d\u006c");};_acg :=_ce .DocTypePresentation ;_bba :=_cf .NewWriter (_bca );defer _bba .Close ();if _efcc :=_g .MarshalXML (_bba ,_ce .BaseRelsFilename ,_aae .Rels .X ());_efcc !=nil {return _efcc ;};if _bffc :=_g .MarshalXMLByType (_bba ,_acg ,_ce .ExtendedPropertiesType ,_aae .AppProperties .X ());_bffc !=nil {return _bffc ;};if _cdgd :=_g .MarshalXMLByType (_bba ,_acg ,_ce .CorePropertiesType ,_aae .CoreProperties .X ());_cdgd !=nil {return _cdgd ;};if _cgfd :=_g .MarshalXMLByType (_bba ,_acg ,_ce .PresentationPropertiesType ,_aae ._dg .X ());_cgfd !=nil {return _cgfd ;};if _ded :=_g .MarshalXMLByType (_bba ,_acg ,_ce .ViewPropertiesType ,_aae ._ad .X ());_ded !=nil {return _ded ;};if _geb :=_g .MarshalXMLByType (_bba ,_acg ,_ce .TableStylesType ,_aae ._cea .X ());_geb !=nil {return _geb ;};if _aae .CustomProperties .X ()!=nil {if _gde :=_g .MarshalXMLByType (_bba ,_acg ,_ce .CustomPropertiesType ,_aae .CustomProperties .X ());_gde !=nil {return _gde ;};};if _aae .Thumbnail !=nil {_bbe ,_aff :=_bba .Create ("\u0064\u006f\u0063Pr\u006f\u0070\u0073\u002f\u0074\u0068\u0075\u006d\u0062\u006e\u0061\u0069\u006c\u002e\u006a\u0070\u0065\u0067");if _aff !=nil {return _aff ;};if _cgc :=_fef .Encode (_bbe ,_aae .Thumbnail ,nil );_cgc !=nil {return _cgc ;};};_gdae :=_ce .AbsoluteFilename (_acg ,_ce .OfficeDocumentType ,0);if _cdbf :=_g .MarshalXML (_bba ,_gdae ,_aae ._ae );_cdbf !=nil {return _cdbf ;};if _dga :=_g .MarshalXML (_bba ,_g .RelationsPathFor (_gdae ),_aae ._ag .X ());_dga !=nil {return _dga ;};for _ega ,_cgcb :=range _aae ._cab {_cdcg :=_ce .AbsoluteFilename (_ce .DocTypePresentation ,_ce .SlideType ,_ega +1);_g .MarshalXML (_bba ,_cdcg ,_cgcb );if !_aae ._bdb [_ega ].IsEmpty (){_feb :=_g .RelationsPathFor (_cdcg );_g .MarshalXML (_bba ,_feb ,_aae ._bdb [_ega ].X ());};};for _bcc ,_dd :=range _aae ._be {_ffag :=_ce .AbsoluteFilename (_ce .DocTypePresentation ,_ce .SlideMasterType ,_bcc +1);_g .MarshalXML (_bba ,_ffag ,_dd );if !_aae ._ffa [_bcc ].IsEmpty (){_egcf :=_g .RelationsPathFor (_ffag );_g .MarshalXML (_bba ,_egcf ,_aae ._ffa [_bcc ].X ());};};for _egb ,_bdd :=range _aae ._ced {_dcb :=_ce .AbsoluteFilename (_ce .DocTypePresentation ,_ce .SlideLayoutType ,_egb +1);_g .MarshalXML (_bba ,_dcb ,_bdd );if !_aae ._ge [_egb ].IsEmpty (){_bdg :=_g .RelationsPathFor (_dcb );_g .MarshalXML (_bba ,_bdg ,_aae ._ge [_egb ].X ());};};for _cga ,_dcg :=range _aae ._edc {_adg :=_ce .AbsoluteFilename (_ce .DocTypePresentation ,_ce .ThemeType ,_cga +1);_g .MarshalXML (_bba ,_adg ,_dcg );if !_aae ._df [_cga ].IsEmpty (){_dfc :=_g .RelationsPathFor (_adg );_g .MarshalXML (_bba ,_dfc ,_aae ._df [_cga ].X ());};};for _fbaf ,_ddg :=range _aae ._fca {_bdbg :=_ce .AbsoluteFilename (_acg ,_ce .ChartType ,_fbaf +1);_g .MarshalXML (_bba ,_bdbg ,_ddg );};for _egg ,_cdgdf :=range _aae ._cdc {_fdf :=_ce .AbsoluteFilename (_acg ,_ce .HandoutMasterType ,_egg +1);_g .MarshalXML (_bba ,_fdf ,_cdgdf );};for _dee ,_gea :=range _aae ._add {_gab :=_ce .AbsoluteFilename (_acg ,_ce .NotesMasterType ,_dee +1);_g .MarshalXML (_bba ,_gab ,_gea );};for _fdb ,_afe :=range _aae ._cff {_cag :=_ce .AbsoluteFilename (_acg ,_ce .CustomXMLType ,_fdb +1);_g .MarshalXML (_bba ,_cag ,_afe );};for _cgcd ,_cc :=range _aae .Images {if _dfcg :=_gd .AddImageToZip (_bba ,_cc ,_cgcd +1,_ce .DocTypePresentation );_dfcg !=nil {return _dfcg ;};};_aae .ContentTypes .EnsureDefault ("\u0070\u006e\u0067","\u0069m\u0061\u0067\u0065\u002f\u0070\u006eg");_aae .ContentTypes .EnsureDefault ("\u006a\u0070\u0065\u0067","\u0069\u006d\u0061\u0067\u0065\u002f\u006a\u0070\u0065\u0067");_aae .ContentTypes .EnsureDefault ("\u006a\u0070\u0067","\u0069\u006d\u0061\u0067\u0065\u002f\u006a\u0070\u0065\u0067");_aae .ContentTypes .EnsureDefault ("\u0077\u006d\u0066","i\u006d\u0061\u0067\u0065\u002f\u0078\u002d\u0077\u006d\u0066");if _bec :=_g .MarshalXML (_bba ,_ce .ContentTypesFilename ,_aae .ContentTypes .X ());_bec !=nil {return _bec ;};if _gec :=_aae .WriteExtraFiles (_bba );_gec !=nil {return _gec ;};return nil ;};

// X returns the inner wrapped XML type.
func (_dfde SlideLayout )X ()*_cac .SldLayout {return _dfde ._ffgfe };var _baa =false ;

// NewViewProperties constructs a new ViewProperties.
func NewViewProperties ()ViewProperties {return ViewProperties {_abga :_cac .NewViewPr ()}};

// SorterViewPr returns the SorterViewPr property.
func (_bfd ViewProperties )SorterViewPr ()*_cac .CT_SlideSorterViewProperties {return _bfd ._abga .SorterViewPr ;};

// X returns TextBox's underlying *pml.CT_Shape.
func (_fagf TextBox )X ()*_cac .CT_Shape {return _fagf ._gcdb };

// GetImageByRelID returns an ImageRef with the associated relation ID in the
// document.
func (_fbgd *Presentation )GetImageByRelID (relID string )(_gd .ImageRef ,bool ){for _ ,_ebbg :=range _fbgd .Images {if _ebbg .RelID ()==relID {return _ebbg ,true ;};};return _gd .ImageRef {},false ;};

// SlideViewPr returns the SlideViewPr property.
func (_dec ViewProperties )SlideViewPr ()*_cac .CT_SlideViewProperties {return _dec ._abga .SlideViewPr };

// SaveToFile writes the Presentation out to a file.
func (_gacg *Presentation )SaveToFile (path string )error {return _gacg .saveToFile (path ,false )};

// AddImage adds an image to the document package, returning a reference that
// can be used to add the image to a run and place it in the document contents.
func (_abg *Presentation )AddImage (i _gd .Image )(_gd .ImageRef ,error ){_bcb :=_gd .MakeImageRef (i ,&_abg .DocBase ,_abg ._ag );if i .Data ==nil &&i .Path ==""{return _bcb ,_d .New ("\u0069\u006d\u0061\u0067\u0065\u0020\u006d\u0075\u0073\u0074 \u0068\u0061\u0076\u0065\u0020\u0064\u0061t\u0061\u0020\u006f\u0072\u0020\u0061\u0020\u0070\u0061\u0074\u0068");};if i .Format ==""{return _bcb ,_d .New ("\u0069\u006d\u0061\u0067\u0065\u0020\u006d\u0075\u0073\u0074 \u0068\u0061\u0076\u0065\u0020\u0061\u0020v\u0061\u006c\u0069\u0064\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};if i .Size .X ==0||i .Size .Y ==0{return _bcb ,_d .New ("\u0069\u006d\u0061\u0067e\u0020\u006d\u0075\u0073\u0074\u0020\u0068\u0061\u0076\u0065 \u0061 \u0076\u0061\u006c\u0069\u0064\u0020\u0073i\u007a\u0065");};if i .Path !=""{_gegb :=_bb .Add (i .Path );if _gegb !=nil {return _bcb ,_gegb ;};};_abg .Images =append (_abg .Images ,_bcb );_abg .ContentTypes .EnsureDefault ("\u0070\u006e\u0067","\u0069m\u0061\u0067\u0065\u002f\u0070\u006eg");_abg .ContentTypes .EnsureDefault ("\u006a\u0070\u0065\u0067","\u0069\u006d\u0061\u0067\u0065\u002f\u006a\u0070\u0065\u0067");_abg .ContentTypes .EnsureDefault ("\u006a\u0070\u0067","\u0069\u006d\u0061\u0067\u0065\u002f\u006a\u0070\u0065\u0067");_abg .ContentTypes .EnsureDefault ("\u0077\u006d\u0066","i\u006d\u0061\u0067\u0065\u002f\u0078\u002d\u0077\u006d\u0066");_abg .ContentTypes .EnsureDefault (i .Format ,"\u0069\u006d\u0061\u0067\u0065\u002f"+i .Format );return _bcb ,nil ;};

// GetLayoutByName retrieves a slide layout given a layout name.
func (_ffd *Presentation )GetLayoutByName (name string )(SlideLayout ,error ){for _ ,_gef :=range _ffd ._ced {if _gef .CSld .NameAttr !=nil &&name ==*_gef .CSld .NameAttr {return SlideLayout {_gef },nil ;};};return SlideLayout {},_d .New ("\u0075\u006eab\u006c\u0065\u0020t\u006f\u0020\u0066\u0069nd \u006cay\u006f\u0075\u0074\u0020\u0077\u0069\u0074h \u0074\u0068\u0061\u0074\u0020\u006e\u0061m\u0065");};

// Save writes the presentation out to a writer in the Zip package format
func (_ged *Presentation )Save (w _cd .Writer )error {return _ged .save (w ,false )};

// Remove removes a placeholder from a presentation.
func (_ebc PlaceHolder )Remove ()error {for _fa ,_ab :=range _ebc ._ef .CSld .SpTree .Choice {for _ ,_fdg :=range _ab .Sp {if _fdg ==_ebc ._fea {copy (_ebc ._ef .CSld .SpTree .Choice [_fa :],_ebc ._ef .CSld .SpTree .Choice [_fa +1:]);_ebc ._ef .CSld .SpTree .Choice =_ebc ._ef .CSld .SpTree .Choice [0:len (_ebc ._ef .CSld .SpTree .Choice )-1];return nil ;};};};return _d .New ("\u0070\u006c\u0061\u0063\u0065\u0068\u006f\u006c\u0064\u0065r\u0020\u006e\u006f\u0074\u0020\u0066\u006fu\u006e\u0064\u0020\u0069\u006e\u0020\u0073\u006c\u0069\u0064\u0065");};

// AddImage adds an image textbox to a slide.
func (_dcgd Slide )AddImage (img _gd .ImageRef )Image {_bcaa :=_cac .NewCT_GroupShapeChoice ();_dcgd ._edca .CSld .SpTree .Choice =append (_dcgd ._edca .CSld .SpTree .Choice ,_bcaa );_fecb :=_cac .NewCT_Picture ();_bcaa .Pic =append (_bcaa .Pic ,_fecb );_fecb .NvPicPr .CNvPicPr =_ffg .NewCT_NonVisualPictureProperties ();_fecb .NvPicPr .CNvPicPr .PicLocks =_ffg .NewCT_PictureLocking ();_fecb .NvPicPr .CNvPicPr .PicLocks .NoChangeAspectAttr =_ce .Bool (true );_fecb .BlipFill =_ffg .NewCT_BlipFillProperties ();_fecb .BlipFill .Blip =_ffg .NewCT_Blip ();_dbg :=_dcgd .AddImageToRels (img );_fecb .BlipFill .Blip .EmbedAttr =_ce .String (_dbg );_fecb .BlipFill .Stretch =_ffg .NewCT_StretchInfoProperties ();_fecb .BlipFill .Stretch .FillRect =_ffg .NewCT_RelativeRect ();_fecb .SpPr =_ffg .NewCT_ShapeProperties ();_fecb .SpPr .PrstGeom =_ffg .NewCT_PresetGeometry2D ();_fecb .SpPr .PrstGeom .PrstAttr =_ffg .ST_ShapeTypeRect ;_cdgdc :=Image {_fecb };_bacc :=img .Size ();_cdgdc .Properties ().SetWidth (_cg .Distance (_bacc .X )*_cg .Pixel72 );_cdgdc .Properties ().SetHeight (_cg .Distance (_bacc .Y )*_cg .Pixel72 );_cdgdc .Properties ().SetPosition (0,0);return _cdgdc ;};

// SlideLayouts returns a slice of all layouts in SlideMaster.
func (_cef SlideMaster )SlideLayouts ()[]SlideLayout {_edfe :=map[string ]int {};_agae :=[]SlideLayout {};for _ ,_edb :=range _cef ._fgbc .Relationships (){_eec :=_c .Replace (_edb .Target (),".\u002e\u002f\u0073\u006c\u0069\u0064e\u004c\u0061\u0079\u006f\u0075\u0074\u0073\u002f\u0073l\u0069\u0064\u0065L\u0061y\u006f\u0075\u0074","",-1);_eec =_c .Replace (_eec ,"\u002e\u0078\u006d\u006c","",-1);if _gfdc ,_afa :=_ca .ParseInt (_eec ,10,32);_afa ==nil {_edfe [_edb .ID ()]=int (_gfdc );};};for _ ,_deb :=range _cef ._bffd .SldLayoutIdLst .SldLayoutId {if _acf ,_cfde :=_edfe [_deb .RIdAttr ];_cfde {_ece :=_cef ._adag ._ced [_acf -1];_agae =append (_agae ,SlideLayout {_ece });};};return _agae ;};func (_cbd *Presentation )onNewRelationship (_bac *_g .DecodeMap ,_ffgf ,_bdbd string ,_fbca []*_cf .File ,_cfdb *_gac .Relationship ,_agfc _g .Target )error {_efd :=_ce .DocTypePresentation ;switch _bdbd {case _ce .OfficeDocumentType :_cbd ._ae =_cac .NewPresentation ();_bac .AddTarget (_ffgf ,_cbd ._ae ,_bdbd ,0);_bac .AddTarget (_g .RelationsPathFor (_ffgf ),_cbd ._ag .X (),_bdbd ,0);_cfdb .TargetAttr =_ce .RelativeFilename (_efd ,_agfc .Typ ,_bdbd ,0);case _ce .CorePropertiesType :_bac .AddTarget (_ffgf ,_cbd .CoreProperties .X (),_bdbd ,0);_cfdb .TargetAttr =_ce .RelativeFilename (_efd ,_agfc .Typ ,_bdbd ,0);case _ce .CustomPropertiesType :_bac .AddTarget (_ffgf ,_cbd .CustomProperties .X (),_bdbd ,0);_cfdb .TargetAttr =_ce .RelativeFilename (_efd ,_agfc .Typ ,_bdbd ,0);case _ce .PresentationPropertiesType :_bac .AddTarget (_ffgf ,_cbd ._dg .X (),_bdbd ,0);_cfdb .TargetAttr =_ce .RelativeFilename (_efd ,_agfc .Typ ,_bdbd ,0);case _ce .ViewPropertiesType :_bac .AddTarget (_ffgf ,_cbd ._ad .X (),_bdbd ,0);_cfdb .TargetAttr =_ce .RelativeFilename (_efd ,_agfc .Typ ,_bdbd ,0);case _ce .TableStylesType :_bac .AddTarget (_ffgf ,_cbd ._cea .X (),_bdbd ,0);_cfdb .TargetAttr =_ce .RelativeFilename (_efd ,_agfc .Typ ,_bdbd ,0);case _ce .HyperLinkType :_cfbf :=_ffg .NewCT_Hyperlink ();_dfgb :=uint32 (len (_cbd ._fcf ));_bac .AddTarget (_ffgf ,_cfbf ,_bdbd ,_dfgb );_cbd ._fcf =append (_cbd ._fcf ,_cfbf );case _ce .CustomXMLType :_afc :=&_ce .XSDAny {};_ege :=uint32 (len (_cbd ._cff ));_bac .AddTarget (_ffgf ,_afc ,_bdbd ,_ege );_cbd ._cff =append (_cbd ._cff ,_afc );_cfdb .TargetAttr =_ce .RelativeFilename (_efd ,_agfc .Typ ,_bdbd ,len (_cbd ._cff ));case _ce .ChartType :_gbf :=_cfb .NewChartSpace ();_aec :=uint32 (len (_cbd ._fca ));_bac .AddTarget (_ffgf ,_gbf ,_bdbd ,_aec );_cbd ._fca =append (_cbd ._fca ,_gbf );_cfdb .TargetAttr =_ce .RelativeFilename (_efd ,_agfc .Typ ,_bdbd ,len (_cbd ._fca ));case _ce .HandoutMasterType :_edg :=_cac .NewHandoutMaster ();_aga :=uint32 (len (_cbd ._cdc ));_bac .AddTarget (_ffgf ,_edg ,_bdbd ,_aga );_cbd ._cdc =append (_cbd ._cdc ,_edg );_cfdb .TargetAttr =_ce .RelativeFilename (_efd ,_agfc .Typ ,_bdbd ,len (_cbd ._cdc ));case _ce .NotesMasterType :_gge :=_cac .NewNotesMaster ();_caa :=uint32 (len (_cbd ._add ));_bac .AddTarget (_ffgf ,_gge ,_bdbd ,_caa );_cbd ._add =append (_cbd ._add ,_gge );_cfdb .TargetAttr =_ce .RelativeFilename (_efd ,_agfc .Typ ,_bdbd ,len (_cbd ._add ));case _ce .ExtendedPropertiesType :_bac .AddTarget (_ffgf ,_cbd .AppProperties .X (),_bdbd ,0);_cfdb .TargetAttr =_ce .RelativeFilename (_efd ,_agfc .Typ ,_bdbd ,0);case _ce .SlideType :_gee :=_cac .NewSld ();_cbd ._cab =append (_cbd ._cab ,_gee );_bac .AddTarget (_ffgf ,_gee ,_bdbd ,uint32 (len (_cbd ._cab )));_cfdb .TargetAttr =_ce .RelativeFilename (_efd ,_agfc .Typ ,_bdbd ,len (_cbd ._cab ));_cbg :=_gd .NewRelationships ();_bac .AddTarget (_g .RelationsPathFor (_ffgf ),_cbg .X (),_bdbd ,0);_cbd ._bdb =append (_cbd ._bdb ,_cbg );case _ce .SlideMasterType :_gece :=_cac .NewSldMaster ();if !_bac .AddTarget (_ffgf ,_gece ,_bdbd ,uint32 (len (_cbd ._be )+1)){return nil ;};_cbd ._be =append (_cbd ._be ,_gece );_cfdb .TargetAttr =_ce .RelativeFilename (_efd ,_agfc .Typ ,_bdbd ,len (_cbd ._be ));_fgb :=_gd .NewRelationships ();_bac .AddTarget (_g .RelationsPathFor (_ffgf ),_fgb .X (),_bdbd ,0);_cbd ._ffa =append (_cbd ._ffa ,_fgb );case _ce .SlideLayoutType :_feg :=_cac .NewSldLayout ();if !_bac .AddTarget (_ffgf ,_feg ,_bdbd ,uint32 (len (_cbd ._ced )+1)){return nil ;};_cbd ._ced =append (_cbd ._ced ,_feg );_cfdb .TargetAttr =_ce .RelativeFilename (_efd ,_agfc .Typ ,_bdbd ,len (_cbd ._ced ));_cgfa :=_gd .NewRelationships ();_bac .AddTarget (_g .RelationsPathFor (_ffgf ),_cgfa .X (),_bdbd ,0);_cbd ._ge =append (_cbd ._ge ,_cgfa );case _ce .ThumbnailType :for _beg ,_eag :=range _fbca {if _eag ==nil {continue ;};if _eag .Name ==_ffgf {_daa ,_eab :=_eag .Open ();if _eab !=nil {return _cdg .Errorf ("e\u0072\u0072\u006f\u0072\u0020\u0072e\u0061\u0064\u0069\u006e\u0067\u0020\u0074\u0068\u0075m\u0062\u006e\u0061i\u006c:\u0020\u0025\u0073",_eab );};_cbd .Thumbnail ,_ ,_eab =_bd .Decode (_daa );_daa .Close ();if _eab !=nil {return _cdg .Errorf ("\u0065\u0072\u0072\u006fr\u0020\u0064\u0065\u0063\u006f\u0064\u0069\u006e\u0067\u0020t\u0068u\u006d\u0062\u006e\u0061\u0069\u006c\u003a \u0025\u0073",_eab );};_fbca [_beg ]=nil ;};};case _ce .ThemeType :_ee :=_ffg .NewTheme ();if !_bac .AddTarget (_ffgf ,_ee ,_bdbd ,uint32 (len (_cbd ._edc )+1)){return nil ;};_cbd ._edc =append (_cbd ._edc ,_ee );_cfdb .TargetAttr =_ce .RelativeFilename (_efd ,_agfc .Typ ,_bdbd ,len (_cbd ._edc ));_dcc :=_gd .NewRelationships ();_bac .AddTarget (_g .RelationsPathFor (_ffgf ),_dcc .X (),_bdbd ,0);_cbd ._df =append (_cbd ._df ,_dcc );case _ce .ImageType :_ffgf =_fe .Clean (_ffgf );if _ffc ,_ggg :=_cbd ._addg [_ffgf ];_ggg {_cfdb .TargetAttr =_ffc ;return nil ;};_fee :="";for _aab ,_ecb :=range _fbca {if _ecb ==nil {continue ;};if _ecb .Name ==_ffgf {_bfcg ,_eef :=_g .ExtractToDiskTmp (_ecb ,_cbd .TmpPath );if _eef !=nil {return _eef ;};_egeb ,_eef :=_gd .ImageFromStorage (_bfcg );if _eef !=nil {return _eef ;};_fee =_egeb .Format ;_dede :=_gd .MakeImageRef (_egeb ,&_cbd .DocBase ,_cbd ._ag );_cbd .Images =append (_cbd .Images ,_dede );_fbca [_aab ]=nil ;_bac .RecordIndex (_ffgf ,len (_cbd .Images ));break ;};};_aba :=_bac .IndexFor (_ffgf );_cfdb .TargetAttr =_ce .RelativeImageFilename (_efd ,_agfc .Typ ,_bdbd ,_aba ,_fee );_cbd ._addg [_ffgf ]=_cfdb .TargetAttr ;default:_ce .Log ("\u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0072\u0065\u006c\u0061\u0074\u0069\u006fn\u0073\u0068\u0069\u0070\u0020\u0074\u0079\u0070\u0065\u003a\u0020\u0025\u0073\u0020\u0074\u0067\u0074\u003a\u0020\u0025\u0073",_bdbd ,_ffgf );};return nil ;};func (_fbafd TextBox )getOff ()*_ffg .CT_Point2D {if _fbafd ._gcdb .SpPr ==nil {_fbafd ._gcdb .SpPr =_ffg .NewCT_ShapeProperties ();};if _fbafd ._gcdb .SpPr .Xfrm ==nil {_fbafd ._gcdb .SpPr .Xfrm =_ffg .NewCT_Transform2D ();};if _fbafd ._gcdb .SpPr .Xfrm .Off ==nil {_fbafd ._gcdb .SpPr .Xfrm .Off =_ffg .NewCT_Point2D ();};return _fbafd ._gcdb .SpPr .Xfrm .Off ;};

// AddTable adds an empty table to a slide.
func (_gbgf Slide )AddTable ()*_gd .Table {_gfdg :=_cac .NewCT_GroupShapeChoice ();_gbgf ._edca .CSld .SpTree .Choice =append (_gbgf ._edca .CSld .SpTree .Choice ,_gfdg );_ffe :=_cac .NewCT_GraphicalObjectFrame ();_gfdg .GraphicFrame =append (_gfdg .GraphicFrame ,_ffe );_ffe .Xfrm .Off =_ffg .NewCT_Point2D ();_bacf :=int64 (1);_ffe .Xfrm .Off .XAttr =_ffg .ST_Coordinate {ST_CoordinateUnqualified :&_bacf };_ffe .Xfrm .Off .YAttr =_ffg .ST_Coordinate {ST_CoordinateUnqualified :&_bacf };_ggecc :=_ffe .Graphic .CT_GraphicalObject .GraphicData ;_ggecc .UriAttr ="\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002eo\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073.\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006dl/\u0032\u0030\u0030\u0036\u002f\u0074\u0061\u0062\u006c\u0065";_dgb :=_gd .NewTableWithXfrm (_ffe .Xfrm );_ggecc .Any =append (_ggecc .Any ,_dgb .X ());return _dgb ;};

// WebPr returns the WebPr property.
func (_bc PresentationProperties )WebPr ()*_cac .CT_WebProperties {return _bc ._abc .WebPr };

// ExtLst returns the ExtLst property.
func (_da PresentationProperties )ExtLst ()*_cac .CT_ExtensionList {return _da ._abc .ExtLst };func _ffad ()*Presentation {_cfc :=&Presentation {_ae :_cac .NewPresentation ()};_cfc ._ae .SldIdLst =_cac .NewCT_SlideIdList ();_cfc ._ae .ConformanceAttr =_e .ST_ConformanceClassTransitional ;_cfc .AppProperties =_gd .NewAppProperties ();_cfc .CoreProperties =_gd .NewCoreProperties ();_cfc ._cea =_gd .NewTableStyles ();_cfc .ContentTypes =_gd .NewContentTypes ();_cfc .Rels =_gd .NewRelationships ();_cfc ._ag =_gd .NewRelationships ();_cfc ._dg =NewPresentationProperties ();_cfc ._ad =NewViewProperties ();_cfc ._addg =map[string ]string {};return _cfc ;};

// ViewProperties contains presentation specific properties.
type ViewProperties struct{_abga *_cac .ViewPr };

// AddImageToRels adds an image relationship to a slide without putting image on the slide.
func (_bbdb Slide )AddImageToRels (img _gd .ImageRef )string {_dde :=0;for _bbdba ,_ade :=range _bbdb ._dbbb .Images {if _ade ==img {_dde =_bbdba +1;break ;};};var _dfe string ;for _bbdbe ,_gcad :=range _bbdb ._dbbb .Slides (){if _gcad ._edca ==_bbdb ._edca {_gfde :=_cdg .Sprintf ("\u002e\u002e\u002f\u006ded\u0069\u0061\u002f\u0069\u006d\u0061\u0067\u0065\u0025\u0064\u002e\u0025\u0073",_dde ,img .Format ());_gba :=_bbdb ._dbbb ._bdb [_bbdbe ].AddRelationship (_gfde ,_ce .ImageType );_dfe =_gba .ID ();};};return _dfe ;};

// Image is an image within a slide.
type Image struct{_ac *_cac .CT_Picture };func (_bfc *Presentation )nextSlideID ()uint32 {_cb :=uint32 (256);for _ ,_cad :=range _bfc ._ae .SldIdLst .SldId {if _cad .IdAttr >=_cb {_cb =_cad .IdAttr +1;};};return _cb ;};

// X returns the inner wrapped XML type.
func (_agaf Slide )X ()*_cac .Sld {return _agaf ._edca };

// Slide represents a slide of a presentation.
type Slide struct{_gded *_cac .CT_SlideIdListEntry ;_edca *_cac .Sld ;_dbbb *Presentation ;};

// X returns the inner wrapped XML type.
func (_fcb *Presentation )X ()*_cac .Presentation {return _fcb ._ae };

// Clear clears the placeholder contents and adds a single empty paragraph.  The
// empty paragrah is required by PowerPoint or it will report the file as being
// invalid.
func (_af PlaceHolder )Clear (){_af .ClearAll ();_gg :=_ffg .NewCT_TextParagraph ();_af ._fea .TxBody .P =[]*_ffg .CT_TextParagraph {_gg };_gg .EndParaRPr =_ffg .NewCT_TextCharacterProperties ();_gg .EndParaRPr .LangAttr =_ce .String ("\u0065\u006e\u002dU\u0053");};

// HtmlPubPr returns the HtmlPubPr property.
func (_gb PresentationProperties )HtmlPubPr ()*_cac .CT_HtmlPublishProperties {return _gb ._abc .HtmlPubPr ;};

// X returns the inner wrapped XML type.
func (_cfa PresentationProperties )X ()*_cac .PresentationPr {return _cfa ._abc };

// Slides returns the slides in the presentation.
func (_afeb *Presentation )Slides ()[]Slide {_fcac :=[]Slide {};for _fgc ,_afbg :=range _afeb ._cab {_fcac =append (_fcac ,Slide {_afeb ._ae .SldIdLst .SldId [_fgc ],_afbg ,_afeb });};return _fcac ;};

// X returns the inner wrapped XML type.
func (_gedb SlideMaster )X ()*_cac .SldMaster {return _gedb ._bffd };

// ClearAll completely clears a placeholder. To be useable, at least one
// paragraph must be added after ClearAll via AddParagraph.
func (_eba PlaceHolder )ClearAll (){_eba ._fea .SpPr =_ffg .NewCT_ShapeProperties ();_eba ._fea .TxBody =_ffg .NewCT_TextBody ();_eba ._fea .TxBody .LstStyle =_ffg .NewCT_TextListStyle ();};

// Type returns the type of the slide layout.
func (_gcaf SlideLayout )Type ()_cac .ST_SlideLayoutType {return _gcaf ._ffgfe .TypeAttr };

// GetTextBoxes returns a list of all text boxes from a slide.
func (_bcd Slide )GetTextBoxes ()[]*TextBox {_dcfc :=[]*TextBox {};_deeg :=_bcd ._edca .CSld .SpTree .Choice ;for _ ,_bgg :=range _deeg {for _ ,_edf :=range _bgg .Sp {if _edf .NvSpPr .CNvSpPr .TxBoxAttr !=nil &&*_edf .NvSpPr .CNvSpPr .TxBoxAttr {_dcfc =append (_dcfc ,&TextBox {_edf });};};};return _dcfc ;};

// Index returns the placeholder index
func (_eg PlaceHolder )Index ()uint32 {if _eg ._fea .NvSpPr .NvPr .Ph .IdxAttr ==nil {return 0;};return *_eg ._fea .NvSpPr .NvPr .Ph .IdxAttr ;};

// Presentation is the a presentation base document.
type Presentation struct{_gd .DocBase ;_ae *_cac .Presentation ;_ag _gd .Relationships ;_cab []*_cac .Sld ;_bdb []_gd .Relationships ;_be []*_cac .SldMaster ;_ffa []_gd .Relationships ;_ced []*_cac .SldLayout ;_ge []_gd .Relationships ;_edc []*_ffg .Theme ;_df []_gd .Relationships ;_cea _gd .TableStyles ;_dg PresentationProperties ;_ad ViewProperties ;_fcf []*_ffg .CT_Hyperlink ;_fca []*_cfb .ChartSpace ;_cdc []*_cac .HandoutMaster ;_add []*_cac .NotesMaster ;_cff []*_ce .XSDAny ;_addg map[string ]string ;};

// SetText sets the text of a placeholder for the initial paragraph. This is a
// shortcut method that is useful for things like titles which only contain a
// single paragraph.
func (_efc PlaceHolder )SetText (text string ){_efc .Clear ();_bbd :=_ffg .NewEG_TextRun ();_bbd .R =_ffg .NewCT_RegularTextRun ();_bbd .R .T =text ;if len (_efc ._fea .TxBody .P )==0{_efc ._fea .TxBody .P =append (_efc ._fea .TxBody .P ,_ffg .NewCT_TextParagraph ());};_efc ._fea .TxBody .P [0].EG_TextRun =nil ;_efc ._fea .TxBody .P [0].EG_TextRun =append (_efc ._fea .TxBody .P [0].EG_TextRun ,_bbd );};

// TextBox is a text box within a slide.
type TextBox struct{_gcdb *_cac .CT_Shape };

// GetPlaceholderByIndex returns a placeholder given its index.  If there are multiplace
// placeholders of the same index, this method returns the first one.  You must use the
// PlaceHolders() method to access the others.
func (_gcc Slide )GetPlaceholderByIndex (idx uint32 )(PlaceHolder ,error ){for _ ,_bgc :=range _gcc ._edca .CSld .SpTree .Choice {for _ ,_ggc :=range _bgc .Sp {if _ggc .NvSpPr !=nil &&_ggc .NvSpPr .NvPr !=nil &&_ggc .NvSpPr .NvPr .Ph !=nil {if (idx ==0&&_ggc .NvSpPr .NvPr .Ph .IdxAttr ==nil )||(_ggc .NvSpPr .NvPr .Ph .IdxAttr !=nil &&*_ggc .NvSpPr .NvPr .Ph .IdxAttr ==idx ){return PlaceHolder {_ggc ,_gcc ._edca },nil ;};};};};return PlaceHolder {},_d .New ("\u0075\u006e\u0061\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0066i\u006e\u0064\u0020\u0070\u006c\u0061\u0063\u0065\u0068\u006fl\u0064\u0065\u0072");};

// Read reads a document from an io.Reader.
func Read (r _cd .ReaderAt ,size int64 )(*Presentation ,error ){_gfg :=_ffad ();_fae ,_efb :=_bb .TempDir ("\u0075\u006e\u0069\u006f\u0066\u0066\u0069\u0063\u0065-\u0070\u0070\u0074\u0078");if _efb !=nil {return nil ,_efb ;};_gfg .TmpPath =_fae ;_dae ,_efb :=_cf .NewReader (r ,size );if _efb !=nil {return nil ,_cdg .Errorf ("\u0070a\u0072s\u0069\u006e\u0067\u0020\u007a\u0069\u0070\u003a\u0020\u0025\u0073",_efb );};_ebag :=[]*_cf .File {};_ebag =append (_ebag ,_dae .File ...);_ecd :=false ;for _ ,_eaa :=range _ebag {if _eaa .FileHeader .Name =="\u0064\u006f\u0063\u0050ro\u0070\u0073\u002f\u0063\u0075\u0073\u0074\u006f\u006d\u002e\u0078\u006d\u006c"{_ecd =true ;break ;};};if _ecd {_gfg .CreateCustomProperties ();};_afcg :=_g .DecodeMap {};_afcg .SetOnNewRelationshipFunc (_gfg .onNewRelationship );_afcg .AddTarget (_ce .ContentTypesFilename ,_gfg .ContentTypes .X (),"",0);_afcg .AddTarget (_ce .BaseRelsFilename ,_gfg .Rels .X (),"",0);if _fad :=_afcg .Decode (_ebag );_fad !=nil {return nil ,_fad ;};for _ ,_fffe :=range _ebag {if _fffe ==nil {continue ;};if _gabg :=_gfg .AddExtraFileFromZip (_fffe );_gabg !=nil {return nil ,_gabg ;};};if _ecd {_bea :=false ;for _ ,_gbe :=range _gfg .Rels .X ().Relationship {if _gbe .TargetAttr =="\u0064\u006f\u0063\u0050ro\u0070\u0073\u002f\u0063\u0075\u0073\u0074\u006f\u006d\u002e\u0078\u006d\u006c"{_bea =true ;break ;};};if !_bea {_gfg .AddCustomRelationships ();};};return _gfg ,nil ;};

// NormalViewPr returns the NormalViewPr property.
func (_faeg ViewProperties )NormalViewPr ()*_cac .CT_NormalViewProperties {return _faeg ._abga .NormalViewPr ;};

// RemoveSlide removes a slide from a presentation.
func (_ggec *Presentation )RemoveSlide (s Slide )error {_bbdc :=false ;_gcd :=0;for _ecg ,_efaf :=range _ggec ._cab {if _efaf ==s ._edca {if _ggec ._ae .SldIdLst .SldId [_ecg ]!=s ._gded {return _d .New ("i\u006e\u0063\u006f\u006e\u0073\u0069s\u0074\u0065\u006e\u0063\u0079\u0020i\u006e\u0020\u0073\u006c\u0069\u0064\u0065s\u0020\u0061\u006e\u0064\u0020\u0049\u0044\u0020\u006c\u0069s\u0074");};copy (_ggec ._cab [_ecg :],_ggec ._cab [_ecg +1:]);_ggec ._cab =_ggec ._cab [0:len (_ggec ._cab )-1];copy (_ggec ._bdb [_ecg :],_ggec ._bdb [_ecg +1:]);_ggec ._bdb =_ggec ._bdb [0:len (_ggec ._bdb )-1];copy (_ggec ._ae .SldIdLst .SldId [_ecg :],_ggec ._ae .SldIdLst .SldId [_ecg +1:]);_ggec ._ae .SldIdLst .SldId =_ggec ._ae .SldIdLst .SldId [0:len (_ggec ._ae .SldIdLst .SldId )-1];_bbdc =true ;_gcd =_ecg ;};};if !_bbdc {return _d .New ("u\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0066i\u006e\u0064\u0020\u0073li\u0064\u0065");};_cee :=_ce .AbsoluteFilename (_ce .DocTypePresentation ,_ce .SlideType ,0);return _ggec .ContentTypes .RemoveOverrideByIndex (_cee ,_gcd );};

// SetOffsetX sets horizontal offset of text box in distance units (see measurement package).
func (_aaec TextBox )SetOffsetX (offX float64 ){_bdgb :=_aaec .getOff ();_gce :=_cg .ToEMU (offX );_bdgb .XAttr =_ffg .ST_Coordinate {ST_CoordinateUnqualified :&_gce };};func (_bbf *Presentation )saveToFile (_bg string ,_ada bool )error {_dgc ,_fbc :=_ga .Create (_bg );if _fbc !=nil {return _fbc ;};defer _dgc .Close ();return _bbf .save (_dgc ,_ada );};

// ExtLst returns the ExtLst property.
func (_ebd ViewProperties )ExtLst ()*_cac .CT_ExtensionList {return _ebd ._abga .ExtLst };

// NewPresentationProperties constructs a new PresentationProperties.
func NewPresentationProperties ()PresentationProperties {return PresentationProperties {_abc :_cac .NewPresentationPr ()};};

// Close closes the presentation, removing any temporary files that might have been
// created when opening a document.
func (_gegg *Presentation )Close ()error {if _gegg .TmpPath !=""{return _bb .RemoveAll (_gegg .TmpPath );};return nil ;};

// ShowPr returns the ShowPr property.
func (_fff PresentationProperties )ShowPr ()*_cac .CT_ShowProperties {return _fff ._abc .ShowPr };

// PrnPr returns the PrnPr property.
func (_dbb PresentationProperties )PrnPr ()*_cac .CT_PrintProperties {return _dbb ._abc .PrnPr };

// NotesTextViewPr returns the NotesTextViewPr property.
func (_cgad ViewProperties )NotesTextViewPr ()*_cac .CT_NotesTextViewProperties {return _cgad ._abga .NotesTextViewPr ;};

// SetOffsetY sets vertical offset of text box in distance units (see measurement package).
func (_fda TextBox )SetOffsetY (offY float64 ){_bddd :=_fda .getOff ();_gdee :=_cg .ToEMU (offY );_bddd .YAttr =_ffg .ST_Coordinate {ST_CoordinateUnqualified :&_gdee };};

// Properties returns the properties of the TextBox.
func (_bee TextBox )Properties ()_f .ShapeProperties {if _bee ._gcdb .SpPr ==nil {_bee ._gcdb .SpPr =_ffg .NewCT_ShapeProperties ();};return _f .MakeShapeProperties (_bee ._gcdb .SpPr );};

// Paragraphs returns the paragraphs defined in the placeholder.
func (_acb PlaceHolder )Paragraphs ()[]_f .Paragraph {_cgb :=[]_f .Paragraph {};for _ ,_db :=range _acb ._fea .TxBody .P {_cgb =append (_cgb ,_f .MakeParagraph (_db ));};return _cgb ;};

// ValidateWithPath validates the slide passing path informaton for a better
// error message.
func (_cde Slide )ValidateWithPath (path string )error {if _gcg :=_cde ._edca .ValidateWithPath (path );_gcg !=nil {return _gcg ;};for _ ,_fag :=range _cde ._edca .CSld .SpTree .Choice {for _ ,_efg :=range _fag .Sp {if _efg .TxBody !=nil {if len (_efg .TxBody .P )==0{return _d .New (path +"\u0020\u003a \u0073\u006c\u0069\u0064\u0065 \u0073\u0068\u0061\u0070\u0065 \u0077\u0069\u0074\u0068\u0020\u0061\u0020\u0074\u0078\u0062\u006f\u0064\u0079\u0020\u006d\u0075\u0073\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0020\u0070\u0061\u0072\u0061\u0067\u0072\u0061\u0070\u0068\u0073");};};};};return nil ;};

// SlideMasters returns the slide masters defined in the presentation.
func (_agef *Presentation )SlideMasters ()[]SlideMaster {_bbed :=[]SlideMaster {};for _dfb ,_gca :=range _agef ._be {_bbed =append (_bbed ,SlideMaster {_agef ,_agef ._ffa [_dfb ],_gca });};return _bbed ;};

// X returns the inner wrapped XML type.
func (_cgf PlaceHolder )X ()*_cac .CT_Shape {return _cgf ._fea };func (_affc *Presentation )Validate ()error {if _ede :=_affc ._ae .Validate ();_ede !=nil {return _ede ;};for _ddf ,_egca :=range _affc .Slides (){if _gebg :=_egca .ValidateWithPath (_cdg .Sprintf ("\u0053l\u0069\u0064\u0065\u005b\u0025\u0064]",_ddf ));_gebg !=nil {return _gebg ;};};for _bbeg ,_adc :=range _affc ._be {if _dag :=_adc .ValidateWithPath (_cdg .Sprintf ("\u0053l\u0069d\u0065\u004d\u0061\u0073\u0074\u0065\u0072\u005b\u0025\u0064\u005d",_bbeg ));_dag !=nil {return _dag ;};};for _gfc ,_geg :=range _affc ._ced {if _aefe :=_geg .ValidateWithPath (_cdg .Sprintf ("\u0053l\u0069d\u0065\u004c\u0061\u0079\u006f\u0075\u0074\u005b\u0025\u0064\u005d",_gfc ));_aefe !=nil {return _aefe ;};};return nil ;};

// Open opens and reads a document from a file (.pptx).
func Open (filename string )(*Presentation ,error ){_cda ,_dc :=_ga .Open (filename );if _dc !=nil {return nil ,_cdg .Errorf ("e\u0072r\u006f\u0072\u0020\u006f\u0070\u0065\u006e\u0069n\u0067\u0020\u0025\u0073: \u0025\u0073",filename ,_dc );};defer _cda .Close ();_ed ,_dc :=_ga .Stat (filename );if _dc !=nil {return nil ,_cdg .Errorf ("e\u0072r\u006f\u0072\u0020\u006f\u0070\u0065\u006e\u0069n\u0067\u0020\u0025\u0073: \u0025\u0073",filename ,_dc );};_ =_ed ;return Read (_cda ,_ed .Size ());};

// New initializes and reurns a new presentation
func New ()*Presentation {_dbd :=_ffad ();_dbd .ContentTypes .AddOverride ("/\u0070\u0070\u0074\u002fpr\u0065s\u0065\u006e\u0074\u0061\u0074i\u006f\u006e\u002e\u0078\u006d\u006c","\u0061\u0070\u0070\u006c\u0069\u0063\u0061t\u0069\u006f\u006e\u002f\u0076\u006e\u0064\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002d\u006ff\u0066\u0069\u0063\u0065\u0064\u006f\u0063\u0075\u006de\u006e\u0074\u002e\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002e\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u002e\u006d\u0061\u0069\u006e\u002b\u0078\u006d\u006c");_dbd .Rels .AddRelationship ("\u0064\u006f\u0063\u0050\u0072\u006f\u0070\u0073\u002f\u0063\u006f\u0072e\u002e\u0078\u006d\u006c","\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066o\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0070\u0061\u0063\u006ba\u0067\u0065\u002f\u0032\u0030\u0030\u0036\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073\u002f\u006d\u0065\u0074\u0061\u0064\u0061\u0074\u0061/\u0063\u006f\u0072\u0065\u002d\u0070\u0072\u006f\u0070e\u0072\u0074i\u0065\u0073");_dbd .Rels .AddRelationship ("\u0064\u006fc\u0050\u0072\u006fp\u0073\u002f\u0061\u0070\u0070\u002e\u0078\u006d\u006c","\u0068t\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002eo\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072\u006da\u0074\u0073.\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0072\u0065\u006c\u0061\u0074i\u006f\u006e\u0073\u0068\u0069p\u0073\u002f\u0065x\u0074\u0065\u006e\u0064\u0065d\u002d\u0070\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073");_dbd .Rels .AddRelationship ("p\u0070t\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074a\u0074\u0069\u006f\u006e.x\u006d\u006c","\u0068\u0074\u0074\u0070\u003a\u002f\u002fs\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006da\u0074\u0073\u002e\u006f\u0072g\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006fc\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074");_dbd .Rels .AddRelationship ("\u0070\u0070\u0074\u002f\u0070\u0072\u0065\u0073\u0050\u0072\u006f\u0070s\u002e\u0078\u006d\u006c","ht\u0074\u0070\u003a\u002f\u002f\u0073\u0063he\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006da\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006et\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068i\u0070s\u002f\u0070\u0072\u0065\u0073\u0050\u0072\u006f\u0070\u0073");_dbd .Rels .AddRelationship ("\u0070\u0070\u0074\u002f\u0076\u0069\u0065\u0077\u0050\u0072\u006f\u0070s\u002e\u0078\u006d\u006c","ht\u0074\u0070\u003a\u002f\u002f\u0073\u0063he\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006da\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006et\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068i\u0070s\u002f\u0076\u0069\u0065\u0077\u0050\u0072\u006f\u0070\u0073");_dbd .Rels .AddRelationship ("\u0070\u0070\u0074\u002fta\u0062\u006c\u0065\u0053\u0074\u0079\u006c\u0065\u0073\u002e\u0078\u006d\u006c","\u0068\u0074\u0074\u0070\u003a\u002f\u002fs\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006cf\u006fr\u006d\u0061\u0074\u0073\u002e\u006fr\u0067\u002f\u006f\u0066\u0066\u0069\u0063e\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073\u002f\u0074\u0061\u0062\u006c\u0065\u0053\u0074\u0079\u006ce\u0073");_dbd ._ae .SldMasterIdLst =_cac .NewCT_SlideMasterIdList ();_dbc :=_cac .NewSldMaster ();_dbc .ClrMap .Bg1Attr =_ffg .ST_ColorSchemeIndexLt1 ;_dbc .ClrMap .Bg2Attr =_ffg .ST_ColorSchemeIndexLt2 ;_dbc .ClrMap .Tx1Attr =_ffg .ST_ColorSchemeIndexDk1 ;_dbc .ClrMap .Tx2Attr =_ffg .ST_ColorSchemeIndexDk2 ;_dbc .ClrMap .Accent1Attr =_ffg .ST_ColorSchemeIndexAccent1 ;_dbc .ClrMap .Accent2Attr =_ffg .ST_ColorSchemeIndexAccent2 ;_dbc .ClrMap .Accent3Attr =_ffg .ST_ColorSchemeIndexAccent3 ;_dbc .ClrMap .Accent4Attr =_ffg .ST_ColorSchemeIndexAccent4 ;_dbc .ClrMap .Accent5Attr =_ffg .ST_ColorSchemeIndexAccent5 ;_dbc .ClrMap .Accent6Attr =_ffg .ST_ColorSchemeIndexAccent6 ;_dbc .ClrMap .HlinkAttr =_ffg .ST_ColorSchemeIndexHlink ;_dbc .ClrMap .FolHlinkAttr =_ffg .ST_ColorSchemeIndexFolHlink ;_dbd ._be =append (_dbd ._be ,_dbc );_bf :=_ce .AbsoluteFilename (_ce .DocTypePresentation ,_ce .SlideMasterType ,1);_dbd .ContentTypes .AddOverride (_bf ,_ce .SlideMasterContentType );_cdcf :=_dbd ._ag .AddAutoRelationship (_ce .DocTypePresentation ,_ce .OfficeDocumentType ,1,_ce .SlideMasterType );_abf :=_cac .NewCT_SlideMasterIdListEntry ();_abf .IdAttr =_ce .Uint32 (2147483648);_abf .RIdAttr =_cdcf .ID ();_dbd ._ae .SldMasterIdLst .SldMasterId =append (_dbd ._ae .SldMasterIdLst .SldMasterId ,_abf );_adb :=_gd .NewRelationships ();_dbd ._ffa =append (_dbd ._ffa ,_adb );_fcg :=_cac .NewSldLayout ();_gf :=_adb .AddAutoRelationship (_ce .DocTypePresentation ,_ce .SlideMasterType ,1,_ce .SlideLayoutType );_cfd :=_ce .AbsoluteFilename (_ce .DocTypePresentation ,_ce .SlideLayoutType ,1);_dbd .ContentTypes .AddOverride (_cfd ,_ce .SlideLayoutContentType );_adb .AddAutoRelationship (_ce .DocTypePresentation ,_ce .SlideMasterType ,1,_ce .ThemeType );_dbd ._ced =append (_dbd ._ced ,_fcg );_dbc .SldLayoutIdLst =_cac .NewCT_SlideLayoutIdList ();_dcd :=_cac .NewCT_SlideLayoutIdListEntry ();_dcd .IdAttr =_ce .Uint32 (2147483649);_dcd .RIdAttr =_gf .ID ();_dbc .SldLayoutIdLst .SldLayoutId =append (_dbc .SldLayoutIdLst .SldLayoutId ,_dcd );_dfd :=_gd .NewRelationships ();_dbd ._ge =append (_dbd ._ge ,_dfd );_dfd .AddAutoRelationship (_ce .DocTypePresentation ,_ce .SlideType ,1,_ce .SlideMasterType );_dbd ._ae .NotesSz .CxAttr =6858000;_dbd ._ae .NotesSz .CyAttr =9144000;_age :=_ffg .NewTheme ();_age .NameAttr =_ce .String ("\u0075n\u0069o\u0066\u0066\u0069\u0063\u0065\u0020\u0054\u0068\u0065\u006d\u0065");_age .ThemeElements .ClrScheme .NameAttr ="\u004f\u0066\u0066\u0069\u0063\u0065";_age .ThemeElements .ClrScheme .Dk1 .SysClr =_ffg .NewCT_SystemColor ();_age .ThemeElements .ClrScheme .Dk1 .SysClr .LastClrAttr =_ce .String ("\u0030\u0030\u0030\u0030\u0030\u0030");_age .ThemeElements .ClrScheme .Dk1 .SysClr .ValAttr =_ffg .ST_SystemColorValWindowText ;_age .ThemeElements .ClrScheme .Lt1 .SysClr =_ffg .NewCT_SystemColor ();_age .ThemeElements .ClrScheme .Lt1 .SysClr .LastClrAttr =_ce .String ("\u0066\u0066\u0066\u0066\u0066\u0066");_age .ThemeElements .ClrScheme .Lt1 .SysClr .ValAttr =_ffg .ST_SystemColorValWindow ;_age .ThemeElements .ClrScheme .Dk2 .SrgbClr =_ffg .NewCT_SRgbColor ();_age .ThemeElements .ClrScheme .Dk2 .SrgbClr .ValAttr ="\u0034\u0034\u0035\u0034\u0036\u0061";_age .ThemeElements .ClrScheme .Lt2 .SrgbClr =_ffg .NewCT_SRgbColor ();_age .ThemeElements .ClrScheme .Lt2 .SrgbClr .ValAttr ="\u0065\u0037\u0065\u0037\u0065\u0036";_age .ThemeElements .ClrScheme .Accent1 .SrgbClr =_ffg .NewCT_SRgbColor ();_age .ThemeElements .ClrScheme .Accent1 .SrgbClr .ValAttr ="\u0034\u0034\u0037\u0032\u0063\u0034";_age .ThemeElements .ClrScheme .Accent2 .SrgbClr =_ffg .NewCT_SRgbColor ();_age .ThemeElements .ClrScheme .Accent2 .SrgbClr .ValAttr ="\u0065\u0064\u0037\u0064\u0033\u0031";_age .ThemeElements .ClrScheme .Accent3 .SrgbClr =_ffg .NewCT_SRgbColor ();_age .ThemeElements .ClrScheme .Accent3 .SrgbClr .ValAttr ="\u0061\u0035\u0061\u0035\u0061\u0035";_age .ThemeElements .ClrScheme .Accent4 .SrgbClr =_ffg .NewCT_SRgbColor ();_age .ThemeElements .ClrScheme .Accent4 .SrgbClr .ValAttr ="\u0066\u0066\u0063\u0030\u0030\u0030";_age .ThemeElements .ClrScheme .Accent5 .SrgbClr =_ffg .NewCT_SRgbColor ();_age .ThemeElements .ClrScheme .Accent5 .SrgbClr .ValAttr ="\u0035\u0062\u0039\u0062\u0064\u0035";_age .ThemeElements .ClrScheme .Accent6 .SrgbClr =_ffg .NewCT_SRgbColor ();_age .ThemeElements .ClrScheme .Accent6 .SrgbClr .ValAttr ="\u0037\u0030\u0061\u0064\u0034\u0037";_age .ThemeElements .ClrScheme .Hlink .SrgbClr =_ffg .NewCT_SRgbColor ();_age .ThemeElements .ClrScheme .Hlink .SrgbClr .ValAttr ="\u0030\u0035\u0036\u0033\u0063\u0031";_age .ThemeElements .ClrScheme .FolHlink .SrgbClr =_ffg .NewCT_SRgbColor ();_age .ThemeElements .ClrScheme .FolHlink .SrgbClr .ValAttr ="\u0039\u0035\u0034\u0066\u0037\u0032";_age .ThemeElements .FontScheme .NameAttr ="\u004f\u0066\u0066\u0069\u0063\u0065";_age .ThemeElements .FontScheme .MajorFont .Latin .TypefaceAttr ="\u0043\u0061\u006c\u0069\u0062\u0072\u0069\u0020\u004c\u0069\u0067\u0068\u0074";_age .ThemeElements .FontScheme .MinorFont .Latin .TypefaceAttr ="\u0043a\u006c\u0069\u0062\u0072\u0069";_age .ThemeElements .FmtScheme .NameAttr =_ce .String ("\u004f\u0066\u0066\u0069\u0063\u0065");_ggd :=_ffg .NewEG_FillProperties ();_age .ThemeElements .FmtScheme .FillStyleLst .EG_FillProperties =append (_age .ThemeElements .FmtScheme .FillStyleLst .EG_FillProperties ,_ggd );_ggd .SolidFill =&_ffg .CT_SolidColorFillProperties {SchemeClr :&_ffg .CT_SchemeColor {ValAttr :_ffg .ST_SchemeColorValPhClr }};_ggd =_ffg .NewEG_FillProperties ();_age .ThemeElements .FmtScheme .FillStyleLst .EG_FillProperties =append (_age .ThemeElements .FmtScheme .FillStyleLst .EG_FillProperties ,_ggd );_age .ThemeElements .FmtScheme .FillStyleLst .EG_FillProperties =append (_age .ThemeElements .FmtScheme .FillStyleLst .EG_FillProperties ,_ggd );_ggd .GradFill =&_ffg .CT_GradientFillProperties {RotWithShapeAttr :_ce .Bool (true ),GsLst :&_ffg .CT_GradientStopList {},Lin :&_ffg .CT_LinearShadeProperties {}};_ggd .GradFill .Lin .AngAttr =_ce .Int32 (5400000);_ggd .GradFill .Lin .ScaledAttr =_ce .Bool (false );_adbc :=_ffg .NewCT_GradientStop ();_adbc .PosAttr .ST_PositiveFixedPercentageDecimal =_ce .Int32 (0);_adbc .SchemeClr =&_ffg .CT_SchemeColor {ValAttr :_ffg .ST_SchemeColorValPhClr };_ggd .GradFill .GsLst .Gs =append (_ggd .GradFill .GsLst .Gs ,_adbc );_adbc =_ffg .NewCT_GradientStop ();_adbc .PosAttr .ST_PositiveFixedPercentageDecimal =_ce .Int32 (50000);_adbc .SchemeClr =&_ffg .CT_SchemeColor {ValAttr :_ffg .ST_SchemeColorValPhClr };_ggd .GradFill .GsLst .Gs =append (_ggd .GradFill .GsLst .Gs ,_adbc );_age .ThemeElements .FmtScheme .LnStyleLst =_ffg .NewCT_LineStyleList ();for _ba :=0;_ba < 3;_ba ++{_deg :=_ffg .NewCT_LineProperties ();_deg .WAttr =_ce .Int32 (int32 (6350*(_ba +1)));_deg .CapAttr =_ffg .ST_LineCapFlat ;_deg .CmpdAttr =_ffg .ST_CompoundLineSng ;_deg .AlgnAttr =_ffg .ST_PenAlignmentCtr ;_age .ThemeElements .FmtScheme .LnStyleLst .Ln =append (_age .ThemeElements .FmtScheme .LnStyleLst .Ln ,_deg );};_age .ThemeElements .FmtScheme .EffectStyleLst =_ffg .NewCT_EffectStyleList ();for _bdc :=0;_bdc < 3;_bdc ++{_cfac :=_ffg .NewCT_EffectStyleItem ();_cfac .EffectLst =_ffg .NewCT_EffectList ();_age .ThemeElements .FmtScheme .EffectStyleLst .EffectStyle =append (_age .ThemeElements .FmtScheme .EffectStyleLst .EffectStyle ,_cfac );};_egc :=_ffg .NewEG_FillProperties ();_egc .SolidFill =&_ffg .CT_SolidColorFillProperties {SchemeClr :&_ffg .CT_SchemeColor {ValAttr :_ffg .ST_SchemeColorValPhClr }};_age .ThemeElements .FmtScheme .BgFillStyleLst .EG_FillProperties =append (_age .ThemeElements .FmtScheme .BgFillStyleLst .EG_FillProperties ,_egc );_age .ThemeElements .FmtScheme .BgFillStyleLst .EG_FillProperties =append (_age .ThemeElements .FmtScheme .BgFillStyleLst .EG_FillProperties ,_egc );_age .ThemeElements .FmtScheme .BgFillStyleLst .EG_FillProperties =append (_age .ThemeElements .FmtScheme .BgFillStyleLst .EG_FillProperties ,_ggd );_dbd ._edc =append (_dbd ._edc ,_age );_dad :=_ce .AbsoluteFilename (_ce .DocTypePresentation ,_ce .ThemeType ,1);_dbd .ContentTypes .AddOverride (_dad ,_ce .ThemeContentType );_dbd ._ag .AddAutoRelationship (_ce .DocTypePresentation ,_ce .OfficeDocumentType ,1,_ce .ThemeType );_fba :=_gd .NewRelationships ();_dbd ._df =append (_dbd ._df ,_fba );return _dbd ;};

// SlideLayout is a layout from which slides can be created.
type SlideLayout struct{_ffgfe *_cac .SldLayout };

// GetPlaceholder returns a placeholder given its type.  If there are multiplace
// placeholders of the same type, this method returns the first one.  You must use the
// PlaceHolders() method to access the others.
func (_ddd Slide )GetPlaceholder (t _cac .ST_PlaceholderType )(PlaceHolder ,error ){for _ ,_bcg :=range _ddd ._edca .CSld .SpTree .Choice {for _ ,_gga :=range _bcg .Sp {if _gga .NvSpPr !=nil &&_gga .NvSpPr .NvPr !=nil &&_gga .NvSpPr .NvPr .Ph !=nil {if _gga .NvSpPr .NvPr .Ph .TypeAttr ==t {return PlaceHolder {_gga ,_ddd ._edca },nil ;};};};};return PlaceHolder {},_d .New ("\u0075\u006e\u0061\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0066i\u006e\u0064\u0020\u0070\u006c\u0061\u0063\u0065\u0068\u006fl\u0064\u0065\u0072");};

// PresentationProperties contains document specific properties.
type PresentationProperties struct{_abc *_cac .PresentationPr };

// GridSpacing returns the GridSpacing property.
func (_afef ViewProperties )GridSpacing ()*_ffg .CT_PositiveSize2D {return _afef ._abga .GridSpacing };

// SaveToFileAsTemplate writes the Presentation out to a file as a template.
func (_aef *Presentation )SaveToFileAsTemplate (path string )error {return _aef .saveToFile (path ,true )};

// AddSlideWithLayout adds a new slide with content copied from a layout.  Normally you should
// use AddDefaultSlideWithLayout as it will do some post processing similar to PowerPoint to
// clear place holder text, etc.
func (_gbg *Presentation )AddSlideWithLayout (l SlideLayout )(Slide ,error ){_dbf :=_cac .NewCT_SlideIdListEntry ();_dbf .IdAttr =256;for _ ,_aa :=range _gbg ._ae .SldIdLst .SldId {if _aa .IdAttr >=_dbf .IdAttr {_dbf .IdAttr =_aa .IdAttr +1;};};_gbg ._ae .SldIdLst .SldId =append (_gbg ._ae .SldIdLst .SldId ,_dbf );_bdf :=_cac .NewSld ();_gda :=_ff .Buffer {};_bde :=_fb .NewEncoder (&_gda );_caf :=_fb .StartElement {Name :_fb .Name {Local :"\u0073\u006c\u0069d\u0065"}};_caf .Attr =append (_caf .Attr ,_fb .Attr {Name :_fb .Name {Local :"\u0078\u006d\u006cn\u0073"},Value :"\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e"});_caf .Attr =append (_caf .Attr ,_fb .Attr {Name :_fb .Name {Local :"\u0078m\u006c\u006e\u0073\u003a\u0061"},Value :"\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"});_caf .Attr =append (_caf .Attr ,_fb .Attr {Name :_fb .Name {Local :"\u0078m\u006c\u006e\u0073\u003a\u0070"},Value :"\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e"});_caf .Attr =append (_caf .Attr ,_fb .Attr {Name :_fb .Name {Local :"\u0078m\u006c\u006e\u0073\u003a\u0072"},Value :"\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"});_caf .Attr =append (_caf .Attr ,_fb .Attr {Name :_fb .Name {Local :"\u0078\u006d\u006c\u006e\u0073\u003a\u0073\u0068"},Value :"\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"});_caf .Attr =append (_caf .Attr ,_fb .Attr {Name :_fb .Name {Local :"\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"},Value :"\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"});if _fcd :=l ._ffgfe .CSld .MarshalXML (_bde ,_caf );_fcd !=nil {return Slide {},_fcd ;};_bde .Flush ();_faf :=_fb .NewDecoder (&_gda );_bdf .CSld =_cac .NewCT_CommonSlideData ();if _bfcf :=_faf .Decode (_bdf .CSld );_bfcf !=nil {return Slide {},_bfcf ;};_bdf .CSld .NameAttr =nil ;_bdf .CSld .SpTree .Choice =_cdaf (_bdf .CSld .SpTree .Choice );_gbg ._cab =append (_gbg ._cab ,_bdf );_ec :=_gbg ._ag .AddAutoRelationship (_ce .DocTypePresentation ,_ce .OfficeDocumentType ,len (_gbg ._cab ),_ce .SlideType );_dbf .RIdAttr =_ec .ID ();_bff :=_ce .AbsoluteFilename (_ce .DocTypePresentation ,_ce .SlideType ,len (_gbg ._cab ));_gbg .ContentTypes .AddOverride (_bff ,_ce .SlideContentType );_efa :=_gd .NewRelationships ();_gbg ._bdb =append (_gbg ._bdb ,_efa );_dbe :=len (_gbg ._bdb )-1;for _bfe ,_ea :=range _gbg ._ced {if _ea ==l .X (){_gdd :=_gbg ._ge [_bfe ];for _ ,_fec :=range _gdd .X ().Relationship {if _fec .TypeAttr !=_ce .SlideMasterType {_gbg ._bdb [_dbe ].X ().Relationship =append (_gbg ._bdb [_dbe ].X ().Relationship ,_fec );};};_efa .AddAutoRelationship (_ce .DocTypePresentation ,_ce .SlideType ,_bfe +1,_ce .SlideLayoutType );};};_fafe :=Slide {_dbf ,_bdf ,_gbg };return _fafe ,nil ;};

// AddDefaultSlideWithLayout tries to replicate what PowerPoint does when
// inserting a slide with a new style by clearing placeholder content and removing
// some placeholders.  Use AddSlideWithLayout if you need more control.
func (_dff *Presentation )AddDefaultSlideWithLayout (l SlideLayout )(Slide ,error ){_eff ,_aedd :=_dff .AddSlideWithLayout (l );for _ ,_dfg :=range _eff .PlaceHolders (){_dfg .Clear ();switch _dfg .Type (){case _cac .ST_PlaceholderTypeFtr ,_cac .ST_PlaceholderTypeDt ,_cac .ST_PlaceholderTypeSldNum :_dfg .Remove ();};};return _eff ,_aedd ;};

// OutlineViewPr returns the OutlineViewPr property.
func (_cedg ViewProperties )OutlineViewPr ()*_cac .CT_OutlineViewProperties {return _cedg ._abga .OutlineViewPr ;};

// NotesViewPr returns the NotesViewPr property.
func (_eaf ViewProperties )NotesViewPr ()*_cac .CT_NotesViewProperties {return _eaf ._abga .NotesViewPr };