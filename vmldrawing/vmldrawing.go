//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package vmldrawing ;import (_cb "encoding/xml";_d "fmt";_cg "github.com/unidoc/unioffice";_dd "github.com/unidoc/unioffice/common/logger";_cc "github.com/unidoc/unioffice/schema/soo/ofc/sharedTypes";_f "github.com/unidoc/unioffice/schema/urn/schemas_microsoft_com/office/excel";_g "github.com/unidoc/unioffice/schema/urn/schemas_microsoft_com/vml";_e "strconv";_a "strings";);

// NewCommentDrawing constructs a new comment drawing.
func NewCommentDrawing ()*Container {_b :=NewContainer ();_b .Layout =_g .NewOfcShapelayout ();_b .Layout .ExtAttr =_g .ST_ExtEdit ;_b .Layout .Idmap =_g .NewOfcCT_IdMap ();_b .Layout .Idmap .DataAttr =_cg .String ("\u0031");_b .Layout .Idmap .ExtAttr =_g .ST_ExtEdit ;_b .ShapeType =_g .NewShapetype ();_b .ShapeType .IdAttr =_cg .String ("_\u0078\u0030\u0030\u0030\u0030\u005f\u0074\u0032\u0030\u0032");_b .ShapeType .CoordsizeAttr =_cg .String ("2\u0031\u0036\u0030\u0030\u002c\u0032\u0031\u0036\u0030\u0030");_b .ShapeType .SptAttr =_cg .Float32 (202);_b .ShapeType .PathAttr =_cg .String ("\u006d\u0030\u002c0l\u0030\u002c\u0032\u0031\u0036\u0030\u0030\u002c\u00321\u00360\u0030,\u00321\u0036\u0030\u0030\u002c\u0032\u0031\u0036\u0030\u0030\u002c\u0030\u0078\u0065");_cd :=_g .NewEG_ShapeElements ();_b .ShapeType .EG_ShapeElements =append (_b .ShapeType .EG_ShapeElements ,_cd );_cd .Path =_g .NewPath ();_cd .Path .GradientshapeokAttr =_cc .ST_TrueFalseT ;_cd .Path .ConnecttypeAttr =_g .OfcST_ConnectTypeRect ;return _b ;};

// ToString formatting ShapeStyle to string.
func (_aba *ShapeStyle )String ()string {_dc :="";_dc +=_d .Sprintf ("\u0070\u006f\u0073i\u0074\u0069\u006f\u006e\u003a\u0025\u0073\u003b",_aba ._gg );_dc +=_d .Sprintf ("\u006da\u0072g\u0069\u006e\u002d\u006c\u0065\u0066\u0074\u003a\u0025\u0064\u003b",int64 (_aba ._ae ));_dc +=_d .Sprintf ("\u006d\u0061\u0072\u0067\u0069\u006e\u002d\u0074\u006fp\u003a\u0025\u0064\u003b",int64 (_aba ._daa ));_dc +=_d .Sprintf ("w\u0069\u0064\u0074\u0068\u003a\u0025\u0064\u0070\u0074\u003b",int64 (_aba ._fd ));_dc +=_d .Sprintf ("\u0068\u0065\u0069g\u0068\u0074\u003a\u0025\u0064\u0070\u0074\u003b",int64 (_aba ._ed ));_dc +=_d .Sprintf ("z\u002d\u0069\u006e\u0064\u0065\u0078\u003a\u0025\u0064\u003b",_aba ._abc );_dc +=_d .Sprintf ("m\u0073\u006f\u002d\u0070\u006f\u0073i\u0074\u0069\u006f\u006e\u002d\u0068\u006f\u0072\u0069z\u006f\u006e\u0074a\u006c:\u0025\u0073\u003b",_aba ._efg );_dc +=_d .Sprintf ("\u006d\u0073o-\u0070\u006f\u0073i\u0074\u0069\u006f\u006e-ho\u0072iz\u006f\u006e\u0074\u0061\u006c\u002d\u0072el\u0061\u0074\u0069\u0076\u0065\u003a\u0025s\u003b",_aba ._afa );_dc +=_d .Sprintf ("\u006ds\u006f\u002d\u0070\u006fs\u0069\u0074\u0069\u006f\u006e-\u0076e\u0072t\u0069\u0063\u0061\u006c\u003a\u0025\u0073;",_aba ._gb );_dc +=_d .Sprintf ("\u006d\u0073\u006f-p\u006f\u0073\u0069\u0074\u0069\u006f\u006e\u002d\u0076e\u0072t\u0069c\u0061l\u002d\u0072\u0065\u006c\u0061\u0074\u0069\u0076\u0065\u003a\u0025\u0073\u003b",_aba ._gd );return _dc ;};func (_da *Container )UnmarshalXML (d *_cb .Decoder ,start _cb .StartElement )error {_da .Shape =nil ;_be :for {_fe ,_eff :=d .Token ();if _eff !=nil {return _eff ;};switch _ab :=_fe .(type ){case _cb .StartElement :switch _ab .Name .Local {case "s\u0068\u0061\u0070\u0065\u006c\u0061\u0079\u006f\u0075\u0074":_da .Layout =_g .NewOfcShapelayout ();if _beb :=d .DecodeElement (_da .Layout ,&_ab );_beb !=nil {return _beb ;};case "\u0073h\u0061\u0070\u0065\u0074\u0079\u0070e":_da .ShapeType =_g .NewShapetype ();if _ad :=d .DecodeElement (_da .ShapeType ,&_ab );_ad !=nil {return _ad ;};case "\u0073\u0068\u0061p\u0065":_dag :=_g .NewShape ();if _ccd :=d .DecodeElement (_dag ,&_ab );_ccd !=nil {return _ccd ;};_da .Shape =append (_da .Shape ,_dag );};case _cb .EndElement :break _be ;};};return nil ;};

// SetWidth set width of shape.
func (_bbg *ShapeStyle )SetWidth (width float64 ){_bbg ._fd =width };

// NewShapeStyle accept value of string style attribute in v:shape and format it to generate ShapeStyle.
func NewShapeStyle (style string )ShapeStyle {_dgc :=ShapeStyle {_fd :0,_ed :0};_ge :=_a .Split (style ,"\u003b");for _ ,_de :=range _ge {_dfe :=_a .Split (_de ,"\u003a");if len (_dfe )!=2{continue ;};var _bef error ;switch _dfe [0]{case "\u0070\u006f\u0073\u0069\u0074\u0069\u006f\u006e":_dgc ._gg =_dfe [1];break ;case "\u006d\u0061\u0072\u0067\u0069\u006e\u002d\u0074\u006f\u0070":_dgc ._daa ,_bef =_e .ParseFloat (_a .ReplaceAll (_dfe [1],"\u0070\u0074",""),64);break ;case "m\u0061\u0072\u0067\u0069\u006e\u002d\u006c\u0065\u0066\u0074":_dgc ._ae ,_bef =_e .ParseFloat (_a .ReplaceAll (_dfe [1],"\u0070\u0074",""),64);break ;case "\u006d\u0061\u0072\u0067\u0069\u006e\u002d\u0062\u006f\u0074\u0074\u006f\u006d":_dgc ._af ,_bef =_e .ParseFloat (_a .ReplaceAll (_dfe [1],"\u0070\u0074",""),64);break ;case "\u006d\u0061\u0072g\u0069\u006e\u002d\u0072\u0069\u0067\u0068\u0074":_dgc ._ba ,_bef =_e .ParseFloat (_a .ReplaceAll (_dfe [1],"\u0070\u0074",""),64);break ;case "\u0074\u006f\u0070":_dgc ._bf ,_bef =_e .ParseFloat (_a .ReplaceAll (_dfe [1],"\u0070\u0074",""),64);break ;case "\u006c\u0065\u0066\u0074":_dgc ._fc ,_bef =_e .ParseFloat (_a .ReplaceAll (_dfe [1],"\u0070\u0074",""),64);break ;case "\u0062\u006f\u0074\u0074\u006f\u006d":_dgc ._ccb ,_bef =_e .ParseFloat (_a .ReplaceAll (_dfe [1],"\u0070\u0074",""),64);break ;case "\u0072\u0069\u0067h\u0074":_dgc ._ffe ,_bef =_e .ParseFloat (_a .ReplaceAll (_dfe [1],"\u0070\u0074",""),64);break ;case "\u0077\u0069\u0064t\u0068":_dgc ._fd ,_bef =_e .ParseFloat (_a .ReplaceAll (_dfe [1],"\u0070\u0074",""),64);break ;case "\u0068\u0065\u0069\u0067\u0068\u0074":_dgc ._ed ,_bef =_e .ParseFloat (_a .ReplaceAll (_dfe [1],"\u0070\u0074",""),64);break ;case "\u007a-\u0069\u006e\u0064\u0065\u0078":_dgc ._abc ,_bef =_e .ParseInt (_dfe [1],10,64);break ;case "\u006d\u0073\u006f-p\u006f\u0073\u0069\u0074\u0069\u006f\u006e\u002d\u0068\u006f\u0072\u0069\u007a\u006f\u006e\u0074\u0061\u006c":_dgc ._efg =_dfe [1];break ;case "\u006d\u0073\u006f\u002d\u0070\u006f\u0073\u0069\u0074\u0069\u006f\u006e\u002d\u0068\u006fr\u0069z\u006f\u006e\u0074\u0061\u006c\u002d\u0072\u0065\u006c\u0061\u0074\u0069\u0076\u0065":_dgc ._afa =_dfe [1];break ;case "m\u0073\u006f\u002d\u0070os\u0069t\u0069\u006f\u006e\u002d\u0076e\u0072\u0074\u0069\u0063\u0061\u006c":_dgc ._gb =_dfe [1];break ;case "\u006d\u0073\u006f\u002d\u0070\u006f\u0073\u0069\u0074\u0069o\u006e\u002d\u0076\u0065\u0072\u0074\u0069c\u0061\u006c\u002d\u0072\u0065\u006c\u0061\u0074\u0069\u0076\u0065":_dgc ._gd =_dfe [1];break ;};if _bef !=nil {_dd .Log .Debug ("\u0055n\u0061\u0062l\u0065\u0020\u0074o\u0020\u0070\u0061\u0072\u0073\u0065\u0020s\u0074\u0079\u006c\u0065\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u003a\u0020\u0025\u0073 \u0076\u0061\u006c\u0075\u0065\u003a\u0020\u0025\u0076",_dfe [0],_dfe [1]);};};return _dgc ;};

// TextpathStyle is style attribute of element v:textpath.
type TextpathStyle struct{_fg string ;_ec int64 ;_dea bool ;_fac bool ;};

// Width return width of shape.
func (_bdg *ShapeStyle )Width ()float64 {return _bdg ._fd };

// ToString generate string of TextpathStyle.
func (_ggf *TextpathStyle )String ()string {_acb :="";_acb +=_d .Sprintf ("\u0066o\u006et\u002d\u0066\u0061\u006d\u0069\u006c\u0079\u003a\u0025\u0073\u003b",_ggf ._fg );_acb +=_d .Sprintf ("\u0066o\u006et\u002d\u0073\u0069\u007a\u0065\u003a\u0025\u0064\u0070\u0074\u003b",_ggf ._ec );if _ggf ._fac {_acb +=_d .Sprintf ("\u0066o\u006et\u002d\u0073\u0074\u0079\u006ce\u003a\u0069t\u0061\u006c\u0069\u0063\u003b");};if _ggf ._dea {_acb +=_d .Sprintf ("\u0066\u006f\u006e\u0074\u002d\u0077\u0065\u0069\u0067\u0068\u0074\u003ab\u006f\u006c\u0064\u003b");};return _acb ;};

// NewCommentShape creates a new comment shape for a given cell index.  The
// indices here are zero based.
func NewCommentShape (col ,row int64 )*_g .Shape {_ef :=_g .NewShape ();_ef .IdAttr =_cg .String (_d .Sprintf ("\u0063\u0073\u005f\u0025\u0064\u005f\u0025\u0064",col ,row ));_ef .TypeAttr =_cg .String ("\u0023\u005f\u00780\u0030\u0030\u0030\u005f\u0074\u0032\u0030\u0032");_ef .StyleAttr =_cg .String ("\u0070\u006f\u0073i\u0074\u0069\u006f\u006e\u003a\u0061\u0062\u0073\u006f\u006cu\u0074\u0065\u003b\u006d\u0061\u0072\u0067\u0069\u006e\u002d\u006c\u0065\u0066\u0074:\u0038\u0030\u0070\u0074;\u006d\u0061\u0072\u0067\u0069n-\u0074o\u0070\u003a\u0032pt\u003b\u0077\u0069\u0064\u0074\u0068\u003a1\u0030\u0034\u0070\u0074\u003b\u0068\u0065\u0069\u0067\u0068\u0074\u003a\u0037\u0036\u0070\u0074\u003b\u007a\u002d\u0069\u006e\u0064\u0065x\u003a\u0031\u003bv\u0069\u0073\u0069\u0062\u0069\u006c\u0069t\u0079\u003a\u0068\u0069\u0064\u0064\u0065\u006e");_ef .FillcolorAttr =_cg .String ("\u0023f\u0062\u0066\u0036\u0064\u0036");_ef .StrokecolorAttr =_cg .String ("\u0023e\u0064\u0065\u0061\u0061\u0031");_dg :=_g .NewEG_ShapeElements ();_dg .Fill =_g .NewFill ();_dg .Fill .Color2Attr =_cg .String ("\u0023f\u0062\u0066\u0065\u0038\u0032");_dg .Fill .AngleAttr =_cg .Float64 (-180);_dg .Fill .TypeAttr =_g .ST_FillTypeGradient ;_dg .Fill .Fill =_g .NewOfcFill ();_dg .Fill .Fill .ExtAttr =_g .ST_ExtView ;_dg .Fill .Fill .TypeAttr =_g .OfcST_FillTypeGradientUnscaled ;_ef .EG_ShapeElements =append (_ef .EG_ShapeElements ,_dg );_fa :=_g .NewEG_ShapeElements ();_fa .Shadow =_g .NewShadow ();_fa .Shadow .OnAttr =_cc .ST_TrueFalseT ;_fa .Shadow .ObscuredAttr =_cc .ST_TrueFalseT ;_ef .EG_ShapeElements =append (_ef .EG_ShapeElements ,_fa );_ff :=_g .NewEG_ShapeElements ();_ff .Path =_g .NewPath ();_ff .Path .ConnecttypeAttr =_g .OfcST_ConnectTypeNone ;_ef .EG_ShapeElements =append (_ef .EG_ShapeElements ,_ff );_df :=_g .NewEG_ShapeElements ();_df .Textbox =_g .NewTextbox ();_df .Textbox .StyleAttr =_cg .String ("\u006d\u0073\u006f\u002ddi\u0072\u0065\u0063\u0074\u0069\u006f\u006e\u002d\u0061\u006c\u0074\u003a\u0061\u0075t\u006f");_ef .EG_ShapeElements =append (_ef .EG_ShapeElements ,_df );_bb :=_g .NewEG_ShapeElements ();_bb .ClientData =_f .NewClientData ();_bb .ClientData .ObjectTypeAttr =_f .ST_ObjectTypeNote ;_bb .ClientData .MoveWithCells =_cc .ST_TrueFalseBlankT ;_bb .ClientData .SizeWithCells =_cc .ST_TrueFalseBlankT ;_bb .ClientData .Anchor =_cg .String ("\u0031,\u0020\u0031\u0035\u002c\u0020\u0030\u002c\u0020\u0032\u002c\u00202\u002c\u0020\u0035\u0034\u002c\u0020\u0035\u002c\u0020\u0033");_bb .ClientData .AutoFill =_cc .ST_TrueFalseBlankFalse ;_bb .ClientData .Row =_cg .Int64 (row );_bb .ClientData .Column =_cg .Int64 (col );_ef .EG_ShapeElements =append (_ef .EG_ShapeElements ,_bb );return _ef ;};

// Height return height of shape.
func (_deg *ShapeStyle )Height ()float64 {return _deg ._ed };

// SetItalic sets text to italic.
func (_age *TextpathStyle )SetItalic (italic bool ){_age ._fac =italic };

// Right get right attribute of shape style.
func (_fdf *ShapeStyle )Right ()float64 {return _fdf ._ffe };

// Left get left attribute of shape style.
func (_ac *ShapeStyle )Left ()float64 {return _ac ._fc };

// MSOPositionHorizontalRelative get `mso-position-horizontal-relative` attribute of shape style.
func (_bbe *ShapeStyle )MSOPositionHorizontalRelative ()string {return _bbe ._afa };

// IsBold returns true if text is bold.
func (_ffg *TextpathStyle )IsBold ()bool {return _ffg ._dea };

// FontFamily returns fontFamily of the text.
func (_dge *TextpathStyle )FontFamily ()string {return _dge ._fg };

// CreateFormula creates F element for typeFormulas.
func CreateFormula (s string )*_g .CT_F {_edb :=_g .NewCT_F ();_edb .EqnAttr =&s ;return _edb };

// Bottom get bottom attribute of shape style.
func (_dba *ShapeStyle )Bottom ()float64 {return _dba ._ccb };

// SetFontSize sets text's fontSize.
func (_eba *TextpathStyle )SetFontSize (fontSize int64 ){_eba ._ec =fontSize };

// FontSize returns fontSize of the text.
func (_eb *TextpathStyle )FontSize ()int64 {return _eb ._ec };type Container struct{Layout *_g .OfcShapelayout ;ShapeType *_g .Shapetype ;Shape []*_g .Shape ;};

// IsItalic returns true if text is italic.
func (_ece *TextpathStyle )IsItalic ()bool {return _ece ._fac };

// NewTextpathStyle accept value of string style attribute of element v:textpath and format it to generate TextpathStyle.
func NewTextpathStyle (style string )TextpathStyle {_ggb :=TextpathStyle {_fg :"\u0022C\u0061\u006c\u0069\u0062\u0072\u0069\"",_ec :44,_dea :false ,_fac :false };_ccg :=_a .Split (style ,"\u003b");for _ ,_gf :=range _ccg {_ce :=_a .Split (_gf ,"\u003a");if len (_ce )!=2{continue ;};switch _ce [0]{case "f\u006f\u006e\u0074\u002d\u0066\u0061\u006d\u0069\u006c\u0079":_ggb ._fg =_ce [1];break ;case "\u0066o\u006e\u0074\u002d\u0073\u0069\u007ae":_ggb ._ec ,_ =_e .ParseInt (_a .ReplaceAll (_ce [1],"\u0070\u0074",""),10,64);break ;case "f\u006f\u006e\u0074\u002d\u0077\u0065\u0069\u0067\u0068\u0074":_ggb ._dea =_ce [1]=="\u0062\u006f\u006c\u0064";break ;case "\u0066\u006f\u006e\u0074\u002d\u0073\u0074\u0079\u006c\u0065":_ggb ._fac =_ce [1]=="\u0069\u0074\u0061\u006c\u0069\u0063";break ;};};return _ggb ;};const (ShapeStylePositionAbsolute ="\u0061\u0062\u0073\u006f\u006c\u0075\u0074\u0065";ShapeStylePositionRelative ="\u0072\u0065\u006c\u0061\u0074\u0069\u0076\u0065";);func NewContainer ()*Container {return &Container {}};

// MSOPositionVerticalRelative get `mso-position-vertical-relative` attribute of shape style.
func (_aea *ShapeStyle )MSOPositionVerticalRelative ()string {return _aea ._gd };

// ShapeStyle is style attribute of v:shape element.
type ShapeStyle struct{_gg string ;_daa float64 ;_ae float64 ;_af float64 ;_ba float64 ;_bf float64 ;_fc float64 ;_ccb float64 ;_ffe float64 ;_fd float64 ;_ed float64 ;_abc int64 ;_efg string ;_afa string ;_gb string ;_gd string ;};

// SetFontFamily sets text's fontFamily.
func (_eg *TextpathStyle )SetFontFamily (fontFamily string ){_eg ._fg =fontFamily };

// Position get position attribute of shape style.
func (_fea *ShapeStyle )Position ()string {return _fea ._gg };

// SetBold sets text to bold.
func (_baa *TextpathStyle )SetBold (bold bool ){_baa ._dea =bold };func (_bbb *Container )MarshalXML (e *_cb .Encoder ,start _cb .StartElement )error {start .Attr =append (start .Attr ,_cb .Attr {Name :_cb .Name {Local :"\u0078m\u006c\u006e\u0073\u003a\u0076"},Value :"\u0075\u0072n\u003a\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002d\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002d\u0063\u006f\u006d:v\u006d\u006c"});start .Attr =append (start .Attr ,_cb .Attr {Name :_cb .Name {Local :"\u0078m\u006c\u006e\u0073\u003a\u006f"},Value :"\u0075\u0072\u006e\u003a\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002d\u006di\u0063\u0072\u006f\u0073\u006f\u0066t\u002d\u0063\u006f\u006d\u003a\u006f\u0066\u0066\u0069\u0063\u0065\u003a\u006ff\u0066\u0069\u0063\u0065"});start .Attr =append (start .Attr ,_cb .Attr {Name :_cb .Name {Local :"\u0078m\u006c\u006e\u0073\u003a\u0078"},Value :"\u0075\u0072\u006e\u003a\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002d\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002d\u0063\u006fm\u003a\u006f\u0066\u0066\u0069c\u0065\u003ae\u0078\u0063\u0065\u006c"});start .Name .Local ="\u0078\u006d\u006c";e .EncodeToken (start );if _bbb .Layout !=nil {_db :=_cb .StartElement {Name :_cb .Name {Local :"\u006f\u003a\u0073\u0068\u0061\u0070\u0065\u006c\u0061\u0079\u006f\u0075\u0074"}};e .EncodeElement (_bbb .Layout ,_db );};if _bbb .ShapeType !=nil {_ddg :=_cb .StartElement {Name :_cb .Name {Local :"v\u003a\u0073\u0068\u0061\u0070\u0065\u0074\u0079\u0070\u0065"}};e .EncodeElement (_bbb .ShapeType ,_ddg );};for _ ,_bd :=range _bbb .Shape {_fb :=_cb .StartElement {Name :_cb .Name {Local :"\u0076:\u0073\u0068\u0061\u0070\u0065"}};e .EncodeElement (_bd ,_fb );};return e .EncodeToken (_cb .EndElement {Name :start .Name });};

// Margins get margin top, left, bottom, and right of shape style.
func (_gbc *ShapeStyle )Margins ()(float64 ,float64 ,float64 ,float64 ){return _gbc ._daa ,_gbc ._ae ,_gbc ._af ,_gbc ._ba ;};

// SetHeight set height of shape.
func (_ea *ShapeStyle )SetHeight (height float64 ){_ea ._ed =height };

// Top get top attribute of shape style.
func (_ag *ShapeStyle )Top ()float64 {return _ag ._bf };