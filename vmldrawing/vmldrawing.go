//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package vmldrawing ;import (_ffd "encoding/xml";_eb "fmt";_cd "github.com/unidoc/unioffice";_fe "github.com/unidoc/unioffice/schema/soo/ofc/sharedTypes";_cf "github.com/unidoc/unioffice/schema/urn/schemas_microsoft_com/office/excel";_dg "github.com/unidoc/unioffice/schema/urn/schemas_microsoft_com/vml";);func (_ee *Container )MarshalXML (e *_ffd .Encoder ,start _ffd .StartElement )error {start .Attr =append (start .Attr ,_ffd .Attr {Name :_ffd .Name {Local :"\u0078m\u006c\u006e\u0073\u003a\u0076"},Value :"\u0075\u0072n\u003a\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002d\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002d\u0063\u006f\u006d:v\u006d\u006c"});start .Attr =append (start .Attr ,_ffd .Attr {Name :_ffd .Name {Local :"\u0078m\u006c\u006e\u0073\u003a\u006f"},Value :"\u0075\u0072\u006e\u003a\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002d\u006di\u0063\u0072\u006f\u0073\u006f\u0066t\u002d\u0063\u006f\u006d\u003a\u006f\u0066\u0066\u0069\u0063\u0065\u003a\u006ff\u0066\u0069\u0063\u0065"});start .Attr =append (start .Attr ,_ffd .Attr {Name :_ffd .Name {Local :"\u0078m\u006c\u006e\u0073\u003a\u0078"},Value :"\u0075\u0072\u006e\u003a\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002d\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002d\u0063\u006fm\u003a\u006f\u0066\u0066\u0069c\u0065\u003ae\u0078\u0063\u0065\u006c"});start .Name .Local ="\u0078\u006d\u006c";e .EncodeToken (start );if _ee .Layout !=nil {_ab :=_ffd .StartElement {Name :_ffd .Name {Local :"\u006f\u003a\u0073\u0068\u0061\u0070\u0065\u006c\u0061\u0079\u006f\u0075\u0074"}};e .EncodeElement (_ee .Layout ,_ab );};if _ee .ShapeType !=nil {_cb :=_ffd .StartElement {Name :_ffd .Name {Local :"v\u003a\u0073\u0068\u0061\u0070\u0065\u0074\u0079\u0070\u0065"}};e .EncodeElement (_ee .ShapeType ,_cb );};for _ ,_baf :=range _ee .Shape {_cdd :=_ffd .StartElement {Name :_ffd .Name {Local :"\u0076:\u0073\u0068\u0061\u0070\u0065"}};e .EncodeElement (_baf ,_cdd );};return e .EncodeToken (_ffd .EndElement {Name :start .Name });};type Container struct{Layout *_dg .OfcShapelayout ;ShapeType *_dg .Shapetype ;Shape []*_dg .Shape ;};

// NewCommentShape creates a new comment shape for a given cell index.  The
// indices here are zero based.
func NewCommentShape (col ,row int64 )*_dg .Shape {_ff :=_dg .NewShape ();_ff .IdAttr =_cd .String (_eb .Sprintf ("\u0063\u0073\u005f\u0025\u0064\u005f\u0025\u0064",col ,row ));_ff .TypeAttr =_cd .String ("\u0023\u005f\u00780\u0030\u0030\u0030\u005f\u0074\u0032\u0030\u0032");_ff .StyleAttr =_cd .String ("\u0070\u006f\u0073i\u0074\u0069\u006f\u006e\u003a\u0061\u0062\u0073\u006f\u006cu\u0074\u0065\u003b\u006d\u0061\u0072\u0067\u0069\u006e\u002d\u006c\u0065\u0066\u0074:\u0038\u0030\u0070\u0074;\u006d\u0061\u0072\u0067\u0069n-\u0074o\u0070\u003a\u0032pt\u003b\u0077\u0069\u0064\u0074\u0068\u003a1\u0030\u0034\u0070\u0074\u003b\u0068\u0065\u0069\u0067\u0068\u0074\u003a\u0037\u0036\u0070\u0074\u003b\u007a\u002d\u0069\u006e\u0064\u0065x\u003a\u0031\u003bv\u0069\u0073\u0069\u0062\u0069\u006c\u0069t\u0079\u003a\u0068\u0069\u0064\u0064\u0065\u006e");_ff .FillcolorAttr =_cd .String ("\u0023f\u0062\u0066\u0036\u0064\u0036");_ff .StrokecolorAttr =_cd .String ("\u0023e\u0064\u0065\u0061\u0061\u0031");_c :=_dg .NewEG_ShapeElements ();_c .Fill =_dg .NewFill ();_c .Fill .Color2Attr =_cd .String ("\u0023f\u0062\u0066\u0065\u0038\u0032");_c .Fill .AngleAttr =_cd .Float64 (-180);_c .Fill .TypeAttr =_dg .ST_FillTypeGradient ;_c .Fill .Fill =_dg .NewOfcFill ();_c .Fill .Fill .ExtAttr =_dg .ST_ExtView ;_c .Fill .Fill .TypeAttr =_dg .OfcST_FillTypeGradientUnscaled ;_ff .EG_ShapeElements =append (_ff .EG_ShapeElements ,_c );_cbb :=_dg .NewEG_ShapeElements ();_cbb .Shadow =_dg .NewShadow ();_cbb .Shadow .OnAttr =_fe .ST_TrueFalseT ;_cbb .Shadow .ObscuredAttr =_fe .ST_TrueFalseT ;_ff .EG_ShapeElements =append (_ff .EG_ShapeElements ,_cbb );_ffb :=_dg .NewEG_ShapeElements ();_ffb .Path =_dg .NewPath ();_ffb .Path .ConnecttypeAttr =_dg .OfcST_ConnectTypeNone ;_ff .EG_ShapeElements =append (_ff .EG_ShapeElements ,_ffb );_ac :=_dg .NewEG_ShapeElements ();_ac .Textbox =_dg .NewTextbox ();_ac .Textbox .StyleAttr =_cd .String ("\u006d\u0073\u006f\u002ddi\u0072\u0065\u0063\u0074\u0069\u006f\u006e\u002d\u0061\u006c\u0074\u003a\u0061\u0075t\u006f");_ff .EG_ShapeElements =append (_ff .EG_ShapeElements ,_ac );_gf :=_dg .NewEG_ShapeElements ();_gf .ClientData =_cf .NewClientData ();_gf .ClientData .ObjectTypeAttr =_cf .ST_ObjectTypeNote ;_gf .ClientData .MoveWithCells =_fe .ST_TrueFalseBlankT ;_gf .ClientData .SizeWithCells =_fe .ST_TrueFalseBlankT ;_gf .ClientData .Anchor =_cd .String ("\u0031,\u0020\u0031\u0035\u002c\u0020\u0030\u002c\u0020\u0032\u002c\u00202\u002c\u0020\u0035\u0034\u002c\u0020\u0035\u002c\u0020\u0033");_gf .ClientData .AutoFill =_fe .ST_TrueFalseBlankFalse ;_gf .ClientData .Row =_cd .Int64 (row );_gf .ClientData .Column =_cd .Int64 (col );_ff .EG_ShapeElements =append (_ff .EG_ShapeElements ,_gf );return _ff ;};func (_d *Container )UnmarshalXML (d *_ffd .Decoder ,start _ffd .StartElement )error {_d .Shape =nil ;_gc :for {_ea ,_f :=d .Token ();if _f !=nil {return _f ;};switch _bab :=_ea .(type ){case _ffd .StartElement :switch _bab .Name .Local {case "s\u0068\u0061\u0070\u0065\u006c\u0061\u0079\u006f\u0075\u0074":_d .Layout =_dg .NewOfcShapelayout ();if _ba :=d .DecodeElement (_d .Layout ,&_bab );_ba !=nil {return _ba ;};case "\u0073h\u0061\u0070\u0065\u0074\u0079\u0070e":_d .ShapeType =_dg .NewShapetype ();if _ggd :=d .DecodeElement (_d .ShapeType ,&_bab );_ggd !=nil {return _ggd ;};case "\u0073\u0068\u0061p\u0065":_gg :=_dg .NewShape ();if _b :=d .DecodeElement (_gg ,&_bab );_b !=nil {return _b ;};_d .Shape =append (_d .Shape ,_gg );};case _ffd .EndElement :break _gc ;};};return nil ;};

// NewCommentDrawing constructs a new comment drawing.
func NewCommentDrawing ()*Container {_a :=NewContainer ();_a .Layout =_dg .NewOfcShapelayout ();_a .Layout .ExtAttr =_dg .ST_ExtEdit ;_a .Layout .Idmap =_dg .NewOfcCT_IdMap ();_a .Layout .Idmap .DataAttr =_cd .String ("\u0031");_a .Layout .Idmap .ExtAttr =_dg .ST_ExtEdit ;_a .ShapeType =_dg .NewShapetype ();_a .ShapeType .IdAttr =_cd .String ("_\u0078\u0030\u0030\u0030\u0030\u005f\u0074\u0032\u0030\u0032");_a .ShapeType .CoordsizeAttr =_cd .String ("2\u0031\u0036\u0030\u0030\u002c\u0032\u0031\u0036\u0030\u0030");_a .ShapeType .SptAttr =_cd .Float32 (202);_a .ShapeType .PathAttr =_cd .String ("\u006d\u0030\u002c0l\u0030\u002c\u0032\u0031\u0036\u0030\u0030\u002c\u00321\u00360\u0030,\u00321\u0036\u0030\u0030\u002c\u0032\u0031\u0036\u0030\u0030\u002c\u0030\u0078\u0065");_g :=_dg .NewEG_ShapeElements ();_a .ShapeType .EG_ShapeElements =append (_a .ShapeType .EG_ShapeElements ,_g );_g .Path =_dg .NewPath ();_g .Path .GradientshapeokAttr =_fe .ST_TrueFalseT ;_g .Path .ConnecttypeAttr =_dg .OfcST_ConnectTypeRect ;return _a ;};func NewContainer ()*Container {return &Container {}};