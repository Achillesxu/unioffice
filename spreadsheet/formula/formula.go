//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

// Package formula provides formula parsing and evaluation. The lexer is
// implemented with a ragel grammar while the the parser is implemented with
// goyacc. The entire formula grammar is not implemented and not all functions
// are supported yet. For compatibility sake, upon failure to parse or execute a
// formula, unioffice leaves cached formula results blank allowing Excel to compute
// formulas upon load. This is similar to what most other Excel libraries do
// which leave all cached results blank instead of attempting to execute
// formulas.
//
// The unit tests for this package are unique in that we can take advantage of
// "cached" formula results that Excel/LibreOffice write to the sheet.  These
// are the computed results of a formula in string form.  By comparing these
// values to the value computed by the unioffice evaluation of the formula, adding
// a new test means just adding a new formula to one of the reference sheets
// with Excel. During the unit test, we evaluate the formula and compare it to
// the value that Excel computed.  If they're the same, the test passes.
package formula ;import (_cb "bytes";_g "errors";_dc "fmt";_bf "github.com/unidoc/unioffice/common/logger";_dfa "github.com/unidoc/unioffice/internal/mergesort";_ba "github.com/unidoc/unioffice/internal/wildcard";_cc "github.com/unidoc/unioffice/spreadsheet/format";_bef "github.com/unidoc/unioffice/spreadsheet/reference";_ff "github.com/unidoc/unioffice/spreadsheet/update";_c "io";_ea "math";_e "math/big";_df "math/rand";_be "regexp";_b "sort";_gc "strconv";_ce "strings";_ga "sync";_f "time";_cf "unicode";);func _acff (_gecg ,_aggee ,_ffaa ,_bagb ,_ecdd ,_cgeg float64 )float64 {var _bdead ,_bcfg float64 ;_gaae :=0.0;_beeb :=_ea .Ceil (_ecdd );_dagc :=_gecg -_aggee ;_dcbb :=false ;_gbea :=0.0;for _dfedc :=1.0;_dfedc <=_beeb ;_dfedc ++{if !_dcbb {_bdead =_fgbf (_gecg ,_aggee ,_ffaa ,_dfedc ,_cgeg );_gbea =_dagc /(_ffaa -_dfedc +1);if _gbea > _bdead {_bcfg =_gbea ;_dcbb =true ;}else {_bcfg =_bdead ;_dagc -=_bdead ;};}else {_bcfg =_gbea ;};if _dfedc ==_beeb {_bcfg *=_ecdd +1-_beeb ;};_gaae +=_bcfg ;};return _gaae ;};type amorArgs struct{_bcead float64 ;_ddee float64 ;_bgde float64 ;_fbg float64 ;_gdca int ;_dffg float64 ;_gcfc int ;};

// String returns an empty string for EmptyExpr.
func (_ee EmptyExpr )String ()string {return ""};

// Rri implements the Excel RRI function.
func Rri (args []Result )Result {if len (args )!=3{return MakeErrorResult ("\u0052\u0052\u0049\u0020r\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0074\u0068r\u0065e\u0020\u0061\u0072\u0067\u0075\u006d\u0065n\u0074\u0073");};if args [0].Type !=ResultTypeNumber {return MakeErrorResult ("\u0052\u0052I\u0020\u0072\u0065\u0071\u0075i\u0072\u0065\u0073\u0020\u006eu\u006d\u0062\u0065\u0072\u0020\u006f\u0066\u0020\u0070\u0065\u0072\u0069\u006f\u0064\u0073\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};_bbbff :=args [0].ValueNumber ;if _bbbff <=0{return MakeErrorResultType (ErrorTypeNum ,"\u0052R\u0049\u0020r\u0065\u0071\u0075i\u0072\u0065\u0073\u0020\u006e\u0075\u006db\u0065\u0072\u0020\u006f\u0066\u0020p\u0065\u0072\u0069\u006f\u0064\u0073\u0020\u0074\u006f\u0020\u0062e\u0020\u0070\u006f\u0073\u0069\u0074\u0069\u0076\u0065");};if args [1].Type !=ResultTypeNumber {return MakeErrorResult ("\u0052\u0052\u0049\u0020\u0072\u0065\u0071\u0075i\u0072\u0065\u0073 p\u0072\u0065\u0073\u0065\u006e\u0074 \u0076\u0061\u006c\u0075\u0065\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006db\u0065\u0072\u0020\u0061\u0072\u0067\u0075\u006de\u006e\u0074");};_cgga :=args [1].ValueNumber ;if _cgga <=0{return MakeErrorResultType (ErrorTypeNum ,"\u0052\u0052\u0049\u0020\u0072e\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0070\u0072\u0065\u0073\u0065\u006et\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u0070\u006f\u0073\u0069\u0074\u0069\u0076\u0065");};if args [2].Type !=ResultTypeNumber {return MakeErrorResult ("R\u0052\u0049\u0020\u0072\u0065\u0071\u0075\u0069\u0072e\u0073\u0020\u0066\u0075\u0074\u0075\u0072e \u0076\u0061\u006c\u0075e\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u006e\u0075mb\u0065\u0072 \u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};_cccf :=args [2].ValueNumber ;if _cccf < 0{return MakeErrorResultType (ErrorTypeNum ,"\u0052R\u0049\u0020r\u0065\u0071\u0075\u0069r\u0065\u0073\u0020f\u0075\u0074\u0075\u0072\u0065\u0020\u0076\u0061\u006cue\u0020\u0074\u006f \u0062\u0065 \u006e\u006f\u006e\u0020\u006e\u0065g\u0061\u0074i\u0076\u0065");};return MakeNumberResult (_ea .Pow (_cccf /_cgga ,1/_bbbff )-1);};

// Eval evaluates and returns the result of the cell reference.
func (_fbc CellRef )Eval (ctx Context ,ev Evaluator )Result {return ctx .Cell (_fbc ._cbe ,ev )};func _cccca (_bacc string ,_fdcdd []Result )(*parsedSearchObject ,Result ){_eeaea :=len (_fdcdd );if _eeaea !=2&&_eeaea !=3{return nil ,MakeErrorResult (_bacc +"\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0074\u0077\u006f\u0020\u006fr\u0020t\u0068\u0072\u0065\u0065\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0073");};_ffae :=_fdcdd [0];if _ffae .Type ==ResultTypeError {return nil ,_ffae ;};if _ffae .Type !=ResultTypeString &&_ffae .Type !=ResultTypeNumber {return nil ,MakeErrorResult ("\u0054\u0068e\u0020\u0066\u0069\u0072s\u0074\u0020a\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0020s\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0061\u0020\u0073t\u0072\u0069\u006e\u0067");};_bgda :=_fdcdd [1];if _bgda .Type ==ResultTypeError {return nil ,_bgda ;};if _bgda .Type !=ResultTypeString &&_bgda .Type !=ResultTypeNumber {return nil ,MakeErrorResult ("\u0054\u0068\u0065\u0020\u0073\u0065\u0063\u006f\u006e\u0064\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0020\u0073\u0068\u006f\u0075l\u0064\u0020\u0062\u0065\u0020a\u0020\u0073t\u0072\u0069\u006e\u0067");};_ggce :=_bgda .Value ();_accgc :=_ffae .Value ();_dccc :=1;if _eeaea ==3&&_fdcdd [2].Type !=ResultTypeEmpty {_dadg :=_fdcdd [2];if _dadg .Type !=ResultTypeNumber {return nil ,MakeErrorResult ("P\u006f\u0073\u0069\u0074\u0069\u006fn\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062e\u0020\u0061\u0020n\u0075m\u0062\u0065\u0072");};_dccc =int (_dadg .ValueNumber );if _dccc < 1{return nil ,MakeErrorResultType (ErrorTypeValue ,"\u0050\u006f\u0073\u0069\u0074\u0069\u006f\u006e\u0020\u0073\u0068\u006f\u0075l\u0064\u0020\u0062\u0065\u0020\u0061 \u006e\u0075\u006d\u0062\u0065\u0072\u0020\u006d\u006f\u0072\u0065\u0020\u0074h\u0061\u006e\u0020\u0030");};if _dccc > len (_ggce ){return nil ,MakeErrorResultType (ErrorTypeValue ,"\u0050\u006f\u0073\u0069\u0074\u0069\u006f\u006e\u0020\u0073\u0068\u006f\u0075l\u0064\u0020\u0062\u0065\u0020\u0061 \u006e\u0075\u006d\u0062\u0065\u0072\u0020\u006d\u006f\u0072\u0065\u0020\u0074h\u0061\u006e\u0020\u0030");};};return &parsedSearchObject {_accgc ,_ggce ,_dccc },_ega ;};

// CountIfs implements the COUNTIFS function.
func CountIfs (args []Result )Result {_dgad :=_gcafd (args ,false ,"\u0043\u004f\u0055\u004e\u0054\u0049\u0046\u0053");if _dgad .Type !=ResultTypeEmpty {return _dgad ;};_adgce :=_edca (args );return MakeNumberResult (float64 (len (_adgce )));};

// NewBool constructs a new boolean expression.
func NewBool (v string )Expression {_fab ,_gcc :=_gc .ParseBool (v );if _gcc !=nil {_bf .Log .Debug ("\u0065\u0072\u0072\u006f\u0072\u0020p\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0066\u006f\u0072\u006d\u0075\u006ca\u0020\u0062\u006f\u006f\u006c\u0020\u0025s\u003a\u0020\u0025\u0076",v ,_gcc );};return Bool {_aag :_fab };};func _bfea (_feb ,_cgag ,_dcfd float64 )float64 {return (_feb *3600+_cgag *60+_dcfd )/86400};const (ReferenceTypeInvalid ReferenceType =iota ;ReferenceTypeCell ;ReferenceTypeHorizontalRange ;ReferenceTypeVerticalRange ;ReferenceTypeNamedRange ;ReferenceTypeRange ;ReferenceTypeSheet ;);type xargs struct{_bfed []float64 ;_ggfbf []float64 ;};

// Eval evaluates and returns a number.
func (_eggda Number )Eval (ctx Context ,ev Evaluator )Result {return MakeNumberResult (_eggda ._bcfc )};func _acb (_cfdg float64 )_f .Time {_gfeb :=int64 ((_cfdg -_dceb )*_agge );return _f .Unix (0,_gfeb ).UTC ();};

// ISEVEN is an implementation of the Excel ISEVEN() function.
func IsEven (args []Result )Result {if len (args )!=1{return MakeErrorResult ("\u0049\u0053\u0045VE\u004e\u0028\u0029\u0020\u0061\u0063\u0063\u0065\u0070t\u0073 \u0061 \u0073i\u006e\u0067\u006c\u0065\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};if args [0].Type !=ResultTypeNumber {return MakeErrorResult ("\u0049\u0053\u0045\u0056\u0045\u004e \u0061\u0063\u0063\u0065\u0070\u0074\u0073\u0020\u0061\u0020\u006e\u0075\u006de\u0072\u0069\u0063\u0020\u0061\u0072\u0067u\u006d\u0065\u006e\u0074");};_ebgaf :=int (args [0].ValueNumber );return MakeBoolResult (_ebgaf ==_ebgaf /2*2);};func _fcg (_ebb ,_cbb ,_gebb int )float64 {return float64 (_adc (_ebb ,_f .Month (_cbb ),_gebb )/86400)+_dceb ;};

// DateDif is an implementation of the Excel DATEDIF() function.
func DateDif (args []Result )Result {if len (args )!=3||args [0].Type !=ResultTypeNumber ||args [1].Type !=ResultTypeNumber ||args [2].Type !=ResultTypeString {return MakeErrorResult ("\u0044\u0041\u0054\u0045\u0044I\u0046\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0074\u0077o\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0061\u006e\u0064\u0020\u006f\u006e\u0065\u0020\u0073\u0074\u0072\u0069\u006e\u0067\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006et");};_eccd :=args [0].ValueNumber ;_aae :=args [1].ValueNumber ;if _aae < _eccd {return MakeErrorResultType (ErrorTypeNum ,"\u0054\u0068\u0065\u0020\u0073\u0074\u0061r\u0074\u0020\u0064a\u0074\u0065\u0020\u0069s\u0020\u0067\u0072\u0065\u0061\u0074\u0065\u0072\u0020\u0074\u0068\u0061\u006e\u0020\u0074\u0068\u0065\u0020\u0065\u006e\u0064\u0020\u0064\u0061\u0074\u0065");};if _aae ==_eccd {return MakeNumberResult (0);};_bbg :=_ce .ToLower (args [2].ValueString );if _bbg =="\u0064"{return MakeNumberResult (_aae -_eccd );};_fcfg :=_acb (_eccd );_gggd :=_acb (_aae );_fgg ,_cg ,_ecdg :=_fcfg .Date ();_abgg ,_cca ,_fcea :=_gggd .Date ();_fgc :=int (_cg );_cbec :=int (_cca );var _fba float64 ;switch _bbg {case "\u0079":_fba =float64 (_abgg -_fgg );if _cbec < _fgc ||(_cbec ==_fgc &&_fcea < _ecdg ){_fba --;};case "\u006d":_bgb :=_abgg -_fgg ;_bce :=_cbec -_fgc ;if _fcea < _ecdg {_bce --;};if _bce < 0{_bgb --;_bce +=12;};_fba =float64 (_bgb *12+_bce );case "\u006d\u0064":_faa :=_cbec ;if _fcea < _ecdg {_faa --;};_fba =float64 (int (_aae -_fcg (_abgg ,_faa ,_ecdg )));case "\u0079\u006d":_fba =float64 (_cbec -_fgc );if _fcea < _ecdg {_fba --;};if _fba < 0{_fba +=12;};case "\u0079\u0064":_bcf :=_abgg ;if _cbec < _fgc ||(_cbec ==_fgc &&_fcea < _ecdg ){_bcf --;};_fba =float64 (int (_aae -_fcg (_bcf ,_fgc ,_ecdg )));default:return MakeErrorResultType (ErrorTypeNum ,"\u0049n\u0063\u006f\u0072\u0072\u0065\u0063\u0074\u0020\u0069\u006e\u0074e\u0072\u0076\u0061\u006c\u0020\u0076\u0061\u006c\u0075\u0065");};return MakeNumberResult (_fba );};func Unicode (args []Result )Result {if len (args )!=1{return MakeErrorResult ("\u0055\u004e\u0049\u0043\u004fD\u0045\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0061\u0020s\u0069\u006e\u0067\u006c\u0065\u0020\u0073\u0074\u0072\u0069\u006e\u0067\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};_abdgg :=args [0].AsString ();if _abdgg .Type !=ResultTypeString {return MakeErrorResult ("\u0055\u004e\u0049\u0043\u004fD\u0045\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0061\u0020s\u0069\u006e\u0067\u006c\u0065\u0020\u0073\u0074\u0072\u0069\u006e\u0067\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};if len (_abdgg .ValueString )==0{return MakeErrorResult ("\u0055\u004e\u0049\u0043\u004f\u0044\u0045 \u0072\u0065\u0071u\u0069\u0072\u0065\u0073 \u0061\u0020\u006e\u006f\u006e\u002d\u007a\u0065\u0072\u006f\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};return MakeNumberResult (float64 (_abdgg .ValueString [0]));};

// YearFrac is an implementation of the Excel YEARFRAC() function.
func YearFrac (args []Result )Result {_gfac :=len (args );if (_gfac !=2&&_gfac !=3)||args [0].Type !=ResultTypeNumber ||args [1].Type !=ResultTypeNumber {return MakeErrorResult ("Y\u0045\u0041\u0052\u0046\u0052\u0041\u0043\u0020\u0072e\u0071\u0075\u0069\u0072\u0065\u0073\u0020tw\u006f\u0020\u006f\u0072 \u0074\u0068\u0072\u0065\u0065\u0020\u006e\u0075\u006dbe\u0072\u0020a\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0073");};_dcag :=0;if _gfac ==3&&args [2].Type !=ResultTypeEmpty {if args [2].Type !=ResultTypeNumber {return MakeErrorResult ("Y\u0045\u0041\u0052\u0046\u0052\u0041\u0043\u0020\u0072e\u0071\u0075\u0069\u0072\u0065\u0073\u0020ba\u0073\u0069\u0073\u0020a\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0020\u0074o \u0062\u0065 \u0061\u0020\u006e\u0075\u006d\u0062\u0065\u0072");};_dcag =int (args [2].ValueNumber );if !_aaac (_dcag ){return MakeErrorResultType (ErrorTypeNum ,"\u0049\u006ec\u006f\u0072\u0072\u0065c\u0074\u0020b\u0061\u0073\u0069\u0073\u0020\u0061\u0072\u0067u\u006d\u0065\u006e\u0074\u0020\u0066\u006f\u0072\u0020\u0059\u0045\u0041R\u0046\u0052\u0041\u0043");};};if args [0].Type !=ResultTypeNumber {return MakeErrorResult ("\u0059\u0045\u0041\u0052\u0046\u0052\u0041\u0043\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020s\u0074\u0061\u0072\u0074\u0020\u0064\u0061t\u0065\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006db\u0065\u0072\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};_cfg :=args [0].ValueNumber ;if args [1].Type !=ResultTypeNumber {return MakeErrorResult ("\u0059\u0045\u0041\u0052\u0046\u0052\u0041\u0043 \u0072\u0065\u0071ui\u0072\u0065\u0073\u0020\u0065\u006ed\u0020\u0064\u0061\u0074\u0065\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006db\u0065\u0072\u0020\u0061\u0072\u0067\u0075\u006de\u006e\u0074");};_gec :=args [1].ValueNumber ;_dgbf ,_cfdf :=_eaee (_cfg ,_gec ,_dcag );if _cfdf .Type ==ResultTypeError {return _cfdf ;};return MakeNumberResult (_dgbf );};

// Searchb is an implementation of the Excel SEARCHB().
func Searchb (ctx Context ,ev Evaluator ,args []Result )Result {if !ctx .IsDBCS (){return Search (args );};_eggdg ,_deeaf :=_cccca ("\u0046\u0049\u004e\u0044",args );if _deeaf .Type !=ResultTypeEmpty {return _deeaf ;};_bacab :=_ce .ToLower (_eggdg ._cfddd );_ebabb :=_ce .ToLower (_eggdg ._dgbd );if _bacab ==""{return MakeNumberResult (1.0);};_cfgd :=_eggdg ._daag -1;_daff :=1;_cafg :=0;for _ggcg :=range _ebabb {if _ggcg !=0{_dcbad :=1;if _ggcg -_cafg > 1{_dcbad =2;};_daff +=_dcbad ;};if _daff > _cfgd {_afgdff :=_ba .Index (_bacab ,_ebabb [_ggcg :]);if _afgdff ==0{return MakeNumberResult (float64 (_daff ));};};_cafg =_ggcg ;};return MakeErrorResultType (ErrorTypeValue ,"\u004eo\u0074\u0020\u0066\u006f\u0075\u006ed");};var _dceb float64 =25569.0;const _ggbg ="\u0028(\u005b0\u002d\u0039\u005d\u0029\u002b)\u0020\u0028a\u006d\u007c\u0070\u006d\u0029";const _bfbae =16;func _fgdc (_facgc ,_bag _f .Time ,_eedf int )float64 {if _facgc .After (_bag ){_facgc ,_bag =_bag ,_facgc ;};_abde :=0;_cbga ,_afdd ,_edba :=_facgc .Date ();_agf ,_gde ,_dbg :=_bag .Date ();_gcae ,_cfbb :=int (_afdd ),int (_gde );_gadg ,_cdf :=_cdbd (_cbga ,_gcae ,_edba ,_eedf ),_cdbd (_agf ,_cfbb ,_dbg ,_eedf );if !_cdea (_eedf ){return _fcg (_agf ,_cfbb ,_cdf )-_fcg (_cbga ,_gcae ,_gadg );};if _eedf ==0{if (_gcae ==2||_gadg < 30)&&_dbg ==31{_cdf =31;}else if _cfbb ==2&&_cdf ==_aeee (_agf ,_cfbb ){_cdf =_aeee (_agf ,2);};}else {if _gcae ==2&&_gadg ==30{_gadg =_aeee (_cbga ,2);};if _cfbb ==2&&_cdf ==30{_cdf =_aeee (_agf ,2);};};if _cbga < _agf ||(_cbga ==_agf &&_gcae < _cfbb ){_abde =30-_gadg +1;_edba =1;_gadg =1;_gffc :=_f .Date (_cbga ,_f .Month (_gcae ),_edba ,0,0,0,0,_f .UTC ).AddDate (0,1,0);if _gffc .Year ()< _agf {_abde +=_aaeb (_gffc .Year (),int (_gffc .Month ()),12,_eedf );_gffc =_gffc .AddDate (0,13-int (_gffc .Month ()),0);_abde +=_bcg (_gffc .Year (),_agf -1,_eedf );};_abde +=_aaeb (_agf ,int (_gffc .Month ()),_cfbb -1,_eedf );_gffc =_gffc .AddDate (0,_cfbb -int (_gffc .Month ()),0);_gcae =_gffc .Day ();};_abde +=_cdf -_gadg ;if _abde > 0{return float64 (_abde );}else {return 0;};};

// Now is an implementation of the Excel NOW() function.
func Now (args []Result )Result {if len (args )> 0{return MakeErrorResult ("\u004e\u004fW\u0020\u0064\u006f\u0065\u0073\u006e\u0027\u0074\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0020\u0061\u0072\u0067\u0075\u006den\u0074\u0073");};_ebf :=_f .Now ();_ ,_gfff :=_ebf .Zone ();_bge :=_dceb +float64 (_ebf .Unix ()+int64 (_gfff ))/86400;return MakeNumberResult (_bge );};

// Lookup implements the LOOKUP function that returns a matching value from a
// column, or from the same index in a second column.
func Lookup (args []Result )Result {if len (args )< 2{return MakeErrorResult ("\u004c\u004f\u004f\u004b\u0055\u0050\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0061\u0074\u0020\u006c\u0065\u0061\u0073\u0074 \u0074\u0077\u006f\u0020\u0061r\u0067\u0075m\u0065\u006e\u0074\u0073");};if len (args )> 3{return MakeErrorResult ("\u004c\u004f\u004f\u004b\u0055\u0050\u0020\u0072\u0065\u0071\u0075\u0069\u0072e\u0073\u0020\u0061\u0074\u0020\u006do\u0073\u0074\u0020\u0074\u0068\u0072\u0065\u0065\u0020\u0061\u0072\u0067\u0075m\u0065\u006e\u0074\u0073");};_dcdgg :=args [0];_bbeg :=args [1];if _bbeg .Type !=ResultTypeArray &&_bbeg .Type !=ResultTypeList {return MakeErrorResult ("\u0056\u004cO\u004f\u004b\u0055\u0050\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0073\u0065\u0063\u006f\u006e\u0064\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0020\u006f\u0066\u0020\u0074\u0079\u0070\u0065\u0020\u0061\u0072\u0072\u0061\u0079");};_dcec :=_dece (_bbeg );_afce :=-1;for _ggge ,_acgd :=range _dcec {if _fbbf (_dcdgg ,_acgd ,false ,false )==_babd {_afce =_ggge ;};};if _afce ==-1{return MakeErrorResultType (ErrorTypeNA ,"\u004c\u004f\u004f\u004bUP\u0020\u006e\u006f\u0020\u0072\u0065\u0073\u0075\u006c\u0074\u0020\u0066\u006f\u0075n\u0064");};_feff :=_dcec ;if len (args )==3{_feff =_dece (args [2]);};if _afce < 0||_afce >=len (_feff ){return MakeErrorResultType (ErrorTypeNA ,"\u004c\u004f\u004f\u004bUP\u0020\u006e\u006f\u0020\u0072\u0065\u0073\u0075\u006c\u0074\u0020\u0066\u006f\u0075n\u0064");};return _feff [_afce ];};const _fbcd =57357;

// Accrintm implements the Excel ACCRINTM function.
func Accrintm (args []Result )Result {_bded :=len (args );if _bded !=4&&_bded !=5{return MakeErrorResult ("A\u0043\u0043\u0052\u0049\u004e\u0054\u004d\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0066o\u0075\u0072\u0020\u006f\u0072\u0020\u0066\u0069\u0076\u0065 a\u0072\u0067\u0075m\u0065n\u0074\u0073");};_aff ,_fdgc :=_gagf (args [0],"\u0069\u0073\u0073\u0075\u0065\u0020\u0064\u0061\u0074\u0065","\u0041\u0043\u0043\u0052\u0049\u004e\u0054\u004d");if _fdgc .Type ==ResultTypeError {return _fdgc ;};_deca ,_fdgc :=_gagf (args [1],"\u0073e\u0074t\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u0064\u0061\u0074\u0065","\u0041\u0043\u0043\u0052\u0049\u004e\u0054\u004d");if _fdgc .Type ==ResultTypeError {return _fdgc ;};if _aff >=_deca {return MakeErrorResultType (ErrorTypeNum ,"\u0049\u0073\u0073\u0075\u0065\u0020d\u0061\u0074\u0065\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0065\u0061\u0072\u006c\u0069\u0065r\u0020\u0074\u0068\u0061\u006e\u0020\u0073\u0065\u0074\u0074\u006c\u0065\u006d\u0065n\u0074 \u0064\u0061\u0074\u0065");};if args [2].Type !=ResultTypeNumber {return MakeErrorResult ("\u0041C\u0043\u0052I\u004e\u0054\u004d\u0020r\u0065\u0071\u0075i\u0072\u0065\u0073\u0020\u0072\u0061\u0074\u0065\u0020to\u0020\u0062\u0065 \u006e\u0075m\u0062\u0065\u0072\u0020\u0061\u0072g\u0075\u006de\u006e\u0074");};_aagb :=args [2].ValueNumber ;if _aagb <=0{return MakeErrorResultType (ErrorTypeNum ,"\u0041\u0043\u0043\u0052\u0049\u004e\u0054\u004d\u0020\u0072\u0065q\u0075\u0069\u0072\u0065\u0073\u0020\u0072\u0061t\u0065 \u0074\u006f\u0020\u0062\u0065\u0020\u0070\u006f\u0073\u0069\u0074\u0069\u0076\u0065\u0020\u006e\u0075\u006db\u0065\u0072\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};if args [3].Type !=ResultTypeNumber {return MakeErrorResult ("\u0041\u0043\u0043\u0052\u0049\u004e\u0054M\u0020\u0072\u0065q\u0075\u0069\u0072\u0065s\u0020\u0070\u0061\u0072\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};_cedc :=args [3].ValueNumber ;if _cedc <=0{return MakeErrorResultType (ErrorTypeNum ,"\u0041\u0043C\u0052\u0049\u004e\u0054\u004d \u0072\u0065\u0071\u0075\u0069r\u0065\u0073\u0020\u0070\u0061\u0072\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u0070\u006f\u0073\u0069\u0074\u0069\u0076\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};_gcad :=0;if _bded ==5&&args [4].Type !=ResultTypeEmpty {if args [4].Type !=ResultTypeNumber {return MakeErrorResult ("\u0041C\u0043\u0052I\u004e\u0054\u004d \u0072\u0065\u0071\u0075\u0069\u0072\u0065s\u0020\u0062\u0061\u0073\u0069\u0073 \u0074\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006d\u0062\u0065r\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};_gcad =int (args [4].ValueNumber );if !_aaac (_gcad ){return MakeErrorResultType (ErrorTypeNum ,"\u0049\u006ec\u006f\u0072\u0072\u0065c\u0074\u0020b\u0061\u0073\u0069\u0073\u0020\u0061\u0072\u0067u\u006d\u0065\u006e\u0074\u0020\u0066\u006f\u0072\u0020\u0041\u0043\u0043R\u0049\u004e\u0054\u004d");};};_baedb ,_fdgc :=_eaee (_aff ,_deca ,_gcad );if _fdgc .Type ==ResultTypeError {return _fdgc ;};return MakeNumberResult (_cedc *_aagb *_baedb );};var _ecbeb =[...]int {0,-2,1,2,0,0,0,0,11,12,13,14,0,16,5,6,7,8,22,0,24,46,0,26,25,29,30,31,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,18,20,9,10,0,0,23,32,33,47,0,49,51,34,35,36,37,38,39,40,41,42,43,44,45,0,17,0,0,15,27,0,48,53,4,19,21,28,50,52};func _gfee (_ccfa ,_gdd float64 ,_ccab ,_fgb int )float64 {_fabe :=_acb (_ccfa );_ffbdc :=_acb (_gdd );_efd :=_cdec (_fabe ,_ffbdc ,_ccab );return _fgdc (_fabe ,_efd ,_fgb );};

// BinaryExpr is a binary expression.
type BinaryExpr struct{_ced ,_baa Expression ;_de BinOpType ;};

// Update returns the same object as updating sheet references does not affect Error.
func (_aee Error )Update (q *_ff .UpdateQuery )Expression {return _aee };func _fagg (_ddac ,_agaf float64 )float64 {_ddac =_ea .Trunc (_ddac );_agaf =_ea .Trunc (_agaf );if _ddac ==0{return _agaf ;};if _agaf ==0{return _ddac ;};for _ddac !=_agaf {if _ddac > _agaf {_ddac =_ddac -_agaf ;}else {_agaf =_agaf -_ddac ;};};return _ddac ;};

// CeilingPrecise is an implementation of the CEILING.PRECISE function which
// returns the ceiling of a number.
func CeilingPrecise (args []Result )Result {if len (args )==0{return MakeErrorResult ("\u0043\u0045\u0049\u004c\u0049\u004e\u0047\u002eP\u0052\u0045\u0043IS\u0045\u0028\u0029\u0020\u0072\u0065q\u0075\u0069\u0072\u0065\u0073\u0020\u0061\u0074\u0020\u006c\u0065\u0061\u0073\u0074\u0020o\u006e\u0065\u0020\u0061\u0072\u0067\u0075\u006de\u006e\u0074");};if len (args )> 2{return MakeErrorResult ("\u0043\u0045I\u004c\u0049\u004e\u0047\u002e\u0050\u0052\u0045\u0043\u0049\u0053\u0045\u0028\u0029\u0020\u0061\u006c\u006c\u006f\u0077\u0073\u0020\u0061\u0074\u0020\u006d\u006f\u0073\u0074\u0020\u0074\u0077\u006f\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0073");};_egab :=args [0].AsNumber ();if _egab .Type !=ResultTypeNumber {return MakeErrorResult ("\u0066\u0069r\u0073\u0074\u0020\u0061\u0072g\u0075\u006d\u0065\u006e\u0074 \u0074\u006f\u0020\u0043\u0045\u0049\u004c\u0049\u004e\u0047\u002e\u0050\u0052\u0045\u0043\u0049\u0053\u0045\u0028\u0029\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020\u0061\u0020\u006e\u0075\u006d\u0062\u0065\u0072");};_geff :=float64 (1);if _egab .ValueNumber < 0{_geff =-1;};if len (args )> 1{_gbfed :=args [1].AsNumber ();if _gbfed .Type !=ResultTypeNumber {return MakeErrorResult ("\u0073\u0065\u0063\u006f\u006e\u0064\u0020\u0061\u0072\u0067\u0075m\u0065\u006e\u0074\u0020\u0074\u006f\u0020\u0043E\u0049L\u0049\u004e\u0047\u002e\u0050\u0052\u0045\u0043\u0049\u0053\u0045\u0028\u0029\u0020\u006d\u0075\u0073\u0074 \u0062\u0065\u0020\u0061\u0020\u006e\u0075\u006d\u0062\u0065\u0072");};_geff =_ea .Abs (_gbfed .ValueNumber );};if len (args )==1{return MakeNumberResult (_ea .Ceil (_egab .ValueNumber ));};_cdbc :=_egab .ValueNumber ;_cdbc ,_adfg :=_ea .Modf (_cdbc /_geff );if _adfg !=0{if _egab .ValueNumber > 0{_cdbc ++;};};return MakeNumberResult (_cdbc *_geff );};

// SetLocked does nothing for the invalid reference context.
func (_bdbff *ivr )SetLocked (cellRef string ,locked bool ){};

// LCM implements the Excel LCM() function which returns the least common
// multiple of a range of numbers.
func LCM (args []Result )Result {if len (args )==0{return MakeErrorResult ("\u004c\u0043M(\u0029\u0020\u0072e\u0071\u0075\u0069\u0072es \u0061t \u006c\u0065\u0061\u0073\u0074\u0020\u006fne\u0020\u0061\u0072\u0067\u0075\u006d\u0065n\u0074");};_bfff :=[]float64 {};for _ ,_dbad :=range args {switch _dbad .Type {case ResultTypeString :_fedff :=_dbad .AsNumber ();if _fedff .Type !=ResultTypeNumber {return MakeErrorResult ("\u004c\u0043M(\u0029\u0020\u006fn\u006c\u0079\u0020\u0061cce\u0070ts\u0020\u006e\u0075\u006d\u0065\u0072\u0069c \u0061\u0072\u0067\u0075\u006d\u0065\u006et\u0073");};_bfff =append (_bfff ,_fedff .ValueNumber );case ResultTypeList :_ccdb :=LCM (_dbad .ValueList );if _ccdb .Type !=ResultTypeNumber {return _ccdb ;};_bfff =append (_bfff ,_ccdb .ValueNumber );case ResultTypeNumber :_bfff =append (_bfff ,_dbad .ValueNumber );case ResultTypeEmpty :case ResultTypeError :return _dbad ;};};if len (_bfff )==0{return MakeErrorResult ("\u004cC\u004d\u0020r\u0065\u0071\u0075\u0069r\u0065\u0073\u0020a\u0074\u0020\u006c\u0065\u0061\u0073\u0074\u0020\u006fne\u0020\u006e\u006fn\u002d\u0065m\u0070\u0074\u0079\u0020\u0061\u0072g\u0075\u006de\u006e\u0074");};if _bfff [0]< 0{return MakeErrorResult ("\u004c\u0043M\u0028\u0029\u0020\u006fn\u006c\u0079 \u0061\u0063\u0063\u0065\u0070\u0074\u0073\u0020p\u006f\u0073\u0069\u0074\u0069\u0076\u0065\u0020\u0061\u0072\u0067\u0075m\u0065\u006e\u0074\u0073");};if len (_bfff )==1{return MakeNumberResult (_bfff [0]);};_adcaa :=_bfff [0];for _fdaad :=1;_fdaad < len (_bfff );_fdaad ++{if _bfff [_fdaad ]< 0{return MakeErrorResult ("\u004c\u0043M\u0028\u0029\u0020\u006fn\u006c\u0079 \u0061\u0063\u0063\u0065\u0070\u0074\u0073\u0020p\u006f\u0073\u0069\u0074\u0069\u0076\u0065\u0020\u0061\u0072\u0067\u0075m\u0065\u006e\u0074\u0073");};_adcaa =_dcge (_adcaa ,_bfff [_fdaad ]);};return MakeNumberResult (_adcaa );};

// FactDouble is an implementation of the excel FACTDOUBLE function which
// returns the double factorial of a positive numeric input.
func FactDouble (args []Result )Result {if len (args )!=1{return MakeErrorResult ("\u0046\u0041C\u0054\u0044\u004f\u0055\u0042\u004c\u0045\u0028\u0029\u0020\u0061\u0063\u0063\u0065\u0070\u0074\u0073\u0020\u0061\u0020\u0073\u0069\u006e\u0067\u006c\u0065\u0020\u006e\u0075\u006d\u0065\u0072\u0069\u0063\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};_geab :=args [0].AsNumber ();if _geab .Type !=ResultTypeNumber {return MakeErrorResult ("\u0046\u0041C\u0054\u0044\u004f\u0055\u0042\u004c\u0045\u0028\u0029\u0020\u0061\u0063\u0063\u0065\u0070\u0074\u0073\u0020\u0061\u0020\u0073\u0069\u006e\u0067\u006c\u0065\u0020\u006e\u0075\u006d\u0065\u0072\u0069\u0063\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};if _geab .ValueNumber < 0{return MakeErrorResult ("\u0046A\u0043\u0054D\u004f\u0055\u0042\u004cE\u0028\u0029\u0020a\u0063\u0063\u0065\u0070\u0074\u0073\u0020\u006f\u006ely\u0020\u0070\u006fs\u0069\u0074i\u0076\u0065\u0020\u0061\u0072\u0067u\u006d\u0065n\u0074\u0073");};_eege :=float64 (1);_fbbc :=_ea .Trunc (_geab .ValueNumber );for _abad :=_fbbc ;_abad > 1;_abad -=2{_eege *=_abad ;};return MakeNumberResult (_eege );};const (_babd cmpResult =0;_gbde cmpResult =-1;_eeddc cmpResult =1;_defbd cmpResult =2;);type rangeIndex struct{_dgdeb int ;_cbcaa int ;};

// Counta implements the COUNTA function.
func Counta (args []Result )Result {return MakeNumberResult (_adeb (args ,_ebgf ))};

// Fact is an implementation of the excel FACT function which returns the
// factorial of a positive numeric input.
func Fact (args []Result )Result {if len (args )!=1{return MakeErrorResult ("F\u0041\u0043\u0054\u0028\u0029\u0020\u0061\u0063\u0063\u0065\u0070\u0074\u0073\u0020\u0061\u0020\u0073\u0069n\u0067\u006c\u0065\u0020\u006e\u0075\u006d\u0065\u0072\u0069c \u0061\u0072\u0067u\u006de\u006e\u0074");};_efga :=args [0].AsNumber ();if _efga .Type !=ResultTypeNumber {return MakeErrorResult ("F\u0041\u0043\u0054\u0028\u0029\u0020\u0061\u0063\u0063\u0065\u0070\u0074\u0073\u0020\u0061\u0020\u0073\u0069n\u0067\u006c\u0065\u0020\u006e\u0075\u006d\u0065\u0072\u0069c \u0061\u0072\u0067u\u006de\u006e\u0074");};if _efga .ValueNumber < 0{return MakeErrorResult ("\u0046\u0041\u0043\u0054\u0028\u0029\u0020\u0061\u0063\u0063\u0065\u0070\u0074\u0073\u0020\u006f\u006e\u006c\u0079\u0020\u0070\u006f\u0073\u0069t\u0069\u0076\u0065\u0020\u0061r\u0067\u0075m\u0065\u006e\u0074\u0073");};return MakeNumberResult (_dgbga (_efga .ValueNumber ));};

// MinIfs implements the MINIFS function.
func MinIfs (args []Result )Result {_cbac :=_gcafd (args ,true ,"\u004d\u0049\u004e\u0049\u0046\u0053");if _cbac .Type !=ResultTypeEmpty {return _cbac ;};_gcde :=_edca (args [1:]);_gdab :=_ea .MaxFloat64 ;_abeeb :=_affb (args [0]);for _ ,_ggbgg :=range _gcde {_cfdb :=_abeeb [_ggbgg ._dgdeb ][_ggbgg ._cbcaa ].ValueNumber ;if _gdab > _cfdb {_gdab =_cfdb ;};};if _gdab ==_ea .MaxFloat64 {_gdab =0;};return MakeNumberResult (float64 (_gdab ));};type yyParserImpl struct{_bfccd yySymType ;_fbcc [_bfbae ]yySymType ;_bdbfc int ;};const _gaaac =57360;func _bdff (_gdfa string ,_gfffa func (_aagcg float64 )float64 )Function {return func (_gffaf []Result )Result {if len (_gffaf )!=1{return MakeErrorResult (_gdfa +"\u0020\u0072\u0065\u0071ui\u0072\u0065\u0073\u0020\u006f\u006e\u0065\u0020\u0061\u0072\u0067\u0075\u006d\u0065n\u0074");};_defgf :=_gffaf [0].AsNumber ();switch _defgf .Type {case ResultTypeNumber :_badg :=_gfffa (_defgf .ValueNumber );if _ea .IsNaN (_badg ){return MakeErrorResult (_gdfa +"\u0020\u0072\u0065\u0074\u0075\u0072\u006e\u0065\u0064\u0020\u004e\u0061\u004e");};if _ea .IsInf (_badg ,0){return MakeErrorResult (_gdfa +"\u0020r\u0065t\u0075\u0072\u006e\u0065\u0064 \u0069\u006ef\u0069\u006e\u0069\u0074\u0079");};return MakeNumberResult (_badg );case ResultTypeList ,ResultTypeString :return MakeErrorResult (_gdfa +"\u0020\u0072\u0065\u0071u\u0069\u0072\u0065\u0073\u0020\u0061\u0020\u006e\u0075\u006de\u0072i\u0063\u0020\u0061\u0072\u0067\u0075\u006de\u006e\u0074");case ResultTypeError :return _defgf ;default:return MakeErrorResult (_dc .Sprintf ("\u0075\u006e\u0068a\u006e\u0064\u006c\u0065d\u0020\u0025\u0073\u0028\u0029\u0020\u0061r\u0067\u0075\u006d\u0065\u006e\u0074\u0020\u0074\u0079\u0070\u0065\u0020\u0025\u0073",_gdfa ,_defgf .Type ));};};};const _dcecb =57375;

// Max is an implementation of the Excel MAX() function.
func Max (args []Result )Result {return _edgdf (args ,false )};func (_eebab *Lexer )emit (_acge tokenType ,_faab []byte ){if _ddae {_dc .Println ("\u0065\u006d\u0069\u0074",_acge ,_gcfbc (string (_faab )));};_eebab ._cbcbf <-&node {_acge ,string (_faab )};};var _dfcc =[]*_be .Regexp {};

// Rept is an implementation of the Excel REPT function that returns n copies of
// a string.
func Rept (args []Result )Result {if len (args )!=2{return MakeErrorResult ("R\u0045\u0050\u0054\u0020\u0072\u0065q\u0075\u0069\u0072\u0065\u0073\u0020\u0074\u0077\u006f \u0061\u0072\u0067u\u006de\u006e\u0074\u0073");};_fcec :=args [0].AsString ();if _fcec .Type !=ResultTypeString {return MakeErrorResult ("\u0050R\u004f\u0050E\u0052\u0020\u0072e\u0071\u0075\u0069\u0072\u0065\u0073\u0020f\u0069\u0072\u0073\u0074\u0020\u0061r\u0067\u0075\u006d\u0065\u006e\u0074\u0020\u0074\u006f\u0020\u0062e\u0020\u0061\u0020\u0073\u0074\u0072\u0069\u006e\u0067");};_egce :=args [1].AsNumber ();if _egce .Type !=ResultTypeNumber {return MakeErrorResult ("\u0050\u0052O\u0050\u0045\u0052\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0073\u0065\u0063\u006f\u006e\u0064\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u0061\u0020\u006e\u0075\u006d\u0062\u0065\u0072");};if _egce .ValueNumber < 0{return MakeErrorResult ("\u0050\u0052\u004fP\u0045\u0052\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0073\u0065\u0063\u006f\u006e\u0064\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0020\u0074o\u0020\u0062\u0065\u0020\u003e\u003d\u0020\u0030");};if _egce .ValueNumber ==0{return MakeStringResult ("");};_cgedd :=_cb .Buffer {};for _becbf :=0;_becbf < int (_egce .ValueNumber );_becbf ++{_cgedd .WriteString (_fcec .ValueString );};return MakeStringResult (_cgedd .String ());};func _eff (_beeg ,_afbc _f .Time )bool {_gagd :=_beeg .Unix ();_ddg :=_afbc .Unix ();_fafb :=_beeg .Year ();_aec :=_adc (_fafb ,_f .March ,1);if _gdc (_fafb )&&_gagd < _aec &&_ddg >=_aec {return true ;};var _aece =_afbc .Year ();var _gffb =_adc (_aece ,_f .March ,1);return (_gdc (_aece )&&_ddg >=_gffb &&_gagd < _gffb );};const _fdcc =57373;func _gcdg (_gegg yyLexer )int {return _befe ().Parse (_gegg )};

// TimeValue is an implementation of the Excel TIMEVALUE() function.
func TimeValue (args []Result )Result {if len (args )!=1||args [0].Type !=ResultTypeString {return MakeErrorResult ("\u0054I\u004d\u0045V\u0041\u004c\u0055\u0045 \u0072\u0065\u0071u\u0069\u0072\u0065\u0073\u0020\u0061\u0020\u0073\u0069ng\u006c\u0065\u0020s\u0074\u0072i\u006e\u0067\u0020\u0061\u0072\u0067u\u006d\u0065n\u0074\u0073");};_cbcb :=_ce .ToLower (args [0].ValueString );if !_ffbd (_cbcb ){_ ,_ ,_ ,_feba ,_eba :=_bec (_cbcb );if _eba .Type ==ResultTypeError {_eba .ErrorMessage ="\u0049\u006e\u0063\u006f\u0072\u0072e\u0063\u0074\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0073\u0020f\u006f\u0072\u0020\u0054\u0049\u004d\u0045V\u0041\u004c\u0055\u0045";return _eba ;};if _feba {return MakeNumberResult (0);};};_edd ,_geee ,_fdg ,_edbd ,_ ,_fcdg :=_ecaa (_cbcb );if _fcdg .Type ==ResultTypeError {return _fcdg ;};_dged :=_bfea (float64 (_edd ),float64 (_geee ),_fdg );if _edbd {_dged +=0.5;}else if _dged >=1{_dged -=float64 (int (_dged ));};return MakeNumberResult (_dged );};

// Mirr implements the Excel MIRR function.
func Mirr (args []Result )Result {if len (args )!=3{return MakeErrorResult ("\u004d\u0049R\u0052\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0074\u0068\u0072\u0065\u0065\u0020\u0061\u0072\u0067\u0075\u006den\u0074\u0073");};if args [0].Type !=ResultTypeList &&args [0].Type !=ResultTypeArray {return MakeErrorResult ("M\u0049\u0052\u0052\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0076\u0061\u006c\u0075\u0065s\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u006f\u0066\u0020ar\u0072\u0061\u0079 \u0074y\u0070\u0065");};if args [1].Type !=ResultTypeNumber {return MakeErrorResult ("\u004d\u0049\u0052\u0052\u0020\u0072\u0065\u0071u\u0069\u0072\u0065s \u0066\u0069\u006e\u0061\u006e\u0063e\u0020\u0072\u0061\u0074\u0065\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006db\u0065\u0072\u0020\u0061\u0072\u0067\u0075\u006de\u006e\u0074");};_cade :=args [1].ValueNumber +1;if args [2].Type !=ResultTypeNumber {return MakeErrorResult ("\u004d\u0049\u0052\u0052\u0020\u0072e\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0072\u0065\u0069\u006e\u0076\u0065\u0073\u0074\u0020\u0072\u0061\u0074\u0065 \u0074\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0061r\u0067u\u006d\u0065\u006e\u0074");};_cbcc :=args [2].ValueNumber +1;if _cbcc ==0{return MakeErrorResultType (ErrorTypeDivideByZero ,"");};_gggfa :=_affb (args [0]);_bdef :=float64 (len (_gggfa ));_abge ,_efgf :=0.0,0.0;_fccg ,_caac :=1.0,1.0;_abeb ,_aed :=false ,false ;for _ ,_ccgg :=range _gggfa {for _ ,_cgfc :=range _ccgg {if _cgfc .Type ==ResultTypeNumber &&!_cgfc .IsBoolean {_geae :=_cgfc .ValueNumber ;if _geae ==0{continue ;}else {if _geae > 0{_abeb =true ;_efgf +=_cgfc .ValueNumber *_caac ;}else {_aed =true ;_abge +=_cgfc .ValueNumber *_fccg ;};_fccg /=_cade ;_caac /=_cbcc ;};};};};if !_abeb ||!_aed {return MakeErrorResultType (ErrorTypeDivideByZero ,"");};_agee :=-_efgf /_abge ;_agee *=_ea .Pow (_cbcc ,_bdef -1);_agee =_ea .Pow (_agee ,1/(_bdef -1));return MakeNumberResult (_agee -1);};

// Sln implements the Excel SLN function.
func Sln (args []Result )Result {if len (args )!=3{return MakeErrorResult ("\u0053\u004c\u004e\u0020r\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0074\u0068r\u0065e\u0020\u0061\u0072\u0067\u0075\u006d\u0065n\u0074\u0073");};if args [0].Type !=ResultTypeNumber {return MakeErrorResult ("\u0053\u004c\u004e\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020c\u006f\u0073\u0074\u0020\u0074\u006f \u0062\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0061\u0072\u0067u\u006d\u0065\u006e\u0074");};_cfaac :=args [0].ValueNumber ;if args [1].Type !=ResultTypeNumber {return MakeErrorResult ("\u0053\u004c\u004e \u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0073\u0061\u006c\u0076\u0061\u0067\u0065\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072 \u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};_ggbdg :=args [1].ValueNumber ;if args [2].Type !=ResultTypeNumber {return MakeErrorResult ("\u0053\u004c\u004e\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020l\u0069\u0066\u0065\u0020\u0074\u006f \u0062\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0061\u0072\u0067u\u006d\u0065\u006e\u0074");};_bbagb :=args [2].ValueNumber ;if _bbagb ==0{return MakeErrorResultType (ErrorTypeDivideByZero ,"\u0053\u004c\u004e\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u006c\u0069f\u0065 \u0074\u006f\u0020\u0062\u0065\u0020\u006e\u006f\u006e\u0020\u007a\u0065\u0072\u006f");};return MakeNumberResult ((_cfaac -_ggbdg )/_bbagb );};const (BinOpTypeUnknown BinOpType =iota ;BinOpTypePlus ;BinOpTypeMinus ;BinOpTypeMult ;BinOpTypeDiv ;BinOpTypeExp ;BinOpTypeLT ;BinOpTypeGT ;BinOpTypeEQ ;BinOpTypeLEQ ;BinOpTypeGEQ ;BinOpTypeNE ;BinOpTypeConcat ;);

// PrefixExpr is an expression containing reference to another sheet like Sheet1!A1 (the value of the cell A1 from sheet 'Sheet1').
type PrefixExpr struct{_bdga Expression ;_bebg Expression ;};

// IsNA is an implementation of the Excel ISNA() function.
func IsNA (args []Result )Result {if len (args )!=1{return MakeErrorResult ("\u0049\u0053\u004e\u0041\u0020\u0072\u0065\u0071\u0075\u0069\u0072e\u0073\u0020\u006f\u006e\u0065\u0020\u0061\u0072\u0067\u0075m\u0065\u006e\u0074");};return MakeBoolResult (args [0].Type ==ResultTypeError &&args [0].ValueString =="\u0023\u004e\u002f\u0041");};

// ISODD is an implementation of the Excel ISODD() function.
func IsOdd (args []Result )Result {if len (args )!=1{return MakeErrorResult ("\u0049\u0053\u004f\u0044\u0044\u0028)\u0020\u0061\u0063\u0063\u0065\u0070\u0074\u0073\u0020\u0061\u0020\u0073\u0069n\u0067\u006c\u0065\u0020\u0061\u0072\u0067u\u006d\u0065\u006e\u0074");};if args [0].Type !=ResultTypeNumber {return MakeErrorResult ("\u0049\u0053\u004f\u0044\u0044\u0020\u0061\u0063\u0063\u0065\u0070\u0074\u0073\u0020\u0061 \u006eu\u006d\u0065\u0072\u0069\u0063\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};_bbffe :=int (args [0].ValueNumber );return MakeBoolResult (_bbffe !=_bbffe /2*2);};func _ceee (_fdefd []Result )(bool ,Result ){for _ ,_bgfeg :=range _fdefd {if _bgfeg .Type ==ResultTypeError {return true ,_bgfeg ;};};return false ,MakeEmptyResult ();};

// Code is an implementation of the Excel CODE function that returns the first
// character of the string as a number.
func Code (args []Result )Result {if len (args )!=1{return MakeErrorResult ("\u0043\u004f\u0044\u0045\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0061\u0020\u0073\u0069\u006e\u0067\u006c\u0065\u0020\u0073t\u0072\u0069\u006e\u0067\u0020a\u0072\u0067u\u006d\u0065\u006e\u0074");};_bbee :=args [0].AsString ();if _bbee .Type !=ResultTypeString {return MakeErrorResult ("\u0043\u004f\u0044\u0045\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0061\u0020\u0073\u0069\u006e\u0067\u006c\u0065\u0020\u0073t\u0072\u0069\u006e\u0067\u0020a\u0072\u0067u\u006d\u0065\u006e\u0074");};if len (_bbee .ValueString )==0{return MakeNumberResult (0);};return MakeNumberResult (float64 (_bbee .ValueString [0]));};var _bae =map[string ]int {"\u006aa\u006e\u0075\u0061\u0072\u0079":1,"\u0066\u0065\u0062\u0072\u0075\u0061\u0072\u0079":2,"\u006d\u0061\u0072c\u0068":3,"\u0061\u0070\u0072i\u006c":4,"\u006d\u0061\u0079":5,"\u006a\u0075\u006e\u0065":6,"\u006a\u0075\u006c\u0079":7,"\u0061\u0075\u0067\u0075\u0073\u0074":8,"\u0073e\u0070\u0074\u0065\u006d\u0070\u0065r":9,"\u006fc\u0074\u006f\u0062\u0065\u0072":10,"\u006e\u006f\u0076\u0065\u006d\u0062\u0065\u0072":11,"\u0064\u0065\u0063\u0065\u006d\u0062\u0065\u0072":12,"\u006a\u0061\u006e":1,"\u0066\u0065\u0062":2,"\u006d\u0061\u0072":3,"\u0061\u0070\u0072":4,"\u006a\u0075\u006e":6,"\u006a\u0075\u006c":7,"\u0061\u0075\u0067":8,"\u0073\u0065\u0070":9,"\u006f\u0063\u0074":10,"\u006e\u006f\u0076":11,"\u0064\u0065\u0063":12};func init (){_deg ();RegisterFunction ("\u0044\u0041\u0054\u0045",Date );RegisterFunction ("\u0044A\u0054\u0045\u0044\u0049\u0046",DateDif );RegisterFunction ("\u0044A\u0054\u0045\u0056\u0041\u004c\u0055E",DateValue );RegisterFunction ("\u0044\u0041\u0059",Day );RegisterFunction ("\u0044\u0041\u0059\u0053",Days );RegisterFunction ("\u005f\u0078\u006c\u0066\u006e\u002e\u0044\u0041\u0059\u0053",Days );RegisterFunction ("\u0045\u0044\u0041T\u0045",Edate );RegisterFunction ("\u0045O\u004d\u004f\u004e\u0054\u0048",Eomonth );RegisterFunction ("\u004d\u0049\u004e\u0055\u0054\u0045",Minute );RegisterFunction ("\u004d\u004f\u004eT\u0048",Month );RegisterFunction ("\u004e\u004f\u0057",Now );RegisterFunction ("\u0054\u0049\u004d\u0045",Time );RegisterFunction ("\u0054I\u004d\u0045\u0056\u0041\u004c\u0055E",TimeValue );RegisterFunction ("\u0054\u004f\u0044A\u0059",Today );RegisterFunctionComplex ("\u0059\u0045\u0041\u0052",Year );RegisterFunction ("\u0059\u0045\u0041\u0052\u0046\u0052\u0041\u0043",YearFrac );};func _eecfa (_gbbd Result ,_bcgb *criteriaParsed )bool {if _gbbd .Type ==ResultTypeEmpty {return false ;};if _bcgb ._ebabc {return _gbbd .ValueNumber ==_bcgb ._ggdc ;}else {_fbcb :=_ce .ToLower (_gbbd .ValueString );return _bcgb ._babgc ==_fbcb ||_ba .Match (_bcgb ._babgc ,_fbcb );};};

// Transpose implements the TRANSPOSE function that transposes a cell range.
func Transpose (args []Result )Result {if len (args )!=1{return MakeErrorResult ("\u0054\u0052AN\u0053\u0050\u004fS\u0045\u0020\u0072\u0065qui\u0072es\u0020\u0061\u0020\u0073\u0069\u006e\u0067le\u0020\u0061\u0072\u0067\u0075\u006d\u0065n\u0074");};if args [0].Type !=ResultTypeArray &&args [0].Type !=ResultTypeList {return MakeErrorResult ("T\u0052\u0041\u004e\u0053\u0050\u004fS\u0045\u0020\u0072\u0065\u0071\u0075i\u0072\u0065\u0073\u0020\u0061\u0020\u0072a\u006e\u0067\u0065\u0020\u0061\u0072\u0067\u0075\u006d\u0065n\u0074");};_baba :=args [0];if _baba .Type ==ResultTypeList {_eaffg :=[][]Result {};for _ ,_gdcff :=range _baba .ValueList {_eaffg =append (_eaffg ,[]Result {_gdcff });};return MakeArrayResult (_eaffg );};_gbdd :=make ([][]Result ,len (_baba .ValueArray [0]));for _ ,_gefa :=range _baba .ValueArray {for _gaaa ,_efefe :=range _gefa {_gbdd [_gaaa ]=append (_gbdd [_gaaa ],_efefe );};};return MakeArrayResult (_gbdd );};

// Eomonth is an implementation of the Excel EOMONTH() function.
func Eomonth (args []Result )Result {if len (args )!=2{return MakeErrorResult ("\u0045\u004f\u004d\u004f\u004e\u0054\u0048\u0020\u0072\u0065q\u0075\u0069\u0072\u0065\u0073\u0020\u0074w\u006f\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0073");};if args [1].Type !=ResultTypeNumber {return MakeErrorResult ("\u0049\u006e\u0063\u006f\u0072\u0072\u0065\u0063\u0074\u0020a\u0072\u0067\u0075\u006d\u0065\u006e\u0074 \u0066\u006f\u0072\u0020\u0045\u004f\u004d\u004f\u004e\u0054\u0048");};_bcbc :=args [1].ValueNumber ;_eeb :=args [0];var _ccba float64 ;switch _eeb .Type {case ResultTypeEmpty :_ccba =0;case ResultTypeNumber :_ccba =_eeb .ValueNumber ;case ResultTypeString :_eage :=DateValue ([]Result {args [0]});if _eage .Type ==ResultTypeError {return MakeErrorResult ("\u0049\u006e\u0063\u006f\u0072\u0072\u0065\u0063\u0074\u0020a\u0072\u0067\u0075\u006d\u0065\u006e\u0074 \u0066\u006f\u0072\u0020\u0045\u004f\u004d\u004f\u004e\u0054\u0048");};_ccba =_eage .ValueNumber ;default:return MakeErrorResult ("\u0049\u006e\u0063\u006f\u0072\u0072\u0065\u0063\u0074\u0020a\u0072\u0067\u0075\u006d\u0065\u006e\u0074 \u0066\u006f\u0072\u0020\u0045\u004f\u004d\u004f\u004e\u0054\u0048");};_dcb :=_acb (_ccba );_egac :=_dcb .AddDate (0,int (_bcbc +1),0);_cce ,_bcce ,_ :=_egac .Date ();_ece :=_fcg (_cce ,int (_bcce ),0);if _ece < 1{return MakeErrorResultType (ErrorTypeNum ,"\u0049\u006e\u0063\u006f\u0072\u0072\u0065\u0063\u0074\u0020a\u0072\u0067\u0075\u006d\u0065\u006e\u0074 \u0066\u006f\u0072\u0020\u0045\u004f\u004d\u004f\u004e\u0054\u0048");};if _cce ==1900&&_bcce ==3{_ece --;};return MakeNumberResult (_ece );};

// MaxA is an implementation of the Excel MAXA() function.
func MaxA (args []Result )Result {return _edgdf (args ,true )};

// CellRef is a reference to a single cell
type CellRef struct{_cbe string };

// Error is an error expression.
type Error struct{_bcc string };var _dgcd =[...]int {-1,1,1,-1,-2,0};

// Parse parses a string to get an Expression.
func ParseString (s string )Expression {if s ==""{return NewEmptyExpr ();};return Parse (_ce .NewReader (s ));};

// Nominal implements the Excel NOMINAL function.
func Nominal (args []Result )Result {if len (args )!=2{return MakeErrorResult ("\u004e\u004f\u004d\u0049\u004e\u0041\u004c\u0020\u0072\u0065q\u0075\u0069\u0072\u0065\u0073\u0020\u0074w\u006f\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0073");};if args [0].Type !=ResultTypeNumber {return MakeErrorResult ("NO\u004d\u0049N\u0041\u004c\u0020\u0072\u0065\u0071\u0075\u0069\u0072e\u0073\u0020\u006e\u006f\u006d\u0069\u006e\u0061\u006c\u0020\u0069\u006e\u0074\u0065\u0072\u0065\u0073\u0074\u0020\u0072\u0061\u0074\u0065\u0020\u0074\u006f\u0020\u0062e\u0020n\u0075\u006d\u0062\u0065\u0072\u0020\u0061\u0072g\u0075m\u0065\u006et");};_fada :=args [0].ValueNumber ;if _fada <=0{return MakeErrorResultType (ErrorTypeNum ,"\u004e\u004fM\u0049\u004e\u0041\u004c\u0020r\u0065\u0071\u0075\u0069\u0072e\u0073\u0020\u0065\u0066\u0066\u0065\u0063\u0074\u0020\u0069\u006e\u0074\u0065\u0072\u0065\u0073\u0074\u0020\u0072\u0061\u0074\u0065\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u0070\u006f\u0073\u0069\u0074\u0069\u0076\u0065");};if args [1].Type !=ResultTypeNumber {return MakeErrorResult ("\u004e\u004f\u004d\u0049\u004e\u0041\u004c\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u006e\u0075\u006db\u0065\u0072\u0020\u006f\u0066\u0020\u0063\u006f\u006d\u0070\u006f\u0075\u006e\u0064\u0069\u006e\u0067\u0020\u0070\u0065\u0072i\u006f\u0064\u0073\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006d\u0062e\u0072\u0020\u0061r\u0067\u0075\u006d\u0065\u006e\u0074");};_dea :=float64 (int (args [1].ValueNumber ));if _dea < 1{return MakeErrorResultType (ErrorTypeNum ,"\u004e\u004f\u004d\u0049\u004e\u0041\u004c\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u006eum\u0062e\u0072\u0020\u006f\u0066\u0020\u0063\u006f\u006d\u0070\u006f\u0075\u006ed\u0069\u006e\u0067\u0020\u0070\u0065\u0072\u0069\u006f\u0064\u0073\u0020\u0074\u006f\u0020\u0062\u0065 \u0031\u0020\u006f\u0072\u0020\u006d\u006f\u0072\u0065");};return MakeNumberResult ((_ea .Pow (_fada +1,1/_dea )-1)*_dea );};

// RoundUp is an implementation of the Excel ROUNDUP function that rounds a number
// up to a specified number of digits.
func RoundUp (args []Result )Result {return _fgbg (args ,_gadc )};const _fded ="\u0052\u0065\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0054\u0079\u0070\u0065\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0052\u0065\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0054\u0079\u0070\u0065\u0043\u0065\u006c\u006c\u0052\u0065\u0066\u0065r\u0065\u006ec\u0065\u0054\u0079\u0070e\u004e\u0061\u006d\u0065\u0064\u0052\u0061\u006e\u0067\u0065R\u0065\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0054y\u0070\u0065\u0052\u0061\u006e\u0067\u0065\u0052\u0065\u0066e\u0072\u0065\u006ec\u0065\u0054\u0079\u0070\u0065\u0053\u0068e\u0065\u0074";

// NewNamedRangeRef constructs a new named range reference.
func NewNamedRangeRef (v string )Expression {return NamedRangeRef {_gbdeb :v }};const _daba =57346;func _bdac (_fadbc []Result )[]float64 {_fege :=make ([]float64 ,0);for _ ,_ecef :=range _fadbc {if _ecef .Type ==ResultTypeEmpty {continue ;};_ecef =_ecef .AsNumber ();switch _ecef .Type {case ResultTypeNumber :if !_ecef .IsBoolean {_fege =append (_fege ,_ecef .ValueNumber );};case ResultTypeList ,ResultTypeArray :_fege =append (_fege ,_bdac (_ecef .ListValues ())...);case ResultTypeString :default:_bf .Log .Debug ("\u0075\u006e\u0068\u0061\u006ed\u006c\u0065\u0064\u0020\u0065\u0078\u0074\u0072\u0061\u0063\u0074\u004e\u0075m\u0062\u0065\u0072\u0073\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0020\u0074\u0079\u0070\u0065\u0020\u0025\u0073",_ecef .Type );};};return _fege ;};func _gffcc (_eebe ,_eedff float64 ,_aaebe ,_aeeg int )float64 {_degbc :=_acb (_eebe );_age :=_acb (_eedff );_ffcee :=_abdg (_degbc ,_age ,_aaebe ,_aeeg );return _fgdc (_ffcee ,_degbc ,_aeeg );};func _gcafd (_ffdf []Result ,_fcaa bool ,_adgb string )Result {var _bcag ,_agebg string ;if _fcaa {_bcag ="\u0074\u0068\u0072e\u0065";_agebg ="\u006f\u0064\u0064";}else {_bcag ="\u0074\u0077\u006f";_agebg ="\u0065\u0076\u0065\u006e";};_fcfda :=len (_ffdf );if (_fcaa &&_fcfda < 3)||(!_fcaa &&_fcfda < 2){return MakeErrorResult (_adgb +"\u0020\u0072\u0065\u0071ui\u0072\u0065\u0073\u0020\u0061\u0074\u0020\u006c\u0065\u0061\u0073\u0074\u0020"+_bcag +" \u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0073\u0073");};if (_fcfda /2*2==_fcfda )==_fcaa {return MakeErrorResult (_adgb +"\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020"+_agebg +" \u006eu\u006d\u0062\u0065\u0072\u0020\u006f\u0066\u0020a\u0072\u0067\u0075\u006den\u0074\u0073");};_efeea :=-1;_cabc :=-1;for _cbeba :=0;_cbeba < _fcfda ;_cbeba +=2{_edddb :=_ffdf [_cbeba ];if _edddb .Type !=ResultTypeArray &&_edddb .Type !=ResultTypeList {return MakeErrorResult (_adgb +"\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0072\u0061\u006e\u0067\u0065\u0073\u0020\u006f\u0066\u0020\u0074\u0079\u0070\u0065 \u006c\u0069\u0073\u0074\u0020o\u0072\u0020a\u0072\u0072\u0061\u0079");};_cabdg :=_affb (_edddb );if _cabc ==-1{_cabc =len (_cabdg );_efeea =len (_cabdg [0]);}else if len (_cabdg )!=_cabc ||len (_cabdg [0])!=_efeea {return MakeErrorResult (_adgb +"\u0020\u0072\u0065\u0071\u0075\u0069\u0072e\u0073\u0020\u0061l\u006c\u0020\u0072\u0061n\u0067\u0065\u0073\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u006f\u0066\u0020\u0074\u0068\u0065\u0020\u0073\u0061\u006d\u0065\u0020\u0073\u0069\u007a\u0065");};if _fcaa &&_cbeba ==0{_cbeba --;};};return _ega ;};

// Substitute is an implementation of the Excel SUBSTITUTE function.
func Substitute (args []Result )Result {_geec :=len (args );if _geec !=3&&_geec !=4{return MakeErrorResult ("\u0053\u0055\u0042\u0053\u0054\u0049\u0054U\u0054\u0045\u0020r\u0065\u0071\u0075\u0069r\u0065\u0073\u0020\u0074\u0068\u0072\u0065\u0065\u0020\u006f\u0072\u0020\u0066\u006f\u0075\u0072\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0073");};_ffdgc ,_aeaaa :=_fgefd (args [0],"\u0053\u0055\u0042\u0053\u0054\u0049\u0054\u0055\u0054\u0045","\u0074\u0065\u0078\u0074");if _aeaaa .Type ==ResultTypeError {return _aeaaa ;};_gacb ,_aeaaa :=_fgefd (args [1],"\u0053\u0055\u0042\u0053\u0054\u0049\u0054\u0055\u0054\u0045","\u006f\u006c\u0064\u0020\u0074\u0065\u0078\u0074");if _aeaaa .Type ==ResultTypeError {return _aeaaa ;};_cgff ,_aeaaa :=_fgefd (args [2],"\u0053\u0055\u0042\u0053\u0054\u0049\u0054\u0055\u0054\u0045","\u006e\u0065\u0077\u0020\u0074\u0065\u0078\u0074");if _aeaaa .Type ==ResultTypeError {return _aeaaa ;};_efbf :=0;if _geec ==3{return MakeStringResult (_ce .Replace (_ffdgc ,_gacb ,_cgff ,-1));}else {_gebd ,_abfg :=_gdfd (args [3],"\u0053\u0055\u0042\u0053\u0054\u0049\u0054\u0055\u0054\u0045","\u0069\u006e\u0073t\u0061\u006e\u0063\u0065\u005f\u006e\u0075\u006d");if _abfg .Type ==ResultTypeError {return _abfg ;};_efbf =int (_gebd );if _efbf < 1{return MakeErrorResult ("\u0069\u006es\u0074\u0061\u006e\u0063e\u005f\u006eu\u006d\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u006d\u006f\u0072\u0065\u0020\u0074\u0068\u0061\u006e \u007a\u0065\u0072\u006f");};_agad :=_ffdgc ;_gfgcc :=_efbf ;_fcca :=-1;_dcdef :=len (_gacb );_fddg :=0;for {_gfgcc --;_fbac :=_ce .Index (_agad ,_gacb );if _fbac ==-1{_fcca =-1;break ;}else {_fcca =_fbac +_fddg ;if _gfgcc ==0{break ;};_cfff :=_dcdef +_fbac ;_fddg +=_cfff ;_agad =_agad [_cfff :];};};if _fcca ==-1{return MakeStringResult (_ffdgc );}else {_fefb :=_ffdgc [:_fcca ];_cffcd :=_ffdgc [_fcca +_dcdef :];return MakeStringResult (_fefb +_cgff +_cffcd );};};};

// And is an implementation of the Excel AND() function.
func And (args []Result )Result {if len (args )==0{return MakeErrorResult ("\u0041\u004e\u0044 r\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0061t\u0020l\u0065a\u0073t\u0020\u006f\u006e\u0065\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};_fccgd :=true ;for _ ,_ggad :=range args {_ggad =_ggad .AsNumber ();switch _ggad .Type {case ResultTypeList ,ResultTypeArray :_fefc :=And (_ggad .ListValues ());if _fefc .Type ==ResultTypeError {return _fefc ;};if _fefc .ValueNumber ==0{_fccgd =false ;};case ResultTypeNumber :if _ggad .ValueNumber ==0{_fccgd =false ;};case ResultTypeString :return MakeErrorResult ("\u0041\u004e\u0044\u0020\u0064\u006f\u0065\u0073\u006e\u0027t\u0020\u006f\u0070\u0065\u0072\u0061\u0074e\u0020\u006f\u006e\u0020\u0073\u0074\u0072\u0069\u006e\u0067\u0073");case ResultTypeError :return _ggad ;default:return MakeErrorResult ("\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0061\u0072\u0067u\u006de\u006e\u0074\u0020\u0074\u0079\u0070\u0065\u0020\u0069\u006e\u0020\u0041\u004e\u0044");};};return MakeBoolResult (_fccgd );};

// Db implements the Excel DB function.
func Db (args []Result )Result {_fdea :=len (args );if _fdea !=4&&_fdea !=5{return MakeErrorResult ("\u0044\u0042\u0020\u0072\u0065q\u0075\u0069\u0072\u0065\u0073\u0020\u0066\u006f\u0075\u0072\u0020\u006f\u0072 \u0066\u0069\u0076\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0073");};if args [0].Type !=ResultTypeNumber {return MakeErrorResult ("\u0044\u0042\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0063\u006f\u0073\u0074\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u006eu\u006d\u0062\u0065\u0072\u0020a\u0072\u0067u\u006d\u0065\u006e\u0074");};_gceg :=args [0].ValueNumber ;if _gceg < 0{return MakeErrorResultType (ErrorTypeNum ,"D\u0042\u0020\u0072\u0065\u0071\u0075i\u0072\u0065\u0073\u0020\u0063\u006fs\u0074\u0020\u0074\u006f\u0020\u0062\u0065 \u006e\u006f\u006e\u0020\u006e\u0065\u0067\u0061\u0074\u0069v\u0065");};if args [1].Type !=ResultTypeNumber {return MakeErrorResult ("\u0044\u0042\u0020\u0072\u0065q\u0075\u0069\u0072\u0065\u0073\u0020\u0073\u0061\u006c\u0076\u0061\u0067\u0065 \u0074\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};_gacf :=args [1].ValueNumber ;if _gacf < 0{return MakeErrorResultType (ErrorTypeNum ,"\u0044\u0042\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0073\u0061\u006c\u0076\u0061\u0067\u0065\u0020\u0074\u006f\u0020\u0062e\u0020\u006e\u006f\u006e\u0020n\u0065\u0067a\u0074\u0069\u0076\u0065");};if args [2].Type !=ResultTypeNumber {return MakeErrorResult ("\u0044\u0042\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u006c\u0069\u0066\u0065\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u006eu\u006d\u0062\u0065\u0072\u0020a\u0072\u0067u\u006d\u0065\u006e\u0074");};_fga :=args [2].ValueNumber ;if _fga <=0{return MakeErrorResultType (ErrorTypeNum ,"\u0044\u0042\u0020r\u0065\u0071\u0075\u0069r\u0065\u0073\u0020\u006c\u0069\u0066\u0065 \u0074\u006f\u0020\u0062\u0065\u0020\u0070\u006f\u0073\u0069\u0074\u0069\u0076\u0065");};if args [3].Type !=ResultTypeNumber {return MakeErrorResult ("D\u0042\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0070\u0065\u0072\u0069\u006f\u0064\u0020t\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006d\u0062\u0065r \u0061\u0072\u0067u\u006de\u006e\u0074");};_aada :=args [3].ValueNumber ;if _aada <=0{return MakeErrorResultType (ErrorTypeNum ,"\u0044\u0042\u0020\u0072\u0065\u0071u\u0069\u0072\u0065\u0073\u0020\u0070\u0065\u0072\u0069\u006f\u0064\u0020\u0074o\u0020\u0062\u0065\u0020\u0070\u006f\u0073i\u0074\u0069\u0076\u0065");};if _aada -_fga > 1{return MakeErrorResultType (ErrorTypeNum ,"\u0049\u006e\u0063or\u0072\u0065\u0063\u0074\u0020\u0070\u0065\u0072\u0069\u006f\u0064\u0020\u0066\u006f\u0072\u0020\u0044\u0042");};_cbgg :=12.0;if _fdea ==5&&args [4].Type !=ResultTypeEmpty {if args [4].Type !=ResultTypeNumber {return MakeErrorResult ("\u0044\u0042\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u006do\u006e\u0074\u0068\u0020\u0074\u006f \u0062\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0061\u0072\u0067u\u006d\u0065\u006e\u0074");};_cbgg =args [4].ValueNumber ;if _cbgg < 1||_cbgg > 12{return MakeErrorResultType (ErrorTypeNum ,"\u0044B\u0020\u0072e\u0071\u0075\u0069\u0072e\u0073\u0020\u006do\u006e\u0074\u0068\u0020\u0074\u006f\u0020\u0062\u0065 i\u006e\u0020\u0072a\u006e\u0067e\u0020\u006f\u0066\u0020\u0031\u0020a\u006e\u0064 \u0031\u0032");};};if _cbgg ==12&&_aada > _fga {return MakeErrorResultType (ErrorTypeNum ,"\u0049\u006e\u0063or\u0072\u0065\u0063\u0074\u0020\u0070\u0065\u0072\u0069\u006f\u0064\u0020\u0066\u006f\u0072\u0020\u0044\u0042");};if _gacf >=_gceg {return MakeNumberResult (0);};_aabd :=1-_ea .Pow (_gacf /_gceg ,1/_fga );_aabd =float64 (int (_aabd *1000+0.5))/1000;_fgdd :=_gceg *_aabd *_cbgg /12;if _aada ==1{return MakeNumberResult (_fgdd );};_cefb :=_fgdd ;_acgf :=0.0;_fgaf :=_fga ;if _fgaf > _aada {_fgaf =_aada ;};for _gfaa :=2.0;_gfaa <=_fgaf ;_gfaa ++{_acgf =(_gceg -_cefb )*_aabd ;_cefb +=_acgf ;};if _aada > _fga {return MakeNumberResult ((_gceg -_cefb )*_aabd *(12-_cbgg )/12);};return MakeNumberResult (_acgf );};

// Update updates references in the VerticalRange after removing a row/column.
func (_cgdaa VerticalRange )Update (q *_ff .UpdateQuery )Expression {if q .UpdateType ==_ff .UpdateActionRemoveColumn {_eagfc :=_cgdaa ;if q .UpdateCurrentSheet {_feccg :=q .ColumnIdx ;_eagfc ._begc =_fed (_cgdaa ._begc ,_feccg );_eagfc ._fcdba =_fed (_cgdaa ._fcdba ,_feccg );};return _eagfc ;};return _cgdaa ;};

// Eval evaluates and returns the result of an error expression.
func (_gbd Error )Eval (ctx Context ,ev Evaluator )Result {return MakeErrorResult (_gbd ._bcc )};type yyLexer interface{Lex (_eabag *yySymType )int ;Error (_daebb string );};func _fgga (_gbfgf float64 ,_eagf *criteriaRegex )bool {_befcd ,_cfbag :=_gc .ParseFloat (_eagf ._ebdee ,64);if _cfbag !=nil {return false ;};switch _eagf ._beaf {case _fedg :return _gbfgf ==_befcd ;case _eead :return _gbfgf <=_befcd ;case _gdcg :return _gbfgf >=_befcd ;case _gcceb :return _gbfgf < _befcd ;case _efdgd :return _gbfgf > _befcd ;};return false ;};func _adeb (_gedee []Result ,_acca countMode )float64 {_ffee :=0.0;for _ ,_acadb :=range _gedee {switch _acadb .Type {case ResultTypeNumber :if _acca ==_ebgf ||(_acca ==_edgef &&!_acadb .IsBoolean ){_ffee ++;};case ResultTypeList ,ResultTypeArray :_ffee +=_adeb (_acadb .ListValues (),_acca );case ResultTypeString :if _acca ==_ebgf {_ffee ++;};case ResultTypeEmpty :if _acca ==_fegc {_ffee ++;};};};return _ffee ;};func _fecf (_cbdf ,_efdc []float64 ,_bddd float64 )float64 {_cfbe :=_bddd +1;_affc :=0.0;_ecea :=len (_cbdf );_cedg :=_efdc [0];for _degd :=1;_degd < _ecea ;_degd ++{_fbf :=(_efdc [_degd ]-_cedg )/365;_affc -=_fbf *_cbdf [_degd ]/_ea .Pow (_cfbe ,_fbf +1);};return _affc ;};func _fdbff (_cdee ,_ffaef ,_accf Reference )string {return _dc .Sprintf ("\u0025\u0073\u0021\u0025\u0073\u003a\u0025\u0073",_cdee .Value ,_ffaef .Value ,_accf .Value );};func _egcf (_ccec ,_bgd Result ,_gda string )(float64 ,float64 ,Result ){_bdea ,_ccff :=_gagf (_ccec ,"\u0073e\u0074t\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u0064\u0061\u0074\u0065",_gda );if _ccff .Type ==ResultTypeError {return 0,0,_ccff ;};_eccc ,_ccff :=_gagf (_bgd ,"\u006d\u0061\u0074\u0075\u0072\u0069\u0074\u0079\u0020\u0064\u0061\u0074\u0065",_gda );if _ccff .Type ==ResultTypeError {return 0,0,_ccff ;};if _bdea >=_eccc {return 0,0,MakeErrorResultType (ErrorTypeNum ,_gda +"\u0020\u0072\u0065\u0071\u0075\u0069r\u0065\u0073\u0020m\u0061\u0074\u0075r\u0069\u0074\u0079\u0020\u0064\u0061\u0074\u0065\u0020\u0074o\u0020\u0062\u0065\u0020\u006cat\u0065\u0072\u0020\u0074\u0068\u0061\u006e\u0020\u0073\u0065\u0074\u0074\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u0064\u0061\u0074\u0065");};return _bdea ,_eccc ,_ega ;};

// Update returns the same object as updating sheet references does not affect Number.
func (_egag Number )Update (q *_ff .UpdateQuery )Expression {return _egag };

// Multinomial implements the excel MULTINOMIAL function.
func Multinomial (args []Result )Result {if len (args )< 1{return MakeErrorResult ("\u004d\u0055\u004c\u0054\u0049\u004eO\u004d\u0049\u0041\u004c\u0028\u0029\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0061\u0074\u0020\u006ce\u0061\u0073\u0074\u0020\u006f\u006e\u0065\u0020\u006e\u0075\u006d\u0065\u0072\u0069c\u0020i\u006e\u0070\u0075\u0074");};_cgdd ,_cdef ,_cgafe :=_efeee (args );if _cgafe .Type ==ResultTypeError {return _cgafe ;};return MakeNumberResult (_dgbga (_cgdd )/_cdef );};

// NewNumber constructs a new number expression.
func NewNumber (v string )Expression {_gecgg ,_bbdea :=_gc .ParseFloat (v ,64);if _bbdea !=nil {_bf .Log .Debug ("e\u0072\u0072\u006f\u0072\u0020\u0070a\u0072\u0073\u0069\u006e\u0067\u0020f\u006f\u0072\u006d\u0075\u006c\u0061\u0020n\u0075\u006d\u0062\u0065\u0072\u0020\u0025\u0073\u003a\u0020%\u0076",v ,_bbdea );};return Number {_bcfc :_gecgg };};

// GetLabelPrefix returns an empty string for the invalid reference context.
func (_ccbg *ivr )GetLabelPrefix (cellRef string )string {return ""};

// NewPrefixExpr constructs an expression with prefix.
func NewPrefixExpr (pfx ,exp Expression )Expression {return &PrefixExpr {_bdga :pfx ,_bebg :exp }};

// Eval evaluates a horizontal range returning a list of results or an error.
func (_gcec HorizontalRange )Eval (ctx Context ,ev Evaluator )Result {_ceaf :=_gcec .horizontalRangeReference ();if _cebf ,_cgeddf :=ev .GetFromCache (_ceaf );_cgeddf {return _cebf ;};_gfaae ,_bcede :=_fdbc (ctx ,_gcec ._dbdff ,_gcec ._aaacf );_bdgc :=_fceb (ctx ,ev ,_gfaae ,_bcede );ev .SetCache (_ceaf ,_bdgc );return _bdgc ;};

// Evaluator is the interface for a formula evaluator.  This is needed so we can
// pass it to the spreadsheet to let it evaluate formula cells before returning
// the results.
// NOTE: in order to implement Evaluator without cache embed noCache in it.
type Evaluator interface{Eval (_dad Context ,formula string )Result ;SetCache (_gad string ,_cag Result );GetFromCache (_ffce string )(Result ,bool );LastEvalIsRef ()bool ;};

// Eval evaluates and returns the result of a function call.
func (_dbge FunctionCall )Eval (ctx Context ,ev Evaluator )Result {_caab :=LookupFunction (_dbge ._cacb );if _caab !=nil {_gdacg :=make ([]Result ,len (_dbge ._bdegf ));for _eccde ,_febb :=range _dbge ._bdegf {_gdacg [_eccde ]=_febb .Eval (ctx ,ev );_gdacg [_eccde ].Ref =_febb .Reference (ctx ,ev );};if _ ,_accge :=_fdgcd [_dbge ._cacb ];!_accge {if _cfaae ,_fcadb :=_ceee (_gdacg );_cfaae {return _fcadb ;};};return _caab (_gdacg );};_abgc :=LookupFunctionComplex (_dbge ._cacb );if _abgc !=nil {_cafe :=make ([]Result ,len (_dbge ._bdegf ));for _bdee ,_ggde :=range _dbge ._bdegf {_cafe [_bdee ]=_ggde .Eval (ctx ,ev );_cafe [_bdee ].Ref =_ggde .Reference (ctx ,ev );};if _ ,_aggbe :=_fdgcd [_dbge ._cacb ];!_aggbe {if _egdf ,_fbbed :=_ceee (_cafe );_egdf {return _fbbed ;};};return _abgc (ctx ,ev ,_cafe );};return MakeErrorResult ("\u0075\u006e\u006b\u006e\u006f\u0077\u006e\u0020\u0066\u0075\u006e\u0063t\u0069\u006f\u006e\u0020"+_dbge ._cacb );};

// Xnpv implements the Excel XNPV function.
func Xnpv (args []Result )Result {if len (args )!=3{return MakeErrorResult ("\u0058\u004eP\u0056\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0074\u0068\u0072\u0065\u0065\u0020\u0061\u0072\u0067\u0075\u006den\u0074\u0073");};if args [0].Type !=ResultTypeNumber {return MakeErrorResult ("X\u004e\u0050\u0056\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0072\u0061\u0074\u0065\u0020t\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006d\u0062\u0065r \u0061\u0072\u0067u\u006de\u006e\u0074");};_gcgca :=args [0].ValueNumber ;if _gcgca <=0{return MakeErrorResultType (ErrorTypeNum ,"\u0058\u004e\u0050\u0056\u0020\u0072e\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0072\u0061\u0074\u0065\u0020\u0074o\u0020\u0062\u0065\u0020\u0070\u006f\u0073i\u0074\u0069\u0076\u0065");};_edgg ,_eacg :=_bagbf (args [1],args [2],"\u0058\u004e\u0050\u0056");if _eacg .Type ==ResultTypeError {return _eacg ;};_fgfa :=_edgg ._bfed ;_dddd :=_edgg ._ggfbf ;_cdc :=0.0;_adae :=_dddd [0];for _cbfa ,_bdfa :=range _fgfa {_cdc +=_bdfa /_ea .Pow (1+_gcgca ,(_dddd [_cbfa ]-_adae )/365);};return MakeNumberResult (_cdc );};

// Large implements the Excel LARGE function.
func Large (args []Result )Result {return _edfb (args ,true )};func Sign (args []Result )Result {if len (args )!=1{return MakeErrorResult ("\u0053\u0049\u0047\u004e(\u0029\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073 \u006fn\u0065\u0020\u0061\u0072\u0067\u0075\u006de\u006e\u0074");};_dcgg :=args [0].AsNumber ();if _dcgg .Type !=ResultTypeNumber {return MakeErrorResult ("\u0053\u0049\u0047N(\u0029\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065s\u0020a\u0020n\u0075m\u0065\u0072\u0069\u0063\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};if _dcgg .ValueNumber < 0{return MakeNumberResult (-1);}else if _dcgg .ValueNumber > 0{return MakeNumberResult (1);};return MakeNumberResult (0);};

// Reference returns an invalid reference for Number.
func (_dgge Number )Reference (ctx Context ,ev Evaluator )Reference {return ReferenceInvalid };func _gebe (_gafb []Result ,_gbdg string )(*amorArgs ,Result ){_accg :=len (_gafb );if _accg !=6&&_accg !=7{return nil ,MakeErrorResult (_gbdg +"\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0073\u0069\u0078\u0020\u006fr\u0020s\u0065\u0076\u0065\u006e\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0073");};if _gafb [0].Type !=ResultTypeNumber {return nil ,MakeErrorResult (_gbdg +"\u0020\u0072eq\u0075\u0069\u0072e\u0073\u0020\u0063\u006fst \u0074o \u0062\u0065\u0020\u006e\u0075\u006d\u0062er\u0020\u0061\u0072\u0067\u0075\u006d\u0065n\u0074");};_eadc :=_gafb [0].ValueNumber ;if _eadc < 0{return nil ,MakeErrorResultType (ErrorTypeNum ,_gbdg +"\u0020\u0072\u0065\u0071\u0075\u0069r\u0065\u0073\u0020\u0063\u006f\u0073\u0074\u0020\u0074\u006f\u0020\u0062\u0065 \u006e\u006f\u006e\u0020\u006e\u0065\u0067a\u0074\u0069\u0076\u0065");};_fda ,_dcgc :=_gagf (_gafb [1],"\u0064\u0061\u0074\u0065\u0020\u0070\u0075\u0072\u0063h\u0061\u0073\u0065\u0064",_gbdg );if _dcgc .Type ==ResultTypeError {return nil ,_dcgc ;};_cfbc ,_dcgc :=_gagf (_gafb [2],"\u0066\u0069\u0072s\u0074\u0020\u0070\u0065\u0072\u0069\u006f\u0064",_gbdg );if _dcgc .Type ==ResultTypeError {return nil ,_dcgc ;};if _cfbc < _fda {return nil ,MakeErrorResultType (ErrorTypeNum ,_gbdg +"\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0066\u0069\u0072\u0073\u0074 \u0070\u0065\u0072\u0069\u006f\u0064\u0020\u0074\u006f\u0020\u0062\u0065\u0020l\u0061\u0074\u0065\u0072\u0020\u0074\u0068\u0061\u006e\u0020\u0064\u0061te\u0020\u0070\u0075\u0072\u0063\u0068\u0061\u0073\u0065\u0064");};if _gafb [3].Type !=ResultTypeNumber {return nil ,MakeErrorResult (_gbdg +"\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0073\u0061\u006cv\u0061\u0067\u0065\u0020\u0074\u006f \u0062\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0061\u0072\u0067u\u006d\u0065\u006e\u0074");};_bdda :=_gafb [3].ValueNumber ;if _bdda < 0||_bdda > _eadc {return nil ,MakeErrorResultType (ErrorTypeNum ,_gbdg +"\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0073\u0061\u006c\u0076\u0061g\u0065\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u0062\u0065\u0074\u0077\u0065e\u006e\u0020\u0030\u0020\u0061\u006e\u0064\u0020\u0074\u0068\u0065\u0020in\u0069\u0074\u0069\u0061\u006c\u0020\u0063\u006f\u0073\u0074");};if _gafb [4].Type !=ResultTypeNumber {return nil ,MakeErrorResult (_gbdg +"\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0070\u0065\u0072\u0069\u006f\u0064\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u006eu\u006d\u0062\u0065\u0072\u0020a\u0072\u0067u\u006d\u0065\u006e\u0074");};_eeee :=int (_gafb [4].ValueNumber );if _eeee < 0{return nil ,MakeErrorResultType (ErrorTypeNum ,_gbdg +" \u0072\u0065\u0071\u0075\u0069\u0072e\u0073\u0020\u0070\u0065\u0072\u0069o\u0064\u0020\u0074\u006f\u0020\u0062\u0065 \u006e\u006f\u006e\u002d\u006e\u0065\u0067\u0061\u0074\u0069v\u0065");};if _gafb [5].Type !=ResultTypeNumber {return nil ,MakeErrorResult (_gbdg +"\u0020\u0072\u0065\u0071\u0075\u0069r\u0065\u0073\u0020\u0064\u0065\u0070\u0072\u0065\u0063\u0069\u0061\u0074\u0069\u006f\u006e\u0020\u0072\u0061\u0074\u0065 \u0074\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0061r\u0067u\u006d\u0065\u006e\u0074");};_cffa :=_gafb [5].ValueNumber ;if _cffa < 0{return nil ,MakeErrorResultType (ErrorTypeNum ,_gbdg +"\u0020r\u0065\u0071\u0075\u0069\u0072\u0065\u0073 d\u0065\u0070\u0072\u0065\u0063\u0069\u0061\u0074\u0069\u006f\u006e\u0020\u0072\u0061t\u0065\u0020t\u006f\u0020\u0062e\u0020\u006d\u006f\u0072\u0065\u0020\u0074\u0068\u0061\u006e\u0020\u0030\u0020\u0061\u006e\u0064 \u006c\u0065ss\u0020\u0074\u0068a\u006e\u0020\u0030\u002e\u0035");};_gdag :=0;if _accg ==7&&_gafb [6].Type !=ResultTypeEmpty {if _gafb [6].Type !=ResultTypeNumber {return nil ,MakeErrorResult (_gbdg +"\u0020\u0072e\u0071\u0075\u0069\u0072e\u0073\u0020b\u0061\u0073\u0069\u0073\u0020\u0074\u006f\u0020b\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0061\u0072\u0067u\u006d\u0065\u006e\u0074");};_gdag =int (_gafb [6].ValueNumber );if !_aaac (_gdag )||_gdag ==2{return nil ,MakeErrorResultType (ErrorTypeNum ,"\u0049\u006ec\u006f\u0072\u0072\u0065\u0063\u0074\u0020\u0062\u0061\u0073\u0069\u0073\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0020fo\u0072\u0020"+_gbdg );};};return &amorArgs {_eadc ,_fda ,_cfbc ,_bdda ,_eeee ,_cffa ,_gdag },_ega ;};type yySymType struct{_gbcf int ;_aedaf *node ;_afba Expression ;_bgcb []Expression ;_dbcae [][]Expression ;};func _cea (_beea string ,_gga *_ff .UpdateQuery )string {_ffb ,_deea :=_bef .ParseCellReference (_beea );if _deea !=nil {return "\u0023\u0052\u0045F\u0021";};if _gga .UpdateType ==_ff .UpdateActionRemoveColumn {_agg :=_gga .ColumnIdx ;_baf :=_ffb .ColumnIdx ;if _baf < _agg {return _beea ;}else if _baf ==_agg {return "\u0023\u0052\u0045F\u0021";}else {return _ffb .Update (_ff .UpdateActionRemoveColumn ).String ();};};return _beea ;};func _adad (_faea []Result ,_bgeba []string ,_bdged bool )[]string {for _ ,_ggcda :=range _faea {switch _ggcda .Type {case ResultTypeEmpty :if !_bdged {_bgeba =append (_bgeba ,"");};case ResultTypeString :if _ggcda .ValueString !=""||!_bdged {_bgeba =append (_bgeba ,_ggcda .ValueString );};case ResultTypeNumber :_bgeba =append (_bgeba ,_ggcda .Value ());case ResultTypeList :_bgeba =_ggfbc (_bgeba ,_adad (_ggcda .ValueList ,[]string {},_bdged ));case ResultTypeArray :for _ ,_bafe :=range _ggcda .ValueArray {_bgeba =_ggfbc (_bgeba ,_adad (_bafe ,[]string {},_bdged ));};};};return _bgeba ;};

// Update makes a reference to point to one of the neighboring cells after removing a row/column with respect to the update type.
func (_cbgd CellRef )Update (q *_ff .UpdateQuery )Expression {if q .UpdateCurrentSheet {_cbgd ._cbe =_cea (_cbgd ._cbe ,q );};return _cbgd ;};

// Char is an implementation of the Excel CHAR function that takes an integer in
// the range [0,255] and returns the corresponding ASCII character.
func Char (args []Result )Result {if len (args )!=1{return MakeErrorResult ("\u0043\u0048\u0041\u0052\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073 \u0061\u0020\u0073\u0069\u006e\u0067l\u0065\u0020\u006e\u0075\u006d\u0065\u0072\u0069\u0063\u0020\u0061\u0072\u0067u\u006d\u0065\u006e\u0074");};_egae :=args [0].AsNumber ();if _egae .Type !=ResultTypeNumber {return MakeErrorResult ("\u0043\u0048\u0041\u0052\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073 \u0061\u0020\u0073\u0069\u006e\u0067l\u0065\u0020\u006e\u0075\u006d\u0065\u0072\u0069\u0063\u0020\u0061\u0072\u0067u\u006d\u0065\u006e\u0074");};_gaged :=int (_egae .ValueNumber );if _gaged < 0||_gaged > 255{return MakeErrorResult ("\u0043H\u0041\u0052 \u0072\u0065\u0071\u0075i\u0072\u0065\u0073 \u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0073 i\u006e\u0020\u0074h\u0065\u0020r\u0061\u006e\u0067\u0065\u0020\u005b0\u002c\u00325\u0035\u005d");};return MakeStringResult (_dc .Sprintf ("\u0025\u0063",_gaged ));};const _bddg =57352;

// Update updates references in the PrefixExpr after removing a row/column.
func (_afcda PrefixExpr )Update (q *_ff .UpdateQuery )Expression {_bcca :=_afcda ;_ddagf :=_afcda ._bdga .String ();if _ddagf ==q .SheetToUpdate {_ddcef :=*q ;_ddcef .UpdateCurrentSheet =true ;_bcca ._bebg =_afcda ._bebg .Update (&_ddcef );};return _bcca ;};

// Right implements the Excel RIGHT(string,[n]) function which returns the
// rightmost n characters.
func Right (args []Result )Result {_ggfag :=1;switch len (args ){case 1:case 2:if args [1].Type !=ResultTypeNumber {return MakeErrorResult ("\u0052\u0049\u0047\u0048\u0054\u0020\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u006e\u0075\u006db\u0065\u0072\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};_ggfag =int (args [1].ValueNumber );if _ggfag < 0{return MakeErrorResult ("R\u0049\u0047\u0048\u0054\u0020\u0065x\u0070\u0065\u0063\u0074\u0065\u0064 \u006e\u0075\u006d\u0062\u0065\u0072\u0020a\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0020\u003e\u003d \u0030");};if _ggfag ==0{return MakeStringResult ("");};default:return MakeErrorResult ("\u0052\u0049\u0047HT\u0020\u0061\u0063\u0063\u0065\u0070\u0074\u0073\u0020o\u006ee\u0020o\u0072 \u0074\u0077\u006f\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0073");};if args [0].Type ==ResultTypeList {return MakeErrorResult ("\u0052\u0049\u0047\u0048\u0054\u0020\u0063\u0061\u006e\u0027\u0074\u0020\u0062\u0065\u0020c\u0061l\u006c\u0065\u0064\u0020\u006f\u006e\u0020\u0061\u0020\u0072\u0061\u006e\u0067\u0065");};_feecd :=args [0].Value ();_bafcd :=len (_feecd );if _ggfag > _bafcd {return MakeStringResult (_feecd );};return MakeStringResult (_feecd [_bafcd -_ggfag :_bafcd ]);};func _dgef (_cgef ,_ccece float64 ,_ceg ,_bafgb int )(float64 ,Result ){_ddf ,_eeea :=_acb (_cgef ),_acb (_ccece );if _eeea .After (_ddf ){_fdbef :=_abdg (_ddf ,_eeea ,_ceg ,_bafgb );_cbeb :=(_eeea .Year ()-_fdbef .Year ())*12+int (_eeea .Month ())-int (_fdbef .Month ());return float64 (_cbeb *_ceg )/12.0,_ega ;};return 0,MakeErrorResultType (ErrorTypeNum ,"\u0053\u0065t\u0074\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u0064\u0061\u0074\u0065\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0062\u0065\u0066\u006f\u0072\u0065\u0020\u006d\u0061\u0074\u0075\u0072\u0069\u0074\u0079\u0020\u0064\u0061\u0074\u0065");};

// Update updates references in the PrefixRangeExpr after removing a row/column.
func (_bdacg PrefixRangeExpr )Update (q *_ff .UpdateQuery )Expression {_ecae :=_bdacg ;_cagfa :=_bdacg ._fcagg .String ();if _cagfa ==q .SheetToUpdate {_eagg :=*q ;_eagg .UpdateCurrentSheet =true ;_ecae ._cfddb =_bdacg ._cfddb .Update (&_eagg );_ecae ._befed =_bdacg ._befed .Update (&_eagg );};return _ecae ;};const _eabga int =30;const _dgeb ="\u0028\u0028\u005b0\u002d\u0039\u005d\u0029\u002b\u0029\u003a\u0028\u0028\u005b\u0030\u002d\u0039\u005d\u0029\u002b\u005c\u002e\u0028\u005b\u0030\u002d\u0039\u005d\u0029\u002b\u0029\u0028\u0020(\u0061\u006d\u007c\u0070\u006d\u0029\u0029\u003f";

// String returns a string of a range.
func (_bfde Range )String ()string {return _dc .Sprintf ("\u0025\u0073\u003a%\u0073",_bfde ._cdacg .String (),_bfde ._faceba .String ());};var _fccgg =[...]uint8 {0,17,33,49,63,78,93,108};

// Duration implements the Excel DURATION function.
func Duration (args []Result )Result {_dggf ,_babg :=_bfa (args ,"\u0044\u0055\u0052\u0041\u0054\u0049\u004f\u004e");if _babg .Type ==ResultTypeError {return _babg ;};_fedd :=_dggf ._ceae ;_eaeea :=_dggf ._dbgg ;_egcgc :=_dggf ._dceg ;_aaef :=_dggf ._bdf ;_dggdf :=_dggf ._bab ;_cbcba :=_dggf ._eea ;return _gbaa (_fedd ,_eaeea ,_egcgc ,_aaef ,_dggdf ,_cbcba );};

// Coupdaybs implements the Excel COUPDAYBS function.
func Coupdaybs (args []Result )Result {_bed ,_feea :=_fggc (args ,"\u0043O\u0055\u0050\u0044\u0041\u0059\u0042S");if _feea .Type ==ResultTypeError {return _feea ;};return MakeNumberResult (_gffcc (_bed ._dcd ,_bed ._efce ,_bed ._bfeg ,_bed ._gdb ));};

// Combina is an implementation of the Excel COMBINA function whic returns the
// number of combinations with repetitions.
func Combina (args []Result )Result {if len (args )!=2{return MakeErrorResult ("\u0043\u004f\u004dB\u0049\u004e\u0041\u0028)\u0020\u0072\u0065\u0071\u0075\u0069\u0072e\u0073\u0020\u0074\u0077\u006f\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};_gege :=args [0].AsNumber ();_gggc :=args [1].AsNumber ();if _gege .Type !=ResultTypeNumber ||_gggc .Type !=ResultTypeNumber {return MakeErrorResult ("\u0043\u004fMB\u0049\u004e\u0041(\u0029\u0020\u0072\u0065qui\u0072es\u0020\u006e\u0075\u006d\u0065\u0072\u0069c \u0061\u0072\u0067\u0075\u006d\u0065\u006et\u0073");};_eaffge :=_ea .Trunc (_gege .ValueNumber );_afeb :=_ea .Trunc (_gggc .ValueNumber );if _eaffge < _afeb {return MakeErrorResult ("\u0043O\u004d\u0042\u0049\u004e\u0041\u0028\u0029\u0020\u0072\u0065\u0071u\u0069\u0072\u0065\u0073\u0020\u006e\u0020\u003e\u0020\u006b");};if _eaffge ==0{return MakeNumberResult (0);};args [0]=MakeNumberResult (_eaffge +_afeb -1);args [1]=MakeNumberResult (_eaffge -1);return Combin (args );};

// Reference returns a string reference value to a range with prefix.
func (_deba PrefixRangeExpr )Reference (ctx Context ,ev Evaluator )Reference {_cdefg :=_deba ._fcagg .Reference (ctx ,ev );_gfbf :=_deba ._cfddb .Reference (ctx ,ev );_gggdd :=_deba ._befed .Reference (ctx ,ev );if _cdefg .Type ==ReferenceTypeSheet &&_gfbf .Type ==ReferenceTypeCell &&_gggdd .Type ==ReferenceTypeCell {return MakeRangeReference (_fdbff (_cdefg ,_gfbf ,_gggdd ));};return ReferenceInvalid ;};var _abdb =[...]int {-1000,-7,-3,-1,27,18,22,23,-2,-8,-4,-9,20,-14,10,11,12,13,-5,-13,-6,-12,17,16,15,9,4,5,22,23,24,25,26,28,29,30,31,27,32,35,-1,18,27,-15,-17,-1,-1,-1,-1,33,-5,4,5,21,-16,-11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,19,36,34,21,-5,33,21,34,19,-17,-1,-5,-10,-1};

// Reference returns an invalid reference for BinaryExpr.
func (_cbg BinaryExpr )Reference (ctx Context ,ev Evaluator )Reference {return ReferenceInvalid };func _fbbec (_aabde _f .Time )_f .Time {_aabde =_aabde .UTC ();return _f .Date (_aabde .Year (),_aabde .Month (),_aabde .Day (),_aabde .Hour (),_aabde .Minute (),_aabde .Second (),_aabde .Nanosecond (),_f .Local );};func init (){RegisterFunction ("\u0041\u0043\u0043\u0052\u0049\u004e\u0054\u004d",Accrintm );RegisterFunction ("\u0041M\u004f\u0052\u0044\u0045\u0047\u0052C",Amordegrc );RegisterFunction ("\u0041\u004d\u004f\u0052\u004c\u0049\u004e\u0043",Amorlinc );RegisterFunction ("\u0043O\u0055\u0050\u0044\u0041\u0059\u0042S",Coupdaybs );RegisterFunction ("\u0043\u004f\u0055\u0050\u0044\u0041\u0059\u0053",Coupdays );RegisterFunction ("\u0043\u004f\u0055\u0050\u0044\u0041\u0059\u0053\u004e\u0043",Coupdaysnc );RegisterFunction ("\u0043O\u0055\u0050\u004e\u0055\u004d",Coupnum );RegisterFunction ("\u0043O\u0055\u0050\u004e\u0043\u0044",Coupncd );RegisterFunction ("\u0043O\u0055\u0050\u0050\u0043\u0044",Couppcd );RegisterFunction ("\u0043U\u004d\u0049\u0050\u004d\u0054",Cumipmt );RegisterFunction ("\u0043\u0055\u004d\u0050\u0052\u0049\u004e\u0043",Cumprinc );RegisterFunction ("\u0044\u0042",Db );RegisterFunction ("\u0044\u0044\u0042",Ddb );RegisterFunction ("\u0044\u0049\u0053\u0043",Disc );RegisterFunction ("\u0044\u004f\u004c\u004c\u0041\u0052\u0044\u0045",Dollarde );RegisterFunction ("\u0044\u004f\u004c\u004c\u0041\u0052\u0046\u0052",Dollarfr );RegisterFunction ("\u0044\u0055\u0052\u0041\u0054\u0049\u004f\u004e",Duration );RegisterFunction ("\u0045\u0046\u0046\u0045\u0043\u0054",Effect );RegisterFunction ("\u0046\u0056",Fv );RegisterFunction ("\u0046\u0056\u0053\u0043\u0048\u0045\u0044\u0055\u004c\u0045",Fvschedule );RegisterFunction ("\u0049N\u0054\u0052\u0041\u0054\u0045",Intrate );RegisterFunction ("\u0049\u0050\u004d\u0054",Ipmt );RegisterFunction ("\u0049\u0052\u0052",Irr );RegisterFunction ("\u0049\u0053\u0050M\u0054",Ispmt );RegisterFunction ("\u004dD\u0055\u0052\u0041\u0054\u0049\u004fN",Mduration );RegisterFunction ("\u004d\u0049\u0052\u0052",Mirr );RegisterFunction ("\u004eO\u004d\u0049\u004e\u0041\u004c",Nominal );RegisterFunction ("\u004e\u0050\u0045\u0052",Nper );RegisterFunction ("\u004e\u0050\u0056",Npv );RegisterFunction ("\u004fD\u0044\u004c\u0050\u0052\u0049\u0043E",Oddlprice );RegisterFunction ("\u004fD\u0044\u004c\u0059\u0049\u0045\u004cD",Oddlyield );RegisterFunction ("\u0050D\u0055\u0052\u0041\u0054\u0049\u004fN",Pduration );RegisterFunction ("\u005fx\u006cf\u006e\u002e\u0050\u0044\u0055\u0052\u0041\u0054\u0049\u004f\u004e",Pduration );RegisterFunction ("\u0050\u004d\u0054",Pmt );RegisterFunction ("\u0050\u0050\u004d\u0054",Ppmt );RegisterFunction ("\u0050\u0052\u0049C\u0045",Price );RegisterFunction ("\u0050R\u0049\u0043\u0045\u0044\u0049\u0053C",Pricedisc );RegisterFunction ("\u0050\u0052\u0049\u0043\u0045\u004d\u0041\u0054",Pricemat );RegisterFunction ("\u0050\u0056",Pv );RegisterFunction ("\u0052\u0041\u0054\u0045",Rate );RegisterFunction ("\u0052\u0045\u0043\u0045\u0049\u0056\u0045\u0044",Received );RegisterFunction ("\u0052\u0052\u0049",Rri );RegisterFunction ("\u005fx\u006c\u0066\u006e\u002e\u0052\u0052I",Rri );RegisterFunction ("\u0053\u004c\u004e",Sln );RegisterFunction ("\u0053\u0059\u0044",Syd );RegisterFunction ("\u0054B\u0049\u004c\u004c\u0045\u0051",Tbilleq );RegisterFunction ("\u0054\u0042\u0049\u004c\u004c\u0050\u0052\u0049\u0043\u0045",Tbillprice );RegisterFunction ("\u0054\u0042\u0049\u004c\u004c\u0059\u0049\u0045\u004c\u0044",Tbillyield );RegisterFunction ("\u0056\u0044\u0042",Vdb );RegisterFunction ("\u0058\u0049\u0052\u0052",Xirr );RegisterFunction ("\u0058\u004e\u0050\u0056",Xnpv );RegisterFunction ("\u0059\u0049\u0045L\u0044",Yield );RegisterFunction ("\u0059I\u0045\u004c\u0044\u0044\u0049\u0053C",Yielddisc );RegisterFunction ("\u0059\u0049\u0045\u004c\u0044\u004d\u0041\u0054",Yieldmat );};func _fage (_abdc [][]Result )float64 {if len (_abdc )==2{_abag :=_abdc [0][0].AsNumber ();_aeda :=_abdc [0][1].AsNumber ();_cgeb :=_abdc [1][0].AsNumber ();_ggbc :=_abdc [1][1].AsNumber ();if _abag .Type !=ResultTypeNumber ||_aeda .Type !=ResultTypeNumber ||_cgeb .Type !=ResultTypeNumber ||_ggbc .Type !=ResultTypeNumber {return _ea .NaN ();};return _abag .ValueNumber *_ggbc .ValueNumber -_cgeb .ValueNumber *_aeda .ValueNumber ;};_fafca :=float64 (0);_aeaac :=float64 (1);for _fcbdc :=range _abdc {_fafca +=_aeaac *_abdc [0][_fcbdc ].ValueNumber *_fage (_gfbbb (_abdc ,_fcbdc ));_aeaac *=-1;};return _fafca ;};

// Coupncd implements the Excel COUPNCD function.
func Coupncd (args []Result )Result {_bbceb ,_dfb :=_fggc (args ,"\u0043O\u0055\u0050\u004e\u0043\u0044");if _dfb .Type ==ResultTypeError {return _dfb ;};_gcaec :=_acb (_bbceb ._dcd );_fdbd :=_acb (_bbceb ._efce );_faff :=_bbceb ._bfeg ;_fef :=_cdec (_gcaec ,_fdbd ,_faff );_gcgc ,_aeaa ,_aefc :=_fef .Date ();return MakeNumberResult (_fcg (_gcgc ,int (_aeaa ),_aefc ));};const _ffgb =57353;var _bfaff =[...]int {0,0,71,70,69,4,67,66,53,51,50,49,48,47,46,45,44,2};

// Int is an implementation of the Excel INT() function that rounds a number
// down to an integer.
func Int (args []Result )Result {if len (args )!=1{return MakeErrorResult ("I\u004e\u0054\u0028\u0029\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0061\u0020\u0073\u0069n\u0067\u006c\u0065\u0020\u006e\u0075\u006d\u0065\u0072\u0069c \u0061\u0072\u0067u\u006de\u006e\u0074");};_bfgg :=args [0].AsNumber ();if _bfgg .Type !=ResultTypeNumber {return MakeErrorResult ("I\u004e\u0054\u0028\u0029\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0061\u0020\u0073\u0069n\u0067\u006c\u0065\u0020\u006e\u0075\u006d\u0065\u0072\u0069c \u0061\u0072\u0067u\u006de\u006e\u0074");};_ebab ,_fgeb :=_ea .Modf (_bfgg .ValueNumber );if _fgeb < 0{_ebab --;};return MakeNumberResult (_ebab );};const _cagg ="\u0028\u0028\u005b\u0030\u002d\u0039\u005d\u0029\u002b\u0029\u002f\u0028\u0028\u005b\u0030-\u0039]\u0029\u002b\u0029\u002f\u0028\u0028\u005b\u0030\u002d\u0039\u005d\u0029\u002b\u0029";

// Column implements the Excel COLUMN function.
func Column (args []Result )Result {if len (args )< 1{return MakeErrorResult ("\u0043\u004f\u004c\u0055M\u004e\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073 \u006fn\u0065\u0020\u0061\u0072\u0067\u0075\u006de\u006e\u0074");};_dadd :=args [0].Ref ;if _dadd .Type !=ReferenceTypeCell {return MakeErrorResult ("\u0043\u004f\u004c\u0055\u004dN\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0061\u006e\u0020a\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u006f\u0066\u0020\u0074\u0079\u0070\u0065\u0020\u0072\u0065\u0066\u0065\u0072\u0065\u006e\u0063e");};_bbced ,_agbf :=_bef .ParseCellReference (_dadd .Value );if _agbf !=nil {return MakeErrorResult ("I\u006e\u0063\u006f\u0072re\u0063t\u0020\u0072\u0065\u0066\u0065r\u0065\u006e\u0063\u0065\u003a\u0020"+_dadd .Value );};return MakeNumberResult (float64 (_bbced .ColumnIdx +1));};type criteriaParsed struct{_ebabc bool ;_ggdc float64 ;_babgc string ;_gbbc *criteriaRegex ;};const _fedb =57344;const _bfedg =57378;const _fgaee =57377;func _fgbf (_efcb ,_ceba ,_dagd ,_egfa ,_dbedc float64 )float64 {var _bdde float64 ;_ggbb :=_dbedc /_dagd ;if _ggbb >=1{_ggbb =1;if _egfa ==1{_bdde =_efcb ;}else {_bdde =0;};}else {_bdde =_efcb *_ea .Pow (1-_ggbb ,_egfa -1);};_cbcea :=_efcb *_ea .Pow (1-_ggbb ,_egfa );var _bbdd float64 ;if _cbcea < _ceba {_bbdd =_bdde -_ceba ;}else {_bbdd =_bdde -_cbcea ;};if _bbdd < 0{_bbdd =0;};return _bbdd ;};

// Fv implements the Excel FV function.
func Fv (args []Result )Result {_adea :=len (args );if _adea < 3||_adea > 5{return MakeErrorResult ("\u0046\u0056\u0020\u0072\u0065q\u0075\u0069\u0072\u0065\u0073\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020o\u0066\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0073\u0020\u0069\u006e\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u006f\u0066\u0020\u0033\u0020\u0061\u006e\u0064\u00205");};if args [0].Type !=ResultTypeNumber {return MakeErrorResult ("\u0046\u0056\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0072\u0061\u0074\u0065\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u006eu\u006d\u0062\u0065\u0072\u0020a\u0072\u0067u\u006d\u0065\u006e\u0074");};_fcad :=args [0].ValueNumber ;if args [1].Type !=ResultTypeNumber {return MakeErrorResult ("\u0046\u0056\u0020\u0072\u0065q\u0075\u0069\u0072\u0065\u0073\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020o\u0066\u0020\u0070\u0065\u0072\u0069\u006f\u0064\u0073\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006et");};_ggfb :=args [1].ValueNumber ;if _ggfb !=float64 (int (_ggfb )){return MakeErrorResultType (ErrorTypeNum ,"\u0046\u0056\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u006ff\u0020\u0070\u0065\u0072\u0069\u006f\u0064\u0073\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020a\u0072\u0067\u0075\u006d\u0065n\u0074");};if args [2].Type !=ResultTypeNumber {return MakeErrorResult ("\u0046\u0056\u0020\u0072\u0065q\u0075\u0069\u0072\u0065\u0073\u0020\u0070\u0061\u0079\u006d\u0065\u006e\u0074 \u0074\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};_ada :=args [2].ValueNumber ;_adbg :=0.0;if _adea >=4&&args [3].Type !=ResultTypeEmpty {if args [3].Type !=ResultTypeNumber {return MakeErrorResult ("F\u0056\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065s\u0020\u0070\u0072\u0065\u0073\u0065\u006et \u0076\u0061\u006c\u0075e\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u006e\u0075mb\u0065\u0072 \u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};_adbg =args [3].ValueNumber ;};_aac :=0;if _adea ==5&&args [4].Type !=ResultTypeEmpty {if args [4].Type !=ResultTypeNumber {return MakeErrorResult ("\u0046\u0056\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0074\u0079\u0070\u0065\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u006eu\u006d\u0062\u0065\u0072\u0020a\u0072\u0067u\u006d\u0065\u006e\u0074");};_aac =int (args [4].ValueNumber );if _aac !=0{_aac =1;};};return MakeNumberResult (_cgcf (_fcad ,_ggfb ,_ada ,_adbg ,_aac ));};

// String returns a string representation of ConstArrayExpr.
func (_ac ConstArrayExpr )String ()string {return ""};func _afcga (_bbbd string ,_egcgb func (_cddaf float64 )float64 )Function {return func (_efeg []Result )Result {if len (_efeg )!=1{return MakeErrorResult (_bbbd +"\u0020\u0072\u0065\u0071ui\u0072\u0065\u0073\u0020\u006f\u006e\u0065\u0020\u0061\u0072\u0067\u0075\u006d\u0065n\u0074");};_aace :=_efeg [0].AsNumber ();switch _aace .Type {case ResultTypeNumber :_bacd :=_egcgb (_aace .ValueNumber );if _ea .IsNaN (_bacd ){return MakeErrorResult (_bbbd +"\u0020\u0072\u0065\u0074\u0075\u0072\u006e\u0065\u0064\u0020\u004e\u0061\u004e");};if _ea .IsInf (_bacd ,0){return MakeErrorResult (_bbbd +"\u0020r\u0065t\u0075\u0072\u006e\u0065\u0064 \u0069\u006ef\u0069\u006e\u0069\u0074\u0079");};if _bacd ==0{return MakeErrorResultType (ErrorTypeDivideByZero ,_bbbd +"\u0020d\u0069v\u0069\u0064\u0065\u0020\u0062\u0079\u0020\u007a\u0065\u0072\u006f");};return MakeNumberResult (1/_bacd );case ResultTypeList ,ResultTypeString :return MakeErrorResult (_bbbd +"\u0020\u0072\u0065\u0071u\u0069\u0072\u0065\u0073\u0020\u0061\u0020\u006e\u0075\u006de\u0072i\u0063\u0020\u0061\u0072\u0067\u0075\u006de\u006e\u0074");case ResultTypeError :return _aace ;default:return MakeErrorResult (_dc .Sprintf ("\u0075\u006e\u0068a\u006e\u0064\u006c\u0065d\u0020\u0025\u0073\u0028\u0029\u0020\u0061r\u0067\u0075\u006d\u0065\u006e\u0074\u0020\u0074\u0079\u0070\u0065\u0020\u0025\u0073",_bbbd ,_aace .Type ));};};};

// VLookup implements the VLOOKUP function that returns a matching value from a
// column in an array.
func VLookup (args []Result )Result {_bcgbb :=len (args );if _bcgbb < 3{return MakeErrorResult ("\u0056\u004c\u004f\u004f\u004bU\u0050\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0061\u0074 \u006c\u0065\u0061\u0073\u0074\u0020\u0074\u0068\u0072\u0065\u0065\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0073");};if _bcgbb > 4{return MakeErrorResult ("\u0056\u004c\u004f\u004f\u004b\u0055\u0050\u0020\u0072\u0065\u0071\u0075\u0069r\u0065\u0073\u0020\u0061\u0074\u0020m\u006f\u0073\u0074\u0020\u0066\u006f\u0075\u0072\u0020\u0061\u0072\u0067\u0075m\u0065\u006e\u0074\u0073");};_eefee :=args [0];_fgbe :=args [1];if _fgbe .Type !=ResultTypeArray {return MakeErrorResult ("\u0056\u004cO\u004f\u004b\u0055\u0050\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0073\u0065\u0063\u006f\u006e\u0064\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0020\u006f\u0066\u0020\u0074\u0079\u0070\u0065\u0020\u0061\u0072\u0072\u0061\u0079");};_gcfe :=args [2].AsNumber ();if _gcfe .Type !=ResultTypeNumber {return MakeErrorResult ("\u0056\u004cO\u004f\u004b\u0055\u0050 \u0072\u0065q\u0075\u0069\u0072\u0065\u0073\u0020\u006e\u0075m\u0065\u0072\u0069\u0063\u0020\u0063\u006f\u006c\u0020\u0061\u0072\u0067u\u006d\u0065\u006e\u0074");};_acccc :=false ;if _bcgbb ==4&&args [3].Type !=ResultTypeEmpty {_ddag :=args [3].AsNumber ();if _ddag .Type !=ResultTypeNumber {return MakeErrorResult ("\u0056\u004c\u004f\u004f\u004b\u0055\u0050\u0020\u0072\u0065\u0071\u0075\u0069r\u0065\u0073\u0020\u006e\u0075\u006de\u0072\u0069\u0063\u0020\u006d\u0061\u0074\u0063\u0068\u0020\u0061\u0072\u0067u\u006d\u0065\u006e\u0074");};if _ddag .ValueNumber ==0{_acccc =true ;};};_bedgc :=int (_gcfe .ValueNumber )-1;_gcege :=-1;_adaa :=false ;_bgdb :for _egda ,_eefdb :=range _fgbe .ValueArray {if len (_eefdb )==0{continue ;};_abae :=_eefdb [0];switch _fbbf (_abae ,_eefee ,false ,_acccc ){case _gbde :_gcege =_egda ;case _babd :_gcege =_egda ;_adaa =true ;break _bgdb ;};};if _gcege ==-1{return MakeErrorResultType (ErrorTypeNA ,"\u0056\u004c\u004fOK\u0055\u0050\u0020\u006e\u006f\u0020\u0072\u0065\u0073\u0075\u006c\u0074\u0020\u0066\u006f\u0075\u006e\u0064");};_ebea :=_fgbe .ValueArray [_gcege ];if _bedgc < 0||_bedgc >=len (_ebea ){return MakeErrorResult ("\u0056\u004c\u004f\u004f\u004b\u0055\u0050\u0020\u0068\u0061\u0073\u0020\u0069\u006e\u0076a\u006ci\u0064\u0020\u0063\u006f\u006c\u0075\u006d\u006e\u0020\u0069\u006e\u0064\u0065\u0078");};if _adaa ||!_acccc {return _ebea [_bedgc ];};return MakeErrorResultType (ErrorTypeNA ,"\u0056\u004c\u004fOK\u0055\u0050\u0020\u006e\u006f\u0020\u0072\u0065\u0073\u0075\u006c\u0074\u0020\u0066\u006f\u0075\u006e\u0064");};

// ISREF is an implementation of the Excel ISREF() function.
func IsRef (ctx Context ,ev Evaluator ,args []Result )Result {if len (args )!=1{return MakeErrorResult ("\u0049\u0053\u0052\u0045\u0046\u0028)\u0020\u0061\u0063\u0063\u0065\u0070\u0074\u0073\u0020\u0061\u0020\u0073\u0069n\u0067\u006c\u0065\u0020\u0061\u0072\u0067u\u006d\u0065\u006e\u0074");};return MakeBoolResult (ev .LastEvalIsRef ());};func _gacd (_cfef float64 )float64 {return float64 (int (_cfef +0.5))};

// Negate is a negate expression like -A1.
type Negate struct{_eaaad Expression };var _ecc =map[string ]*_be .Regexp {};

// Left implements the Excel LEFT(string,[n]) function which returns the
// leftmost n characters.
func Left (args []Result )Result {_bdfg :=1;switch len (args ){case 1:case 2:if args [1].Type !=ResultTypeNumber {return MakeErrorResult ("\u004c\u0045F\u0054\u0020\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0061\u0072\u0067\u0075me\u006e\u0074");};_bdfg =int (args [1].ValueNumber );if _bdfg < 0{return MakeErrorResult ("\u004c\u0045\u0046T \u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020n\u0075m\u0062e\u0072 \u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0020\u003e\u003d\u0020\u0030");};if _bdfg ==0{return MakeStringResult ("");};default:return MakeErrorResult ("\u004c\u0045\u0046T \u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020o\u006ee\u0020o\u0072 \u0074\u0077\u006f\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0073");};if args [0].Type ==ResultTypeList {return MakeErrorResult ("\u004c\u0045\u0046T\u0020\u0063\u0061\u006e'\u0074\u0020\u0062\u0065\u0020\u0063\u0061l\u006c\u0065\u0064\u0020\u006f\u006e\u0020\u0061\u0020\u0072\u0061\u006e\u0067\u0065");};_ggggc :=args [0].Value ();if _bdfg > len (_ggggc ){return MakeStringResult (_ggggc );};return MakeStringResult (_ggggc [0:_bdfg ]);};type cumulArgs struct{_bbcg float64 ;_baca float64 ;_fbd float64 ;_bgbge float64 ;_eeca float64 ;_cbgab int ;};const _cbc ="\u0028\u0028\u005b\u0030\u002d\u0039]\u0029\u002b\u0029:\u0028\u0028\u005b0\u002d\u0039\u005d\u0029\u002b\u0029\u003a\u0028\u0028\u005b0\u002d\u0039\u005d\u0029\u002b(\\\u002e\u0028\u005b\u0030\u002d\u0039\u005d\u0029\u002b\u0029\u003f\u0029\u0028\u0020\u0028\u0061\u006d\u007c\u0070\u006d\u0029\u0029\u003f";

// EmptyExpr is an empty expression.
type EmptyExpr struct{};type ri struct{_gfaf float64 ;_cfeeb string ;};

// LastColumn returns empty string for the invalid reference context.
func (_cdcea *ivr )LastColumn (rowFrom ,rowTo int )string {return ""};func (_fcedd ResultType )String ()string {if _fcedd >=ResultType (len (_fccgg )-1){return _dc .Sprintf ("\u0052\u0065\u0073\u0075\u006c\u0074\u0054\u0079\u0070e\u0028\u0025\u0064\u0029",_fcedd );};return _fabgd [_fccgg [_fcedd ]:_fccgg [_fcedd +1]];};func (_daga tokenType )String ()string {return _geeac (int (_daga ))};func _ec (_ae BinOpType ,_adb [][]Result ,_bg Result )Result {_eaa :=[][]Result {};for _adf :=range _adb {_gg :=_ccb (_ae ,_adb [_adf ],_bg );if _gg .Type ==ResultTypeError {return _gg ;};_eaa =append (_eaa ,_gg .ValueList );};return MakeArrayResult (_eaa );};const _acgb =1;func _cgcf (_gfc ,_ffg ,_bbbg ,_feaa float64 ,_cfee int )float64 {var _cgbb float64 ;if _gfc ==0{_cgbb =_feaa +_bbbg *_ffg ;}else {_ddef :=_ea .Pow (1+_gfc ,_ffg );if _cfee ==1{_cgbb =_feaa *_ddef +_bbbg *(1+_gfc )*(_ddef -1)/_gfc ;}else {_cgbb =_feaa *_ddef +_bbbg *(_ddef -1)/_gfc ;};};return -_cgbb ;};

// Even is an implementation of the Excel EVEN() that rounds a number to the
// nearest even integer.
func Even (args []Result )Result {if len (args )!=1{return MakeErrorResult ("\u0045\u0056\u0045\u004e(\u0029\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073 \u006fn\u0065\u0020\u0061\u0072\u0067\u0075\u006de\u006e\u0074");};_eggd :=args [0].AsNumber ();if _eggd .Type !=ResultTypeNumber {return MakeErrorResult ("\u0045\u0056\u0045N\u0028\u0029\u0020\u0072e\u0071\u0075\u0069\u0072\u0065\u0073\u0020n\u0075\u006d\u0062\u0065\u0072\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};_dbcdc :=_ea .Signbit (_eggd .ValueNumber );_daab ,_cfcg :=_ea .Modf (_eggd .ValueNumber /2);_gcffc :=_daab *2;if _cfcg !=0{if !_dbcdc {_gcffc +=2;}else {_gcffc -=2;};};return MakeNumberResult (_gcffc );};

// Base is an implementation of the Excel BASE function that returns a string
// form of an integer in a specified base and of a minimum length with padded
// zeros.
func Base (args []Result )Result {if len (args )< 2{return MakeErrorResult ("\u0042\u0041\u0053\u0045\u0028\u0029\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0061\u0074\u0020\u006c\u0065\u0061\u0073\u0074 \u0074\u0077\u006f\u0020\u0061r\u0067\u0075m\u0065\u006e\u0074\u0073");};if len (args )> 3{return MakeErrorResult ("\u0042\u0041S\u0045\u0028\u0029\u0020a\u006c\u006co\u0077\u0073\u0020\u0061\u0074\u0020\u006d\u006fs\u0074\u0020\u0074\u0068\u0072\u0065\u0065\u0020\u0061\u0072\u0067\u0075m\u0065\u006e\u0074\u0073");};_caeb :=args [0].AsNumber ();if _caeb .Type !=ResultTypeNumber {return MakeErrorResult ("\u0066\u0069\u0072\u0073\u0074 \u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0020\u0074\u006f\u0020\u0042A\u0053\u0045\u0028\u0029\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020\u0061\u0020\u006e\u0075\u006d\u0062\u0065\u0072");};_cfdd :=args [1].AsNumber ();if _cfdd .Type !=ResultTypeNumber {return MakeErrorResult ("\u0073\u0065\u0063o\u006e\u0064\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0020\u0074\u006f\u0020\u0042\u0041\u0053\u0045\u0028\u0029\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065 \u0061\u0020\u006e\u0075\u006d\u0062\u0065\u0072");};_cede :=int (_cfdd .ValueNumber );if _cede < 0||_cede > 36{return MakeErrorResult ("\u0072\u0061\u0064\u0069\u0078\u0020m\u0075\u0073\u0074\u0020\u0062\u0065\u0020\u0069\u006e\u0020\u0074\u0068\u0065 \u0072\u0061\u006e\u0067\u0065\u0020\u005b0\u002c\u0033\u0036\u005d");};_gcgcb :=0;if len (args )> 2{_fgae :=args [2].AsNumber ();if _fgae .Type !=ResultTypeNumber {return MakeErrorResult ("\u0074\u0068\u0069\u0072\u0064 \u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0020\u0074\u006f\u0020\u0042A\u0053\u0045\u0028\u0029\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020\u0061\u0020\u006e\u0075\u006d\u0062\u0065\u0072");};_gcgcb =int (_fgae .ValueNumber );};_ceec :=_gc .FormatInt (int64 (_caeb .ValueNumber ),_cede );if len (_ceec )< _gcgcb {_ceec =_ce .Repeat ("\u0030",_gcgcb -len (_ceec ))+_ceec ;};return MakeStringResult (_ceec );};func _bcga (_cbeca Result ,_bcec ,_fafbf int )[][]Result {_edgbbf :=[][]Result {};switch _cbeca .Type {case ResultTypeArray :for _effa ,_cbfaf :=range _cbeca .ValueArray {if _effa < _bcec {_edgbbf =append (_edgbbf ,_afcg (MakeListResult (_cbfaf ),_fafbf ));}else {_edgbbf =append (_edgbbf ,_afcg (MakeErrorResultType (ErrorTypeNA ,""),_fafbf ));};};case ResultTypeList :_gdead :=_afcg (_cbeca ,_fafbf );for _ggac :=0;_ggac < _bcec ;_ggac ++{_edgbbf =append (_edgbbf ,_gdead );};case ResultTypeNumber ,ResultTypeString ,ResultTypeError ,ResultTypeEmpty :for _gccff :=0;_gccff < _bcec ;_gccff ++{_ggfe :=_afcg (_cbeca ,_fafbf );_edgbbf =append (_edgbbf ,_ggfe );};};return _edgbbf ;};type defEval struct{evCache ;_bbe bool ;};var _ccgdc ,_agbfg ,_gagg ,_bddad ,_fgfc ,_gagb ,_eggb ,_cega ,_ecfc ,_fcbd ,_bgef ,_abgbd ,_fafc ,_fdaa ,_aeaaba *_be .Regexp ;var _egaa string =string ([]byte {92});

// Reference returns a string reference value to a cell.
func (_db CellRef )Reference (ctx Context ,ev Evaluator )Reference {return Reference {Type :ReferenceTypeCell ,Value :_db ._cbe };};

// Pricemat implements the Excel PRICEMAT function.
func Pricemat (args []Result )Result {_fdgce :=len (args );if _fdgce !=5&&_fdgce !=6{return MakeErrorResult ("\u0050\u0052\u0049\u0043\u0045\u004d\u0041\u0054\u0020\u0072\u0065\u0071\u0075i\u0072\u0065\u0073\u0020\u0066\u0069v\u0065\u0020\u006f\u0072\u0020\u0073\u0069\u0078\u0020\u0061\u0072\u0067\u0075m\u0065\u006e\u0074\u0073");};_gdggg ,_agbee ,_fegd :=_egcf (args [0],args [1],"\u0050\u0052\u0049\u0043\u0045\u004d\u0041\u0054");if _fegd .Type ==ResultTypeError {return _fegd ;};_gadb ,_fegd :=_gagf (args [2],"\u0069\u0073\u0073\u0075\u0065\u0020\u0064\u0061\u0074\u0065","\u0050\u0052\u0049\u0043\u0045\u004d\u0041\u0054");if _fegd .Type ==ResultTypeError {return _fegd ;};if _gadb >=_gdggg {return MakeErrorResult ("\u0050\u0052\u0049\u0043E\u004d\u0041\u0054\u0020\u0072\u0065\u0071\u0075\u0069r\u0065\u0073\u0020\u0069\u0073\u0073\u0075\u0065\u0020\u0064\u0061\u0074\u0065\u0020\u0074\u006f\u0020\u0062e\u0020\u0062\u0065\u0066\u006fr\u0065\u0020\u0073\u0065\u0074\u0074\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u0064\u0061\u0074\u0065");};if args [3].Type !=ResultTypeNumber {return MakeErrorResult ("\u0050\u0052I\u0043\u0045\u004d\u0041T\u0020\u0072e\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0072a\u0074\u0065\u0020\u006f\u0066\u0020\u0074\u0079\u0070\u0065\u0020\u006eu\u006d\u0062\u0065\u0072");};_cgaf :=args [3].ValueNumber ;if _cgaf < 0{return MakeErrorResultType (ErrorTypeNum ,"\u0050\u0052\u0049\u0043\u0045M\u0041\u0054\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0072a\u0074\u0065\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u006e\u006f\u006e\u0020\u006e\u0065\u0067\u0061\u0074\u0069\u0076\u0065");};if args [4].Type !=ResultTypeNumber {return MakeErrorResult ("\u0050\u0052\u0049\u0043\u0045\u004d\u0041\u0054\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0079\u0069\u0065\u006c\u0064\u0020o\u0066\u0020\u0074\u0079\u0070e\u0020\u006eu\u006d\u0062\u0065\u0072");};_cbdfb :=args [4].ValueNumber ;if _cbdfb < 0{return MakeErrorResultType (ErrorTypeNum ,"\u0050\u0052\u0049C\u0045\u004d\u0041\u0054\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0079\u0069\u0065\u006c\u0064\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u006e\u006f\u006e \u006e\u0065\u0067\u0061\u0074\u0069\u0076\u0065");};_deaa :=0;if _fdgce ==6&&args [5].Type !=ResultTypeEmpty {if args [5].Type !=ResultTypeNumber {return MakeErrorResult ("\u0050R\u0049\u0043E\u004d\u0041\u0054 \u0072\u0065\u0071\u0075\u0069\u0072\u0065s\u0020\u0062\u0061\u0073\u0069\u0073 \u0074\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006d\u0062\u0065r\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};_deaa =int (args [5].ValueNumber );if !_aaac (_deaa ){return MakeErrorResultType (ErrorTypeNum ,"\u0049\u006ec\u006f\u0072\u0072\u0065c\u0074\u0020b\u0061\u0073\u0069\u0073\u0020\u0061\u0072\u0067u\u006d\u0065\u006e\u0074\u0020\u0066\u006f\u0072\u0020\u0050\u0052\u0049C\u0045\u004d\u0041\u0054");};};_afbcd ,_fegd :=_eaee (_gdggg ,_agbee ,_deaa );if _fegd .Type ==ResultTypeError {return _fegd ;};_gbfg ,_fegd :=_eaee (_gadb ,_agbee ,_deaa );if _fegd .Type ==ResultTypeError {return _fegd ;};_bada ,_fegd :=_eaee (_gadb ,_gdggg ,_deaa );if _fegd .Type ==ResultTypeError {return _fegd ;};_fcdgd :=1+_gbfg *_cgaf ;_dcde :=1+_afbcd *_cbdfb ;return MakeNumberResult ((_fcdgd /_dcde -_bada *_cgaf )*100);};

// Rate implements the Excel RATE function.
func Rate (args []Result )Result {_gfcd :=len (args );if _gfcd < 3||_gfcd > 6{return MakeErrorResult ("\u0052\u0041\u0054\u0045\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u006e\u0075\u006d\u0062\u0065\u0072 \u006f\u0066\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0073\u0020\u0069\u006e\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u006f\u0066\u0020\u0074\u0068\u0072\u0065\u0065 \u0061\u006e\u0064\u0020\u0073i\u0078");};if args [0].Type !=ResultTypeNumber {return MakeErrorResult ("\u0052\u0041\u0054\u0045\u0020\u0072\u0065\u0071\u0075\u0069\u0072e\u0073\u0020\u006e\u0075\u006d\u0062\u0065\u0072 \u006ff\u0020\u0070\u0065\u0072\u0069\u006f\u0064\u0073\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006db\u0065\u0072\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};_ebba :=args [0].ValueNumber ;if _ebba !=float64 (int (_ebba )){return MakeErrorResultType (ErrorTypeNum ,"R\u0041\u0054\u0045\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u006f\u0066\u0020\u0070\u0065\u0072i\u006fd\u0073\u0020\u0074\u006f \u0062\u0065 \u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};if args [1].Type !=ResultTypeNumber {return MakeErrorResult ("\u0052\u0041\u0054\u0045\u0020\u0072\u0065q\u0075\u0069\u0072e\u0073\u0020\u0070\u0061y\u006d\u0065\u006e\u0074\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};_affg :=args [1].ValueNumber ;if args [2].Type !=ResultTypeNumber {return MakeErrorResult ("\u0052\u0041\u0054\u0045\u0020\u0072e\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0020\u0076\u0061\u006c\u0075\u0065 \u0074\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0061r\u0067u\u006d\u0065\u006e\u0074");};_dabf :=args [2].ValueNumber ;_ccda :=0.0;if _gfcd >=4&&args [3].Type !=ResultTypeEmpty {if args [3].Type !=ResultTypeNumber {return MakeErrorResult ("\u0052\u0041\u0054\u0045\u0020\u0072\u0065\u0071u\u0069\u0072\u0065s \u0066\u0075\u0074\u0075\u0072\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006db\u0065\u0072\u0020\u0061\u0072\u0067\u0075\u006de\u006e\u0074");};_ccda =args [3].ValueNumber ;};_agbbc :=0.0;if _gfcd >=5&&args [4].Type !=ResultTypeEmpty {if args [4].Type !=ResultTypeNumber {return MakeErrorResult ("R\u0041\u0054\u0045\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0074\u0079\u0070\u0065\u0020t\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006d\u0062\u0065r \u0061\u0072\u0067u\u006de\u006e\u0074");};_agbbc =args [4].ValueNumber ;if _agbbc !=0{_agbbc =1;};};_gfbb :=0.1;if _gfcd >=6&&args [5].Type !=ResultTypeEmpty {if args [5].Type !=ResultTypeNumber {return MakeErrorResult ("\u0052\u0041\u0054\u0045\u0020r\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0067\u0075\u0065\u0073\u0073 \u0074\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};_gfbb =args [5].ValueNumber ;};_cffb :=100;_ceeb :=0;_afae :=false ;_eac :=1e-6;_fafba :=_gfbb ;for _ceeb < _cffb &&!_afae {_cbfb :=_ea .Pow (_fafba +1,_ebba );_aeb :=_ea .Pow (_fafba +1,_ebba -1);_beac :=_fafba *_agbbc +1;_bdgf :=_affg *(_cbfb -1);_fbab :=_ccda +_cbfb *_dabf +_bdgf *_beac /_fafba ;_edgb :=_ebba *_aeb *_dabf -_bdgf *_beac /_ea .Pow (_fafba ,2);_gcff :=(_ebba *_affg *_aeb *_beac +_bdgf *_agbbc )/_fafba ;_abeg :=_fbab /(_edgb +_gcff );if _ea .Abs (_abeg )< _eac {_afae =true ;};_ceeb ++;_fafba -=_abeg ;};return MakeNumberResult (_fafba );};type ivr struct{};

// ISNUMBER is an implementation of the Excel ISNUMBER() function.
func IsNumber (args []Result )Result {if len (args )!=1{return MakeErrorResult ("\u0049\u0053NU\u004d\u0042\u0045R\u0028\u0029\u0020\u0061cce\u0070ts\u0020\u0061\u0020\u0073\u0069\u006e\u0067le\u0020\u0061\u0072\u0067\u0075\u006d\u0065n\u0074");};return MakeBoolResult (args [0].Type ==ResultTypeNumber );};type yyParser interface{Parse (yyLexer )int ;Lookahead ()int ;};

// NewPrefixRangeExpr constructs a new range with prefix.
func NewPrefixRangeExpr (pfx ,from ,to Expression )Expression {_bgbd ,_baaag ,_dcfcb :=_eccf (from ,to );if _dcfcb !=nil {_bf .Log .Debug (_dcfcb .Error ());return NewError (_dcfcb .Error ());};return PrefixRangeExpr {_fcagg :pfx ,_cfddb :_bgbd ,_befed :_baaag };};

// Tbillprice implements the Excel TBILLPRICE function.
func Tbillprice (args []Result )Result {if len (args )!=3{return MakeErrorResult ("T\u0042\u0049\u004c\u004c\u0050\u0052I\u0043\u0045\u0020\u0072\u0065\u0071u\u0069\u0072\u0065\u0073\u0020\u0074\u0068r\u0065\u0065\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006et\u0073");};_gbab ,_befaa ,_fdce :=_egcf (args [0],args [1],"\u0054\u0042\u0049\u004c\u004c\u0050\u0052\u0049\u0043\u0045");if _fdce .Type ==ResultTypeError {return _fdce ;};if args [2].Type !=ResultTypeNumber {return MakeErrorResult ("\u0054\u0042\u0049\u004c\u004c\u0050\u0052\u0049\u0043\u0045\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065s\u0020\u0064\u0069\u0073\u0063\u006f\u0075n\u0074\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006db\u0065\u0072\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};_aggf :=_befaa -_gbab ;if _aggf > 365{return MakeErrorResultType (ErrorTypeNum ,"\u0054\u0042\u0049\u004c\u004cP\u0052\u0049\u0043\u0045\u0020\u0072e\u0071\u0075\u0069\u0072\u0065\u0073\u0020m\u0061\u0074\u0075r\u0069\u0074\u0079\u0020t\u006f\u0020\u0062\u0065\u0020\u006eo\u0074\u0020\u006d\u006f\u0072\u0065\u0020\u0074\u0068\u0061\u006e\u0020\u006f\u006e\u0065\u0020\u0079e\u0061\u0072\u0020\u0061\u0066\u0074\u0065\u0072\u0020\u0073\u0065\u0074\u0074\u006c\u0065\u006d\u0065\u006e\u0074");};_cbce :=args [2].ValueNumber ;if _cbce <=0{return MakeErrorResultType (ErrorTypeNum ,"\u0054\u0042\u0049\u004c\u004c\u0050\u0052\u0049\u0043\u0045\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020d\u0069\u0073\u0063\u006f\u0075\u006e\u0074\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u0070\u006f\u0073\u0069\u0074\u0069\u0076\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020a\u0072\u0067\u0075\u006d\u0065n\u0074");};return MakeNumberResult (100*(1-_cbce *_aggf /360));};

// String returns a string representation of PrefixExpr.
func (_bccbe PrefixExpr )String ()string {return _dc .Sprintf ("\u0025\u0073\u0021%\u0073",_bccbe ._bdga .String (),_bccbe ._bebg .String ());};var _fgee =[]*_be .Regexp {};

// String returns a string representation of FunctionCall expression.
func (_abbdd FunctionCall )String ()string {_bfab :=_cb .Buffer {};_bfab .WriteString (_abbdd ._cacb );_bfab .WriteString ("\u0028");_bcaaa :=len (_abbdd ._bdegf )-1;for _ggfaa ,_dcfga :=range _abbdd ._bdegf {_bfab .WriteString (_dcfga .String ());if _ggfaa !=_bcaaa {_bfab .WriteString ("\u002c");};};_bfab .WriteString ("\u0029");return _bfab .String ();};

// Vdb implements the Excel VDB function.
func Vdb (args []Result )Result {_gggfaf :=len (args );if _gggfaf < 5||_gggfaf > 7{return MakeErrorResult ("\u0056\u0044\u0042\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u006e\u0075\u006d\u0062\u0065\u0072 \u006f\u0066\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0073\u0020\u0074\u006f\u0020b\u0065\u0020\u0069\u006e\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u0062\u0065\u0074\u0077\u0065\u0065\u006e\u0020\u0066\u0069\u0076\u0065\u0020a\u006e\u0064\u0020\u0073\u0065v\u0065\u006e");};if args [0].Type !=ResultTypeNumber {return MakeErrorResult ("\u0056\u0044\u0042\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020c\u006f\u0073\u0074\u0020\u0074\u006f \u0062\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0061\u0072\u0067u\u006d\u0065\u006e\u0074");};_afca :=args [0].ValueNumber ;if _afca < 0{return MakeErrorResultType (ErrorTypeNum ,"\u0056\u0044B \u0072\u0065\u0071u\u0069\u0072\u0065\u0073 co\u0073t \u0074\u006f\u0020\u0062\u0065\u0020\u006eon\u0020\u006e\u0065\u0067\u0061\u0074\u0069v\u0065");};if args [1].Type !=ResultTypeNumber {return MakeErrorResult ("\u0056\u0044\u0042 \u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0073\u0061\u006c\u0076\u0061\u0067\u0065\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072 \u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};_fced :=args [1].ValueNumber ;if _fced < 0{return MakeErrorResultType (ErrorTypeNum ,"\u0056\u0044\u0042\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020s\u0061\u006c\u0076\u0061\u0067\u0065 \u0074\u006f\u0020\u0062\u0065\u0020\u006e\u006f\u006e\u0020\u006e\u0065\u0067a\u0074\u0069\u0076\u0065");};if args [2].Type !=ResultTypeNumber {return MakeErrorResult ("\u0056\u0044\u0042\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020l\u0069\u0066\u0065\u0020\u0074\u006f \u0062\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0061\u0072\u0067u\u006d\u0065\u006e\u0074");};_gddc :=args [2].ValueNumber ;if _gddc ==0{return MakeErrorResultType (ErrorTypeDivideByZero ,"\u0056\u0044\u0042\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u006c\u0069f\u0065 \u0074\u006f\u0020\u0062\u0065\u0020\u0070\u006f\u0073\u0069\u0074\u0069\u0076\u0065");};if _gddc < 0{return MakeErrorResultType (ErrorTypeNum ,"\u0056\u0044\u0042\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u006c\u0069f\u0065 \u0074\u006f\u0020\u0062\u0065\u0020\u0070\u006f\u0073\u0069\u0074\u0069\u0076\u0065");};if args [3].Type !=ResultTypeNumber {return MakeErrorResult ("V\u0044\u0042\u0020\u0072\u0065\u0071\u0075\u0069\u0072e\u0073\u0020\u0073\u0074\u0061\u0072\u0074 p\u0065\u0072\u0069\u006fd\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u006e\u0075mb\u0065\u0072 \u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};_cbgaa :=args [3].ValueNumber ;if _cbgaa < 0{return MakeErrorResultType (ErrorTypeNum ,"\u0056\u0044\u0042\u0020\u0072\u0065q\u0075\u0069\u0072\u0065\u0073\u0020\u0073\u0074\u0061\u0072\u0074\u0020\u0070\u0065\u0072\u0069\u006f\u0064\u0020\u0074o\u0020\u0062\u0065\u0020\u006e\u006f\u0074\u0020\u006c\u0065\u0073\u0073\u0020\u0074h\u0061n\u0020\u006f\u006e\u0065");};if args [4].Type !=ResultTypeNumber {return MakeErrorResult ("\u0056D\u0042\u0020r\u0065\u0071\u0075i\u0072\u0065\u0073\u0020\u0065\u006e\u0064 \u0070\u0065\u0072\u0069\u006f\u0064 \u0074\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006d\u0062\u0065r\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};_ebcb :=args [4].ValueNumber ;if _cbgaa > _ebcb {return MakeErrorResultType (ErrorTypeNum ,"\u0049\u006e\u0063\u006f\u0072\u0072\u0065\u0063\u0074\u0020s\u0074\u0061\u0072\u0074\u0020\u0070\u0065r\u0069\u006f\u0064\u0020\u0066\u006f\u0072\u0020\u0056\u0044\u0042");};if _ebcb > _gddc {return MakeErrorResultType (ErrorTypeNum ,"\u0049\u006e\u0063\u006fr\u0072\u0065\u0063\u0074\u0020\u0065\u006e\u0064\u0020\u0070e\u0072i\u006f\u0064\u0020\u0066\u006f\u0072\u0020V\u0044\u0042");};_cbdb :=2.0;if _gggfaf > 5{if args [5].Type ==ResultTypeEmpty {_cbdb =0.0;}else {if args [5].Type !=ResultTypeNumber {return MakeErrorResult ("\u0056\u0044\u0042\u0020\u0072e\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0066\u0061\u0063\u0074\u006f\u0072 \u0074\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};_cbdb =args [5].ValueNumber ;if _cbdb < 0{return MakeErrorResultType (ErrorTypeNum ,"\u0056\u0044\u0042\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0066\u0061\u0063\u0074\u006f\u0072\u0020\u0074\u006f\u0020\u0062e\u0020\u006e\u006f\u006e\u0020n\u0065\u0067a\u0074\u0069\u0076\u0065");};};};_gdbed :=false ;if _gggfaf > 6&&args [6].Type !=ResultTypeEmpty {if args [6].Type !=ResultTypeNumber {return MakeErrorResult ("\u0056D\u0042\u0020r\u0065\u0071\u0075\u0069r\u0065\u0073\u0020n\u006f\u005f\u0073\u0077\u0069\u0074\u0063\u0068\u0020to\u0020\u0062\u0065 \u006e\u0075m\u0062\u0065\u0072\u0020\u0061\u0072g\u0075\u006de\u006e\u0074");};_gdbed =args [6].ValueNumber !=0;};_cegg :=0.0;_bca :=_ea .Floor (_cbgaa );_efabc :=_ea .Ceil (_ebcb );if _gdbed {for _fafg :=_bca +1;_fafg <=_efabc ;_fafg ++{_cbca :=_fgbf (_afca ,_fced ,_gddc ,_fafg ,_cbdb );if _fafg ==_bca +1{_cbca *=_ea .Min (_ebcb ,_bca +1)-_cbgaa ;}else if _fafg ==_efabc {_cbca *=_ebcb +1-_efabc ;};_cegg +=_cbca ;};}else {_abac :=_gddc ;var _gfcb float64 ;if !_ccae (_cbgaa ,_ea .Floor (_cbgaa )){if _cbdb ==1{_aagg :=_gddc /2;if _cbgaa > _aagg ||_ccae (_cbgaa ,_aagg ){_gfcb =_cbgaa -_aagg ;_cbgaa =_aagg ;_ebcb -=_gfcb ;_abac ++;};};};if _cbdb !=0{_afca -=_acff (_afca ,_fced ,_gddc ,_abac ,_cbgaa ,_cbdb );};_cegg =_acff (_afca ,_fced ,_gddc ,_gddc -_cbgaa ,_ebcb -_cbgaa ,_cbdb );};return MakeNumberResult (_cegg );};

// T is an implementation of the Excel T function that returns whether the
// argument is text.
func T (args []Result )Result {if len (args )!=1{return MakeErrorResult ("T\u0020\u0072\u0065\u0071\u0075\u0069r\u0065\u0073\u0020\u0061\u0020\u0073i\u006e\u0067\u006c\u0065\u0020\u0073\u0074r\u0069\u006e\u0067\u0020\u0061\u0072\u0067\u0075\u006d\u0065n\u0074");};_eccbf :=args [0];if _eccbf .Type ==ResultTypeError ||_eccbf .Type ==ResultTypeString {return _eccbf ;};return _ega ;};type parsedReplaceObject struct{_bbabg string ;_cgdgf int ;_adaf int ;_debb string ;};

// HLookup implements the HLOOKUP function that returns a matching value from a
// row in an array.
func HLookup (args []Result )Result {if len (args )< 3{return MakeErrorResult ("\u0048\u004c\u004f\u004f\u004bU\u0050\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0061\u0074 \u006c\u0065\u0061\u0073\u0074\u0020\u0074\u0068\u0072\u0065\u0065\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0073");};if len (args )> 4{return MakeErrorResult ("\u0048\u004c\u004f\u004f\u004b\u0055\u0050\u0020\u0072\u0065\u0071\u0075\u0069r\u0065\u0073\u0020\u0061\u0074\u0020m\u006f\u0073\u0074\u0020\u0066\u006f\u0075\u0072\u0020\u0061\u0072\u0067\u0075m\u0065\u006e\u0074\u0073");};_aagcf :=args [0];_fgab :=args [1];if _fgab .Type !=ResultTypeArray {return MakeErrorResult ("\u0048\u004cO\u004f\u004b\u0055\u0050\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0073\u0065\u0063\u006f\u006e\u0064\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0020\u006f\u0066\u0020\u0074\u0079\u0070\u0065\u0020\u0061\u0072\u0072\u0061\u0079");};_efef :=args [2].AsNumber ();if _efef .Type !=ResultTypeNumber {return MakeErrorResult ("\u0048\u004cO\u004f\u004b\u0055\u0050 \u0072\u0065q\u0075\u0069\u0072\u0065\u0073\u0020\u006e\u0075m\u0065\u0072\u0069\u0063\u0020\u0072\u006f\u0077\u0020\u0061\u0072\u0067u\u006d\u0065\u006e\u0074");};_gdbeda :=false ;if len (args )==4{_agfe :=args [3].AsNumber ();if _agfe .Type !=ResultTypeNumber {return MakeErrorResult ("\u0048\u004c\u004f\u004f\u004b\u0055\u0050\u0020\u0072\u0065\u0071\u0075\u0069r\u0065\u0073\u0020\u006e\u0075\u006de\u0072\u0069\u0063\u0020\u006d\u0061\u0074\u0063\u0068\u0020\u0061\u0072\u0067u\u006d\u0065\u006e\u0074");};if _agfe .ValueNumber ==0{_gdbeda =true ;};};_cada :=-1;_gfgbd :=false ;if len (_fgab .ValueArray )==0{return MakeErrorResult ("\u0048\u004c\u004f\u004f\u004b\u0055\u0050\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065s\u0020n\u006f\u006e\u002d\u0065\u006d\u0070\u0074\u0079\u0020\u0061\u0072\u0072\u0061\u0079");};_ccce :=_fgab .ValueArray [0];_cba :for _gccge ,_cgdf :=range _ccce {switch _fbbf (_cgdf ,_aagcf ,false ,_gdbeda ){case _gbde :_cada =_gccge ;case _babd :_cada =_gccge ;_gfgbd =true ;break _cba ;};};if _cada ==-1{return MakeErrorResultType (ErrorTypeNA ,"\u0048\u004c\u004fOK\u0055\u0050\u0020\u006e\u006f\u0020\u0072\u0065\u0073\u0075\u006c\u0074\u0020\u0066\u006f\u0075\u006e\u0064");};_ecad :=int (_efef .ValueNumber )-1;if _ecad < 0||_ecad > len (_fgab .ValueArray ){return MakeErrorResult ("\u0048L\u004f\u004f\u004b\u0055P\u0020\u0068\u0061\u0064\u0020i\u006ev\u0061l\u0069\u0064\u0020\u0069\u006e\u0064\u0065x");};_ccce =_fgab .ValueArray [_ecad ];if _cada < 0||_cada >=len (_ccce ){return MakeErrorResult ("\u0056\u004c\u004f\u004f\u004b\u0055\u0050\u0020\u0068\u0061\u0073\u0020\u0069\u006e\u0076a\u006ci\u0064\u0020\u0063\u006f\u006c\u0075\u006d\u006e\u0020\u0069\u006e\u0064\u0065\u0078");};if _gfgbd ||!_gdbeda {return _ccce [_cada ];};return MakeErrorResultType (ErrorTypeNA ,"\u0056\u004c\u004fOK\u0055\u0050\u0020\u006e\u006f\u0020\u0072\u0065\u0073\u0075\u006c\u0074\u0020\u0066\u006f\u0075\u006e\u0064");};

// Fvschedule implements the Excel FVSCHEDULE function.
func Fvschedule (args []Result )Result {if len (args )!=2{return MakeErrorResult ("\u0046\u0056\u0053\u0043\u0048\u0045D\u0055\u004c\u0045\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020t\u0077\u006f\u0020\u0061\u0072\u0067\u0075m\u0065\u006e\u0074\u0073");};if args [0].Type !=ResultTypeNumber {return MakeErrorResult ("\u0046\u0056\u0053\u0043\u0048E\u0044\u0055\u004c\u0045\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073 \u0070\u0072\u0069\u006e\u0063\u0069\u0070\u0061\u006c\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006et");};_bgfa :=args [0].ValueNumber ;switch args [1].Type {case ResultTypeNumber :return MakeNumberResult (_bgfa *(args [1].ValueNumber +1));case ResultTypeList ,ResultTypeArray :_beaaf :=_affb (args [1]);for _ ,_bacb :=range _beaaf {for _ ,_cfeb :=range _bacb {if _cfeb .Type !=ResultTypeNumber ||_cfeb .IsBoolean {return MakeErrorResult ("\u0046\u0056\u0053\u0043\u0048\u0045\u0044\u0055\u004c\u0045\u0020\u0072\u0065q\u0075\u0069\u0072\u0065\u0073\u0020r\u0061\u0074\u0065\u0073\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u006e\u0075m\u0062\u0065\u0072\u0073");};_bgfa *=1.0+_cfeb .ValueNumber ;};};return MakeNumberResult (_bgfa );default:return MakeErrorResult ("\u0046\u0056\u0053\u0043\u0048\u0045\u0044\u0055\u004c\u0045\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020s\u0063\u0068\u0065\u0064\u0075\u006c\u0065\u0020\u0074o\u0020\u0062\u0065\u0020\u006f\u0066\u0020\u006e\u0075\u006d\u0062\u0065\u0072 \u006f\u0072\u0020\u0061\u0072\u0072a\u0079\u0020\u0074y\u0070\u0065");};};

// NewCellRef constructs a new cell reference.
func NewCellRef (v string )Expression {return CellRef {_cbe :v }};

// Sum is an implementation of the Excel SUM() function.
func Sum (args []Result )Result {_dgedd :=MakeNumberResult (0);for _ ,_gccfg :=range args {_gccfg =_gccfg .AsNumber ();switch _gccfg .Type {case ResultTypeNumber :_dgedd .ValueNumber +=_gccfg .ValueNumber ;case ResultTypeList ,ResultTypeArray :_dbaf :=Sum (_gccfg .ListValues ());if _dbaf .Type !=ResultTypeNumber {return _dbaf ;};_dgedd .ValueNumber +=_dbaf .ValueNumber ;case ResultTypeString :case ResultTypeError :return _gccfg ;case ResultTypeEmpty :default:return MakeErrorResult (_dc .Sprintf ("\u0075\u006e\u0068\u0061\u006e\u0064\u006c\u0065\u0064\u0020\u0053\u0055\u004d\u0028\u0029 \u0061r\u0067\u0075\u006d\u0065\u006e\u0074\u0020\u0074\u0079\u0070\u0065\u0020\u0025\u0073",_gccfg .Type ));};};return _dgedd ;};

// False is an implementation of the Excel FALSE() function. It takes no
// arguments.
func False (args []Result )Result {if len (args )!=0{return MakeErrorResult ("\u0046A\u004c\u0053\u0045\u0020\u0074\u0061\u006b\u0065\u0073\u0020\u006eo\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0073");};return MakeBoolResult (false );};

// IsDBCS returns false for the invalid reference context.
func (_gdaa *ivr )IsDBCS ()bool {return false };var InvalidReferenceContext =&ivr {};func _cad (_ddfc float64 )bool {return _ddfc ==1||_ddfc ==2||_ddfc ==4};const _dfc ="\u0042\u0069\u006e\u004f\u0070\u0054y\u0070\u0065\u0055\u006e\u006bn\u006fw\u006e\u0042\u0069\u006eO\u0070\u0054\u0079\u0070\u0065\u0050\u006c\u0075\u0073\u0042\u0069\u006eO\u0070\u0054\u0079\u0070\u0065\u004d\u0069\u006e\u0075\u0073\u0042\u0069\u006e\u004f\u0070\u0054\u0079\u0070\u0065M\u0075lt\u0042\u0069\u006e\u004f\u0070\u0054\u0079\u0070\u0065\u0044\u0069\u0076\u0042\u0069\u006e\u004f\u0070\u0054\u0079\u0070\u0065\u0045\u0078\u0070\u0042\u0069\u006e\u004f\u0070\u0054\u0079\u0070\u0065\u004c\u0054\u0042\u0069\u006eO\u0070\u0054\u0079\u0070\u0065G\u0054B\u0069\u006eO\u0070\u0054\u0079\u0070\u0065\u0045\u0051\u0042\u0069nO\u0070\u0054\u0079\u0070\u0065\u004c\u0045\u0051\u0042i\u006eO\u0070\u0054\u0079\u0070\u0065\u0047\u0045\u0051\u0042\u0069\u006e\u004f\u0070\u0054\u0079\u0070\u0065N\u0045\u0042\u0069\u006eO\u0070\u0054\u0079\u0070\u0065\u0043\u006f\u006e\u0063\u0061\u0074";

//go:generate ragel -G2 -Z lexer.rl
//go:generate goimports -w lexer.go
type Lexer struct{_cbcbf chan *node ;_cage _ga .Mutex ;_gbebg []chan *node ;_fadeb []*node ;};

// Count implements the COUNT function.
func Count (args []Result )Result {return MakeNumberResult (_adeb (args ,_edgef ))};func (_defba *ivr )Sheet (name string )Context {return _defba };

// MakeListResult constructs a list result.
func MakeListResult (list []Result )Result {return Result {Type :ResultTypeList ,ValueList :list }};func _geeac (_fcceg int )string {if _fcceg >=1&&_fcceg -1< len (_dcdfb ){if _dcdfb [_fcceg -1]!=""{return _dcdfb [_fcceg -1];};};return _dc .Sprintf ("\u0074\u006f\u006b\u002d\u0025\u0076",_fcceg );};

// Eval evaluates and returns a string.
func (_ebff String )Eval (ctx Context ,ev Evaluator )Result {return MakeStringResult (_ebff ._defca )};

// Error is called in the case of parsing error and saves an error to a plex.
func (_begf *plex )Error (s string ){_bf .Log .Debug ("\u0070a\u0072s\u0065\u0020\u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0073",s );_begf ._bccce =s ;};

// Pduration implements the Excel PDURATION function.
func Pduration (args []Result )Result {if len (args )!=3{return MakeErrorResult ("\u0050\u0044\u0055RA\u0054\u0049\u004f\u004e\u0020\u0072\u0065\u0071\u0075i\u0072e\u0073 \u0074h\u0072\u0065\u0065\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0073");};if args [0].Type !=ResultTypeNumber {return MakeErrorResult ("\u0050D\u0055\u0052A\u0054\u0049\u004fN\u0020\u0072\u0065\u0071\u0075\u0069\u0072e\u0073\u0020\u0072\u0061\u0074\u0065 \u0074\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006d\u0062\u0065r\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};_bdeg :=args [0].ValueNumber ;if _bdeg <=0{return MakeErrorResultType (ErrorTypeNum ,"\u0050\u0044\u0055\u0052\u0041\u0054\u0049\u004f\u004e\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0072\u0061\u0074\u0065\u0020t\u006f\u0020\u0062\u0065\u0020p\u006f\u0073i\u0074\u0069\u0076\u0065");};if args [1].Type !=ResultTypeNumber {return MakeErrorResult ("\u0050\u0044\u0055\u0052\u0041\u0054\u0049\u004f\u004e\u0020\u0072\u0065\u0071\u0075\u0069r\u0065\u0073\u0020\u0063\u0075\u0072\u0072\u0065\u006e\u0074\u0020\u0076\u0061l\u0075\u0065\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006dbe\u0072\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};_gbdgg :=args [1].ValueNumber ;if _gbdgg <=0{return MakeErrorResultType (ErrorTypeNum ,"P\u0044\u0055\u0052\u0041\u0054\u0049\u004f\u004e\u0020r\u0065\u0071\u0075\u0069\u0072\u0065\u0073 c\u0075\u0072\u0072\u0065n\u0074\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u0074o \u0062\u0065 \u0070\u006f\u0073\u0069\u0074\u0069\u0076\u0065");};if args [2].Type !=ResultTypeNumber {return MakeErrorResult ("\u0050\u0044\u0055\u0052\u0041\u0054I\u004f\u004e\u0020r\u0065\u0071\u0075i\u0072\u0065\u0073\u0020\u0073\u0070\u0065\u0063\u0069\u0066i\u0065\u0064\u0020\u0076\u0061lu\u0065\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};_fbe :=args [2].ValueNumber ;if _fbe <=0{return MakeErrorResultType (ErrorTypeNum ,"\u0050\u0044\u0055\u0052\u0041\u0054I\u004f\u004e\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065d\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u0070o\u0073i\u0074\u0069\u0076\u0065");};return MakeNumberResult ((_ea .Log10 (_fbe )-_ea .Log10 (_gbdgg ))/_ea .Log10 (1+_bdeg ));};func _bec (_cfc string )(int ,int ,int ,bool ,Result ){_aea :="";_gcaa :=[]string {};for _gccc ,_bgc :=range _eedd {_gcaa =_bgc .FindStringSubmatch (_cfc );if len (_gcaa )> 1{_aea =_gccc ;break ;};};if _aea ==""{return 0,0,0,false ,MakeErrorResultType (ErrorTypeValue ,_ffbb );};_fgcf :=false ;var _fcc ,_debe ,_aaea int ;var _aaa error ;switch _aea {case "\u006d\u006d\u002f\u0064\u0064\u002f\u0079\u0079":_debe ,_aaa =_gc .Atoi (_gcaa [1]);if _aaa !=nil {return 0,0,0,false ,MakeErrorResultType (ErrorTypeValue ,_ffbb );};_aaea ,_aaa =_gc .Atoi (_gcaa [3]);if _aaa !=nil {return 0,0,0,false ,MakeErrorResultType (ErrorTypeValue ,_ffbb );};_fcc ,_aaa =_gc .Atoi (_gcaa [5]);if _aaa !=nil {return 0,0,0,false ,MakeErrorResultType (ErrorTypeValue ,_ffbb );};if _fcc < 0||_fcc > 9999||(_fcc > 99&&_fcc < 1900){return 0,0,0,false ,MakeErrorResultType (ErrorTypeValue ,_ffbb );};_fcc =_aef (_fcc );_fgcf =_gcaa [8]=="";case "\u006dm\u0020\u0064\u0064\u002c\u0020\u0079y":_debe =_bae [_gcaa [1]];_aaea ,_aaa =_gc .Atoi (_gcaa [14]);if _aaa !=nil {return 0,0,0,false ,MakeErrorResultType (ErrorTypeValue ,_ffbb );};_fcc ,_aaa =_gc .Atoi (_gcaa [16]);if _aaa !=nil {return 0,0,0,false ,MakeErrorResultType (ErrorTypeValue ,_ffbb );};if _fcc < 0||_fcc > 9999||(_fcc > 99&&_fcc < 1900){return 0,0,0,false ,MakeErrorResultType (ErrorTypeValue ,_ffbb );};_fcc =_aef (_fcc );_fgcf =_gcaa [19]=="";case "\u0079\u0079\u002d\u006d\u006d\u002d\u0064\u0064":_cae ,_gaf :=_gc .Atoi (_gcaa [1]);if _gaf !=nil {return 0,0,0,false ,MakeErrorResultType (ErrorTypeValue ,_ffbb );};_eeg ,_gaf :=_gc .Atoi (_gcaa [3]);if _gaf !=nil {return 0,0,0,false ,MakeErrorResultType (ErrorTypeValue ,_ffbb );};_efg ,_gaf :=_gc .Atoi (_gcaa [5]);if _gaf !=nil {return 0,0,0,false ,MakeErrorResultType (ErrorTypeValue ,_ffbb );};if _cae >=1900&&_cae < 10000{_fcc =_cae ;_debe =_eeg ;_aaea =_efg ;}else if _cae > 0&&_cae < 13{_debe =_cae ;_aaea =_eeg ;_fcc =_efg ;}else {return 0,0,0,false ,MakeErrorResultType (ErrorTypeValue ,_ffbb );};_fgcf =_gcaa [8]=="";case "y\u0079\u002d\u006d\u006d\u0053\u0074\u0072\u002d\u0064\u0064":_fcc ,_aaa =_gc .Atoi (_gcaa [16]);if _aaa !=nil {return 0,0,0,false ,MakeErrorResultType (ErrorTypeValue ,_ffbb );};_debe =_bae [_gcaa [3]];_aaea ,_aaa =_gc .Atoi (_gcaa [1]);if _aaa !=nil {return 0,0,0,false ,MakeErrorResultType (ErrorTypeValue ,_ffbb );};_fgcf =_gcaa [19]=="";};if !_bfc (_fcc ,_debe ,_aaea ){return 0,0,0,false ,MakeErrorResultType (ErrorTypeValue ,_ffbb );};return _fcc ,_debe ,_aaea ,_fgcf ,_ega ;};var _bbbbf =map[string ]FunctionComplex {};

// Reference returns a string reference value to a named range.
func (_eafdf NamedRangeRef )Reference (ctx Context ,ev Evaluator )Reference {return Reference {Type :ReferenceTypeNamedRange ,Value :_eafdf ._gbdeb };};func (_ddffe PrefixVerticalRange )verticalRangeReference (_cbebg string )string {return _dc .Sprintf ("\u0025\u0073\u0021\u0025\u0073\u003a\u0025\u0073",_cbebg ,_ddffe ._acba ,_ddffe ._fcgge );};func _eegb (_cebab Reference ,_babaf Context )bool {return _babaf .Sheet (_cebab .Value )==InvalidReferenceContext ;};func _fb (_cef BinOpType ,_dee ,_af []Result )Result {_bfb :=[]Result {};for _ge :=range _dee {_cfd :=_dee [_ge ].AsNumber ();_fc :=_af [_ge ].AsNumber ();if _cfd .Type !=ResultTypeNumber ||_fc .Type !=ResultTypeNumber {return MakeErrorResult ("\u006e\u006f\u006e\u002d\u006e\u0075\u006e\u006d\u0065\u0072\u0069\u0063\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u0069\u006e\u0020\u0062\u0069n\u0061\u0072\u0079\u0020\u006fp\u0065\u0072a\u0074\u0069\u006f\u006e");};switch _cef {case BinOpTypePlus :_bfb =append (_bfb ,MakeNumberResult (_cfd .ValueNumber +_fc .ValueNumber ));case BinOpTypeMinus :_bfb =append (_bfb ,MakeNumberResult (_cfd .ValueNumber -_fc .ValueNumber ));case BinOpTypeMult :_bfb =append (_bfb ,MakeNumberResult (_cfd .ValueNumber *_fc .ValueNumber ));case BinOpTypeDiv :if _fc .ValueNumber ==0{return MakeErrorResultType (ErrorTypeDivideByZero ,"");};_bfb =append (_bfb ,MakeNumberResult (_cfd .ValueNumber /_fc .ValueNumber ));case BinOpTypeExp :_bfb =append (_bfb ,MakeNumberResult (_ea .Pow (_cfd .ValueNumber ,_fc .ValueNumber )));case BinOpTypeLT :_bfb =append (_bfb ,MakeBoolResult (_cfd .ValueNumber < _fc .ValueNumber ));case BinOpTypeGT :_bfb =append (_bfb ,MakeBoolResult (_cfd .ValueNumber > _fc .ValueNumber ));case BinOpTypeEQ :_bfb =append (_bfb ,MakeBoolResult (_cfd .ValueNumber ==_fc .ValueNumber ));case BinOpTypeLEQ :_bfb =append (_bfb ,MakeBoolResult (_cfd .ValueNumber <=_fc .ValueNumber ));case BinOpTypeGEQ :_bfb =append (_bfb ,MakeBoolResult (_cfd .ValueNumber >=_fc .ValueNumber ));case BinOpTypeNE :_bfb =append (_bfb ,MakeBoolResult (_cfd .ValueNumber !=_fc .ValueNumber ));default:return MakeErrorResult (_dc .Sprintf ("\u0075\u006es\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u006c\u0069\u0073\u0074\u0020\u0062\u0069\u006e\u0061\u0072\u0079\u0020\u006fp \u0025\u0073",_cef ));};};return MakeListResult (_bfb );};const _bac ="(\u0028\u005b\u0030\u002d\u0039\u005d\u0029\u002b\u0029\u002d"+_ebdb +"-\u0028\u0028\u005b\u0030\u002d\u0039\u005d\u0029\u002b\u0029";

// Average implements the AVERAGE function. It differs slightly from Excel (and
// agrees with LibreOffice) in that boolean values are counted. As an example,
// AVERAGE of two cells containing TRUE & FALSE is 0.5 in LibreOffice and
// #DIV/0! in Excel. unioffice will return 0.5 in this case.
func Average (args []Result )Result {_dcafg ,_cbefa :=_dfaa (args ,false );if _cbefa ==0{return MakeErrorResultType (ErrorTypeDivideByZero ,"\u0041\u0056\u0045\u0052AG\u0045\u0020\u0064\u0069\u0076\u0069\u0064\u0065\u0020\u0062\u0079\u0020\u007a\u0065r\u006f");};return MakeNumberResult (_dcafg /_cbefa );};

// Eval evaluates the binary expression using the context given.
func (_fe BinaryExpr )String ()string {_dge :="";switch _fe ._de {case BinOpTypePlus :_dge ="\u002b";case BinOpTypeMinus :_dge ="\u002d";case BinOpTypeMult :_dge ="\u002a";case BinOpTypeDiv :_dge ="\u002f";case BinOpTypeExp :_dge ="\u005e";case BinOpTypeLT :_dge ="\u003c";case BinOpTypeGT :_dge ="\u003e";case BinOpTypeEQ :_dge ="\u003d";case BinOpTypeLEQ :_dge ="\u003c\u003d";case BinOpTypeGEQ :_dge ="\u003e\u003d";case BinOpTypeNE :_dge ="\u003c\u003e";case BinOpTypeConcat :_dge ="\u0026";};return _fe ._ced .String ()+_dge +_fe ._baa .String ();};

// NewConstArrayExpr constructs a new constant array expression with a given data.
func NewConstArrayExpr (data [][]Expression )Expression {return &ConstArrayExpr {_ccd :data }};func _dgcf (_fafce string ,_fae _f .Time )(_f .Time ,error ){_dffgf ,_ ,_feef :=_e .ParseFloat (_fafce ,10,128,_e .ToNearestEven );if _feef !=nil {return _f .Time {},_feef ;};_fcfdf :=new (_e .Float );_fcfdf .SetUint64 (uint64 (24*_f .Hour ));_dffgf .Mul (_dffgf ,_fcfdf );_bfcf ,_ :=_dffgf .Uint64 ();_daef :=_fae .Add (_f .Duration (_bfcf ));return _fbbec (_daef ),nil ;};func (_aagda Result )AsString ()Result {switch _aagda .Type {case ResultTypeNumber :return MakeStringResult (_aagda .Value ());default:return _aagda ;};};

// Update returns the same object as updating sheet references does not affect Bool.
func (_cfb Bool )Update (q *_ff .UpdateQuery )Expression {return _cfb };

// Update returns the same object as updating sheet references does not affect EmptyExpr.
func (_fca EmptyExpr )Update (q *_ff .UpdateQuery )Expression {return _fca };func _afcg (_fecc Result ,_fgddf int )[]Result {_fdbed :=[]Result {};switch _fecc .Type {case ResultTypeList :_fadab :=_fecc .ValueList ;_cddga :=len (_fadab );for _gbfe :=0;_gbfe < _fgddf ;_gbfe ++{if _gbfe < _cddga {_fdbed =append (_fdbed ,_fadab [_gbfe ]);}else {_fdbed =append (_fdbed ,MakeErrorResultType (ErrorTypeNA ,""));};};case ResultTypeNumber ,ResultTypeString ,ResultTypeError ,ResultTypeEmpty :for _bcegd :=0;_bcegd < _fgddf ;_bcegd ++{_fdbed =append (_fdbed ,_fecc );};};return _fdbed ;};func (_cfac *ivr )NamedRange (ref string )Reference {return ReferenceInvalid };func init (){RegisterFunction ("\u0043\u0048\u004f\u004f\u0053\u0045",Choose );RegisterFunction ("\u0043\u004f\u004c\u0055\u004d\u004e",Column );RegisterFunction ("\u0043O\u004c\u0055\u004d\u004e\u0053",Columns );RegisterFunction ("\u0049\u004e\u0044E\u0058",Index );RegisterFunctionComplex ("\u0049\u004e\u0044\u0049\u0052\u0045\u0043\u0054",Indirect );RegisterFunctionComplex ("\u004f\u0046\u0046\u0053\u0045\u0054",Offset );RegisterFunction ("\u004d\u0041\u0054C\u0048",Match );RegisterFunction ("\u0048L\u004f\u004f\u004b\u0055\u0050",HLookup );RegisterFunction ("\u004c\u0041\u0052G\u0045",Large );RegisterFunction ("\u004c\u004f\u004f\u004b\u0055\u0050",Lookup );RegisterFunction ("\u0052\u004f\u0057",Row );RegisterFunction ("\u0052\u004f\u0057\u0053",Rows );RegisterFunction ("\u0053\u004d\u0041L\u004c",Small );RegisterFunction ("\u0056L\u004f\u004f\u004b\u0055\u0050",VLookup );RegisterFunction ("\u0054R\u0041\u004e\u0053\u0050\u004f\u0053E",Transpose );};

// Rows implements the Excel ROWS function.
func Rows (args []Result )Result {if len (args )< 1{return MakeErrorResult ("\u0052\u004f\u0057\u0053\u0020\u0072\u0065\u0071\u0075\u0069\u0072e\u0073\u0020\u006f\u006e\u0065\u0020\u0061\u0072\u0067\u0075m\u0065\u006e\u0074");};_ccbb :=args [0];if _ccbb .Type !=ResultTypeArray &&_ccbb .Type !=ResultTypeList {return MakeErrorResult ("\u0052\u004f\u0057S\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0066\u0069\u0072\u0073\u0074\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0020\u006f\u0066\u0020\u0074y\u0070\u0065\u0020\u0061\u0072\u0072\u0061\u0079");};_ddgc :=_ccbb .ValueArray ;if len (_ddgc )==0{return MakeErrorResult ("\u0052O\u0057\u0053 \u0072\u0065\u0071u\u0069\u0072\u0065\u0073\u0020\u0061\u0072r\u0061\u0079\u0020\u0074\u006f\u0020c\u006f\u006e\u0074\u0061\u0069\u006e\u0020\u0061\u0074\u0020\u006ce\u0061\u0073\u0074\u0020\u0031\u0020\u0072\u006f\u0077");};return MakeNumberResult (float64 (len (_ddgc )));};var _bbdb =[...]int {123,-1000,-1000,74,163,103,163,163,-1000,-1000,-1000,-1000,163,-1000,-1000,-1000,-1000,-1000,-12,106,-1000,-1000,143,-1000,-1000,-1000,-1000,-1000,163,163,163,163,163,163,163,163,163,163,163,163,74,163,163,6,-28,74,-15,-15,60,10,-14,-1000,-1000,-1000,7,-1000,74,-15,-15,-23,-23,-1000,-8,-8,-8,-8,-8,-8,-4,33,-1000,163,163,-1000,-1000,10,-1000,163,-1000,-28,74,-1000,-1000,74};

// Context is a formula execution context.  Formula evaluation uses the context
// to retreive information from sheets.
type Context interface{

// Cell returns the result of evaluating a cell.
Cell (_gab string ,_fge Evaluator )Result ;

// Sheet returns an evaluation context for a given sheet name.  This is used
// when evaluating cells that pull data from other sheets (e.g. ='Sheet 2'!A1).
Sheet (_eag string )Context ;

// GetEpoch returns the time epoch of the context's Workbook.
GetEpoch ()_f .Time ;

// GetFilename returns the full filename of the context's Workbook.
GetFilename ()string ;

// GetWidth returns a worksheet's column width.
GetWidth (_ffd int )float64 ;

// GetFormat returns a cell's format.
GetFormat (_gfa string )string ;

// GetLabelPrefix returns cell's label prefix dependent on cell horizontal alignment.
GetLabelPrefix (_faf string )string ;

// GetFormat returns if cell is protected.
GetLocked (_eaf string )bool ;

// HasFormula returns if cell contains formula.
HasFormula (_ab string )bool ;

// IsBool returns if cell contains boolean value.
IsBool (_ead string )bool ;

// IsDBCS returns if workbook default language is among DBCS.
IsDBCS ()bool ;

// LastColumn returns the name of last column which contains data in range of context sheet's given rows.
LastColumn (_dgd ,_fdb int )string ;

// LastRow returns the name of last row which contains data in range of context sheet's given columns.
LastRow (_bafg string )int ;

// SetLocked returns sets cell's protected attribute.
SetLocked (_dca string ,_aagc bool );

// NamedRange returns a named range.
NamedRange (_dgg string )Reference ;

// SetOffset is used so that the Context can evaluate cell references
// differently when they are not absolute (e.g. not like '$A$5').  See the
// shared formula support in Cell for usage.
SetOffset (_agcc ,_bdc uint32 );};

// Eval evaluates a vertical range with prefix returning a list of results or an error.
func (_dcbg PrefixVerticalRange )Eval (ctx Context ,ev Evaluator )Result {_cdfd :=_dcbg ._fcbe .Reference (ctx ,ev );switch _cdfd .Type {case ReferenceTypeSheet :if _eegb (_cdfd ,ctx ){return MakeErrorResultType (ErrorTypeName ,_dc .Sprintf ("\u0053h\u0065e\u0074\u0020\u0025\u0073\u0020n\u006f\u0074 \u0066\u006f\u0075\u006e\u0064",_cdfd .Value ));};_decg :=_dcbg .verticalRangeReference (_cdfd .Value );if _ceed ,_dgdc :=ev .GetFromCache (_decg );_dgdc {return _ceed ;};_gfgga :=ctx .Sheet (_cdfd .Value );_aagdg ,_ccaad :=_cggac (_gfgga ,_dcbg ._acba ,_dcbg ._fcgge );_abaaab :=_fceb (_gfgga ,ev ,_aagdg ,_ccaad );ev .SetCache (_decg ,_abaaab );return _abaaab ;default:return MakeErrorResult (_dc .Sprintf ("\u006e\u006f\u0020\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0020\u0066\u006f\u0072\u0020r\u0065f\u0065\u0072\u0065\u006e\u0063\u0065\u0020\u0074\u0079\u0070\u0065\u0020\u0025\u0073",_cdfd .Type ));};};func _fbbf (_aedb ,_egge Result ,_ggfa ,_aggd bool )cmpResult {_aedb =_aedb .AsNumber ();_egge =_egge .AsNumber ();if _aedb .Type !=_egge .Type {return _defbd ;};if _aedb .Type ==ResultTypeNumber {if _aedb .ValueNumber ==_egge .ValueNumber {return _babd ;};if _aedb .ValueNumber < _egge .ValueNumber {return _gbde ;};return _eeddc ;};if _aedb .Type ==ResultTypeString {_adcfd :=_aedb .ValueString ;_ecfb :=_egge .ValueString ;if !_ggfa {_adcfd =_ce .ToLower (_adcfd );_ecfb =_ce .ToLower (_ecfb );};if _aggd {_bbgad :=_ba .Match (_ecfb ,_adcfd );if _bbgad {return _babd ;}else {return _eeddc ;};};return cmpResult (_ce .Compare (_adcfd ,_ecfb ));};if _aedb .Type ==ResultTypeEmpty {return _babd ;};if _aedb .Type ==ResultTypeList {if len (_aedb .ValueList )< len (_egge .ValueList ){return _gbde ;};if len (_aedb .ValueList )> len (_egge .ValueList ){return _eeddc ;};for _bcbb :=range _aedb .ValueList {_dgebe :=_fbbf (_aedb .ValueList [_bcbb ],_egge .ValueList [_bcbb ],_ggfa ,_aggd );if _dgebe !=_babd {return _dgebe ;};};return _babd ;};if _aedb .Type ==ResultTypeList {if len (_aedb .ValueArray )< len (_egge .ValueArray ){return _gbde ;};if len (_aedb .ValueArray )> len (_egge .ValueArray ){return _eeddc ;};for _cegf :=range _aedb .ValueArray {_edff :=_aedb .ValueArray [_cegf ];_efea :=_aedb .ValueArray [_cegf ];if len (_edff )< len (_efea ){return _gbde ;};if len (_edff )> len (_efea ){return _eeddc ;};for _edea :=range _edff {_fgdg :=_fbbf (_edff [_edea ],_efea [_edea ],_ggfa ,_aggd );if _fgdg !=_babd {return _fgdg ;};};};return _babd ;};return _defbd ;};func _a (_bee Result )bool {if _bee .Type ==ResultTypeString {return _bee .ValueString =="";};return _bee .ValueNumber ==0;};

// IsLeapYear is an implementation of the Excel ISLEAPYEAR() function.
func IsLeapYear (ctx Context ,ev Evaluator ,args []Result )Result {if len (args )!=1||args [0].Type !=ResultTypeNumber {return MakeErrorResult ("\u0049S\u004c\u0045A\u0050\u0059\u0045\u0041R\u0020\u0072\u0065q\u0075\u0069\u0072\u0065\u0073\u0020\u0061\u0020\u0073in\u0067\u006c\u0065 \u006e\u0075m\u0062\u0065\u0072\u0020\u0061\u0072g\u0075\u006de\u006e\u0074");};_cdg :=ctx .GetEpoch ();_cdfg ,_ffccd :=_dgcf (args [0].Value (),_cdg );if _ffccd !=nil {return MakeErrorResult ("\u0049S\u004c\u0045A\u0050\u0059\u0045\u0041R\u0020\u0072\u0065q\u0075\u0069\u0072\u0065\u0073\u0020\u0061\u0020\u0073in\u0067\u006c\u0065 \u006e\u0075m\u0062\u0065\u0072\u0020\u0061\u0072g\u0075\u006de\u006e\u0074");};_aaabb :=_cdfg .Year ();return MakeBoolResult (_gdc (_aaabb ));};

// Arabic implements the Excel ARABIC function which parses roman numerals.  It
// accepts one numeric argument.
func Arabic (args []Result )Result {if len (args )!=1{return MakeErrorResult ("\u0041\u0052\u0041\u0042I\u0043\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073 \u006fn\u0065\u0020\u0061\u0072\u0067\u0075\u006de\u006e\u0074");};_dfba :=args [0];switch _dfba .Type {case ResultTypeNumber ,ResultTypeList ,ResultTypeEmpty :return MakeErrorResult ("\u0041\u0052\u0041B\u0049\u0043\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0061\u0020\u0073\u0074\u0072\u0069\u006e\u0067\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074 \u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");case ResultTypeString :_ddfe :=0.0;_fgac :=0.0;for _ ,_fcbg :=range _dfba .ValueString {_ccffe :=0.0;switch _fcbg {case 'I':_ccffe =1;case 'V':_ccffe =5;case 'X':_ccffe =10;case 'L':_ccffe =50;case 'C':_ccffe =100;case 'D':_ccffe =500;case 'M':_ccffe =1000;};_ddfe +=_ccffe ;switch {case _fgac ==_ccffe &&(_fgac ==5||_fgac ==50||_fgac ==500):return MakeErrorResult ("i\u006e\u0076\u0061\u006cid\u0020A\u0052\u0041\u0042\u0049\u0043 \u0066\u006f\u0072\u006d\u0061\u0074");case 2*_fgac ==_ccffe :return MakeErrorResult ("i\u006e\u0076\u0061\u006cid\u0020A\u0052\u0041\u0042\u0049\u0043 \u0066\u006f\u0072\u006d\u0061\u0074");};if _fgac < _ccffe {_ddfe -=2*_fgac ;};_fgac =_ccffe ;};return MakeNumberResult (_ddfe );case ResultTypeError :return _dfba ;default:return MakeErrorResult (_dc .Sprintf ("\u0075\u006e\u0068an\u0064\u006c\u0065\u0064\u0020\u0041\u0043\u004f\u0053H\u0028)\u0020a\u0072g\u0075\u006d\u0065\u006e\u0074\u0020\u0074\u0079\u0070\u0065\u0020\u0025\u0073",_dfba .Type ));};};const _dbcg int =30;

// Day is an implementation of the Excel DAY() function.
func Day (args []Result )Result {if len (args )!=1{return MakeErrorResult ("\u0044A\u0059\u0020\u0072\u0065q\u0075\u0069\u0072\u0065\u0073 \u006fn\u0065 \u0061\u0072\u0067\u0075\u006d\u0065\u006et");};_defd :=args [0];switch _defd .Type {case ResultTypeEmpty :return MakeNumberResult (0);case ResultTypeNumber :_fcb :=_acb (_defd .ValueNumber );return MakeNumberResult (float64 (_fcb .Day ()));case ResultTypeString :_gcf :=_ce .ToLower (_defd .ValueString );if !_dbdf (_gcf ){_ ,_ ,_ ,_ ,_acg ,_bgf :=_ecaa (_gcf );if _bgf .Type ==ResultTypeError {_bgf .ErrorMessage ="I\u006e\u0063\u006f\u0072\u0072\u0065c\u0074\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006et\u0073\u0020\u0066o\u0072 \u0044\u0041\u0059";return _bgf ;};if _acg {return MakeNumberResult (0);};};_ ,_ ,_agb ,_ ,_gca :=_bec (_gcf );if _gca .Type ==ResultTypeError {return _gca ;};return MakeNumberResult (float64 (_agb ));default:return MakeErrorResult ("\u0049\u006e\u0063\u006f\u0072\u0072\u0065\u0063\u0074\u0020\u0061r\u0067\u0075\u006d\u0065\u006e\u0074\u0020\u0066\u006f\u0072 \u0044\u0041\u0059");};};

// Ipmt implements the Excel IPMT function.
func Ipmt (args []Result )Result {_ebca :=len (args );if _ebca < 4||_ebca > 6{return MakeErrorResult ("\u0049P\u004d\u0054\u0020\u0072\u0065\u0071\u0075ir\u0065\u0073\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u006f\u0066\u0020\u0061r\u0067\u0075m\u0065\u006e\u0074s\u0020\u0069\u006e\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u0062\u0065\u0074\u0077\u0065\u0065n\u0020\u0066ou\u0072\u0020\u0061n\u0064\u0020\u0073\u0069\u0078");};if args [0].Type !=ResultTypeNumber {return MakeErrorResult ("I\u0050\u004d\u0054\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0072\u0061\u0074\u0065\u0020t\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006d\u0062\u0065r \u0061\u0072\u0067u\u006de\u006e\u0074");};_cedb :=args [0].ValueNumber ;if args [1].Type !=ResultTypeNumber {return MakeErrorResult ("\u0049\u0050\u004dT\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0070\u0065\u0072\u0069\u006f\u0064\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072 \u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};_ceb :=args [1].ValueNumber ;if _ceb <=0{return MakeErrorResultType (ErrorTypeNum ,"\u0049\u0050\u004d\u0054\u0020r\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0070\u0065\u0072\u0069\u006fd\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u0070\u006f\u0073\u0069\u0074\u0069\u0076\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006et");};if args [2].Type !=ResultTypeNumber {return MakeErrorResult ("\u0049\u0050\u004d\u0054\u0020\u0072\u0065\u0071\u0075\u0069\u0072e\u0073\u0020\u006e\u0075\u006d\u0062\u0065\u0072 \u006ff\u0020\u0070\u0065\u0072\u0069\u006f\u0064\u0073\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006db\u0065\u0072\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};_fcga :=args [2].ValueNumber ;if _fcga <=0{return MakeErrorResultType (ErrorTypeNum ,"\u0049\u0050\u004d\u0054\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u006e\u0075\u006d\u0062er\u0020o\u0066\u0020\u0070\u0065\u0072\u0069\u006f\u0064\u0073\u0020\u0074\u006f \u0062\u0065\u0020\u0070\u006f\u0073\u0069\u0074\u0069\u0076\u0065\u0020\u006e\u0075\u006d\u0062\u0065r\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};if args [3].Type !=ResultTypeNumber {return MakeErrorResult ("\u0049\u0050\u004d\u0054\u0020\u0072e\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0020\u0076\u0061\u006c\u0075\u0065 \u0074\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0061r\u0067u\u006d\u0065\u006e\u0074");};_gbf :=args [3].ValueNumber ;_gfd :=0.0;if _ebca > 4&&args [4].Type !=ResultTypeEmpty {if args [4].Type !=ResultTypeNumber {return MakeErrorResult ("\u0049\u0050\u004d\u0054\u0020\u0072\u0065\u0071u\u0069\u0072\u0065s \u0066\u0075\u0074\u0075\u0072\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006db\u0065\u0072\u0020\u0061\u0072\u0067\u0075\u006de\u006e\u0074");};_gfd =args [4].ValueNumber ;};_cbfc :=0;if _ebca ==6&&args [5].Type !=ResultTypeEmpty {if args [5].Type !=ResultTypeNumber {return MakeErrorResult ("I\u0050\u004d\u0054\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0074\u0079\u0070\u0065\u0020t\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006d\u0062\u0065r \u0061\u0072\u0067u\u006de\u006e\u0074");};_cbfc =int (args [5].ValueNumber );if _cbfc !=0{_cbfc =1;};};return MakeNumberResult (_febd (_cedb ,_ceb ,_fcga ,_gbf ,_gfd ,_cbfc ));};

// NewEvaluator constructs a new defEval object which is the default formula evaluator.
func NewEvaluator ()Evaluator {_gce :=&defEval {};_gce .evCache =_cdd ();return _gce };func _fgcbc (_gfcef string ,_begd []Result )(*parsedReplaceObject ,Result ){if len (_begd )!=4{return nil ,MakeErrorResult (_gfcef +"\u0020r\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0066\u006f\u0075r\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0073");};if _begd [0].Type !=ResultTypeString {return nil ,MakeErrorResult (_gfcef +"\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0066\u0069\u0072s\u0074\u0020\u0061\u0072\u0067\u0075m\u0065\u006e\u0074\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u0061\u0020\u0073t\u0072\u0069\u006e\u0067");};_eced :=_begd [0].ValueString ;if _begd [1].Type !=ResultTypeNumber {return nil ,MakeErrorResult (_gfcef +" \u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0073\u0065\u0063\u006f\u006e\u0064\u0020\u0061\u0072g\u0075\u006d\u0065\u006e\u0074\u0020\u0074\u006f\u0020\u0062e \u0061\u0020\u006eu\u006db\u0065\u0072");};_eegeg :=int (_begd [1].ValueNumber )-1;if _begd [2].Type !=ResultTypeNumber {return nil ,MakeErrorResult (_gfcef +"\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0074\u0068\u0069r\u0064\u0020\u0061\u0072\u0067\u0075m\u0065\u006e\u0074\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u0061\u0020\u006eu\u006d\u0062\u0065\u0072");};_ggcd :=int (_begd [2].ValueNumber );if _begd [3].Type !=ResultTypeString {return nil ,MakeErrorResult (_gfcef +" \u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0066\u006f\u0075\u0072\u0074\u0068\u0020\u0061\u0072g\u0075\u006d\u0065\u006e\u0074\u0020\u0074\u006f\u0020\u0062e \u0061\u0020\u0073t\u0072i\u006e\u0067");};_acdg :=_begd [3].ValueString ;return &parsedReplaceObject {_eced ,_eegeg ,_ggcd ,_acdg },_ega ;};

// Mround is an implementation of the Excel MROUND function.  It is not a
// generic rounding function and has some oddities to match Excel's behavior.
func Mround (args []Result )Result {if len (args )!=2{return MakeErrorResult ("\u004d\u0052\u004f\u0055\u004e\u0044\u0028\u0029\u0020\u0072\u0065\u0071\u0075i\u0072\u0065\u0073\u0020\u0074\u0077o\u0020\u006e\u0075\u006d\u0065\u0072\u0069\u0063\u0020\u0061\u0072\u0067\u0075m\u0065\u006e\u0074\u0073");};_dbfcf :=args [0].AsNumber ();if _dbfcf .Type !=ResultTypeNumber {return MakeErrorResult ("\u0066\u0069\u0072\u0073\u0074\u0020\u0061r\u0067\u0075\u006de\u006e\u0074\u0020\u0074o\u0020\u004d\u0052\u004f\u0055\u004e\u0044\u0028\u0029\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020\u0061\u0020\u006e\u0075\u006d\u0062\u0065\u0072");};_bcee :=float64 (1);_afegc :=args [1].AsNumber ();if _afegc .Type !=ResultTypeNumber {return MakeErrorResult ("\u0073e\u0063\u006fn\u0064\u0020\u0061\u0072g\u0075\u006d\u0065n\u0074\u0020\u0074\u006f\u0020\u004d\u0052\u004f\u0055ND\u0028\u0029\u0020m\u0075\u0073t\u0020\u0062\u0065\u0020\u0061\u0020n\u0075\u006db\u0065\u0072");};_bcee =_afegc .ValueNumber ;if _bcee < 0&&_dbfcf .ValueNumber > 0||_bcee > 0&&_dbfcf .ValueNumber < 0{return MakeErrorResult ("\u004d\u0052\u004fUN\u0044\u0028\u0029\u0020\u0061\u0072\u0067\u0075\u006de\u006et\u0020s\u0069g\u006e\u0073\u0020\u006d\u0075\u0073\u0074\u0020\u006d\u0061\u0074\u0063\u0068");};_ggd :=_dbfcf .ValueNumber ;_ggd ,_cfde :=_ea .Modf (_ggd /_bcee );if _ea .Trunc (_cfde +0.5)> 0{_ggd ++;};return MakeNumberResult (_ggd *_bcee );};func (_acag *yyParserImpl )Parse (yylex yyLexer )int {_gfca :=_f .Now ();var _fdbf int ;var _gcee yySymType ;var _fcfde []yySymType ;_ =_fcfde ;_bdgeg :=_acag ._fbcc [:];Nerrs :=0;Errflag :=0;_cecb :=0;_acag ._bdbfc =-1;_agggg :=-1;defer func (){_cecb =-1;_acag ._bdbfc =-1;_agggg =-1}();_dcdc :=-1;goto _ccbbg ;_bdgg :return 0;_dagee :return 1;_ccbbg :if _egaf (_gfca ){_bf .Log .Error ("\u0050\u0061\u0072\u0073\u0065\u0020\u0074\u0069\u006d\u0065\u006f\u0075\u0074");goto _dagee ;};if _eacgd >=4{_dc .Printf ("\u0063\u0068\u0061\u0072\u0020\u0025\u0076\u0020\u0069n\u0020\u0025\u0076\u000a",_geeac (_agggg ),_baagb (_cecb ));};_dcdc ++;if _dcdc >=len (_bdgeg ){_fgdb :=make ([]yySymType ,len (_bdgeg )*2);copy (_fgdb ,_bdgeg );_bdgeg =_fgdb ;};_bdgeg [_dcdc ]=_gcee ;_bdgeg [_dcdc ]._gbcf =_cecb ;_bcada :if _egaf (_gfca ){_bf .Log .Error ("\u0050\u0061\u0072\u0073\u0065\u0020\u0074\u0069\u006d\u0065\u006f\u0075\u0074");goto _dagee ;};_fdbf =_bbdb [_cecb ];if _fdbf <=_babag {goto _gdfbe ;};if _acag ._bdbfc < 0{_acag ._bdbfc ,_agggg =_cbgb (yylex ,&_acag ._bfccd );};_fdbf +=_agggg ;if _fdbf < 0||_fdbf >=_bcdf {goto _gdfbe ;};_fdbf =_dffcc [_fdbf ];if _abdb [_fdbf ]==_agggg {_acag ._bdbfc =-1;_agggg =-1;_gcee =_acag ._bfccd ;_cecb =_fdbf ;if Errflag > 0{Errflag --;};goto _ccbbg ;};_gdfbe :if _egaf (_gfca ){_bf .Log .Error ("\u0050\u0061\u0072\u0073\u0065\u0020\u0074\u0069\u006d\u0065\u006f\u0075\u0074");goto _dagee ;};_fdbf =_ecbeb [_cecb ];if _fdbf ==-2{if _acag ._bdbfc < 0{_acag ._bdbfc ,_agggg =_cbgb (yylex ,&_acag ._bfccd );};_abbgc :=0;for {if _dgcd [_abbgc +0]==-1&&_dgcd [_abbgc +1]==_cecb {break ;};_abbgc +=2;};for _abbgc +=2;;_abbgc +=2{_fdbf =_dgcd [_abbgc +0];if _fdbf < 0||_fdbf ==_agggg {break ;};};_fdbf =_dgcd [_abbgc +1];if _fdbf < 0{goto _bdgg ;};};if _fdbf ==0{switch Errflag {case 0:yylex .Error (_gafbc (_cecb ,_agggg ));Nerrs ++;if _eacgd >=1{_dc .Printf ("\u0025\u0073",_baagb (_cecb ));_dc .Printf ("\u0020\u0073\u0061\u0077\u0020\u0025\u0073\u000a",_geeac (_agggg ));};fallthrough;case 1,2:Errflag =3;for _dcdc >=0{_fdbf =_bbdb [_bdgeg [_dcdc ]._gbcf ]+_bbded ;if _fdbf >=0&&_fdbf < _bcdf {_cecb =_dffcc [_fdbf ];if _abdb [_cecb ]==_bbded {goto _ccbbg ;};};if _eacgd >=2{_dc .Printf ("\u0065\u0072r\u006f\u0072\u0020\u0072\u0065\u0063\u006f\u0076\u0065\u0072\u0079\u0020\u0070\u006f\u0070\u0073\u0020\u0073\u0074\u0061\u0074\u0065 %\u0064\u000a",_bdgeg [_dcdc ]._gbcf );};_dcdc --;};goto _dagee ;case 3:if _eacgd >=2{_dc .Printf ("e\u0072\u0072\u006f\u0072\u0020\u0072e\u0063\u006f\u0076\u0065\u0072\u0079\u0020\u0064\u0069s\u0063\u0061\u0072d\u0073 \u0025\u0073\u000a",_geeac (_agggg ));};if _agggg ==_acgb {goto _dagee ;};_acag ._bdbfc =-1;_agggg =-1;goto _bcada ;};};if _eacgd >=2{_dc .Printf ("\u0072e\u0064u\u0063\u0065\u0020\u0025\u0076 \u0069\u006e:\u000a\u0009\u0025\u0076\u000a",_fdbf ,_baagb (_cecb ));};_ecaba :=_fdbf ;_ccaec :=_dcdc ;_ =_ccaec ;_dcdc -=_addd [_fdbf ];if _dcdc +1>=len (_bdgeg ){_cdbed :=make ([]yySymType ,len (_bdgeg )*2);copy (_cdbed ,_bdgeg );_bdgeg =_cdbed ;};_gcee =_bdgeg [_dcdc +1];_fdbf =_ebgcd [_fdbf ];_bceee :=_bfaff [_fdbf ];_dcfdb :=_bceee +_bdgeg [_dcdc ]._gbcf +1;if _dcfdb >=_bcdf {_cecb =_dffcc [_bceee ];}else {_cecb =_dffcc [_dcfdb ];if _abdb [_cecb ]!=-_fdbf {_cecb =_dffcc [_bceee ];};};switch _ecaba {case 1:_fcfde =_bdgeg [_ccaec -1:_ccaec +1];{yylex .(*plex )._gbceg =_gcee ._afba ;};case 3:_fcfde =_bdgeg [_ccaec -2:_ccaec +1];{_gcee ._afba =_fcfde [2]._afba ;};case 4:_fcfde =_bdgeg [_ccaec -4:_ccaec +1];{};case 5:_fcfde =_bdgeg [_ccaec -1:_ccaec +1];{_gcee ._afba =NewBool (_fcfde [1]._aedaf ._addbb );};case 6:_fcfde =_bdgeg [_ccaec -1:_ccaec +1];{_gcee ._afba =NewNumber (_fcfde [1]._aedaf ._addbb );};case 7:_fcfde =_bdgeg [_ccaec -1:_ccaec +1];{_gcee ._afba =NewString (_fcfde [1]._aedaf ._addbb );};case 8:_fcfde =_bdgeg [_ccaec -1:_ccaec +1];{_gcee ._afba =NewError (_fcfde [1]._aedaf ._addbb );};case 9:_fcfde =_bdgeg [_ccaec -2:_ccaec +1];{_gcee ._afba =_fcfde [2]._afba ;};case 10:_fcfde =_bdgeg [_ccaec -2:_ccaec +1];{_gcee ._afba =NewNegate (_fcfde [2]._afba );};case 15:_fcfde =_bdgeg [_ccaec -3:_ccaec +1];{_gcee ._afba =_fcfde [2]._afba ;};case 17:_fcfde =_bdgeg [_ccaec -3:_ccaec +1];{_gcee ._afba =NewConstArrayExpr (_fcfde [2]._dbcae );};case 18:_fcfde =_bdgeg [_ccaec -1:_ccaec +1];{_gcee ._dbcae =append (_gcee ._dbcae ,_fcfde [1]._bgcb );};case 19:_fcfde =_bdgeg [_ccaec -3:_ccaec +1];{_gcee ._dbcae =append (_fcfde [1]._dbcae ,_fcfde [3]._bgcb );};case 20:_fcfde =_bdgeg [_ccaec -1:_ccaec +1];{_gcee ._bgcb =append (_gcee ._bgcb ,_fcfde [1]._afba );};case 21:_fcfde =_bdgeg [_ccaec -3:_ccaec +1];{_gcee ._bgcb =append (_fcfde [1]._bgcb ,_fcfde [3]._afba );};case 23:_fcfde =_bdgeg [_ccaec -2:_ccaec +1];{_gcee ._afba =NewPrefixExpr (_fcfde [1]._afba ,_fcfde [2]._afba );};case 25:_fcfde =_bdgeg [_ccaec -1:_ccaec +1];{_gcee ._afba =NewSheetPrefixExpr (_fcfde [1]._aedaf ._addbb );};case 26:_fcfde =_bdgeg [_ccaec -1:_ccaec +1];{_gcee ._afba =NewCellRef (_fcfde [1]._aedaf ._addbb );};case 27:_fcfde =_bdgeg [_ccaec -3:_ccaec +1];{_gcee ._afba =NewRange (_fcfde [1]._afba ,_fcfde [3]._afba );};case 28:_fcfde =_bdgeg [_ccaec -4:_ccaec +1];{_gcee ._afba =NewPrefixRangeExpr (_fcfde [1]._afba ,_fcfde [2]._afba ,_fcfde [4]._afba );};case 29:_fcfde =_bdgeg [_ccaec -1:_ccaec +1];{_gcee ._afba =NewNamedRangeRef (_fcfde [1]._aedaf ._addbb );};case 30:_fcfde =_bdgeg [_ccaec -1:_ccaec +1];{_gcee ._afba =NewHorizontalRange (_fcfde [1]._aedaf ._addbb );};case 31:_fcfde =_bdgeg [_ccaec -1:_ccaec +1];{_gcee ._afba =NewVerticalRange (_fcfde [1]._aedaf ._addbb );};case 32:_fcfde =_bdgeg [_ccaec -2:_ccaec +1];{_gcee ._afba =NewPrefixHorizontalRange (_fcfde [1]._afba ,_fcfde [2]._aedaf ._addbb );};case 33:_fcfde =_bdgeg [_ccaec -2:_ccaec +1];{_gcee ._afba =NewPrefixVerticalRange (_fcfde [1]._afba ,_fcfde [2]._aedaf ._addbb );};case 34:_fcfde =_bdgeg [_ccaec -3:_ccaec +1];{_gcee ._afba =NewBinaryExpr (_fcfde [1]._afba ,BinOpTypePlus ,_fcfde [3]._afba );};case 35:_fcfde =_bdgeg [_ccaec -3:_ccaec +1];{_gcee ._afba =NewBinaryExpr (_fcfde [1]._afba ,BinOpTypeMinus ,_fcfde [3]._afba );};case 36:_fcfde =_bdgeg [_ccaec -3:_ccaec +1];{_gcee ._afba =NewBinaryExpr (_fcfde [1]._afba ,BinOpTypeMult ,_fcfde [3]._afba );};case 37:_fcfde =_bdgeg [_ccaec -3:_ccaec +1];{_gcee ._afba =NewBinaryExpr (_fcfde [1]._afba ,BinOpTypeDiv ,_fcfde [3]._afba );};case 38:_fcfde =_bdgeg [_ccaec -3:_ccaec +1];{_gcee ._afba =NewBinaryExpr (_fcfde [1]._afba ,BinOpTypeExp ,_fcfde [3]._afba );};case 39:_fcfde =_bdgeg [_ccaec -3:_ccaec +1];{_gcee ._afba =NewBinaryExpr (_fcfde [1]._afba ,BinOpTypeLT ,_fcfde [3]._afba );};case 40:_fcfde =_bdgeg [_ccaec -3:_ccaec +1];{_gcee ._afba =NewBinaryExpr (_fcfde [1]._afba ,BinOpTypeGT ,_fcfde [3]._afba );};case 41:_fcfde =_bdgeg [_ccaec -3:_ccaec +1];{_gcee ._afba =NewBinaryExpr (_fcfde [1]._afba ,BinOpTypeLEQ ,_fcfde [3]._afba );};case 42:_fcfde =_bdgeg [_ccaec -3:_ccaec +1];{_gcee ._afba =NewBinaryExpr (_fcfde [1]._afba ,BinOpTypeGEQ ,_fcfde [3]._afba );};case 43:_fcfde =_bdgeg [_ccaec -3:_ccaec +1];{_gcee ._afba =NewBinaryExpr (_fcfde [1]._afba ,BinOpTypeEQ ,_fcfde [3]._afba );};case 44:_fcfde =_bdgeg [_ccaec -3:_ccaec +1];{_gcee ._afba =NewBinaryExpr (_fcfde [1]._afba ,BinOpTypeNE ,_fcfde [3]._afba );};case 45:_fcfde =_bdgeg [_ccaec -3:_ccaec +1];{_gcee ._afba =NewBinaryExpr (_fcfde [1]._afba ,BinOpTypeConcat ,_fcfde [3]._afba );};case 47:_fcfde =_bdgeg [_ccaec -2:_ccaec +1];{_gcee ._afba =NewFunction (_fcfde [1]._aedaf ._addbb ,nil );};case 48:_fcfde =_bdgeg [_ccaec -3:_ccaec +1];{_gcee ._afba =NewFunction (_fcfde [1]._aedaf ._addbb ,_fcfde [2]._bgcb );};case 49:_fcfde =_bdgeg [_ccaec -1:_ccaec +1];{_gcee ._bgcb =append (_gcee ._bgcb ,_fcfde [1]._afba );};case 50:_fcfde =_bdgeg [_ccaec -3:_ccaec +1];{_gcee ._bgcb =append (_fcfde [1]._bgcb ,_fcfde [3]._afba );};case 53:_fcfde =_bdgeg [_ccaec -0:_ccaec +1];{_gcee ._afba =NewEmptyExpr ();};};goto _ccbbg ;};

// Reference returns an invalid reference for EmptyExpr.
func (_dbe EmptyExpr )Reference (ctx Context ,ev Evaluator )Reference {return ReferenceInvalid };const _bbgf =57376;

// Findb is an implementation of the Excel FINDB().
func Findb (ctx Context ,ev Evaluator ,args []Result )Result {if !ctx .IsDBCS (){return Find (args );};_degbb ,_gbga :=_cccca ("\u0046\u0049\u004e\u0044",args );if _gbga .Type !=ResultTypeEmpty {return _gbga ;};_cgcdf :=_degbb ._cfddd ;if _cgcdf ==""{return MakeNumberResult (1.0);};_ccdd :=_degbb ._dgbd ;_cgbf :=_degbb ._daag -1;_ceac :=1;_bdcff :=0;for _eaece :=range _ccdd {if _eaece !=0{_degea :=1;if _eaece -_bdcff > 1{_degea =2;};_ceac +=_degea ;};if _ceac > _cgbf {_ceea :=_ce .Index (_ccdd [_eaece :],_cgcdf );if _ceea ==0{return MakeNumberResult (float64 (_ceac ));};};_bdcff =_eaece ;};return MakeErrorResultType (ErrorTypeValue ,"\u004eo\u0074\u0020\u0066\u006f\u0075\u006ed");};func _aeee (_fabg ,_bcbf int )int {if _bcbf ==2&&_gdc (_fabg ){return 29;}else {return _deec [_bcbf -1];};};

// RegisterFunctionComplex registers a standard function.
func RegisterFunctionComplex (name string ,fn FunctionComplex ){_bdbb .Lock ();defer _bdbb .Unlock ();if _ ,_ddfb :=_bbbbf [name ];_ddfb {_bf .Log .Debug ("\u0064\u0075p\u006c\u0069\u0063\u0061t\u0065\u0020r\u0065\u0067\u0069\u0073\u0074\u0072\u0061\u0074i\u006f\u006e\u0020\u006f\u0066\u0020\u0066\u0075\u006e\u0063\u0074\u0069o\u006e\u0020\u0025\u0073",name );};_bbbbf [name ]=fn ;};type Expression interface{Eval (_fcf Context ,_ecd Evaluator )Result ;Reference (_ged Context ,_eed Evaluator )Reference ;String ()string ;Update (_fee *_ff .UpdateQuery )Expression ;};func init (){_ecfg ();RegisterFunction ("\u004e\u0041",NA );RegisterFunction ("\u0049S\u0042\u004c\u0041\u004e\u004b",IsBlank );RegisterFunction ("\u0049\u0053\u0045R\u0052",IsErr );RegisterFunction ("\u0049S\u0045\u0052\u0052\u004f\u0052",IsError );RegisterFunction ("\u0049\u0053\u0045\u0056\u0045\u004e",IsEven );RegisterFunctionComplex ("\u005fx\u006cf\u006e\u002e\u0049\u0053\u0046\u004f\u0052\u004d\u0055\u004c\u0041",IsFormula );RegisterFunctionComplex ("\u004fR\u0047\u002e\u004f\u0050E\u004e\u004f\u0046\u0046\u0049C\u0045.\u0049S\u004c\u0045\u0041\u0050\u0059\u0045\u0041R",IsLeapYear );RegisterFunctionComplex ("\u0049S\u004c\u004f\u0047\u0049\u0043\u0041L",IsLogical );RegisterFunction ("\u0049\u0053\u004e\u0041",IsNA );RegisterFunction ("\u0049S\u004e\u004f\u004e\u0054\u0045\u0058T",IsNonText );RegisterFunction ("\u0049\u0053\u004e\u0055\u004d\u0042\u0045\u0052",IsNumber );RegisterFunction ("\u0049\u0053\u004fD\u0044",IsOdd );RegisterFunctionComplex ("\u0049\u0053\u0052E\u0046",IsRef );RegisterFunction ("\u0049\u0053\u0054\u0045\u0058\u0054",IsText );RegisterFunctionComplex ("\u0043\u0045\u004c\u004c",Cell );};

// MDeterm is an implementation of the Excel MDETERM which finds the determinant
// of a matrix.
func MDeterm (args []Result )Result {if len (args )!=1{return MakeErrorResult ("\u004d\u0044\u0045T\u0045\u0052\u004d\u0028\u0029\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0061\u0020\u0073\u0069\u006e\u0067\u006c\u0065\u0020\u0061\u0072\u0072\u0061\u0079 \u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};_gdaf :=args [0];if _gdaf .Type !=ResultTypeArray {return MakeErrorResult ("\u004d\u0044\u0045T\u0045\u0052\u004d\u0028\u0029\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0061\u0020\u0073\u0069\u006e\u0067\u006c\u0065\u0020\u0061\u0072\u0072\u0061\u0079 \u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};_adgf :=len (_gdaf .ValueArray );for _ ,_dafc :=range _gdaf .ValueArray {if len (_dafc )!=_adgf {return MakeErrorResult ("\u004d\u0044\u0045TE\u0052\u004d\u0028\u0029\u0020\u0072\u0065\u0071\u0075i\u0072e\u0073 \u0061 \u0073\u0071\u0075\u0061\u0072\u0065\u0020\u006d\u0061\u0074\u0072\u0069\u0078");};};return MakeNumberResult (_fage (_gdaf .ValueArray ));};func _gdfd (_cdbeg Result ,_gcbb ,_bgaed string )(float64 ,Result ){switch _cdbeg .Type {case ResultTypeEmpty :return 0,_ega ;case ResultTypeNumber :return _cdbeg .ValueNumber ,_ega ;case ResultTypeString :_daafc ,_gdafc :=_gc .ParseFloat (_cdbeg .ValueString ,64);if _gdafc !=nil {return 0,MakeErrorResult (_bgaed +"\u0020s\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0061\u0020n\u0075\u006d\u0062\u0065\u0072\u0020\u0066\u006f\u0072\u0020"+_gcbb );};return _daafc ,_ega ;default:return 0,MakeErrorResult (_gcbb +"\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020"+_bgaed +"\u0020t\u006f\u0020\u0062\u0065\u0020\u0061\u0020\u006e\u0075\u006d\u0062e\u0072\u0020\u006f\u0072\u0020\u0065\u006d\u0070\u0074\u0079");};};

// Decimal is an implementation of the Excel function DECIMAL() that parses a string
// in a given base and returns the numeric result.
func Decimal (args []Result )Result {if len (args )!=2{return MakeErrorResult ("\u0044\u0045\u0043\u0049\u004d\u0041\u004c\u0028\u0029\u0020\u0072\u0065\u0071\u0075\u0069r\u0065s\u0020\u0074\u0077\u006f\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0073");};_gbef :=args [0].AsString ();if _gbef .Type !=ResultTypeString {return MakeErrorResult ("D\u0045\u0043\u0049\u004d\u0041\u004c\u0028\u0029\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020s\u0074\u0072\u0069\u006e\u0067\u0020\u0066\u0069\u0072\u0073t \u0061\u0072\u0067u\u006de\u006e\u0074");};_fgegb :=args [1].AsNumber ();if _fgegb .Type !=ResultTypeNumber {return MakeErrorResult ("\u0044\u0045\u0043\u0049\u004dA\u004c\u0028\u0029\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020n\u0075\u006d\u0062\u0065\u0072\u0020\u0073\u0065\u0063\u006f\u006e\u0064\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};_baaa :=_gbef .ValueString ;if len (_baaa )> 2&&(_ce .HasPrefix (_baaa ,"\u0030\u0078")||_ce .HasPrefix (_baaa ,"\u0030\u0058")){_baaa =_baaa [2:];};_gfdf ,_gcaae :=_gc .ParseInt (_baaa ,int (_fgegb .ValueNumber ),64);if _gcaae !=nil {return MakeErrorResult ("\u0044\u0045C\u0049\u004d\u0041\u004c\u0028\u0029\u0020\u0065\u0072\u0072\u006f\u0072\u0020\u0069\u006e\u0020\u0063\u006f\u006e\u0076\u0065\u0072si\u006f\u006e");};return MakeNumberResult (float64 (_gfdf ));};const _ebdb ="\u0028\u0028\u006a\u0061\u006e|\u006a\u0061\u006e\u0075\u0061\u0072\u0079\u0029\u007c\u0028\u0066\u0065\u0062\u007c\u0066\u0065\u0062\u0072\u0075a\u0072\u0079\u0029\u007c\u0028\u006da\u0072\u007c\u006da\u0072\u0063\u0068\u0029\u007c\u0028\u0061\u0070\u0072\u007c\u0061\u0070\u0072\u0069\u006c\u0029\u007c\u0028\u006d\u0061\u0079\u0029\u007c\u0028j\u0075\u006e\u007cj\u0075\u006e\u0065\u0029\u007c\u0028\u006a\u0075\u006c\u007c\u006a\u0075\u006c\u0079\u0029\u007c\u0028a\u0075\u0067\u007c\u0061\u0075\u0067\u0075\u0073t\u0029\u007c\u0028\u0073\u0065\u0070\u007c\u0073\u0065\u0070\u0074\u0065\u006d\u0062\u0065\u0072\u0029\u007c\u0028o\u0063\u0074\u007c\u006f\u0063\u0074\u006f\u0062\u0065\u0072\u0029\u007c\u0028\u006e\u006f\u0076\u007c\u006e\u006f\u0076\u0065\u006d\u0062e\u0072\u0029\u007c\u0028\u0064\u0065\u0063\u007c\u0064\u0065\u0063\u0065\u006d\u0062\u0065\u0072\u0029\u0029";

// ISERROR is an implementation of the Excel ISERROR() function.
func IsError (args []Result )Result {if len (args )!=1{return MakeErrorResult ("I\u0053\u0045\u0052\u0052\u004f\u0052(\u0029\u0020\u0061\u0063\u0063\u0065p\u0074\u0073\u0020\u0061\u0020\u0073\u0069n\u0067\u006c\u0065\u0020\u0061\u0072\u0067\u0075\u006d\u0065n\u0074");};return MakeBoolResult (args [0].Type ==ResultTypeError );};func _cccg (_defb ,_fbgc []float64 ,_gbae float64 )Result {_cefe :=false ;_aacf :=false ;for _ebegf :=0;_ebegf < len (_defb );_ebegf ++{if _defb [_ebegf ]> 0{_cefe =true ;};if _defb [_ebegf ]< 0{_aacf =true ;};};if !_cefe ||!_aacf {return MakeErrorResultType (ErrorTypeNum ,"");};_becg :=_gbae ;_caae :=1e-10;_baea :=0;_dag :=50;_abbc :=false ;for {_ggaa :=_feab (_defb ,_fbgc ,_becg );_degba :=_becg -_ggaa /_fecf (_defb ,_fbgc ,_becg );_aabb :=_ea .Abs (_degba -_becg );_becg =_degba ;_baea ++;if _aabb <=_caae ||_ea .Abs (_ggaa )<=_caae {break ;};if _baea > _dag {_abbc =true ;break ;};};if _abbc ||_ea .IsNaN (_becg )||_ea .IsInf (_becg ,0){return MakeErrorResultType (ErrorTypeNum ,"");};return MakeNumberResult (_becg );};func _fceb (_fgcbe Context ,_cedd Evaluator ,_eefda ,_gged string )Result {_ddfcd ,_fgeea :=_bef .ParseCellReference (_eefda );if _fgeea !=nil {return MakeErrorResult (_dc .Sprintf ("\u0075\u006e\u0061bl\u0065\u0020\u0074\u006f\u0020\u0070\u0061\u0072\u0073e\u0020r\u0061n\u0067e\u0020\u0025\u0073\u003a\u0020\u0065\u0072\u0072\u006f\u0072\u0020\u0025\u0073",_eefda ,_fgeea .Error ()));};_ddfea ,_cgda :=_ddfcd .ColumnIdx ,_ddfcd .RowIdx ;_aceg ,_caef :=_bef .ParseCellReference (_gged );if _caef !=nil {return MakeErrorResult (_dc .Sprintf ("\u0075\u006e\u0061bl\u0065\u0020\u0074\u006f\u0020\u0070\u0061\u0072\u0073e\u0020r\u0061n\u0067e\u0020\u0025\u0073\u003a\u0020\u0065\u0072\u0072\u006f\u0072\u0020\u0025\u0073",_gged ,_caef .Error ()));};_gaefa ,_fcge :=_aceg .ColumnIdx ,_aceg .RowIdx ;_bcbfa :=[][]Result {};for _cdde :=_cgda ;_cdde <=_fcge ;_cdde ++{_cddfg :=[]Result {};for _cffg :=_ddfea ;_cffg <=_gaefa ;_cffg ++{_gfbfa :=_fgcbe .Cell (_dc .Sprintf ("\u0025\u0073\u0025\u0064",_bef .IndexToColumn (_cffg ),_cdde ),_cedd );_cddfg =append (_cddfg ,_gfbfa );};_bcbfa =append (_bcbfa ,_cddfg );};if len (_bcbfa )==1{if len (_bcbfa [0])==1{return _bcbfa [0][0];};return MakeListResult (_bcbfa [0]);};return MakeArrayResult (_bcbfa );};var _dffcc =[...]int {45,3,44,32,18,40,72,46,47,30,31,32,39,48,28,29,30,31,32,75,39,49,32,56,50,70,23,39,76,57,58,59,60,61,62,63,64,65,66,67,68,77,71,69,54,43,13,19,21,55,82,11,78,9,74,28,29,30,31,32,37,33,34,35,36,38,1,20,39,10,2,8,0,80,79,0,0,0,83,0,81,73,28,29,30,31,32,37,33,34,35,36,38,0,0,39,28,29,30,31,32,37,33,34,35,36,38,26,27,39,51,52,25,14,15,16,17,0,24,23,22,41,23,12,0,6,7,26,27,0,42,0,25,14,15,16,17,0,24,23,22,5,0,12,0,6,7,26,27,0,4,0,25,14,15,16,17,0,24,23,22,41,0,12,53,6,7,26,27,0,0,0,25,14,15,16,17,0,24,23,22,41,0,12,0,6,7};

// MinA is an implementation of the Excel MINA() function.
func MinA (args []Result )Result {return _daeb (args ,true )};

// Update returns the same object as updating sheet references does not affect named ranges.
func (_bcedgg NamedRangeRef )Update (q *_ff .UpdateQuery )Expression {return _bcedgg };

// Indirect is an implementation of the Excel INDIRECT function that returns the
// contents of a cell.
func Indirect (ctx Context ,ev Evaluator ,args []Result )Result {if len (args )!=1&&len (args )!=2{return MakeErrorResult ("\u0049\u004e\u0044\u0049\u0052\u0045\u0043\u0054\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u006f\u006e\u0065\u0020\u006f\u0072 \u0074\u0077\u006f\u0020\u0061r\u0067\u0075m\u0065\u006e\u0074\u0073");};_beec :=args [0].AsString ();if _beec .Type !=ResultTypeString {return MakeErrorResult ("\u0049\u004e\u0044\u0049\u0052\u0045\u0043\u0054\u0020\u0072\u0065q\u0075\u0069\u0072\u0065\u0073\u0020\u0066\u0069r\u0073t\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u006f\u0066 \u0074\u0079\u0070\u0065\u0020\u0073\u0074\u0072\u0069\u006e\u0067");};return ctx .Cell (_beec .ValueString ,ev );};func _cggac (_bedc Context ,_ebacc ,_fggb string )(string ,string ){_gedbf :=_ebacc +"\u0031";_dgccb :=_bedc .LastRow (_ebacc );_gbfea :=_fggb +_gc .Itoa (_dgccb );return _gedbf ,_gbfea ;};

// Choose implements the Excel CHOOSE function.
func Choose (args []Result )Result {if len (args )< 2{return MakeErrorResult ("\u0043\u0048O\u004f\u0053\u0045\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0074\u0077\u006f\u0020\u0061\u0072\u0067\u0075\u006den\u0074\u0073");};_eeef :=args [0];if _eeef .Type !=ResultTypeNumber {return MakeErrorResult ("\u0043H\u004f\u004fS\u0045\u0020\u0072e\u0071\u0075\u0069\u0072\u0065\u0073\u0020f\u0069\u0072\u0073\u0074\u0020\u0061r\u0067\u0075\u006d\u0065\u006e\u0074\u0020\u006f\u0066\u0020\u0074y\u0070\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072");};_gagec :=int (_eeef .ValueNumber );if _gagec < 1{return MakeErrorResult ("\u0049\u006e\u0064\u0065\u0078\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065 \u0061 \u0070\u006f\u0073\u0069\u0074\u0069\u0076\u0065\u0020\u0076\u0061\u006c\u0075\u0065");};if len (args )<=_gagec {return MakeErrorResult ("\u0049\u006e\u0064\u0065\u0078\u0020\u0073\u0068\u006f\u0075\u006cd\u0020\u0062\u0065\u0020\u006c\u0065\u0073\u0073 \u006fr\u0020\u0065\u0071\u0075\u0061\u006c\u0020\u0074\u006f\u0020\u0074\u0068\u0065\u0020\u006e\u0075\u006d\u0062e\u0072\u0020\u006f\u0066\u0020\u0076\u0061\u006c\u0075\u0065\u0073");};return args [_gagec ];};func (_cdbfg *noCache )SetCache (key string ,value Result ){};func (_gddfg *Lexer )Next ()*node {_gddfg ._cage .Lock ();defer _gddfg ._cage .Unlock ();if len (_gddfg ._fadeb )> 0{_cggae :=_gddfg ._fadeb [0];_gddfg ._fadeb =_gddfg ._fadeb [1:];return _cggae ;};return _gddfg .nextRaw ();};

// NewVerticalRange constructs a new full columns range.
func NewVerticalRange (v string )Expression {_caeff :=_ce .Split (v ,"\u003a");if len (_caeff )!=2{return nil ;};if _caeff [0]> _caeff [1]{_caeff [0],_caeff [1]=_caeff [1],_caeff [0];};return VerticalRange {_begc :_caeff [0],_fcdba :_caeff [1]};};const _eebg =57356;func _fggc (_bgeb []Result ,_ccee string )(*couponArgs ,Result ){_gcaf :=len (_bgeb );if _gcaf !=3&&_gcaf !=4{return nil ,MakeErrorResult (_ccee +"\u0020\u0072\u0065\u0071\u0075\u0069r\u0065\u0073\u0020\u0074\u0068\u0072\u0065\u0065\u0020\u006f\u0072\u0020\u0066o\u0075\u0072\u0020\u0061\u0072\u0067\u0075m\u0065\u006e\u0074\u0073");};_gfef ,_dbcd ,_bgbg :=_egcf (_bgeb [0],_bgeb [1],_ccee );if _bgbg .Type ==ResultTypeError {return nil ,_bgbg ;};if _bgeb [2].Type !=ResultTypeNumber {return nil ,MakeErrorResult (_ccee +"\u0020\u0072\u0065\u0071\u0075i\u0072\u0065\u0073\u0020\u0066\u0072\u0065\u0071\u0075\u0065\u006e\u0063\u0079 \u0074\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};_fafd :=_bgeb [2].ValueNumber ;if !_cad (_fafd ){return nil ,MakeErrorResult ("\u0049n\u0063\u006f\u0072\u0072\u0065\u0063\u0074\u0020\u0066\u0072\u0065q\u0075\u0065\u006e\u0063\u0079\u0020\u0066\u006f\u0072\u0020"+_ccee );};_gaca :=0;if _gcaf ==4&&_bgeb [3].Type !=ResultTypeEmpty {if _bgeb [3].Type !=ResultTypeNumber {return nil ,MakeErrorResult (_ccee +"\u0020\u0072e\u0071\u0075\u0069\u0072e\u0073\u0020b\u0061\u0073\u0069\u0073\u0020\u0074\u006f\u0020b\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0061\u0072\u0067u\u006d\u0065\u006e\u0074");};_gaca =int (_bgeb [3].ValueNumber );if !_aaac (_gaca ){return nil ,MakeErrorResultType (ErrorTypeNum ,"\u0049\u006ec\u006f\u0072\u0072\u0065\u0063\u0074\u0020\u0062\u0061\u0073\u0069\u0073\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0020fo\u0072\u0020"+_ccee );};};return &couponArgs {_gfef ,_dbcd ,int (_fafd ),_gaca },_ega ;};

// Exact is an implementation of the Excel EXACT() which compares two strings.
func Exact (args []Result )Result {if len (args )!=2{return MakeErrorResult ("\u0043\u004f\u004e\u0043\u0041\u0054\u0045N\u0041\u0054\u0045(\u0029\u0020\u0072\u0065q\u0075\u0069\u0072\u0065\u0073\u0020\u0074\u0077\u006f\u0020\u0073\u0074\u0072\u0069\u006e\u0067\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0073");};_dbgc :=args [0].AsString ();_ggdg :=args [1].AsString ();if _dbgc .Type !=ResultTypeString ||_ggdg .Type !=ResultTypeString {return MakeErrorResult ("\u0043\u004f\u004e\u0043\u0041\u0054\u0045N\u0041\u0054\u0045(\u0029\u0020\u0072\u0065q\u0075\u0069\u0072\u0065\u0073\u0020\u0074\u0077\u006f\u0020\u0073\u0074\u0072\u0069\u006e\u0067\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0073");};return MakeBoolResult (_dbgc .ValueString ==_ggdg .ValueString );};

// SheetPrefixExpr is a reference to a sheet like Sheet1! (reference to sheet 'Sheet1').
type SheetPrefixExpr struct{_bcff string };type durationArgs struct{_ceae float64 ;_dbgg float64 ;_dceg float64 ;_bdf float64 ;_bab float64 ;_eea int ;};func init (){RegisterFunction ("\u0041\u004e\u0044",And );RegisterFunction ("\u0046\u0041\u004cS\u0045",False );RegisterFunction ("\u0049\u0046",If );RegisterFunction ("\u0049F\u0045\u0052\u0052\u004f\u0052",IfError );RegisterFunction ("\u005f\u0078\u006c\u0066\u006e\u002e\u0049\u0046\u004e\u0041",IfNA );RegisterFunction ("\u0049\u0046\u0053",Ifs );RegisterFunction ("\u005fx\u006c\u0066\u006e\u002e\u0049\u0046S",Ifs );RegisterFunction ("\u004e\u004f\u0054",Not );RegisterFunction ("\u004f\u0052",Or );RegisterFunction ("\u0054\u0052\u0055\u0045",True );RegisterFunction ("\u005fx\u006c\u0066\u006e\u002e\u0058\u004fR",Xor );};func _gfbbb (_bbdg [][]Result ,_baaf int )[][]Result {_ccbad :=[][]Result {};for _abgbb :=range _bbdg {if _abgbb ==0{continue ;};_cddfc :=[]Result {};for _gcfg :=range _bbdg {if _gcfg ==_baaf {continue ;};_cddfc =append (_cddfc ,_bbdg [_abgbb ][_gcfg ]);};_ccbad =append (_ccbad ,_cddfc );};return _ccbad ;};func _baagb (_fgdcb int )string {if _fgdcb >=0&&_fgdcb < len (_bbgfb ){if _bbgfb [_fgdcb ]!=""{return _bbgfb [_fgdcb ];};};return _dc .Sprintf ("\u0073\u0074\u0061\u0074\u0065\u002d\u0025\u0076",_fgdcb );};

// Proper is an implementation of the Excel PROPER function that returns a copy
// of the string with each word capitalized.
func Proper (args []Result )Result {if len (args )!=1{return MakeErrorResult ("P\u0052\u004f\u0050\u0045\u0052\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0061\u0020\u0073i\u006e\u0067\u006c\u0065\u0020\u0073\u0074\u0072\u0069\u006eg \u0061\u0072\u0067u\u006de\u006e\u0074");};_aegdb :=args [0].AsString ();if _aegdb .Type !=ResultTypeString {return MakeErrorResult ("P\u0052\u004f\u0050\u0045\u0052\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0061\u0020\u0073i\u006e\u0067\u006c\u0065\u0020\u0073\u0074\u0072\u0069\u006eg \u0061\u0072\u0067u\u006de\u006e\u0074");};_fcaca :=_cb .Buffer {};_ccbadd :=false ;for _ ,_fgaef :=range _aegdb .ValueString {if !_ccbadd &&_cf .IsLetter (_fgaef ){_fcaca .WriteRune (_cf .ToUpper (_fgaef ));}else {_fcaca .WriteRune (_cf .ToLower (_fgaef ));};_ccbadd =_cf .IsLetter (_fgaef );};return MakeStringResult (_fcaca .String ());};const _aadc =57364;var _deaaa =[...]int {0};

// FunctionComplex is a function whose result  depends on its arguments and the
// context that it's in.  As an example, INDIRECT is a complex function so that
// INDIRECT("A1") which returns the value of the "A1" cell in a sheet can use
// the context to reach into the sheet and pull out required values.
type FunctionComplex func (_fdcdf Context ,_edab Evaluator ,_defc []Result )Result ;

// Yielddisc implements the Excel YIELDDISC function.
func Yielddisc (args []Result )Result {_afbf :=len (args );if _afbf !=4&&_afbf !=5{return MakeErrorResult ("\u0059\u0049\u0045\u004c\u0044D\u0049\u0053\u0043\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020f\u006f\u0075\u0072\u0020\u006f\u0072\u0020\u0066\u0069\u0076\u0065\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0073");};_ecbf ,_ddba ,_ccgd :=_egcf (args [0],args [1],"\u0059I\u0045\u004c\u0044\u0044\u0049\u0053C");if _ccgd .Type ==ResultTypeError {return _ccgd ;};if args [2].Type !=ResultTypeNumber {return MakeErrorResult ("\u0059\u0049\u0045\u004c\u0044\u0044\u0049S\u0043\u0020\u0072e\u0071\u0075\u0069\u0072e\u0073\u0020\u0070\u0072\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};_gdge :=args [2].ValueNumber ;if _gdge <=0{return MakeErrorResultType (ErrorTypeNum ,"\u0059\u0049E\u004c\u0044\u0044\u0049\u0053C\u0020\u0072\u0065\u0071\u0075i\u0072\u0065\u0073\u0020\u0070\u0072\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u0070\u006f\u0073\u0069\u0074\u0069\u0076\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};if args [3].Type !=ResultTypeNumber {return MakeErrorResult ("\u0059\u0049\u0045\u004c\u0044D\u0049\u0053\u0043\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020r\u0065\u0064\u0065\u006d\u0070\u0074\u0069\u006f\u006e\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006et");};_fdfd :=args [3].ValueNumber ;if _fdfd <=0{return MakeErrorResultType (ErrorTypeNum ,"YI\u0045\u004cD\u0044\u0049\u0053\u0043\u0020\u0072\u0065\u0071\u0075i\u0072\u0065\u0073\u0020\u0072\u0065\u0064\u0065\u006d\u0070\u0074\u0069\u006f\u006e\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u0070\u006f\u0073\u0069\u0074\u0069\u0076e\u0020n\u0075\u006d\u0062\u0065\u0072\u0020\u0061\u0072g\u0075m\u0065\u006et");};_dcfg :=0;if _afbf ==5&&args [4].Type !=ResultTypeEmpty {if args [4].Type !=ResultTypeNumber {return MakeErrorResult ("\u0059\u0049E\u004c\u0044\u0044\u0049\u0053\u0043\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0062\u0061\u0073\u0069\u0073\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};_dcfg =int (args [4].ValueNumber );if !_aaac (_dcfg ){return MakeErrorResultType (ErrorTypeNum ,"\u0049\u006e\u0063\u006f\u0072\u0072\u0065\u0063\u0074\u0020\u0062\u0061\u0073\u0069\u0073\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074 \u0066\u006f\u0072\u0020\u0059I\u0045\u004cD\u0044\u0049\u0053\u0043");};};_aaba ,_ccgd :=_eaee (_ecbf ,_ddba ,_dcfg );if _ccgd .Type ==ResultTypeError {return _ccgd ;};return MakeNumberResult ((_fdfd /_gdge -1)/_aaba );};var _eedd =map[string ]*_be .Regexp {};const _faffe =57358;

// Rand is an implementation of the Excel RAND() function that returns random
// numbers in the range [0,1).
func Rand (args []Result )Result {if len (args )!=0{return MakeErrorResult ("R\u0041\u004e\u0044\u0028\u0029\u0020a\u0063\u0063\u0065\u0070\u0074\u0073\u0020\u006e\u006f \u0061\u0072\u0067u\u006de\u006e\u0074\u0073");};return MakeNumberResult (_dabfg .Float64 ());};const _dce =_f .Second *1;func _eaee (_bccc ,_ccf float64 ,_ddcd int )(float64 ,Result ){_eefd ,_gbec :=_acb (_bccc ),_acb (_ccf );_bbc :=_eefd .Unix ();_fdeg :=_gbec .Unix ();if _bbc ==_fdeg {return 0,_ega ;};_afb ,_gcaab ,_gecc :=_eefd .Date ();_cgb ,_fgd ,_bbce :=_gbec .Date ();_bad ,_cged :=int (_gcaab ),int (_fgd );var _fafe ,_eefa float64 ;switch _ddcd {case 0:if _gecc ==31{_gecc --;};if _gecc ==30&&_bbce ==31{_bbce --;}else if _efc :=_gdc (_afb );_bad ==2&&((_efc &&_gecc ==29)||(!_efc &&_gecc ==28)){_gecc =30;if _gade :=_gdc (_cgb );_cged ==2&&((_gade &&_bbce ==29)||(!_gade &&_bbce ==28)){_bbce =30;};};_fafe =float64 ((_cgb -_afb )*360+(_cged -_bad )*30+(_bbce -_gecc ));_eefa =360;case 1:_fafe =_ccf -_bccc ;_ccfc :=_afb !=_cgb ;if _ccfc &&(_cgb !=_afb +1||_bad < _cged ||(_bad ==_cged &&_gecc < _bbce )){_bea :=0;for _bfd :=_afb ;_bfd <=_cgb ;_bfd ++{_bea +=_dbfe (_bfd ,1);};_eefa =float64 (_bea )/float64 (_cgb -_afb +1);}else {if !_ccfc &&_gdc (_afb ){_eefa =366;}else {if _ccfc &&((_gdc (_afb )&&(_bad < 2||(_bad ==2&&_gecc <=29)))||(_gdc (_cgb )&&(_cged > 2||(_cged ==2&&_bbce ==29)))){_eefa =366;}else {_eefa =365;};};};case 2:_fafe =_ccf -_bccc ;_eefa =360;case 3:_fafe =_ccf -_bccc ;_eefa =365;case 4:if _gecc ==31{_gecc --;};if _bbce ==31{_bbce --;};_fafe =float64 ((_cgb -_afb )*360+(_cged -_bad )*30+(_bbce -_gecc ));_eefa =360;default:return 0,MakeErrorResultType (ErrorTypeNum ,"\u0049\u006e\u0063\u006fr\u0072\u0065\u0063\u0074\u0020\u0062\u0061\u0073\u0069\u0073 \u0066o\u0072\u0020\u0059\u0065\u0061\u0072\u0046r\u0061\u0063");};return _fafe /_eefa ,_ega ;};var _dcdfb =[...]string {"\u0024\u0065\u006e\u0064","\u0065\u0072\u0072o\u0072","\u0024\u0075\u006e\u006b","t\u006fk\u0065\u006e\u0048\u006f\u0072\u0069\u007a\u006fn\u0074\u0061\u006c\u0052an\u0067\u0065","\u0074o\u006be\u006e\u0056\u0065\u0072\u0074i\u0063\u0061l\u0052\u0061\u006e\u0067\u0065","\u0074\u006f\u006b\u0065\u006e\u0052\u0065\u0073\u0065\u0072\u0076\u0065d\u004e\u0061\u006d\u0065","\u0074\u006f\u006be\u006e\u0044\u0044\u0045\u0043\u0061\u006c\u006c","\u0074\u006f\u006b\u0065\u006e\u004c\u0065\u0078\u0045\u0072\u0072\u006f\u0072","\u0074o\u006be\u006e\u004e\u0061\u006d\u0065\u0064\u0052\u0061\u006e\u0067\u0065","\u0074o\u006b\u0065\u006e\u0042\u006f\u006fl","t\u006f\u006b\u0065\u006e\u004e\u0075\u006d\u0062\u0065\u0072","t\u006f\u006b\u0065\u006e\u0053\u0074\u0072\u0069\u006e\u0067","\u0074\u006f\u006b\u0065\u006e\u0045\u0072\u0072\u006f\u0072","\u0074\u006f\u006b\u0065\u006e\u0045\u0072\u0072\u006f\u0072\u0052\u0065\u0066","\u0074\u006f\u006b\u0065\u006e\u0053\u0068\u0065\u0065\u0074","\u0074o\u006b\u0065\u006e\u0043\u0065\u006cl","t\u006fk\u0065\u006e\u0046\u0075\u006e\u0063\u0074\u0069o\u006e\u0042\u0075\u0069lt\u0069\u006e","t\u006f\u006b\u0065\u006e\u004c\u0042\u0072\u0061\u0063\u0065","t\u006f\u006b\u0065\u006e\u0052\u0042\u0072\u0061\u0063\u0065","t\u006f\u006b\u0065\u006e\u004c\u0050\u0061\u0072\u0065\u006e","t\u006f\u006b\u0065\u006e\u0052\u0050\u0061\u0072\u0065\u006e","\u0074o\u006b\u0065\u006e\u0050\u006c\u0075s","\u0074\u006f\u006b\u0065\u006e\u004d\u0069\u006e\u0075\u0073","\u0074o\u006b\u0065\u006e\u004d\u0075\u006ct","\u0074\u006f\u006b\u0065\u006e\u0044\u0069\u0076","\u0074\u006f\u006b\u0065\u006e\u0045\u0078\u0070","\u0074o\u006b\u0065\u006e\u0045\u0051","\u0074o\u006b\u0065\u006e\u004c\u0054","\u0074o\u006b\u0065\u006e\u0047\u0054","\u0074\u006f\u006b\u0065\u006e\u004c\u0045\u0051","\u0074\u006f\u006b\u0065\u006e\u0047\u0045\u0051","\u0074o\u006b\u0065\u006e\u004e\u0045","\u0074\u006f\u006b\u0065\u006e\u0043\u006f\u006c\u006f\u006e","\u0074\u006f\u006b\u0065\u006e\u0043\u006f\u006d\u006d\u0061","\u0074\u006f\u006b\u0065\u006e\u0041\u006d\u0070\u0065r\u0073\u0061\u006e\u0064","\u0074o\u006b\u0065\u006e\u0053\u0065\u006di"};var _edcaa =[...]int {1};const _eca ="\u0028\u0028\u005b\u0030\u002d\u0039\u005d\u0029\u002b\u0029\u003a\u0028\u0028\u005b\u0030-\u0039]\u0029\u002b\u0029\u0028\u0020\u0028\u0061\u006d\u007c\u0070\u006d\u0029\u0029\u003f";

// String returns an empty string for Error.
func (_cbgdf Error )String ()string {return ""};func init (){_dabfg =_df .New (_df .NewSource (_f .Now ().UnixNano ()));RegisterFunction ("\u0041\u0042\u0053",_bdff ("\u0041\u0053\u0049\u004e",_ea .Abs ));RegisterFunction ("\u0041\u0043\u004f\u0053",_bdff ("\u0041\u0053\u0049\u004e",_ea .Acos ));RegisterFunction ("\u0041\u0043\u004fS\u0048",_bdff ("\u0041\u0053\u0049\u004e",_ea .Acosh ));RegisterFunction ("\u005f\u0078\u006c\u0066\u006e\u002e\u0041\u0043\u004f\u0054",_bdff ("\u0041\u0043\u004f\u0054",func (_ffe float64 )float64 {return _ea .Pi /2-_ea .Atan (_ffe )}));RegisterFunction ("_\u0078\u006c\u0066\u006e\u002e\u0041\u0043\u004f\u0054\u0048",_bdff ("\u0041\u0043\u004fT\u0048",func (_acfd float64 )float64 {return _ea .Atanh (1/_acfd )}));RegisterFunction ("\u005f\u0078\u006cf\u006e\u002e\u0041\u0052\u0041\u0042\u0049\u0043",Arabic );RegisterFunction ("\u0041\u0053\u0049\u004e",_bdff ("\u0041\u0053\u0049\u004e",_ea .Asin ));RegisterFunction ("\u0041\u0053\u0049N\u0048",_bdff ("\u0041\u0053\u0049N\u0048",_ea .Asinh ));RegisterFunction ("\u0041\u0054\u0041\u004e",_bdff ("\u0041\u0054\u0041\u004e",_ea .Atan ));RegisterFunction ("\u0041\u0054\u0041N\u0048",_bdff ("\u0041\u0054\u0041N\u0048",_ea .Atanh ));RegisterFunction ("\u0041\u0054\u0041N\u0032",Atan2 );RegisterFunction ("\u005f\u0078\u006c\u0066\u006e\u002e\u0042\u0041\u0053\u0045",Base );RegisterFunction ("\u0043E\u0049\u004c\u0049\u004e\u0047",Ceiling );RegisterFunction ("\u005fx\u006cf\u006e\u002e\u0043\u0045\u0049L\u0049\u004eG\u002e\u004d\u0041\u0054\u0048",CeilingMath );RegisterFunction ("_\u0078\u006c\u0066\u006e.C\u0045I\u004c\u0049\u004e\u0047\u002eP\u0052\u0045\u0043\u0049\u0053\u0045",CeilingPrecise );RegisterFunction ("\u0043\u004f\u004d\u0042\u0049\u004e",Combin );RegisterFunction ("\u005f\u0078\u006c\u0066\u006e\u002e\u0043\u004f\u004d\u0042\u0049\u004e\u0041",Combina );RegisterFunction ("\u0043\u004f\u0053",_bdff ("\u0043\u004f\u0053",_ea .Cos ));RegisterFunction ("\u0043\u004f\u0053\u0048",_bdff ("\u0043\u004f\u0053\u0048",_ea .Cosh ));RegisterFunction ("\u005fx\u006c\u0066\u006e\u002e\u0043\u004fT",_afcga ("\u0043\u004f\u0054",_ea .Tan ));RegisterFunction ("\u005f\u0078\u006c\u0066\u006e\u002e\u0043\u004f\u0054\u0048",_afcga ("\u0043\u004f\u0054\u0048",_ea .Tanh ));RegisterFunction ("\u005fx\u006c\u0066\u006e\u002e\u0043\u0053C",_afcga ("\u0043\u0053\u0043",_ea .Sin ));RegisterFunction ("\u005f\u0078\u006c\u0066\u006e\u002e\u0043\u0053\u0043\u0048",_afcga ("\u0043\u0053\u0043",_ea .Sinh ));RegisterFunction ("\u005f\u0078\u006c\u0066\u006e\u002e\u0044\u0045\u0043\u0049\u004d\u0041\u004c",Decimal );RegisterFunction ("\u0044E\u0047\u0052\u0045\u0045\u0053",Degrees );RegisterFunction ("\u0045\u0056\u0045\u004e",Even );RegisterFunction ("\u0045\u0058\u0050",_bdff ("\u0045\u0058\u0050",_ea .Exp ));RegisterFunction ("\u0046\u0041\u0043\u0054",Fact );RegisterFunction ("\u0046\u0041\u0043\u0054\u0044\u004f\u0055\u0042\u004c\u0045",FactDouble );RegisterFunction ("\u0046\u004c\u004fO\u0052",Floor );RegisterFunction ("\u005f\u0078l\u0066\u006e\u002eF\u004c\u004f\u004f\u0052\u002e\u004d\u0041\u0054\u0048",FloorMath );RegisterFunction ("\u005f\u0078\u006c\u0066n.\u0046\u004c\u004f\u004f\u0052\u002e\u0050\u0052\u0045\u0043\u0049\u0053\u0045",FloorPrecise );RegisterFunction ("\u0047\u0043\u0044",GCD );RegisterFunction ("\u0049\u004e\u0054",Int );RegisterFunction ("I\u0053\u004f\u002e\u0043\u0045\u0049\u004c\u0049\u004e\u0047",CeilingPrecise );RegisterFunction ("\u004c\u0043\u004d",LCM );RegisterFunction ("\u004c\u004e",_bdff ("\u004c\u004e",_ea .Log ));RegisterFunction ("\u004c\u004f\u0047",Log );RegisterFunction ("\u004c\u004f\u00471\u0030",_bdff ("\u004c\u004f\u00471\u0030",_ea .Log10 ));RegisterFunction ("\u004dD\u0045\u0054\u0045\u0052\u004d",MDeterm );RegisterFunction ("\u004d\u004f\u0044",Mod );RegisterFunction ("\u004d\u0052\u004f\u0055\u004e\u0044",Mround );RegisterFunction ("M\u0055\u004c\u0054\u0049\u004e\u004f\u004d\u0049\u0041\u004c",Multinomial );RegisterFunction ("_\u0078\u006c\u0066\u006e\u002e\u004d\u0055\u004e\u0049\u0054",Munit );RegisterFunction ("\u004f\u0044\u0044",Odd );RegisterFunction ("\u0050\u0049",Pi );RegisterFunction ("\u0050\u004f\u0057E\u0052",Power );RegisterFunction ("\u0050R\u004f\u0044\u0055\u0043\u0054",Product );RegisterFunction ("\u0051\u0055\u004f\u0054\u0049\u0045\u004e\u0054",Quotient );RegisterFunction ("\u0052A\u0044\u0049\u0041\u004e\u0053",Radians );RegisterFunction ("\u0052\u0041\u004e\u0044",Rand );RegisterFunction ("R\u0041\u004e\u0044\u0042\u0045\u0054\u0057\u0045\u0045\u004e",RandBetween );RegisterFunction ("\u0052\u004f\u004dA\u004e",Roman );RegisterFunction ("\u0052\u004f\u0055N\u0044",Round );RegisterFunction ("\u0052O\u0055\u004e\u0044\u0044\u004f\u0057N",RoundDown );RegisterFunction ("\u0052O\u0055\u004e\u0044\u0055\u0050",RoundUp );RegisterFunction ("\u005fx\u006c\u0066\u006e\u002e\u0053\u0045C",_afcga ("\u0053\u0045\u0043",_ea .Cos ));RegisterFunction ("\u005f\u0078\u006c\u0066\u006e\u002e\u0053\u0045\u0043\u0048",_afcga ("\u0053\u0045\u0043\u0048",_ea .Cosh ));RegisterFunction ("\u0053E\u0052\u0049\u0045\u0053\u0053\u0055M",SeriesSum );RegisterFunction ("\u0053\u0049\u0047\u004e",Sign );RegisterFunction ("\u0053\u0049\u004e",_bdff ("\u0053\u0049\u004e",_ea .Sin ));RegisterFunction ("\u0053\u0049\u004e\u0048",_bdff ("\u0053\u0049\u004e\u0048",_ea .Sinh ));RegisterFunction ("\u0053\u0051\u0052\u0054",_bdff ("\u0053\u0051\u0052\u0054",_ea .Sqrt ));RegisterFunction ("\u0053\u0051\u0052\u0054\u0050\u0049",_bdff ("\u0053\u0051\u0052\u0054\u0050\u0049",func (_cefbb float64 )float64 {return _ea .Sqrt (_cefbb *_ea .Pi )}));RegisterFunction ("\u0053\u0055\u004d",Sum );RegisterFunction ("\u0053\u0055\u004dI\u0046",SumIf );RegisterFunction ("\u0053\u0055\u004d\u0049\u0046\u0053",SumIfs );RegisterFunction ("\u0053\u0055\u004d\u0050\u0052\u004f\u0044\u0055\u0043\u0054",SumProduct );RegisterFunction ("\u0053\u0055\u004dS\u0051",SumSquares );RegisterFunction ("\u0054\u0041\u004e",_bdff ("\u0054\u0041\u004e",_ea .Tan ));RegisterFunction ("\u0054\u0041\u004e\u0048",_bdff ("\u0054\u0041\u004e\u0048",_ea .Tanh ));RegisterFunction ("\u0054\u0052\u0055N\u0043",Trunc );};

// NewBinaryExpr constructs a new binary expression with a given operator.
func NewBinaryExpr (lhs Expression ,op BinOpType ,rhs Expression )Expression {return BinaryExpr {_ced :lhs ,_baa :rhs ,_de :op };};func (_bedef PrefixHorizontalRange )horizontalRangeReference (_bcdg string )string {return _dc .Sprintf ("\u0025\u0073\u0021\u0025\u0064\u003a\u0025\u0064",_bcdg ,_bedef ._adffe ,_bedef ._adead );};

// NewHorizontalRange constructs a new full rows range.
func NewHorizontalRange (v string )Expression {_baaad :=_ce .Split (v ,"\u003a");if len (_baaad )!=2{return nil ;};_fbff ,_ :=_gc .Atoi (_baaad [0]);_gfbc ,_ :=_gc .Atoi (_baaad [1]);if _fbff > _gfbc {_fbff ,_gfbc =_gfbc ,_fbff ;};return HorizontalRange {_dbdff :_fbff ,_aaacf :_gfbc };};

// Tbilleq implements the Excel TBILLEQ function.
func Tbilleq (args []Result )Result {if len (args )!=3{return MakeErrorResult ("\u0054\u0042\u0049\u004c\u004c\u0045\u0051\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065s\u0020t\u0068\u0072\u0065\u0065\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0073");};_gcgf ,_edgbb ,_ggbfc :=_egcf (args [0],args [1],"\u0054B\u0049\u004c\u004c\u0045\u0051");if _ggbfc .Type ==ResultTypeError {return _ggbfc ;};if args [2].Type !=ResultTypeNumber {return MakeErrorResult ("T\u0042\u0049\u004c\u004c\u0045\u0051\u0020\u0072\u0065q\u0075\u0069\u0072\u0065\u0073\u0020\u0064is\u0063\u006f\u0075\u006et\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u006e\u0075mb\u0065\u0072 \u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};_dfgb :=_edgbb -_gcgf ;if _dfgb > 365{return MakeErrorResultType (ErrorTypeNum ,"\u0054\u0042\u0049\u004c\u004c\u0045\u0051\u0020\u0072e\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u006d\u0061\u0074\u0075\u0072\u0069\u0074\u0079\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u006eo\u0074\u0020m\u006f\u0072e\u0020\u0074\u0068\u0061\u006e\u0020\u006f\u006e\u0065\u0020\u0079\u0065\u0061r \u0061\u0066\u0074\u0065\u0072\u0020\u0073\u0065\u0074t\u006c\u0065\u006d\u0065\u006e\u0074");};_agcd :=args [2].ValueNumber ;if _agcd <=0{return MakeErrorResultType (ErrorTypeNum ,"\u0054\u0042\u0049\u004c\u004c\u0045Q\u0020\u0072\u0065q\u0075\u0069\u0072e\u0073\u0020\u0064\u0069\u0073\u0063\u006f\u0075\u006e\u0074 \u0074\u006f\u0020\u0062\u0065 p\u006f\u0073\u0069\u0074\u0069\u0076\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};return MakeNumberResult ((365*_agcd )/(360-_agcd *_dfgb ));};

// Month is an implementation of the Excel MONTH() function.
func Month (args []Result )Result {if len (args )!=1{return MakeErrorResult ("M\u004f\u004e\u0054\u0048\u0020\u0072e\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u006f\u006ee\u0020\u0061\u0072g\u0075m\u0065\u006e\u0074");};_fdfa :=args [0];switch _fdfa .Type {case ResultTypeEmpty :return MakeNumberResult (1);case ResultTypeNumber :_cccc :=_acb (_fdfa .ValueNumber );return MakeNumberResult (float64 (_cccc .Month ()));case ResultTypeString :_afd :=_ce .ToLower (_fdfa .ValueString );if !_dbdf (_afd ){_ ,_ ,_ ,_ ,_bbb ,_gff :=_ecaa (_afd );if _gff .Type ==ResultTypeError {_gff .ErrorMessage ="\u0049\u006ec\u006f\u0072\u0072\u0065\u0063\u0074\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0073\u0020\u0066\u006f\u0072\u0020\u004dON\u0054\u0048";return _gff ;};if _bbb {return MakeNumberResult (1);};};_ ,_dgc ,_ ,_ ,_bdd :=_bec (_afd );if _bdd .Type ==ResultTypeError {return _bdd ;};return MakeNumberResult (float64 (_dgc ));default:return MakeErrorResult ("\u0049\u006e\u0063\u006fr\u0072\u0065\u0063\u0074\u0020\u0061\u0072\u0067\u0075\u006de\u006et\u0020\u0066\u006f\u0072\u0020\u004d\u004fN\u0054\u0048");};};func (_dafgc *Lexer )nextRaw ()*node {for len (_dafgc ._gbebg )!=0{_agae :=<-_dafgc ._gbebg [len (_dafgc ._gbebg )-1];if _agae !=nil {return _agae ;};_dafgc ._gbebg =_dafgc ._gbebg [0:len (_dafgc ._gbebg )-1];};return <-_dafgc ._cbcbf ;};const _bccee =57365;const _fedfb =57361;

// Dollarde implements the Excel DOLLARDE function.
func Dollarde (args []Result )Result {_cefa ,_beg ,_eaec :=_cegc (args ,"\u0044\u004f\u004c\u004c\u0041\u0052\u0044\u0045");if _eaec .Type ==ResultTypeError {return _eaec ;};if _beg < 1{return MakeErrorResultType (ErrorTypeDivideByZero ,"\u0044\u004f\u004c\u004c\u0041\u0052\u0044\u0045\u0020\u0072\u0065q\u0075\u0069\u0072\u0065\u0073\u0020\u0066\u0072a\u0063t\u0069\u006f\u006e\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u0065\u0071\u0075\u0061\u006c\u0020\u006f\u0072 \u006d\u006f\u0072\u0065\u0020\u0074\u0068\u0061\u006e\u0020\u0031");};if _cefa ==0{return MakeNumberResult (0);};_eafd :=_cefa < 0;if _eafd {_cefa =-_cefa ;};_abb :=args [0].Value ();_ggf :=_ce .Split (_abb ,"\u002e");_ebgd :=float64 (int (_cefa ));_bbag :=_ggf [1];_abf :=len (_bbag );_ebbg :=int (_ea .Log10 (_beg ))+1;_dgbg :=float64 (_ebbg -_abf );_dcffb ,_ffa :=_gc .ParseFloat (_bbag ,64);if _ffa !=nil {return MakeErrorResult ("I\u006e\u0063\u006f\u0072\u0072\u0065\u0063\u0074\u0020\u0066\u0072\u0061\u0063\u0074\u0069\u006f\u006e\u0020a\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0020\u0066\u006fr \u0044\u004f\u004cL\u0041R\u0044\u0045");};_dcffb *=_ea .Pow (10,_dgbg );_cddd :=_ebgd +_dcffb /_beg ;if _eafd {_cddd =-_cddd ;};return MakeNumberResult (_cddd );};

// Oddlprice implements the Excel ODDLPRICE function.
func Oddlprice (args []Result )Result {if len (args )!=8&&len (args )!=9{return MakeErrorResult ("\u004f\u0044\u0044L\u0050\u0052\u0049\u0043\u0045\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0065\u0069\u0067\u0068\u0074\u0020\u006f\u0072\u0020\u006e\u0069\u006e\u0065\u0020a\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0073");};_cadf ,_abcb ,_bffg :=_egcf (args [0],args [1],"\u004fD\u0044\u004c\u0050\u0052\u0049\u0043E");if _bffg .Type ==ResultTypeError {return _bffg ;};_dbfgc ,_bffg :=_gagf (args [2],"\u0069\u0073\u0073\u0075\u0065\u0020\u0064\u0061\u0074\u0065","\u004fD\u0044\u004c\u0050\u0052\u0049\u0043E");if _bffg .Type ==ResultTypeError {return _bffg ;};if _dbfgc >=_cadf {return MakeErrorResultType (ErrorTypeNum ,"\u004c\u0061\u0073\u0074\u0020i\u006e\u0074\u0065\u0072\u0065\u0073\u0074\u0020\u0064\u0061\u0074\u0065\u0020s\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0062\u0065\u0066\u006f\u0072\u0065\u0020\u0073\u0065\u0074\u0074\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u0064\u0061\u0074e");};_efbc :=args [3];if _efbc .Type !=ResultTypeNumber {return MakeErrorResult ("\u004f\u0044\u0044\u004c\u0050\u0052\u0049\u0043\u0045\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0072\u0061\u0074\u0065\u0020o\u0066\u0020\u0074\u0079\u0070e\u0020\u006eu\u006d\u0062\u0065\u0072");};_bfg :=_efbc .ValueNumber ;if _bfg < 0{return MakeErrorResultType (ErrorTypeNum ,"R\u0061\u0074\u0065\u0020\u0073\u0068o\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u006e\u006fn\u0020\u006e\u0065g\u0061t\u0069\u0076\u0065");};_fdcd :=args [4];if _fdcd .Type !=ResultTypeNumber {return MakeErrorResult ("\u004f\u0044\u0044\u004c\u0050\u0052\u0049\u0043\u0045\u0020\u0072\u0065\u0071u\u0069\u0072\u0065\u0073\u0020\u0079i\u0065\u006c\u0064\u0020\u006f\u0066\u0020\u0074\u0079\u0070\u0065\u0020\u006eu\u006d\u0062\u0065\u0072");};_dcaa :=_fdcd .ValueNumber ;if _dcaa < 0{return MakeErrorResultType (ErrorTypeNum ,"\u0059\u0069\u0065\u006cd\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065 \u006eo\u006e\u0020\u006e\u0065\u0067\u0061\u0074i\u0076\u0065");};_aegd :=args [5];if _aegd .Type !=ResultTypeNumber {return MakeErrorResult ("\u004fD\u0044\u004cP\u0052\u0049\u0043\u0045 \u0072\u0065\u0071u\u0069\u0072\u0065\u0073\u0020\u0072\u0065\u0064\u0065mp\u0074\u0069\u006fn\u0020\u006ff\u0020\u0074\u0079\u0070\u0065\u0020n\u0075\u006db\u0065\u0072");};_ccbe :=_aegd .ValueNumber ;if _ccbe < 0{return MakeErrorResultType (ErrorTypeNum ,"\u0059\u0069\u0065\u006cd\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065 \u006eo\u006e\u0020\u006e\u0065\u0067\u0061\u0074i\u0076\u0065");};_eecb :=args [6];if _eecb .Type !=ResultTypeNumber {return MakeErrorResult ("\u004f\u0044\u0044\u004c\u0050\u0052\u0049C\u0045\u0020\u0072e\u0071\u0075\u0069\u0072e\u0073\u0020\u0066\u0072\u0065\u0071\u0075\u0065\u006e\u0063\u0079\u0020\u006f\u0066\u0020\u0074\u0079\u0070\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072");};_bbff :=float64 (int (_eecb .ValueNumber ));if !_cad (_bbff ){return MakeErrorResultType (ErrorTypeNum ,"\u0049n\u0063\u006f\u0072\u0072e\u0063\u0074\u0020\u0066\u0072e\u0071u\u0065n\u0063\u0065\u0020\u0076\u0061\u006c\u0075e");};_ffdda :=0;if len (args )==8&&args [7].Type !=ResultTypeEmpty {_degffa :=args [7];if _degffa .Type !=ResultTypeNumber {return MakeErrorResult ("\u004f\u0044\u0044\u004c\u0050\u0052\u0049\u0043\u0045\u0020\u0072\u0065\u0071u\u0069\u0072\u0065\u0073\u0020\u0062a\u0073\u0069\u0073\u0020\u006f\u0066\u0020\u0074\u0079\u0070\u0065\u0020\u006eu\u006d\u0062\u0065\u0072");};_ffdda =int (_degffa .ValueNumber );if !_aaac (_ffdda ){return MakeErrorResultType (ErrorTypeNum ,"I\u006e\u0063\u006f\u0072\u0072\u0065c\u0074\u0020\u0062\u0061\u0073\u0069s\u0020\u0076\u0061\u006c\u0075\u0065\u0020f\u006f\u0072\u0020\u004f\u0044\u0044\u004c\u0050\u0052\u0049C\u0045");};};_gdcf ,_bffg :=_eaee (_dbfgc ,_abcb ,_ffdda );if _bffg .Type ==ResultTypeError {return _bffg ;};_gdcf *=_bbff ;_efee ,_bffg :=_eaee (_cadf ,_abcb ,_ffdda );if _bffg .Type ==ResultTypeError {return _bffg ;};_efee *=_bbff ;_geac ,_bffg :=_eaee (_dbfgc ,_cadf ,_ffdda );if _bffg .Type ==ResultTypeError {return _bffg ;};_geac *=_bbff ;_abcc :=_ccbe +_gdcf *100*_bfg /_bbff ;_abcc /=_efee *_dcaa /_bbff +1;_abcc -=_geac *100*_bfg /_bbff ;return MakeNumberResult (_abcc );};

// Eval evaluates and returns the result of a Negate expression.
func (_dacd Negate )Eval (ctx Context ,ev Evaluator )Result {_gaee :=_dacd ._eaaad .Eval (ctx ,ev );if _gaee .Type ==ResultTypeNumber {return MakeNumberResult (-_gaee .ValueNumber );};return MakeErrorResult ("\u004e\u0045\u0047A\u0054\u0045\u0020\u0065x\u0070\u0065\u0063\u0074\u0065\u0064\u0020n\u0075\u006d\u0062\u0065\u0072\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};func _bcg (_bebf ,_accc ,_gagdf int )int {if _bebf > _accc {return 0;};if _cdea (_gagdf ){return (_accc -_bebf +1)*360;};_fcba :=0;for _defdd :=_bebf ;_defdd <=_accc ;_defdd ++{_cbf :=365;if _gdc (_defdd ){_cbf =366;};_fcba +=_cbf ;};return _fcba ;};const (ResultTypeUnknown ResultType =iota ;ResultTypeNumber ;ResultTypeString ;ResultTypeList ;ResultTypeArray ;ResultTypeError ;ResultTypeEmpty ;);func _fdaaa (_eecg Result ,_bdffd *criteriaParsed )bool {if _eecg .IsBoolean {return false ;};_eaab :=_eecg .Type ;if _bdffd ._ebabc {return _eaab ==ResultTypeNumber &&_eecg .ValueNumber ==_bdffd ._ggdc ;}else if _eaab ==ResultTypeNumber {return _fgga (_eecg .ValueNumber ,_bdffd ._gbbc );};return _cdcefb (_eecg ,_bdffd );};func _affb (_cfdda Result )[][]Result {switch _cfdda .Type {case ResultTypeArray :return _cfdda .ValueArray ;case ResultTypeList :return [][]Result {_cfdda .ValueList };default:return [][]Result {};};};const _cbcf ="\u0049\u006e\u0063\u006f\u0072\u0072\u0065\u0063\u0074\u0020\u0061\u0072\u0067\u0075\u006de\u006et\u0020\u0066\u006f\u0072\u0020\u0054\u0049\u004d\u0045\u0056\u0041\u004c\u0055\u0045";

// Update returns the same object as updating sheet references does not affect SheetPrefixExpr.
func (_cgde SheetPrefixExpr )Update (q *_ff .UpdateQuery )Expression {return _cgde };const _fcgf =57371;

// MakeNumberResult constructs a number result.
func MakeNumberResult (v float64 )Result {if v ==_ea .Copysign (0,-1){v =0;};return Result {Type :ResultTypeNumber ,ValueNumber :v };};func _cbgb (_afac yyLexer ,_gbaca *yySymType )(_aafg ,_bdfe int ){_bdfe =0;_aafg =_afac .Lex (_gbaca );if _aafg <=0{_bdfe =_edcaa [0];goto _bgff ;};if _aafg < len (_edcaa ){_bdfe =_edcaa [_aafg ];goto _bgff ;};if _aafg >=_fedb {if _aafg < _fedb +len (_cefegf ){_bdfe =_cefegf [_aafg -_fedb ];goto _bgff ;};};for _gcaad :=0;_gcaad < len (_deaaa );_gcaad +=2{_bdfe =_deaaa [_gcaad +0];if _bdfe ==_aafg {_bdfe =_deaaa [_gcaad +1];goto _bgff ;};};_bgff :if _bdfe ==0{_bdfe =_cefegf [1];};if _eacgd >=3{_dc .Printf ("l\u0065\u0078\u0020\u0025\u0073\u0028\u0025\u0064\u0029\u000a",_geeac (_bdfe ),uint (_aafg ));};return _aafg ,_bdfe ;};

// SeriesSum implements the Excel SERIESSUM function.
func SeriesSum (args []Result )Result {if len (args )!=4{return MakeErrorResult ("\u0053\u0045\u0052\u0049\u0045\u0053\u0053\u0055\u004d\u0028\u0029\u0020\u0072\u0065\u0071u\u0069r\u0065\u0073\u0020\u0034\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0073");};_caegc :=args [0].AsNumber ();_gcef :=args [1].AsNumber ();_fbaf :=args [2].AsNumber ();_fggda :=args [3].ListValues ();if _caegc .Type !=ResultTypeNumber ||_gcef .Type !=ResultTypeNumber ||_fbaf .Type !=ResultTypeNumber {return MakeErrorResult ("\u0053\u0045\u0052\u0049\u0045\u0053S\u0055\u004d\u0028)\u0020\u0072\u0065q\u0075\u0069\u0072\u0065\u0073\u0020\u0066\u0069\u0072\u0073t\u0020\u0074\u0068\u0072\u0065e \u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0073\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006d\u0065\u0072\u0069\u0063");};_adaae :=float64 (0);for _ffbc ,_fbfb :=range _fggda {_adaae +=_fbfb .ValueNumber *_ea .Pow (_caegc .ValueNumber ,_gcef .ValueNumber +float64 (_ffbc )*_fbaf .ValueNumber );};return MakeNumberResult (_adaae );};var _cfbec ,_ddec ,_abbd ,_dbfcg ,_agbbd ,_effe *_be .Regexp ;func _ecfg (){_ccgdc =_be .MustCompile ("\u005e\u0030\u002b\u0024");_gagg =_be .MustCompile ("\u005e\u0028\u0028\u0023|0\u0029\u002b\u002c\u0029\u002b\u0028\u0023\u007c\u0030\u0029\u002b\u0028\u003b\u007c$\u0029");_bddad =_be .MustCompile ("\u005e\u0028\u0023\u007c\u0030\u007c\u002c\u0029\u002a\u005f\u005c\u0029\u003b");_agbfg =_be .MustCompile ("\u005e\u0030\u002b\u005c\u002e\u0028\u0030\u002b\u0029\u0024");_fgfc =_be .MustCompile ("\u005e\u0028\u0028\u0023\u007c\u0030\u0029\u002b\u002c\u0029+\u0028\u0023\u007c\u0030\u0029\u002b\u005c.\u0028\u0030\u002b\u0029\u002e\u002a\u0028\u003b\u007c\u0024\u0029");_gagb =_be .MustCompile ("^\u0028\u005f\u007c\u002d\u007c\u0020)\u002b\u005c\u002a\u0020\u0023\u002b\u002c\u0023\u002b0\u005c\u002e\u00280\u002b)\u002e\u002a\u003b");_eggb =_be .MustCompile ("\u005e\u0028\u0028\u0023\u007c\u0030)\u002b\u002c\u0029\u002b\u0028\u0023\u007c\u0030\u0029\u002b\u005c\u002e\u0028(\u0023\u007c\u0030\u0029\u002b\u0029\u005f\\\u0029\u002e\u002a\u003b");_ecfc =_be .MustCompile ("\u005e\u0028\u0023\u007c0)\u002b\u005c\u002e\u0028\u0028\u0023\u007c\u0030\u0029\u002b\u0029\u0025\u0024");_fcbd =_be .MustCompile ("\u005c\u005b\u005c$\u005c\u0024\u002d\u002e+\u005c\u005d\u0028\u005c\u002a\u0020\u0029?\u0028\u0023\u007c\u0030\u0029\u002b\u002c\u0028\u0023\u007c\u0030\u0029\u002b\u003b");_bgef =_be .MustCompile ("\u005c[\u005c\u0024\\\u0024\u002d\u002e+\u005c\u005d\u0028\u005c\u002a\u0020\u0029?\u0028\u0023\u007c\u0030\u0029\u002b,\u0028\u0023\u007c\u0030\u0029\u002b\u005c\u002e\u0028\u0028\u0023|\u0030\u007c\u002d\u0029\u002b\u0029\u002e\u002a\u003b");_abgbd =_be .MustCompile ("\u005e(\u0028\u0023|\u0030\u0029\u002b,\u0029\u002b\u0028\u0023\u007c\u0030\u0029+\u0028\u005c\u002e\u0028\u0028\u0023|\u0030\u007c\u002d\u0029\u002b\u0029\u0029\u003f\u002e\u002b\u005c[\u005c\u0024\u002e\u002b\u005c\u005d\u002e\u002a\u003b");_fafc =_be .MustCompile ("\u005e\u004d\u002b(\u002f\u007c\u0020\u007c\u002c\u007c\u0022\u007c"+_egaa +_egaa +"\u0029\u002b\u0044\u002b\u0028\u002f\u007c\u0020\u007c\u002c\u007c\u0022\u007c"+_egaa +_egaa +"\u0029\u002b\u0059+\u0024");_fdaa =_be .MustCompile ("\u005e\u0044\u002b\u0028\u002f\u007c\u0020\u007c\u005c\u002e\u007c\u0022\u007c"+_egaa +_egaa +"\u0029\u002b\u004d\u002b\u0028\u002f\u007c\u0020\u007c\\\u002e\u007c\u0022\u007c"+_egaa +_egaa +"\u0029\u002b\u0059+\u0024");_aeaaba =_be .MustCompile ("\u005e\u0028\u0023|\u0030\u0029\u002b\u005c.\u0028\u0028\u0023\u007c\u0030\u0029\u002a)\u0045\u005c\u002b\u0028\u0023\u007c\u0030\u0029\u002b\u0028\u003b\u007c\u0024\u0029");_cega =_be .MustCompile ("\u005e.\u002a\u005f\u005c\u0029\u002e\u002a;");};

// PrefixRangeExpr is a range expression that when evaluated returns a list of Results from a given sheet like Sheet1!A1:B4 (all cells from A1 to B4 from a sheet 'Sheet1').
type PrefixRangeExpr struct{_fcagg ,_cfddb ,_befed Expression };

// Reference returns a string reference value to an expression with prefix.
func (_aebff PrefixExpr )Reference (ctx Context ,ev Evaluator )Reference {_egdcf :=_aebff ._bdga .Reference (ctx ,ev );_ddagb :=_aebff ._bebg .Reference (ctx ,ev );if _egdcf .Type ==ReferenceTypeSheet &&_ddagb .Type ==ReferenceTypeCell {return Reference {Type :ReferenceTypeCell ,Value :_egdcf .Value +"\u0021"+_ddagb .Value };};return ReferenceInvalid ;};func _bbga (_badc ,_ccad float64 ,_dgdb ,_fgcc int )float64 {_ggab :=_acb (_badc );_dbfg :=_acb (_ccad );if _fgcc ==1{_bbeb :=_abdg (_ggab ,_dbfg ,_dgdb ,1);_fceag :=_bbeb .AddDate (0,12/_dgdb ,0);return _fgdc (_bbeb ,_fceag ,_fgcc );};return float64 (_dbfe (0,_fgcc ))/float64 (_dgdb );};

// IsLogical is an implementation of the Excel ISLOGICAL() function.
func IsLogical (ctx Context ,ev Evaluator ,args []Result )Result {if len (args )!=1{return MakeErrorResult ("\u0049\u0053\u004c\u004f\u0047\u0049\u0043A\u004c\u0020\u0072e\u0071\u0075\u0069\u0072e\u0073\u0020\u0061\u0020\u0073\u0069\u006e\u0067\u006c\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};_afaee :=args [0].Ref ;if _afaee .Type !=ReferenceTypeCell {return MakeErrorResult ("I\u0053\u004c\u004f\u0047\u0049\u0043\u0041\u004c\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0074\u0068\u0065\u0020\u0066\u0069\u0072\u0073t\u0020a\u0072\u0067\u0075\u006de\u006e\u0074 \u0074\u006f\u0020\u0062\u0065\u0020\u006f\u0066\u0020\u0074\u0079\u0070\u0065\u0020\u0072\u0065\u0066\u0065\u0072\u0065\u006e\u0063\u0065");};return MakeBoolResult (ctx .Cell (_afaee .Value ,ev ).IsBoolean );};var _eeab =[]ri {{1000,"\u004d"},{995,"\u0056\u004d"},{990,"\u0058\u004d"},{950,"\u004c\u004d"},{900,"\u0043\u004d"},{500,"\u0044"},{495,"\u0056\u0044"},{490,"\u0058\u0044"},{450,"\u004c\u0044"},{400,"\u0043\u0044"},{100,"\u0043"},{99,"\u0049\u0043"},{90,"\u0058\u0043"},{50,"\u004c"},{45,"\u0056\u004c"},{40,"\u0058\u004c"},{10,"\u0058"},{9,"\u0049\u0058"},{5,"\u0056"},{4,"\u0049\u0056"},{1,"\u0049"}};

// PrefixVerticalRange is a range expression that when evaluated returns a list of Results from references like Sheet1!AA:IJ (all cells from columns AA to IJ of sheet 'Sheet1').
type PrefixVerticalRange struct{_fcbe Expression ;_acba ,_fcgge string ;};

// Reference returns an invalid reference for String.
func (_caebc String )Reference (ctx Context ,ev Evaluator )Reference {return ReferenceInvalid };var _babcg =map[string ]Function {};var _efff =[...]uint8 {0,20,37,60,78,96};

// Columns implements the Excel COLUMNS function.
func Columns (args []Result )Result {if len (args )< 1{return MakeErrorResult ("\u0043\u004fL\u0055\u004d\u004e\u0053\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u006f\u006e\u0065\u0020\u0061\u0072\u0067\u0075me\u006e\u0074");};_adbd :=args [0];if _adbd .Type !=ResultTypeArray &&_adbd .Type !=ResultTypeList {return MakeErrorResult ("\u0043O\u004c\u0055M\u004e\u0053\u0020r\u0065\u0071\u0075\u0069\u0072\u0065\u0073 \u0066\u0069\u0072\u0073\u0074\u0020a\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0020\u006f\u0066\u0020t\u0079\u0070\u0065\u0020\u0061\u0072\u0072\u0061\u0079");};_befcc :=_adbd .ValueArray ;if len (_befcc )==0{return MakeErrorResult ("\u0043\u004f\u004c\u0055\u004d\u004e\u0053\u0020r\u0065\u0071\u0075ir\u0065\u0073\u0020\u0061\u0072\u0072a\u0079\u0020\u0074\u006f\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0020\u0061\u0074 \u006c\u0065\u0061\u0073\u0074\u0020\u0031\u0020r\u006f\u0077");};return MakeNumberResult (float64 (len (_befcc [0])));};var _deec =[]int {31,28,31,30,31,30,31,31,30,31,30,31};

// Quotient is an implementation of the Excel QUOTIENT function that returns the
// integer portion of division.
func Quotient (args []Result )Result {if len (args )!=2{return MakeErrorResult ("\u0051\u0055\u004f\u0054\u0049E\u004e\u0054\u0028\u0029\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073 \u0074\u0077\u006f\u0020\u006e\u0075\u006d\u0065\u0072\u0069\u0063\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0073");};_faac :=args [0].AsNumber ();_fbba :=args [1].AsNumber ();if _faac .Type !=ResultTypeNumber ||_fbba .Type !=ResultTypeNumber {return MakeErrorResult ("\u0051\u0055\u004f\u0054\u0049E\u004e\u0054\u0028\u0029\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073 \u0074\u0077\u006f\u0020\u006e\u0075\u006d\u0065\u0072\u0069\u0063\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0073");};if _fbba .ValueNumber ==0{return MakeErrorResultType (ErrorTypeDivideByZero ,"\u0051U\u004f\u0054\u0049\u0045N\u0054\u0028\u0029\u0020\u0064i\u0076i\u0064e\u0020\u0062\u0079\u0020\u007a\u0065\u0072o");};return MakeNumberResult (_ea .Trunc (_faac .ValueNumber /_fbba .ValueNumber ));};func (_gggfc HorizontalRange )horizontalRangeReference ()string {return _dc .Sprintf ("\u0025\u0064\u003a%\u0064",_gggfc ._dbdff ,_gggfc ._aaacf );};var _gbfgd =[]ri {{1000,"\u004d"},{999,"\u0049\u004d"},{995,"\u0056\u004d"},{990,"\u0058\u004d"},{950,"\u004c\u004d"},{900,"\u0043\u004d"},{500,"\u0044"},{499,"\u0049\u0044"},{495,"\u0056\u0044"},{490,"\u0058\u0044"},{450,"\u004c\u0044"},{400,"\u0043\u0044"},{100,"\u0043"},{99,"\u0049\u0043"},{90,"\u0058\u0043"},{50,"\u004c"},{45,"\u0056\u004c"},{40,"\u0058\u004c"},{10,"\u0058"},{9,"\u0049\u0058"},{5,"\u0056"},{4,"\u0049\u0056"},{1,"\u0049"}};func _eccf (_egfd ,_bccfb Expression )(Expression ,Expression ,error ){_ecefc ,_befd :=_egfd .(CellRef );if !_befd {return nil ,nil ,_g .New (_dc .Sprintf ("\u0049\u006e\u0063\u006frr\u0065\u0063\u0074\u0020\u0072\u0065\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0020%\u0073",_egfd .String ()));};_daaea ,_befd :=_bccfb .(CellRef );if !_befd {return nil ,nil ,_g .New (_dc .Sprintf ("\u0049\u006e\u0063\u006frr\u0065\u0063\u0074\u0020\u0072\u0065\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0020%\u0073",_bccfb .String ()));};_eeabb ,_ggee :=_bef .ParseCellReference (_ecefc ._cbe );if _ggee !=nil {return nil ,nil ,_ggee ;};_aege ,_dffe :=_bef .ParseCellReference (_daaea ._cbe );if _dffe !=nil {return nil ,nil ,_dffe ;};_deae :=false ;if _eeabb .RowIdx > _aege .RowIdx {_deae =true ;_eeabb .RowIdx ,_aege .RowIdx =_aege .RowIdx ,_eeabb .RowIdx ;};if _eeabb .ColumnIdx > _aege .ColumnIdx {_deae =true ;_eeabb .ColumnIdx ,_aege .ColumnIdx =_aege .ColumnIdx ,_eeabb .ColumnIdx ;_eeabb .Column ,_aege .Column =_aege .Column ,_eeabb .Column ;};if _deae {return NewCellRef (_eeabb .String ()),NewCellRef (_aege .String ()),nil ;};return _egfd ,_bccfb ,nil ;};var _bbgfb =[...]string {};const _ecadg =57362;func _edca (_fffb []Result )[]rangeIndex {_adgg :=[]rangeIndex {};_cebea :=len (_fffb );for _dfecb :=0;_dfecb < _cebea -1;_dfecb +=2{_cgdg :=[]rangeIndex {};_bcebb :=_affb (_fffb [_dfecb ]);_dgfbd :=_ccceg (_fffb [_dfecb +1]);if _dfecb ==0{for _ddcac ,_ggeb :=range _bcebb {for _dgda ,_gace :=range _ggeb {if _fdaaa (_gace ,_dgfbd ){_cgdg =append (_cgdg ,rangeIndex {_ddcac ,_dgda });};};};}else {for _ ,_eccgb :=range _adgg {_geace :=_bcebb [_eccgb ._dgdeb ][_eccgb ._cbcaa ];if _fdaaa (_geace ,_dgfbd ){_cgdg =append (_cgdg ,_eccgb );};};};if len (_cgdg )==0{return []rangeIndex {};};_adgg =_cgdg [:];};return _adgg ;};

// IfError is an implementation of the Excel IFERROR() function. It takes two arguments.
func IfError (args []Result )Result {if len (args )!=2{return MakeErrorResult ("\u0049\u0046\u0045\u0052\u0052\u004f\u0052\u0020\u0072\u0065q\u0075\u0069\u0072\u0065\u0073\u0020\u0074w\u006f\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0073");};if args [0].Type !=ResultTypeError {if args [0].Type ==ResultTypeEmpty {return MakeNumberResult (0);};return args [0];};return args [1];};

// Text is an implementation of the Excel TEXT function.
func Text (args []Result )Result {if len (args )!=2{return MakeErrorResult ("T\u0045\u0058\u0054\u0020\u0072\u0065q\u0075\u0069\u0072\u0065\u0073\u0020\u0074\u0077\u006f \u0061\u0072\u0067u\u006de\u006e\u0074\u0073");};_acddd :=args [0];if _acddd .Type !=ResultTypeNumber &&_acddd .Type !=ResultTypeString &&_acddd .Type !=ResultTypeEmpty {return MakeErrorResult ("\u0054\u0045\u0058\u0054\u0020\u0072\u0065\u0071\u0075\u0069\u0072e\u0073\u0020\u0066\u0069\u0072\u0073\u0074\u0020a\u0072g\u0075\u006d\u0065\u006e\u0074\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u0061\u0020\u006e\u0075\u006d\u0062e\u0072\u0020\u006f\u0072\u0020\u0073\u0074\u0072\u0069\u006e\u0067");};if args [1].Type !=ResultTypeString {return MakeErrorResult ("\u0054E\u0058\u0054 \u0072\u0065\u0071\u0075i\u0072\u0065\u0073 \u0073\u0065\u0063\u006f\u006e\u0064\u0020\u0061\u0072gu\u006d\u0065\u006et\u0020\u0074o\u0020\u0062\u0065\u0020\u0061\u0020s\u0074\u0072i\u006e\u0067");};_gfdg :=args [1].ValueString ;switch _acddd .Type {case ResultTypeNumber :return MakeStringResult (_cc .Number (_acddd .ValueNumber ,_gfdg ));case ResultTypeString :return MakeStringResult (_cc .String (_acddd .ValueString ,_gfdg ));case ResultTypeEmpty :return MakeStringResult (_cc .Number (0,_gfdg ));case ResultTypeArray ,ResultTypeList :return MakeErrorResultType (ErrorTypeSpill ,"\u0054\u0045X\u0054\u0020\u0064\u006f\u0065\u0073\u006e\u0027\u0074\u0020\u0077\u006f\u0072\u006b\u0020\u0077\u0069\u0074\u0068\u0020\u0061\u0072ra\u0079\u0073");default:return MakeErrorResult ("I\u006e\u0063\u006f\u0072\u0072\u0065c\u0074\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006et\u0020\u0066\u006fr\u0020T\u0045\u0058\u0054");};};const _cgbe =57349;

// Time is an implementation of the Excel TIME() function.
func Time (args []Result )Result {if len (args )!=3||args [0].Type !=ResultTypeNumber ||args [1].Type !=ResultTypeNumber ||args [2].Type !=ResultTypeNumber {return MakeErrorResult ("\u0054\u0049ME\u0020\u0072\u0065q\u0075\u0069\u0072\u0065s t\u0068re\u0065\u0020\u006e\u0075\u006d\u0062\u0065r \u0061\u0072\u0067\u0075\u006d\u0065\u006et\u0073");};_dfae :=args [0].ValueNumber ;_dcc :=args [1].ValueNumber ;_gdfc :=args [2].ValueNumber ;_febf :=_bfea (_dfae ,_dcc ,_gdfc );if _febf >=0{return MakeNumberResult (_febf );}else {return MakeErrorResultType (ErrorTypeNum ,"");};};

// ISBLANK is an implementation of the Excel ISBLANK() function.
func IsBlank (args []Result )Result {if len (args )!=1{return MakeErrorResult ("I\u0053\u0042\u004c\u0041\u004e\u004b(\u0029\u0020\u0061\u0063\u0063\u0065p\u0074\u0073\u0020\u0061\u0020\u0073\u0069n\u0067\u006c\u0065\u0020\u0061\u0072\u0067\u0075\u006d\u0065n\u0074");};return MakeBoolResult (args [0].Type ==ResultTypeEmpty );};

// Munit is an implementation of the Excel MUNIT function that returns an
// identity matrix.
func Munit (args []Result )Result {if len (args )!=1{return MakeErrorResult ("\u004d\u0055\u004eIT\u0028\u0029\u0020\u0072\u0065\u0071\u0075\u0069\u0072e\u0073 \u006fn\u0065 \u006e\u0075\u006d\u0065\u0072\u0069\u0063\u0020\u0069\u006e\u0070\u0075\u0074");};_cgfg :=args [0].AsNumber ();if _cgfg .Type !=ResultTypeNumber {return MakeErrorResult ("\u004d\u0055\u004eIT\u0028\u0029\u0020\u0072\u0065\u0071\u0075\u0069\u0072e\u0073 \u006fn\u0065 \u006e\u0075\u006d\u0065\u0072\u0069\u0063\u0020\u0069\u006e\u0070\u0075\u0074");};_fadb :=int (_cgfg .ValueNumber );_eaca :=make ([][]Result ,0,_fadb );for _bdbg :=0;_bdbg < _fadb ;_bdbg ++{_gaggb :=make ([]Result ,_fadb );for _bebd :=0;_bebd < _fadb ;_bebd ++{if _bdbg ==_bebd {_gaggb [_bebd ]=MakeNumberResult (1.0);}else {_gaggb [_bebd ]=MakeNumberResult (0.0);};};_eaca =append (_eaca ,_gaggb );};return MakeArrayResult (_eaca );};func _aaeb (_cfeg ,_gac ,_ebc ,_eccb int )int {if _gac > _ebc {return 0;};if _cdea (_eccb ){return (_ebc -_gac +1)*30;};_dgcc :=0;for _eee :=_gac ;_eee <=_ebc ;_eee ++{_dgcc +=_aeee (_cfeg ,_eee );};return _dgcc ;};

// Eval evaluates and returns the result of the NamedRangeRef reference.
func (_cceced NamedRangeRef )Eval (ctx Context ,ev Evaluator )Result {_cbffc :=ctx .NamedRange (_cceced ._gbdeb );_bgfcb :=_cbffc .Value ;if _cgcb ,_bfddg :=ev .GetFromCache (_bgfcb );_bfddg {return _cgcb ;};_dcaga :=_ce .Split (_bgfcb ,"\u0021");if len (_dcaga )!=2{return MakeErrorResult (_dc .Sprintf ("\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u006e\u0061\u006de\u0064 \u0072\u0061\u006e\u0067\u0065\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u0025\u0073",_bgfcb ));};_gded :=ctx .Sheet (_dcaga [0]);_gfcbg :=_ce .Split (_dcaga [1],"\u003a");switch len (_gfcbg ){case 1:_acae :=ev .Eval (_gded ,_gfcbg [0]);ev .SetCache (_bgfcb ,_acae );return _acae ;case 2:_fdad :=_fceb (_gded ,ev ,_gfcbg [0],_gfcbg [1]);ev .SetCache (_bgfcb ,_fdad );return _fdad ;};return MakeErrorResult (_dc .Sprintf ("\u0075\u006es\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0072\u0065\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0020\u0074\u0079\u0070e \u0025\u0073",_cbffc .Type ));};func (_efcca ReferenceType )String ()string {if _efcca >=ReferenceType (len (_efff )-1){return _dc .Sprintf ("\u0052\u0065\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0054\u0079\u0070e\u0028\u0025\u0064\u0029",_efcca );};return _fded [_efff [_efcca ]:_efff [_efcca +1]];};func (_eae *evCache )GetFromCache (key string )(Result ,bool ){_eae ._ebde .Lock ();_fdbb ,_abc :=_eae ._beb [key ];_eae ._ebde .Unlock ();return _fdbb ,_abc ;};func (_bbd *evCache )SetCache (key string ,value Result ){_bbd ._ebde .Lock ();_bbd ._beb [key ]=value ;_bbd ._ebde .Unlock ();};

// String returns a string representation of a vertical range with prefix.
func (_gccfb PrefixVerticalRange )String ()string {return _dc .Sprintf ("\u0025\u0073\u0021\u0025\u0073\u003a\u0025\u0073",_gccfb ._fcbe .String (),_gccfb ._acba ,_gccfb ._fcgge );};

// Mod is an implementation of the Excel MOD function which returns the
// remainder after division. It requires two numeric argumnts.
func Mod (args []Result )Result {if len (args )!=2{return MakeErrorResult ("\u004d\u004fD(\u0029\u0020\u0072e\u0071\u0075\u0069\u0072es \u0074wo\u0020\u006e\u0075\u006d\u0065\u0072\u0069c \u0061\u0072\u0067\u0075\u006d\u0065\u006et\u0073");};_bedge :=args [0].AsNumber ();_bgcf :=args [1].AsNumber ();if _bedge .Type !=ResultTypeNumber ||_bgcf .Type !=ResultTypeNumber {return MakeErrorResult ("\u004d\u004fD(\u0029\u0020\u0072e\u0071\u0075\u0069\u0072es \u0074wo\u0020\u006e\u0075\u006d\u0065\u0072\u0069c \u0061\u0072\u0067\u0075\u006d\u0065\u006et\u0073");};if _bgcf .ValueNumber ==0{return MakeErrorResultType (ErrorTypeDivideByZero ,"M\u004fD\u0028\u0029\u0020\u0064\u0069\u0076\u0069\u0064e\u0020\u0062\u0079\u0020ze\u0072\u006f");};_fabb ,_afgd :=_ea .Modf (_bedge .ValueNumber /_bgcf .ValueNumber );if _afgd < 0{_fabb --;};return MakeNumberResult (_bedge .ValueNumber -_bgcf .ValueNumber *_fabb );};

// Radians is an implementation of the Excel function RADIANS() that converts
// degrees to radians.
func Radians (args []Result )Result {if len (args )!=1{return MakeErrorResult ("\u0052\u0041\u0044I\u0041\u004e\u0053\u0028)\u0020\u0072\u0065\u0071\u0075\u0069\u0072e\u0073\u0020\u006f\u006e\u0065\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};_degfg :=args [0].AsNumber ();if _degfg .Type !=ResultTypeNumber {return MakeErrorResult ("\u0052\u0041\u0044IA\u004e\u0053\u0028\u0029\u0020\u0072\u0065\u0071\u0075i\u0072e\u0073 \u006eu\u006d\u0062\u0065\u0072\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};return MakeNumberResult (_ea .Pi /180.0*_degfg .ValueNumber );};

// FloorPrecise is an implementation of the FlOOR.PRECISE function.
func FloorPrecise (args []Result )Result {if len (args )==0{return MakeErrorResult ("\u0046\u004cO\u004f\u0052\u002e\u0050\u0052\u0045\u0043\u0049\u0053\u0045\u0028\u0029\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0061\u0074\u0020\u006c\u0065\u0061\u0073\u0074\u0020\u006f\u006e\u0065\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};if len (args )> 2{return MakeErrorResult ("\u0046L\u004f\u004fR\u002e\u0050\u0052\u0045C\u0049\u0053\u0045(\u0029\u0020\u0061\u006c\u006c\u006f\u0077\u0073\u0020at\u0020\u006d\u006fs\u0074\u0020t\u0077\u006f\u0020\u0061\u0072\u0067u\u006d\u0065n\u0074\u0073");};_cbbb :=args [0].AsNumber ();if _cbbb .Type !=ResultTypeNumber {return MakeErrorResult ("\u0066\u0069\u0072\u0073\u0074\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0020\u0074\u006f\u0020F\u004c\u004f\u004f\u0052\u002e\u0050\u0052E\u0043\u0049\u0053\u0045\u0028\u0029\u0020\u006d\u0075\u0073\u0074 \u0062\u0065\u0020\u0061\u0020\u006e\u0075\u006d\u0062\u0065\u0072");};_eggdb :=float64 (1);if _cbbb .ValueNumber < 0{_eggdb =-1;};if len (args )> 1{_aeaf :=args [1].AsNumber ();if _aeaf .Type !=ResultTypeNumber {return MakeErrorResult ("\u0073\u0065\u0063\u006f\u006ed\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0020\u0074\u006f\u0020F\u004c\u004f\u004f\u0052\u002e\u0050\u0052\u0045\u0043\u0049\u0053\u0045\u0028\u0029\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020\u0061\u0020\u006e\u0075\u006d\u0062\u0065r");};_eggdb =_ea .Abs (_aeaf .ValueNumber );};if len (args )==1{return MakeNumberResult (_ea .Floor (_cbbb .ValueNumber ));};_ffdga :=_cbbb .ValueNumber ;_ffdga ,_bcfb :=_ea .Modf (_ffdga /_eggdb );if _bcfb !=0{if _cbbb .ValueNumber < 0{_ffdga --;};};return MakeNumberResult (_ffdga *_eggdb );};func _bebb (_dbab ,_dcgag Reference )string {return _dc .Sprintf ("\u0025\u0073\u003a%\u0073",_dbab .Value ,_dcgag .Value );};

// Lower is an implementation of the Excel LOWER function that returns a lower
// case version of a string.
func Lower (args []Result )Result {if len (args )!=1{return MakeErrorResult ("\u004c\u004f\u0057\u0045\u0052\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065s\u0020\u0061\u0020\u0073\u0069\u006eg\u006c\u0065\u0020\u0073\u0074\u0072\u0069\u006e\u0067\u0020\u0061\u0072\u0067u\u006d\u0065\u006e\u0074");};_ebgde :=args [0];switch _ebgde .Type {case ResultTypeError :return _ebgde ;case ResultTypeNumber ,ResultTypeString :return _gfcec (args [0]);case ResultTypeList :_dabg :=_ebgde .ValueList ;_cdfga :=[]Result {};for _ ,_ecee :=range _dabg {_gaef :=_gfcec (_ecee );if _gaef .Type ==ResultTypeError {return _gaef ;};_cdfga =append (_cdfga ,_gaef );};return MakeListResult (_cdfga );case ResultTypeArray :_bdafg :=_ebgde .ValueArray ;_cefc :=[][]Result {};for _ ,_ebfge :=range _bdafg {_ecbg :=[]Result {};for _ ,_fbfd :=range _ebfge {_bgbga :=_gfcec (_fbfd );if _bgbga .Type ==ResultTypeError {return _bgbga ;};_ecbg =append (_ecbg ,_bgbga );};_cefc =append (_cefc ,_ecbg );};return MakeArrayResult (_cefc );default:return MakeErrorResult ("\u0049\u006e\u0063\u006fr\u0072\u0065\u0063\u0074\u0020\u0061\u0072\u0067\u0075\u006de\u006et\u0020\u0066\u006f\u0072\u0020\u004c\u004fW\u0045\u0052");};};

// GetEpoch returns a null time object for the invalid reference context.
func (_ffgbe *ivr )GetEpoch ()_f .Time {return _f .Time {}};

// Or is an implementation of the Excel OR() function and takes a variable
// number of arguments.
func Or (args []Result )Result {if len (args )==0{return MakeErrorResult ("\u004f\u0052\u0020\u0072\u0065\u0071u\u0069\u0072\u0065\u0073\u0020\u0061\u0074\u0020\u006c\u0065\u0061\u0073\u0074 \u006f\u006e\u0065\u0020\u0061\u0072\u0067u\u006d\u0065\u006e\u0074");};_gcb :=false ;for _ ,_addg :=range args {switch _addg .Type {case ResultTypeList ,ResultTypeArray :_dcffd :=Or (_addg .ListValues ());if _dcffd .Type ==ResultTypeError {return _dcffd ;};if _dcffd .ValueNumber !=0{_gcb =true ;};case ResultTypeNumber :if _addg .ValueNumber !=0{_gcb =true ;};case ResultTypeString :return MakeErrorResult ("\u004f\u0052 \u0064\u006f\u0065\u0073\u006e\u0027\u0074\u0020\u006f\u0070\u0065\u0072\u0061\u0074\u0065\u0020\u006f\u006e\u0020\u0073\u0074\u0072in\u0067\u0073");case ResultTypeError :return _addg ;default:return MakeErrorResult ("\u0075\u006e\u0073u\u0070\u0070\u006f\u0072t\u0065\u0064\u0020\u0061\u0072\u0067\u0075m\u0065\u006e\u0074\u0020\u0074\u0079\u0070\u0065\u0020\u0069\u006e\u0020\u004f\u0052");};};return MakeBoolResult (_gcb );};

// CountBlank implements the COUNTBLANK function.
func CountBlank (args []Result )Result {if len (args )==0{return MakeErrorResult ("\u0043\u004f\u0055N\u0054\u0042\u004c\u0041N\u004b\u0020\u0072\u0065\u0071\u0075\u0069r\u0065\u0073\u0020\u0061\u006e\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};return MakeNumberResult (_adeb (args ,_fegc ));};

// NewError constructs a new error expression from a string.
func NewError (v string )Expression {return Error {_bcc :v }};func init (){_fcbdb ();RegisterFunction ("\u0041V\u0045\u0052\u0041\u0047\u0045",Average );RegisterFunction ("\u0041\u0056\u0045\u0052\u0041\u0047\u0045\u0041",Averagea );RegisterFunction ("\u0043\u004f\u0055N\u0054",Count );RegisterFunction ("\u0043\u004f\u0055\u004e\u0054\u0041",Counta );RegisterFunction ("\u0043O\u0055\u004e\u0054\u0049\u0046",CountIf );RegisterFunction ("\u0043\u004f\u0055\u004e\u0054\u0049\u0046\u0053",CountIfs );RegisterFunction ("\u0043\u004f\u0055\u004e\u0054\u0042\u004c\u0041\u004e\u004b",CountBlank );RegisterFunction ("\u004d\u0041\u0058",Max );RegisterFunction ("\u004d\u0041\u0058\u0041",MaxA );RegisterFunction ("\u004d\u0041\u0058\u0049\u0046\u0053",MaxIfs );RegisterFunction ("\u005f\u0078\u006cf\u006e\u002e\u004d\u0041\u0058\u0049\u0046\u0053",MaxIfs );RegisterFunction ("\u004d\u0045\u0044\u0049\u0041\u004e",Median );RegisterFunction ("\u004d\u0049\u004e",Min );RegisterFunction ("\u004d\u0049\u004e\u0041",MinA );RegisterFunction ("\u004d\u0049\u004e\u0049\u0046\u0053",MinIfs );RegisterFunction ("\u005f\u0078\u006cf\u006e\u002e\u004d\u0049\u004e\u0049\u0046\u0053",MinIfs );};func _ccceg (_gggg Result )*criteriaParsed {_acdab :=_gggg .Type ==ResultTypeNumber ;_baff :=_gggg .ValueNumber ;_cagdf :=_ce .ToLower (_gggg .ValueString );_aeafa :=_eaeg (_cagdf );return &criteriaParsed {_acdab ,_baff ,_cagdf ,_aeafa };};const _fdfbe =57363;

// SupportedFunctions returns a list of supported functions.
func SupportedFunctions ()[]string {_agdb :=[]string {};for _agdgd :=range _babcg {_agdb =append (_agdb ,_agdgd );};for _dbec :=range _bbbbf {_agdb =append (_agdb ,_dbec );};_b .Strings (_agdb );return _agdb ;};

// Concat is an implementation of the Excel CONCAT() and deprecated CONCATENATE() function.
func Concat (args []Result )Result {_gdeb :=_cb .Buffer {};for _ ,_gccfe :=range args {switch _gccfe .Type {case ResultTypeString :_gdeb .WriteString (_gccfe .ValueString );case ResultTypeNumber :var _ggaf string ;if _gccfe .IsBoolean {if _gccfe .ValueNumber ==0{_ggaf ="\u0046\u0041\u004cS\u0045";}else {_ggaf ="\u0054\u0052\u0055\u0045";};}else {_ggaf =_gccfe .AsString ().ValueString ;};_gdeb .WriteString (_ggaf );default:return MakeErrorResult ("\u0043\u004f\u004e\u0043\u0041T\u0028\u0029\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0061r\u0067\u0075\u006d\u0065\u006e\u0074\u0073\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u0073\u0074\u0072\u0069\u006e\u0067\u0073");};};return MakeStringResult (_gdeb .String ());};

// String returns a string representation of a named range.
func (_aadde NamedRangeRef )String ()string {return _aadde ._gbdeb };

// CountIf implements the COUNTIF function.
func CountIf (args []Result )Result {if len (args )< 2{return MakeErrorResult ("\u0043\u004f\u0055N\u0054\u0049\u0046\u0020r\u0065\u0071\u0075\u0069\u0072\u0065\u0073 \u0074\u0077\u006f\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0073\u0073");};_agffa :=args [0];if _agffa .Type !=ResultTypeArray &&_agffa .Type !=ResultTypeList {return MakeErrorResult ("\u0043O\u0055\u004eT\u0049\u0046\u0020r\u0065\u0071\u0075\u0069\u0072\u0065\u0073 \u0066\u0069\u0072\u0073\u0074\u0020a\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0020\u006f\u0066\u0020t\u0079\u0070\u0065\u0020\u0061\u0072\u0072\u0061\u0079");};_ddgcf :=_ccceg (args [1]);_bdebe :=0;for _ ,_cbdbd :=range _affb (_agffa ){for _ ,_fecd :=range _cbdbd {if _fdaaa (_fecd ,_ddgcf ){_bdebe ++;};};};return MakeNumberResult (float64 (_bdebe ));};

// Degrees is an implementation of the Excel function DEGREES() that converts
// radians to degrees.
func Degrees (args []Result )Result {if len (args )!=1{return MakeErrorResult ("\u0044\u0045\u0047R\u0045\u0045\u0053\u0028)\u0020\u0072\u0065\u0071\u0075\u0069\u0072e\u0073\u0020\u006f\u006e\u0065\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};_cace :=args [0].AsNumber ();if _cace .Type !=ResultTypeNumber {return MakeErrorResult ("\u0044\u0045\u0047RE\u0045\u0053\u0028\u0029\u0020\u0072\u0065\u0071\u0075i\u0072e\u0073 \u006eu\u006d\u0062\u0065\u0072\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};return MakeNumberResult (180.0/_ea .Pi *_cace .ValueNumber );};

// Ispmt implements the Excel ISPMT function.
func Ispmt (args []Result )Result {if len (args )!=4{return MakeErrorResult ("\u0049\u0053P\u004d\u0054\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0066\u006f\u0075\u0072\u0020\u0061\u0072\u0067\u0075\u006den\u0074\u0073");};if args [0].Type !=ResultTypeNumber {return MakeErrorResult ("\u0049\u0053\u0050\u004d\u0054 \u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0072\u0061\u0074\u0065 \u0074\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};_cdad :=args [0].ValueNumber ;if args [1].Type !=ResultTypeNumber {return MakeErrorResult ("\u0049\u0053\u0050\u004d\u0054\u0020\u0072e\u0071\u0075\u0069r\u0065\u0073\u0020\u0070e\u0072\u0069\u006f\u0064\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};_acdd :=args [1].ValueNumber ;if args [2].Type !=ResultTypeNumber {return MakeErrorResult ("\u0049\u0053\u0050\u004d\u0054\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020n\u0075\u006d\u0062\u0065\u0072\u0020\u006f\u0066\u0020\u0070\u0065\u0072\u0069o\u0064\u0073\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006dbe\u0072\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};_gfed :=args [2].ValueNumber ;if _gfed <=0{return MakeErrorResultType (ErrorTypeNum ,"\u0049S\u0050\u004d\u0054\u0020\u0072\u0065\u0071ui\u0072\u0065\u0073\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u006f\u0066\u0020p\u0065\u0072i\u006f\u0064\u0073 \u0074\u006f\u0020\u0062\u0065\u0020\u0070\u006f\u0073\u0069\u0074\u0069\u0076\u0065\u0020\u006eu\u006d\u0062er\u0020\u0061\u0072g\u0075\u006d\u0065\u006e\u0074");};if args [3].Type !=ResultTypeNumber {return MakeErrorResult ("\u0049\u0053\u0050\u004d\u0054\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0070\u0072\u0065s\u0065\u006e\u0074\u0020\u0076\u0061\u006cu\u0065\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006db\u0065\u0072\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};_gggf :=args [3].ValueNumber ;return MakeNumberResult (_gggf *_cdad *(_acdd /_gfed -1));};

// NewPrefixVerticalRange constructs a new full columns range with prefix.
func NewPrefixVerticalRange (pfx Expression ,v string )Expression {_bgdf :=_ce .Split (v ,"\u003a");if len (_bgdf )!=2{return nil ;};if _bgdf [0]> _bgdf [1]{_bgdf [0],_bgdf [1]=_bgdf [1],_bgdf [0];};return PrefixVerticalRange {_fcbe :pfx ,_acba :_bgdf [0],_fcgge :_bgdf [1]};};const _decc ="\u0028\u0020\u0028"+_ggbg +"\u007c"+_eca +"\u007c"+_dgeb +"\u007c"+_cbc +"\u0029\u0029\u003f\u0024";

// Reference returns a string reference value to a vertical range.
func (_edecf VerticalRange )Reference (ctx Context ,ev Evaluator )Reference {return Reference {Type :ReferenceTypeVerticalRange ,Value :_edecf .verticalRangeReference ()};};func _dcge (_begb ,_eaea float64 )float64 {_begb =_ea .Trunc (_begb );_eaea =_ea .Trunc (_eaea );if _begb ==0&&_eaea ==0{return 0;};return _begb *_eaea /_fagg (_begb ,_eaea );};

// Edate is an implementation of the Excel EDATE() function.
func Edate (args []Result )Result {if len (args )!=2{return MakeErrorResult ("\u0045\u0044\u0041\u0054E\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020t\u0077o\u0020\u0061\u0072\u0067\u0075\u006d\u0065n\u0074\u0073");};if args [1].Type !=ResultTypeNumber {return MakeErrorResult ("\u0049\u006e\u0063\u006fr\u0072\u0065\u0063\u0074\u0020\u0061\u0072\u0067\u0075\u006de\u006et\u0020\u0066\u006f\u0072\u0020\u0045\u0044A\u0054\u0045");};_cab :=args [1].ValueNumber ;_bdg :=args [0];var _bgg float64 ;switch _bdg .Type {case ResultTypeEmpty :return MakeErrorResultType (ErrorTypeNum ,"\u0049\u006e\u0063\u006fr\u0072\u0065\u0063\u0074\u0020\u0061\u0072\u0067\u0075\u006de\u006et\u0020\u0066\u006f\u0072\u0020\u0045\u0044A\u0054\u0045");case ResultTypeNumber :_bgg =_bdg .ValueNumber ;case ResultTypeString :_gdg :=DateValue ([]Result {args [0]});if _gdg .Type ==ResultTypeError {return MakeErrorResult ("\u0049\u006e\u0063\u006fr\u0072\u0065\u0063\u0074\u0020\u0061\u0072\u0067\u0075\u006de\u006et\u0020\u0066\u006f\u0072\u0020\u0045\u0044A\u0054\u0045");};_bgg =_gdg .ValueNumber ;default:return MakeErrorResult ("\u0049\u006e\u0063\u006fr\u0072\u0065\u0063\u0074\u0020\u0061\u0072\u0067\u0075\u006de\u006et\u0020\u0066\u006f\u0072\u0020\u0045\u0044A\u0054\u0045");};_bdcc :=_acb (_bgg );_bde :=_bdcc .AddDate (0,int (_cab ),0);_gbe ,_ebbf ,_eaff :=_bde .Date ();_gdgd :=_fcg (_gbe ,int (_ebbf ),_eaff );if _gdgd < 1{return MakeErrorResultType (ErrorTypeNum ,"\u0049\u006e\u0063\u006fr\u0072\u0065\u0063\u0074\u0020\u0061\u0072\u0067\u0075\u006de\u006et\u0020\u0066\u006f\u0072\u0020\u0045\u0044A\u0054\u0045");};return MakeNumberResult (_gdgd );};

// Irr implements the Excel IRR function.
func Irr (args []Result )Result {_ccfcg :=len (args );if _ccfcg ==0||_ccfcg > 2{return MakeErrorResult ("\u0049\u0052\u0052\u0020\u0072\u0065q\u0075\u0069\u0072\u0065\u0073\u0020\u006f\u006e\u0065\u0020\u006f\u0072\u0020t\u0077\u006f\u0020\u0061\u0072\u0067\u0075m\u0065\u006e\u0074\u0073");};if args [0].Type !=ResultTypeList &&args [0].Type !=ResultTypeArray {return MakeErrorResult ("\u0049\u0052\u0052\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020v\u0061\u006c\u0075\u0065\u0073\u0020t\u006f\u0020\u0062\u0065\u0020\u006f\u0066\u0020\u0061\u0072\u0072\u0061\u0079 \u0074\u0079\u0070\u0065");};_gef :=_affb (args [0]);_ceab :=[]float64 {};for _ ,_ddeeb :=range _gef {for _ ,_feeg :=range _ddeeb {if _feeg .Type ==ResultTypeNumber &&!_feeg .IsBoolean {_ceab =append (_ceab ,_feeg .ValueNumber );};};};_bbcd :=len (_ceab );if len (_ceab )< 2{return MakeErrorResultType (ErrorTypeNum ,"");};_gabf :=0.1;if _ccfcg ==2&&args [1].Type !=ResultTypeEmpty {if args [1].Type !=ResultTypeNumber {return MakeErrorResult ("I\u0052\u0052\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0067\u0075\u0065\u0073\u0073\u0020t\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006d\u0062\u0065r \u0061\u0072\u0067u\u006de\u006e\u0074");};_gabf =args [1].ValueNumber ;if _gabf <=-1{return MakeErrorResult ("\u0049\u0052R\u0020\u0072\u0065\u0071u\u0069\u0072e\u0073\u0020\u0067\u0075\u0065\u0073\u0073\u0020t\u006f\u0020\u0062\u0065\u0020\u006d\u006f\u0072\u0065\u0020\u0074\u0068a\u006e\u0020\u002d\u0031");};};_bcced :=[]float64 {};for _cgge :=0;_cgge < _bbcd ;_cgge ++{if _cgge ==0{_bcced =append (_bcced ,0);}else {_bcced =append (_bcced ,_bcced [_cgge -1]+365);};};return _cccg (_ceab ,_bcced ,_gabf );};

// String returns a string representation of Number.
func (_ggcdf Number )String ()string {return _gc .FormatFloat (_ggcdf ._bcfc ,'f',-1,64)};

// Small implements the Excel SMALL function.
func Small (args []Result )Result {return _edfb (args ,false )};

// Ifs is an implementation of the Excel IFS() function.
func Ifs (args []Result )Result {if len (args )< 2{return MakeErrorResult ("I\u0046\u0053\u0020\u0072\u0065\u0071u\u0069\u0072\u0065\u0073\u0020\u0061t\u0020\u006c\u0065\u0061\u0073\u0074\u0020t\u0077\u006f\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006et\u0073");};for _dbcb :=0;_dbcb < len (args )-1;_dbcb +=2{if args [_dbcb ].ValueNumber ==1{return args [_dbcb +1];};};return MakeErrorResultType (ErrorTypeNA ,"");};func _cdea (_eega int )bool {return _eega ==0||_eega ==4};func _cegc (_gaga []Result ,_bcedg string )(float64 ,float64 ,Result ){if len (_gaga )!=2{return 0,0,MakeErrorResult (_bcedg +"\u0020\u0072\u0065qu\u0069\u0072\u0065\u0073\u0020\u0074\u0077\u006f\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0073");};if _gaga [0].Type !=ResultTypeNumber {return 0,0,MakeErrorResult (_bcedg +"\u0020\u0072\u0065\u0071\u0075\u0069r\u0065\u0073\u0020\u0066\u0072\u0061\u0063\u0074\u0069\u006f\u006e\u0061\u006c\u0020\u0064\u006f\u006c\u006c\u0061\u0072 \u0074\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0061r\u0067u\u006d\u0065\u006e\u0074");};_daac :=_gaga [0].ValueNumber ;if _gaga [1].Type !=ResultTypeNumber {return 0,0,MakeErrorResult (_bcedg +" \u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0066\u0072\u0061\u0063\u0074\u0069\u006f\u006e\u0020t\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006d\u0062\u0065r \u0061\u0072\u0067u\u006de\u006e\u0074");};_fggf :=float64 (int (_gaga [1].ValueNumber ));if _fggf < 0{return 0,0,MakeErrorResultType (ErrorTypeNum ,_bcedg +"\u0020r\u0065\u0071u\u0069\u0072\u0065\u0073 \u0066\u0072\u0061c\u0074\u0069\u006f\u006e\u0020\u0074\u006f\u0020\u0062e \u006e\u006f\u006e \u006e\u0065g\u0061\u0074\u0069\u0076\u0065\u0020n\u0075\u006db\u0065\u0072");};return _daac ,_fggf ,_ega ;};var _gee int64 =_adc (1900,_f .January ,1);

// Days is an implementation of the Excel DAYS() function.
func Days (args []Result )Result {if len (args )!=2{return MakeErrorResult ("D\u0041\u0059\u0053\u0020\u0072\u0065q\u0075\u0069\u0072\u0065\u0073\u0020\u0074\u0077\u006f \u0061\u0072\u0067u\u006de\u006e\u0074\u0073");};var _add ,_degb float64 ;switch args [0].Type {case ResultTypeNumber :_degb =args [0].ValueNumber ;case ResultTypeString :_dfcg :=DateValue ([]Result {args [0]});if _dfcg .Type ==ResultTypeError {return MakeErrorResult ("I\u006e\u0063\u006f\u0072\u0072\u0065c\u0074\u0020\u0065\u006e\u0064\u0020\u0064\u0061\u0074e\u0020\u0066\u006fr\u0020D\u0041\u0059\u0053");};_degb =_dfcg .ValueNumber ;default:return MakeErrorResult ("I\u006e\u0063\u006f\u0072\u0072\u0065c\u0074\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006et\u0020\u0066\u006fr\u0020D\u0041\u0059\u0053");};switch args [1].Type {case ResultTypeNumber :_add =args [1].ValueNumber ;if _add < 62&&_degb >=62{_add --;};case ResultTypeString :_aca :=DateValue ([]Result {args [1]});if _aca .Type ==ResultTypeError {return MakeErrorResult ("\u0049\u006ec\u006f\u0072\u0072\u0065\u0063\u0074\u0020\u0073\u0074\u0061\u0072\u0074\u0020\u0064\u0061\u0074\u0065\u0020\u0066\u006f\u0072\u0020DA\u0059\u0053");};_add =_aca .ValueNumber ;default:return MakeErrorResult ("I\u006e\u0063\u006f\u0072\u0072\u0065c\u0074\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006et\u0020\u0066\u006fr\u0020D\u0041\u0059\u0053");};_eccg :=float64 (int (_degb -_add ));return MakeNumberResult (_eccg );};

// FloorMath implements _xlfn.FLOOR.MATH which rounds numbers down to the
// nearest multiple of the second argument, toward or away from zero as
// specified by the third argument.
func FloorMath (args []Result )Result {if len (args )==0{return MakeErrorResult ("\u0046\u004c\u004f\u004f\u0052\u002e\u004dA\u0054\u0048\u0028)\u0020\u0072\u0065\u0071u\u0069\u0072\u0065\u0073\u0020\u0061\u0074\u0020\u006c\u0065\u0061\u0073\u0074\u0020\u006f\u006e\u0065\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};if len (args )> 3{return MakeErrorResult ("\u0046\u004c\u004f\u004f\u0052\u002e\u004dA\u0054\u0048\u0028)\u0020\u0061\u006c\u006co\u0077\u0073\u0020\u0061\u0074\u0020\u006d\u006f\u0073\u0074\u0020\u0074\u0068\u0072\u0065\u0065\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0073");};_ffdb :=args [0].AsNumber ();if _ffdb .Type !=ResultTypeNumber {return MakeErrorResult ("f\u0069\u0072\u0073\u0074\u0020\u0061\u0072\u0067\u0075m\u0065\u006e\u0074\u0020\u0074\u006f\u0020FL\u004f\u004f\u0052\u002eM\u0041\u0054\u0048\u0028\u0029\u0020\u006d\u0075\u0073t \u0062\u0065 \u0061\u0020\u006e\u0075\u006d\u0062\u0065\u0072");};_deee :=float64 (1);if _ffdb .ValueNumber < 0{_deee =-1;};if len (args )> 1{_ggc :=args [1].AsNumber ();if _ggc .Type !=ResultTypeNumber {return MakeErrorResult ("\u0073\u0065\u0063\u006f\u006e\u0064\u0020\u0061r\u0067\u0075\u006den\u0074\u0020\u0074\u006f\u0020\u0046L\u004f\u004f\u0052\u002e\u004d\u0041\u0054\u0048\u0028\u0029\u0020\u006d\u0075\u0073\u0074 \u0062\u0065\u0020\u0061\u0020\u006e\u0075\u006db\u0065\u0072");};_deee =_ggc .ValueNumber ;};_dcgb :=float64 (1);if len (args )> 2{_dfec :=args [2].AsNumber ();if _dfec .Type !=ResultTypeNumber {return MakeErrorResult ("t\u0068\u0069\u0072\u0064\u0020\u0061\u0072\u0067\u0075m\u0065\u006e\u0074\u0020\u0074\u006f\u0020FL\u004f\u004f\u0052\u002eM\u0041\u0054\u0048\u0028\u0029\u0020\u006d\u0075\u0073t \u0062\u0065 \u0061\u0020\u006e\u0075\u006d\u0062\u0065\u0072");};_dcgb =_dfec .ValueNumber ;};if len (args )==1{return MakeNumberResult (_ea .Floor (_ffdb .ValueNumber ));};_gggae :=_ffdb .ValueNumber ;_gggae ,_cgcd :=_ea .Modf (_gggae /_deee );if _cgcd !=0&&_ffdb .ValueNumber < 0&&_dcgb > 0{_gggae ++;};return MakeNumberResult (_gggae *_deee );};

// String returns a string representation for Negate.
func (_befec Negate )String ()string {return "\u002d"+_befec ._eaaad .String ()};

// Value returns a string version of the result.
func (_bdfaf Result )Value ()string {switch _bdfaf .Type {case ResultTypeNumber :_cdfc :=_gc .FormatFloat (_bdfaf .ValueNumber ,'f',-1,64);if len (_cdfc )> 12{_fbbb :=12;for _gbgbd :=_fbbb ;_gbgbd > 0&&_cdfc [_gbgbd ]=='0';_gbgbd --{_fbbb --;};_cdfc =_cdfc [0:_fbbb +1];};return _cdfc ;case ResultTypeError :return _bdfaf .ValueString ;case ResultTypeString :return _bdfaf .ValueString ;case ResultTypeList :if len (_bdfaf .ValueList )==0{return "";};return _bdfaf .ValueList [0].Value ();case ResultTypeArray :if len (_bdfaf .ValueArray )==0||len (_bdfaf .ValueArray [0])==0{return "";};return _bdfaf .ValueArray [0][0].Value ();case ResultTypeEmpty :return "";default:return "\u0075\u006e\u0068\u0061nd\u006c\u0065\u0064\u0020\u0072\u0065\u0073\u0075\u006c\u0074\u0020\u0076\u0061\u006cu\u0065";};};const _eefcb =57366;

// GetLocked returns FALSE for the invalid reference context.
func (_efeb *ivr )GetLocked (cellRef string )bool {return false };

// Not is an implementation of the Excel NOT() function and takes a single
// argument.
func Not (args []Result )Result {if len (args )!=1{return MakeErrorResult ("\u004eO\u0054\u0020\u0072\u0065q\u0075\u0069\u0072\u0065\u0073 \u006fn\u0065 \u0061\u0072\u0067\u0075\u006d\u0065\u006et");};switch args [0].Type {case ResultTypeError :return args [0];case ResultTypeString ,ResultTypeList :return MakeErrorResult ("\u004e\u004f\u0054\u0020\u0065\u0078\u0070\u0065\u0063\u0074s\u0020\u0061\u0020\u006e\u0075\u006d\u0065r\u0069\u0063\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");case ResultTypeNumber :return MakeBoolResult (!(args [0].ValueNumber !=0));default:return MakeErrorResult ("u\u006e\u0068\u0061\u006e\u0064\u006ce\u0064\u0020\u004e\u004f\u0054\u0020\u0061\u0072\u0067u\u006d\u0065\u006et\u0020t\u0079\u0070\u0065");};};

// SumProduct is an implementation of the Excel SUMPRODUCT() function.
func SumProduct (args []Result )Result {if len (args )==0{return MakeErrorResult ("\u0053\u0055\u004d\u0050\u0052\u004f\u0044U\u0043\u0054\u0028)\u0020\u0072\u0065\u0071u\u0069\u0072\u0065\u0073\u0020\u0061\u0074\u0020\u006c\u0065\u0061\u0073\u0074\u0020\u006f\u006e\u0065\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};_bged :=args [0].Type ;for _ ,_gafbe :=range args {if _gafbe .Type !=_bged {return MakeErrorResult ("\u0053\u0055M\u0050\u0052\u004f\u0044\u0055C\u0054\u0028\u0029\u0020\u0072e\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0061\u006c\u006c\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0073\u0020\u006f\u0066\u0020\u0074\u0068\u0065\u0020\u0073\u0061\u006d\u0065\u0020\u0074\u0079\u0070\u0065");};};switch _bged {case ResultTypeNumber :return Product (args );case ResultTypeList ,ResultTypeArray :_dabe :=len (args [0].ListValues ());_eabf :=make ([]float64 ,_dabe );for _dgfb :=range _eabf {_eabf [_dgfb ]=1.0;};for _ ,_gcdf :=range args {if len (_gcdf .ListValues ())!=_dabe {return MakeErrorResult ("\u0053\u0055\u004d\u0050\u0052\u004f\u0044\u0055\u0043\u0054\u0028\u0029\u0020\u0072\u0065\u0071\u0075\u0069re\u0073 \u0061\u006c\u006c\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074s\u0020\u0074\u006f\u0020\u0068\u0061\u0076\u0065\u0020\u0074\u0068\u0065\u0020\u0073\u0061\u006d\u0065 \u0064\u0069\u006d\u0065\u006e\u0073\u0069\u006f\u006e");};for _ffgd ,_ebgc :=range _gcdf .ListValues (){_ebgc =_ebgc .AsNumber ();if _ebgc .Type !=ResultTypeNumber {return MakeErrorResult ("\u0053\u0055\u004d\u0050\u0052\u004fD\u0055\u0043\u0054\u0028\u0029\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0061\u006c\u006c\u0020\u0061r\u0067\u0075\u006d\u0065\u006e\u0074\u0073\u0020\u0074\u006f\u0020\u0062\u0065\u0020n\u0075m\u0065\u0072\u0069\u0063");};_eabf [_ffgd ]=_eabf [_ffgd ]*_ebgc .ValueNumber ;};};_bgag :=0.0;for _ ,_fgec :=range _eabf {_bgag +=_fgec ;};return MakeNumberResult (_bgag );};return MakeNumberResult (1.0);};func (_dfe BinOpType )String ()string {if _dfe >=BinOpType (len (_ggb )-1){return _dc .Sprintf ("\u0042\u0069\u006e\u004f\u0070\u0054\u0079\u0070\u0065\u0028\u0025\u0064\u0029",_dfe );};return _dfc [_ggb [_dfe ]:_ggb [_dfe +1]];};

// Eval evaluates and returns an expression with prefix.
func (_cebee PrefixExpr )Eval (ctx Context ,ev Evaluator )Result {_ffcd :=_cebee ._bdga .Reference (ctx ,ev );switch _ffcd .Type {case ReferenceTypeSheet :if _eegb (_ffcd ,ctx ){return MakeErrorResultType (ErrorTypeName ,_dc .Sprintf ("\u0053h\u0065e\u0074\u0020\u0025\u0073\u0020n\u006f\u0074 \u0066\u006f\u0075\u006e\u0064",_ffcd .Value ));};_daee :=ctx .Sheet (_ffcd .Value );return _cebee ._bebg .Eval (_daee ,ev );default:return MakeErrorResult (_dc .Sprintf ("\u006e\u006f\u0020\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0020\u0066\u006f\u0072\u0020r\u0065f\u0065\u0072\u0065\u006e\u0063\u0065\u0020\u0074\u0079\u0070\u0065\u0020\u0025\u0073",_ffcd .Type ));};};func _ggfbc (_fegdd ,_dffd []string )[]string {for _ ,_ebac :=range _dffd {_fegdd =append (_fegdd ,_ebac );};return _fegdd ;};

// Syd implements the Excel SYD function.
func Syd (args []Result )Result {if len (args )!=4{return MakeErrorResult ("S\u0059\u0044\u0020\u0072\u0065\u0071u\u0069\u0072\u0065\u0073\u0020\u0066\u006f\u0075\u0072 \u0061\u0072\u0067u\u006de\u006e\u0074\u0073");};if args [0].Type !=ResultTypeNumber {return MakeErrorResult ("\u0053\u0059\u0044\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020c\u006f\u0073\u0074\u0020\u0074\u006f \u0062\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0061\u0072\u0067u\u006d\u0065\u006e\u0074");};_adba :=args [0].ValueNumber ;if args [1].Type !=ResultTypeNumber {return MakeErrorResult ("\u0053\u0059\u0044 \u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0073\u0061\u006c\u0076\u0061\u0067\u0065\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072 \u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};_dbed :=args [1].ValueNumber ;if args [2].Type !=ResultTypeNumber {return MakeErrorResult ("\u0053\u0059\u0044\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020l\u0069\u0066\u0065\u0020\u0074\u006f \u0062\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0061\u0072\u0067u\u006d\u0065\u006e\u0074");};_dccb :=args [2].ValueNumber ;if _dccb <=0{return MakeErrorResultType (ErrorTypeNum ,"\u0053\u0059\u0044\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u006c\u0069f\u0065 \u0074\u006f\u0020\u0062\u0065\u0020\u0070\u006f\u0073\u0069\u0074\u0069\u0076\u0065");};if args [3].Type !=ResultTypeNumber {return MakeErrorResult ("\u0053\u0059\u0044\u0020\u0072e\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0070\u0065\u0072\u0069\u006f\u0064 \u0074\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};_cbgc :=args [3].ValueNumber ;if _cbgc <=0{return MakeErrorResultType (ErrorTypeNum ,"\u0053\u0059\u0044 r\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0070e\u0072i\u006fd\u0020t\u006f\u0020\u0062\u0065\u0020\u0070\u006f\u0073\u0069\u0074\u0069\u0076\u0065");};if _cbgc > _dccb {return MakeErrorResultType (ErrorTypeNum ,"\u0053\u0059\u0044\u0020\u0072\u0065q\u0075\u0069\u0072\u0065\u0073\u0020\u0070\u0065\u0072\u0069\u006f\u0064\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u0065q\u0075\u0061\u006c\u0020\u006f\u0072\u0020\u006c\u0065\u0073\u0073\u0020\u0074\u0068a\u006e \u006c\u0069\u0066\u0065");};_dcefa :=(_adba -_dbed )*(_dccb -_cbgc +1)*2;_ebaa :=_dccb *(_dccb +1);return MakeNumberResult (_dcefa /_ebaa );};

// Eval evaluates a horizontal range with prefix returning a list of results or an error.
func (_gcfd PrefixHorizontalRange )Eval (ctx Context ,ev Evaluator )Result {_dbdd :=_gcfd ._bedeg .Reference (ctx ,ev );switch _dbdd .Type {case ReferenceTypeSheet :if _eegb (_dbdd ,ctx ){return MakeErrorResultType (ErrorTypeName ,_dc .Sprintf ("\u0053h\u0065e\u0074\u0020\u0025\u0073\u0020n\u006f\u0074 \u0066\u006f\u0075\u006e\u0064",_dbdd .Value ));};_ccadc :=_gcfd .horizontalRangeReference (_dbdd .Value );if _gdbg ,_bgecf :=ev .GetFromCache (_ccadc );_bgecf {return _gdbg ;};_fdefe :=ctx .Sheet (_dbdd .Value );_ccef ,_bffgd :=_fdbc (_fdefe ,_gcfd ._adffe ,_gcfd ._adead );_dgega :=_fceb (_fdefe ,ev ,_ccef ,_bffgd );ev .SetCache (_ccadc ,_dgega );return _dgega ;default:return MakeErrorResult (_dc .Sprintf ("\u006e\u006f\u0020\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0020\u0066\u006f\u0072\u0020r\u0065f\u0065\u0072\u0065\u006e\u0063\u0065\u0020\u0074\u0079\u0070\u0065\u0020\u0025\u0073",_dbdd .Type ));};};

// String returns a string representation of SheetPrefixExpr.
func (_ecff SheetPrefixExpr )String ()string {return _ecff ._bcff };

// Reference returns a string reference value to a range.
func (_eeda Range )Reference (ctx Context ,ev Evaluator )Reference {_babc :=_eeda ._cdacg .Reference (ctx ,ev );_fefag :=_eeda ._faceba .Reference (ctx ,ev );if _babc .Type ==ReferenceTypeCell &&_fefag .Type ==ReferenceTypeCell {return MakeRangeReference (_bebb (_babc ,_fefag ));};return ReferenceInvalid ;};func init (){RegisterFunction ("\u0043\u0048\u0041\u0052",Char );RegisterFunction ("\u0043\u004c\u0045A\u004e",Clean );RegisterFunction ("\u0043\u004f\u0044\u0045",Code );RegisterFunction ("C\u004f\u004e\u0043\u0041\u0054\u0045\u004e\u0041\u0054\u0045",Concat );RegisterFunction ("\u0043\u004f\u004e\u0043\u0041\u0054",Concat );RegisterFunction ("\u005f\u0078\u006cf\u006e\u002e\u0043\u004f\u004e\u0043\u0041\u0054",Concat );RegisterFunction ("\u0045\u0058\u0041C\u0054",Exact );RegisterFunction ("\u0046\u0049\u004e\u0044",Find );RegisterFunctionComplex ("\u0046\u0049\u004eD\u0042",Findb );RegisterFunction ("\u004c\u0045\u0046\u0054",Left );RegisterFunction ("\u004c\u0045\u0046T\u0042",Left );RegisterFunction ("\u004c\u0045\u004e",Len );RegisterFunction ("\u004c\u0045\u004e\u0042",Len );RegisterFunction ("\u004c\u004f\u0057E\u0052",Lower );RegisterFunction ("\u004d\u0049\u0044",Mid );RegisterFunction ("\u0050\u0052\u004f\u0050\u0045\u0052",Proper );RegisterFunction ("\u0052E\u0050\u004c\u0041\u0043\u0045",Replace );RegisterFunction ("\u0052\u0045\u0050\u0054",Rept );RegisterFunction ("\u0052\u0049\u0047H\u0054",Right );RegisterFunction ("\u0052\u0049\u0047\u0048\u0054\u0042",Right );RegisterFunction ("\u0053\u0045\u0041\u0052\u0043\u0048",Search );RegisterFunctionComplex ("\u0053E\u0041\u0052\u0043\u0048\u0042",Searchb );RegisterFunction ("\u0053\u0055\u0042\u0053\u0054\u0049\u0054\u0055\u0054\u0045",Substitute );RegisterFunction ("\u0054",T );RegisterFunction ("\u0054\u0045\u0058\u0054",Text );RegisterFunction ("\u0054\u0045\u0058\u0054\u004a\u004f\u0049\u004e",TextJoin );RegisterFunction ("\u005f\u0078\u006c\u0066\u006e\u002e\u0054\u0045\u0058T\u004a\u004f\u0049\u004e",TextJoin );RegisterFunction ("\u0054\u0052\u0049\u004d",Trim );RegisterFunction ("\u005f\u0078\u006c\u0066\u006e\u002e\u0055\u004e\u0049\u0043\u0048\u0041\u0052",Char );RegisterFunction ("\u005f\u0078\u006c\u0066\u006e\u002e\u0055\u004e\u0049\u0043\u004f\u0044\u0045",Unicode );RegisterFunction ("\u0055\u0050\u0050E\u0052",Upper );RegisterFunction ("\u0056\u0041\u004cU\u0045",Value );};

// Cumprinc implements the Excel CUMPRINC function.
func Cumprinc (args []Result )Result {_dfd ,_bceg :=_ecce (args ,"\u0043\u0055\u004d\u0050\u0052\u0049\u004e\u0043");if _bceg .Type ==ResultTypeError {return _bceg ;};_abaa :=_dfd ._bbcg ;_fefa :=_dfd ._baca ;_ceaea :=_dfd ._fbd ;_afaac :=_dfd ._bgbge ;_cbdd :=_dfd ._eeca ;_fead :=_dfd ._cbgab ;_cbba :=_gbac (_abaa ,_fefa ,_ceaea ,0,_fead );_bace :=0.0;if _afaac ==1{if _fead ==0{_bace =_cbba +_ceaea *_abaa ;}else {_bace =_cbba ;};_afaac ++;};for _fgcg :=_afaac ;_fgcg <=_cbdd ;_fgcg ++{if _fead ==1{_bace +=_cbba -(_cgcf (_abaa ,_fgcg -2,_cbba ,_ceaea ,1)-_cbba )*_abaa ;}else {_bace +=_cbba -_cgcf (_abaa ,_fgcg -1,_cbba ,_ceaea ,0)*_abaa ;};};return MakeNumberResult (_bace );};func _gbac (_fbce ,_bbfe ,_fcce ,_fccb float64 ,_cec int )float64 {var _fedf float64 ;if _fbce ==0{_fedf =(_fcce +_fccb )/_bbfe ;}else {_bgge :=_ea .Pow (1+_fbce ,_bbfe );if _cec ==1{_fedf =(_fccb *_fbce /(_bgge -1)+_fcce *_fbce /(1-1/_bgge ))/(1+_fbce );}else {_fedf =_fccb *_fbce /(_bgge -1)+_fcce *_fbce /(1-1/_bgge );};};return -_fedf ;};

// Eval evaluates the binary expression using the context given.
func (_gf BinaryExpr )Eval (ctx Context ,ev Evaluator )Result {_bd :=_gf ._ced .Eval (ctx ,ev );if _bd .Type ==ResultTypeError {return _bd ;};_eb :=_gf ._baa .Eval (ctx ,ev );if _eb .Type ==ResultTypeError {return _eb ;};if _bd .Type ==_eb .Type {if _bd .Type ==ResultTypeArray {if !_fd (_bd .ValueArray ,_eb .ValueArray ){return MakeErrorResult ("l\u0068\u0073\u002f\u0072\u0068\u0073 \u0073\u0068\u006f\u0075\u006c\u0064 \u0068\u0061\u0076\u0065\u0020\u0073\u0061m\u0065\u0020\u0064\u0069\u006d\u0065\u006e\u0073\u0069\u006fn\u0073");};return _aa (_gf ._de ,_bd .ValueArray ,_eb .ValueArray );}else if _bd .Type ==ResultTypeList {if len (_bd .ValueList )!=len (_eb .ValueList ){return MakeErrorResult ("l\u0068\u0073\u002f\u0072\u0068\u0073 \u0073\u0068\u006f\u0075\u006c\u0064 \u0068\u0061\u0076\u0065\u0020\u0073\u0061m\u0065\u0020\u0064\u0069\u006d\u0065\u006e\u0073\u0069\u006fn\u0073");};return _fb (_gf ._de ,_bd .ValueList ,_eb .ValueList );};}else if _bd .Type ==ResultTypeArray &&(_eb .Type ==ResultTypeNumber ||_eb .Type ==ResultTypeString ){return _ec (_gf ._de ,_bd .ValueArray ,_eb );}else if _bd .Type ==ResultTypeList &&(_eb .Type ==ResultTypeNumber ||_eb .Type ==ResultTypeString ){return _ccb (_gf ._de ,_bd .ValueList ,_eb );};switch _gf ._de {case BinOpTypePlus :if _bd .Type ==_eb .Type {if _bd .Type ==ResultTypeNumber {return MakeNumberResult (_bd .ValueNumber +_eb .ValueNumber );};};case BinOpTypeMinus :if _bd .Type ==_eb .Type {if _bd .Type ==ResultTypeNumber {return MakeNumberResult (_bd .ValueNumber -_eb .ValueNumber );};};case BinOpTypeMult :if _bd .Type ==_eb .Type {if _bd .Type ==ResultTypeNumber {return MakeNumberResult (_bd .ValueNumber *_eb .ValueNumber );};};case BinOpTypeDiv :if _bd .Type ==_eb .Type {if _bd .Type ==ResultTypeNumber {if _eb .ValueNumber ==0{return MakeErrorResultType (ErrorTypeDivideByZero ,"\u0064\u0069\u0076\u0069\u0064\u0065\u0020\u0062\u0079 \u007a\u0065\u0072\u006f");};return MakeNumberResult (_bd .ValueNumber /_eb .ValueNumber );};};case BinOpTypeExp :if _bd .Type ==_eb .Type {if _bd .Type ==ResultTypeNumber {return MakeNumberResult (_ea .Pow (_bd .ValueNumber ,_eb .ValueNumber ));};};case BinOpTypeLT :if _bd .Type ==_eb .Type {if _bd .Type ==ResultTypeNumber {return MakeBoolResult (_bd .ValueNumber < _eb .ValueNumber );};if _bd .Type ==ResultTypeString {return MakeBoolResult (_bd .ValueString < _eb .ValueString );};if _bd .Type ==ResultTypeEmpty {return MakeBoolResult (false );};}else if _bd .Type ==ResultTypeString &&_eb .Type ==ResultTypeNumber {return MakeBoolResult (false );}else if _bd .Type ==ResultTypeNumber &&_eb .Type ==ResultTypeString {return MakeBoolResult (true );}else if _bd .Type ==ResultTypeEmpty &&(_eb .Type ==ResultTypeNumber ||_eb .Type ==ResultTypeString ){return MakeBoolResult (true );}else if (_bd .Type ==ResultTypeNumber ||_bd .Type ==ResultTypeString )&&_eb .Type ==ResultTypeEmpty {return MakeBoolResult (false );};case BinOpTypeGT :if _bd .Type ==_eb .Type {if _bd .Type ==ResultTypeNumber {return MakeBoolResult (_bd .ValueNumber > _eb .ValueNumber );};if _bd .Type ==ResultTypeString {return MakeBoolResult (_bd .ValueString > _eb .ValueString );};if _bd .Type ==ResultTypeEmpty {return MakeBoolResult (false );};}else if _bd .Type ==ResultTypeString &&_eb .Type ==ResultTypeNumber {return MakeBoolResult (true );}else if _bd .Type ==ResultTypeNumber &&_eb .Type ==ResultTypeString {return MakeBoolResult (false );}else if _bd .Type ==ResultTypeEmpty &&(_eb .Type ==ResultTypeNumber ||_eb .Type ==ResultTypeString ){return MakeBoolResult (false );}else if (_bd .Type ==ResultTypeNumber ||_bd .Type ==ResultTypeString )&&_eb .Type ==ResultTypeEmpty {return MakeBoolResult (true );};case BinOpTypeEQ :if _bd .Type ==_eb .Type {if _bd .Type ==ResultTypeNumber {return MakeBoolResult (_bd .ValueNumber ==_eb .ValueNumber );};if _bd .Type ==ResultTypeString {return MakeBoolResult (_bd .ValueString ==_eb .ValueString );};if _bd .Type ==ResultTypeEmpty {return MakeBoolResult (true );};}else if (_bd .Type ==ResultTypeString &&_eb .Type ==ResultTypeNumber )||(_bd .Type ==ResultTypeNumber &&_eb .Type ==ResultTypeString ){return MakeBoolResult (false );}else if _bd .Type ==ResultTypeEmpty &&(_eb .Type ==ResultTypeNumber ||_eb .Type ==ResultTypeString ){return MakeBoolResult (_a (_eb ));}else if (_bd .Type ==ResultTypeNumber ||_bd .Type ==ResultTypeString )&&_eb .Type ==ResultTypeEmpty {return MakeBoolResult (_a (_bd ));};case BinOpTypeNE :if _bd .Type ==_eb .Type {if _bd .Type ==ResultTypeNumber {return MakeBoolResult (_bd .ValueNumber !=_eb .ValueNumber );};if _bd .Type ==ResultTypeString {return MakeBoolResult (_bd .ValueString !=_eb .ValueString );};if _bd .Type ==ResultTypeEmpty {return MakeBoolResult (false );};}else if (_bd .Type ==ResultTypeString &&_eb .Type ==ResultTypeNumber )||(_bd .Type ==ResultTypeNumber &&_eb .Type ==ResultTypeString ){return MakeBoolResult (true );}else if _bd .Type ==ResultTypeEmpty &&(_eb .Type ==ResultTypeNumber ||_eb .Type ==ResultTypeString ){return MakeBoolResult (!_a (_eb ));}else if (_bd .Type ==ResultTypeNumber ||_bd .Type ==ResultTypeString )&&_eb .Type ==ResultTypeEmpty {return MakeBoolResult (!_a (_bd ));};case BinOpTypeLEQ :if _bd .Type ==_eb .Type {if _bd .Type ==ResultTypeNumber {return MakeBoolResult (_bd .ValueNumber <=_eb .ValueNumber );};if _bd .Type ==ResultTypeString {return MakeBoolResult (_bd .ValueString <=_eb .ValueString );};if _bd .Type ==ResultTypeEmpty {return MakeBoolResult (true );};}else if _bd .Type ==ResultTypeString &&_eb .Type ==ResultTypeNumber {return MakeBoolResult (false );}else if _bd .Type ==ResultTypeNumber &&_eb .Type ==ResultTypeString {return MakeBoolResult (true );}else if _bd .Type ==ResultTypeEmpty &&(_eb .Type ==ResultTypeNumber ||_eb .Type ==ResultTypeString ){return MakeBoolResult (_a (_eb ));}else if (_bd .Type ==ResultTypeNumber ||_bd .Type ==ResultTypeString )&&_eb .Type ==ResultTypeEmpty {return MakeBoolResult (_a (_bd ));};case BinOpTypeGEQ :if _bd .Type ==_eb .Type {if _bd .Type ==ResultTypeNumber {return MakeBoolResult (_bd .ValueNumber >=_eb .ValueNumber );};if _bd .Type ==ResultTypeString {return MakeBoolResult (_bd .ValueString >=_eb .ValueString );};if _bd .Type ==ResultTypeEmpty {return MakeBoolResult (true );};}else if _bd .Type ==ResultTypeString &&_eb .Type ==ResultTypeNumber {return MakeBoolResult (true );}else if _bd .Type ==ResultTypeNumber &&_eb .Type ==ResultTypeString {return MakeBoolResult (false );}else if _bd .Type ==ResultTypeEmpty &&(_eb .Type ==ResultTypeNumber ||_eb .Type ==ResultTypeString ){return MakeBoolResult (_a (_eb ));}else if (_bd .Type ==ResultTypeNumber ||_bd .Type ==ResultTypeString )&&_eb .Type ==ResultTypeEmpty {return MakeBoolResult (_a (_bd ));};case BinOpTypeConcat :return MakeStringResult (_bd .Value ()+_eb .Value ());};return MakeErrorResult ("u\u006e\u0073\u0075\u0070po\u0072t\u0065\u0064\u0020\u0062\u0069n\u0061\u0072\u0079\u0020\u006f\u0070");};

// Pv implements the Excel PV function.
func Pv (args []Result )Result {_bfba :=len (args );if _bfba < 3||_bfba > 5{return MakeErrorResult ("\u0050\u0056\u0020\u0072\u0065q\u0075\u0069\u0072\u0065\u0073\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020o\u0066\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0073\u0020\u0069\u006e\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u006f\u0066\u0020\u0033\u0020\u0061\u006e\u0064\u00205");};if args [0].Type !=ResultTypeNumber {return MakeErrorResult ("\u0050\u0056\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0072\u0061\u0074\u0065\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u006eu\u006d\u0062\u0065\u0072\u0020a\u0072\u0067u\u006d\u0065\u006e\u0074");};_cabb :=args [0].ValueNumber ;if args [1].Type !=ResultTypeNumber {return MakeErrorResult ("\u0050\u0056\u0020\u0072\u0065q\u0075\u0069\u0072\u0065\u0073\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020o\u0066\u0020\u0070\u0065\u0072\u0069\u006f\u0064\u0073\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006et");};_cfgf :=args [1].ValueNumber ;if _cfgf !=float64 (int (_cfgf )){return MakeErrorResultType (ErrorTypeNum ,"\u0050\u0056\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u006ff\u0020\u0070\u0065\u0072\u0069\u006f\u0064\u0073\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020a\u0072\u0067\u0075\u006d\u0065n\u0074");};if args [2].Type !=ResultTypeNumber {return MakeErrorResult ("\u0050\u0056\u0020\u0072\u0065q\u0075\u0069\u0072\u0065\u0073\u0020\u0070\u0061\u0079\u006d\u0065\u006e\u0074 \u0074\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};_gadag :=args [2].ValueNumber ;_adab :=0.0;if _bfba >=4&&args [3].Type !=ResultTypeEmpty {if args [3].Type !=ResultTypeNumber {return MakeErrorResult ("\u0050\u0056 \u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0066\u0075\u0074\u0075\u0072\u0065\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};_adab =args [3].ValueNumber ;};_dcce :=0.0;if _bfba ==5&&args [4].Type !=ResultTypeEmpty {if args [4].Type !=ResultTypeNumber {return MakeErrorResult ("\u0050\u0056\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0074\u0079\u0070\u0065\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u006eu\u006d\u0062\u0065\u0072\u0020a\u0072\u0067u\u006d\u0065\u006e\u0074");};_dcce =args [4].ValueNumber ;if _dcce !=0{_dcce =1;};};if _cabb ==0{return MakeNumberResult (-_gadag *_cfgf -_adab );}else {return MakeNumberResult ((((1-_ea .Pow (1+_cabb ,_cfgf ))/_cabb )*_gadag *(1+_cabb *_dcce )-_adab )/_ea .Pow (1+_cabb ,_cfgf ));};};var _adcbb =[]ri {{1000,"\u004d"},{900,"\u0043\u004d"},{500,"\u0044"},{400,"\u0043\u0044"},{100,"\u0043"},{90,"\u0058\u0043"},{50,"\u004c"},{40,"\u0058\u004c"},{10,"\u0058"},{9,"\u0049\u0058"},{5,"\u0056"},{4,"\u0049\u0056"},{1,"\u0049"}};

// Minute is an implementation of the Excel MINUTE() function.
func Minute (args []Result )Result {if len (args )!=1{return MakeErrorResult ("\u004d\u0049\u004e\u0055T\u0045\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073 \u006fn\u0065\u0020\u0061\u0072\u0067\u0075\u006de\u006e\u0074");};_eab :=args [0];switch _eab .Type {case ResultTypeEmpty :return MakeNumberResult (0);case ResultTypeNumber :_dgeg :=_acb (_eab .ValueNumber );return MakeNumberResult (float64 (_dgeg .Minute ()));case ResultTypeString :_abd :=_ce .ToLower (_eab .ValueString );if !_ffbd (_abd ){_ ,_ ,_ ,_gbc ,_gdgb :=_bec (_abd );if _gdgb .Type ==ResultTypeError {_gdgb .ErrorMessage ="\u0049\u006e\u0063\u006f\u0072\u0072\u0065\u0063\u0074\u0020a\u0072\u0067\u0075\u006d\u0065\u006e\u0074s\u0020\u0066\u006f\u0072\u0020\u004d\u0049\u004e\u0055\u0054\u0045";return _gdgb ;};if _gbc {return MakeNumberResult (0);};};_ ,_fcgg ,_ ,_ ,_ ,_cfabb :=_ecaa (_abd );if _cfabb .Type ==ResultTypeError {return _cfabb ;};return MakeNumberResult (float64 (_fcgg ));default:return MakeErrorResult ("\u0049\u006ec\u006f\u0072\u0072\u0065\u0063\u0074\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0020\u0066\u006f\u0072\u0020\u004d\u0049NU\u0054\u0045");};};

// Find is an implementation of the Excel FIND().
func Find (args []Result )Result {_dcba ,_gceaa :=_cccca ("\u0046\u0049\u004e\u0044",args );if _gceaa .Type !=ResultTypeEmpty {return _gceaa ;};_cdbe :=_dcba ._cfddd ;if _cdbe ==""{return MakeNumberResult (1.0);};_ggca :=_dcba ._dgbd ;_geceb :=_dcba ._daag ;_fbaa :=1;for _bacde :=range _ggca {if _fbaa < _geceb {_fbaa ++;continue ;};_gega :=_ce .Index (_ggca [_bacde :],_cdbe );if _gega ==0{return MakeNumberResult (float64 (_fbaa ));};_fbaa ++;};return MakeErrorResultType (ErrorTypeValue ,"\u004eo\u0074\u0020\u0066\u006f\u0075\u006ed");};

// Nper implements the Excel NPER function.
func Nper (args []Result )Result {_beaab :=len (args );if _beaab < 3||_beaab > 5{return MakeErrorResult ("\u004e\u0050\u0045\u0052\u0020\u0072\u0065\u0071\u0075\u0069\u0072e\u0073\u0020\u006e\u0075\u006d\u0062\u0065\u0072 \u006ff\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0073\u0020\u0069\u006e\u0020\u0072\u0061\u006e\u0067e\u0020\u006f\u0066\u0020\u0033\u0020\u0061\u006e\u0064\u0020\u0035");};if args [0].Type !=ResultTypeNumber {return MakeErrorResult ("N\u0050\u0045\u0052\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0072\u0061\u0074\u0065\u0020t\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006d\u0062\u0065r \u0061\u0072\u0067u\u006de\u006e\u0074");};_fbga :=args [0].ValueNumber ;if args [1].Type !=ResultTypeNumber {return MakeErrorResult ("\u004e\u0050\u0045\u0052\u0020\u0072\u0065q\u0075\u0069\u0072e\u0073\u0020\u0070\u0061y\u006d\u0065\u006e\u0074\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};_ecb :=args [1].ValueNumber ;if args [2].Type !=ResultTypeNumber {return MakeErrorResult ("\u004e\u0050\u0045\u0052\u0020\u0072e\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0020\u0076\u0061\u006c\u0075\u0065 \u0074\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0061r\u0067u\u006d\u0065\u006e\u0074");};_egbg :=args [2].ValueNumber ;_aaga :=0.0;if _beaab >=4&&args [3].Type !=ResultTypeEmpty {if args [3].Type !=ResultTypeNumber {return MakeErrorResult ("\u004e\u0050\u0045\u0052\u0020\u0072\u0065\u0071u\u0069\u0072\u0065s \u0066\u0075\u0074\u0075\u0072\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006db\u0065\u0072\u0020\u0061\u0072\u0067\u0075\u006de\u006e\u0074");};_aaga =args [3].ValueNumber ;};_ecceb :=0.0;if _beaab ==5&&args [4].Type !=ResultTypeEmpty {if args [4].Type !=ResultTypeNumber {return MakeErrorResult ("N\u0050\u0045\u0052\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0074\u0079\u0070\u0065\u0020t\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006d\u0062\u0065r \u0061\u0072\u0067u\u006de\u006e\u0074");};_ecceb =args [4].ValueNumber ;if _ecceb !=0{_ecceb =1;};};_fgbd :=_ecb *(1+_fbga *_ecceb )-_aaga *_fbga ;_dabc :=(_egbg *_fbga +_ecb *(1+_fbga *_ecceb ));return MakeNumberResult (_ea .Log (_fgbd /_dabc )/_ea .Log (1+_fbga ));};const _gfec =_f .Millisecond *1000;

// DateValue is an implementation of the Excel DATEVALUE() function.
func DateValue (args []Result )Result {if len (args )!=1||args [0].Type !=ResultTypeString {return MakeErrorResult ("\u0044A\u0054\u0045V\u0041\u004c\u0055\u0045 \u0072\u0065\u0071u\u0069\u0072\u0065\u0073\u0020\u0061\u0020\u0073\u0069ng\u006c\u0065\u0020s\u0074\u0072i\u006e\u0067\u0020\u0061\u0072\u0067u\u006d\u0065n\u0074\u0073");};_dabb :=_ce .ToLower (args [0].ValueString );if !_dbdf (_dabb ){_ ,_ ,_ ,_ ,_edb ,_cdb :=_ecaa (_dabb );if _cdb .Type ==ResultTypeError {_cdb .ErrorMessage ="\u0049\u006e\u0063\u006f\u0072\u0072e\u0063\u0074\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0073\u0020f\u006f\u0072\u0020\u0044\u0041\u0054\u0045V\u0041\u004c\u0055\u0045";return _cdb ;};if _edb {return MakeNumberResult (0);};};_aegf ,_egc ,_fcgd ,_ ,_ffdd :=_bec (_dabb );if _ffdd .Type ==ResultTypeError {return _ffdd ;};return MakeNumberResult (_fcg (_aegf ,_egc ,_fcgd ));};func _dfaa (_geed []Result ,_edge bool )(float64 ,float64 ){_bcceg :=0.0;_gacfe :=0.0;for _ ,_cfebc :=range _geed {switch _cfebc .Type {case ResultTypeNumber :if _edge ||!_cfebc .IsBoolean {_gacfe +=_cfebc .ValueNumber ;_bcceg ++;};case ResultTypeList ,ResultTypeArray :_gbfbg ,_cbae :=_dfaa (_cfebc .ListValues (),_edge );_gacfe +=_gbfbg ;_bcceg +=_cbae ;case ResultTypeString :if _edge {_bcceg ++;};case ResultTypeEmpty :};};return _gacfe ,_bcceg ;};

// RoundDown is an implementation of the Excel ROUNDDOWN function that rounds a number
// down to a specified number of digits.
func RoundDown (args []Result )Result {return _fgbg (args ,_bgae )};

// LookupFunctionComplex looks up and returns a complex function or nil.
func LookupFunctionComplex (name string )FunctionComplex {_bdbb .Lock ();defer _bdbb .Unlock ();if _befba ,_defdf :=_bbbbf [name ];_defdf {return _befba ;};return nil ;};

// Today is an implementation of the Excel TODAY() function.
func Today (args []Result )Result {if len (args )> 0{return MakeErrorResult ("\u0054\u004f\u0044A\u0059\u0020\u0064\u006fe\u0073\u006e\u0027\u0074\u0020\u0072\u0065q\u0075\u0069\u0072\u0065\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0073");};_ebfg :=_f .Now ();_ ,_gdf :=_ebfg .Zone ();_cga :=_degf (_gee ,_ebfg .Unix ()+int64 (_gdf ))+1;return MakeNumberResult (_cga );};func _aa (_agc BinOpType ,_dg ,_bb [][]Result )Result {_gfg :=[][]Result {};for _ebe :=range _dg {_ebd :=_fb (_agc ,_dg [_ebe ],_bb [_ebe ]);if _ebd .Type ==ResultTypeError {return _ebd ;};_gfg =append (_gfg ,_ebd .ValueList );};return MakeArrayResult (_gfg );};

// NewEmptyExpr constructs a new empty expression.
func NewEmptyExpr ()Expression {return EmptyExpr {}};const _bgdc =57355;

// Coupdaysnc implements the Excel COUPDAYSNC function.
func Coupdaysnc (args []Result )Result {_afad ,_fggg :=_fggc (args ,"\u0043\u004f\u0055\u0050\u0044\u0041\u0059\u0053\u004e\u0043");if _fggg .Type ==ResultTypeError {return _fggg ;};return MakeNumberResult (_gfee (_afad ._dcd ,_afad ._efce ,_afad ._bfeg ,_afad ._gdb ));};var _gaaeb =[...]struct{_dbce int ;_cggc int ;_ffgbc string ;}{};var _adeac =[]ri {{1000,"\u004d"},{990,"\u0058\u004d"},{950,"\u004c\u004d"},{900,"\u0043\u004d"},{500,"\u0044"},{490,"\u0058\u0044"},{450,"\u004c\u0044"},{400,"\u0043\u0044"},{100,"\u0043"},{99,"\u0049\u0043"},{90,"\u0058\u0043"},{50,"\u004c"},{45,"\u0056\u004c"},{40,"\u0058\u004c"},{10,"\u0058"},{9,"\u0049\u0058"},{5,"\u0056"},{4,"\u0049\u0056"},{1,"\u0049"}};

// MakeEmptyResult is ued when parsing an empty argument.
func MakeEmptyResult ()Result {return Result {Type :ResultTypeEmpty }};func _efeee (_efcc []Result )(float64 ,float64 ,Result ){_eecad :=0.0;_ecfe :=1.0;for _ ,_bebc :=range _efcc {switch _bebc .Type {case ResultTypeNumber :_eecad +=_bebc .ValueNumber ;_ecfe *=_dgbga (_bebc .ValueNumber );case ResultTypeList ,ResultTypeArray :_ecgf ,_abff ,_cbbaa :=_efeee (_bebc .ListValues ());_eecad +=_ecgf ;_ecfe *=_dgbga (_abff );if _cbbaa .Type ==ResultTypeError {return 0,0,_cbbaa ;};case ResultTypeString :return 0,0,MakeErrorResult ("M\u0055\u004c\u0054\u0049\u004e\u004f\u004d\u0049\u0041\u004c\u0028\u0029\u0020\u0072\u0065\u0071\u0075\u0069r\u0065\u0073\u0020\u006e\u0075\u006d\u0065\u0072\u0069\u0063 a\u0072\u0067\u0075m\u0065n\u0074\u0073");case ResultTypeError :return 0,0,_bebc ;};};return _eecad ,_ecfe ,_ega ;};

// Ceiling is an implementation of the CEILING function which
// returns the ceiling of a number.
func Ceiling (args []Result )Result {if len (args )==0{return MakeErrorResult ("C\u0045\u0049\u004c\u0049\u004e\u0047\u0028\u0029\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020a\u0074\u0020\u006c\u0065\u0061\u0073\u0074\u0020\u006f\u006ee \u0061\u0072\u0067u\u006de\u006e\u0074");};if len (args )> 2{return MakeErrorResult ("\u0043\u0045\u0049\u004c\u0049\u004e\u0047\u0028\u0029\u0020\u0061\u006c\u006c\u006f\u0077\u0073\u0020\u0061\u0074\u0020\u006d\u006f\u0073\u0074 \u0074\u0077\u006f\u0020\u0061r\u0067\u0075m\u0065\u006e\u0074\u0073");};_ecabe :=args [0].AsNumber ();if _ecabe .Type !=ResultTypeNumber {return MakeErrorResult ("\u0066i\u0072\u0073t\u0020\u0061\u0072\u0067u\u006d\u0065\u006et\u0020\u0074\u006f\u0020\u0043\u0045\u0049\u004c\u0049NG\u0028\u0029\u0020m\u0075\u0073t\u0020\u0062\u0065\u0020\u0061\u0020n\u0075\u006db\u0065\u0072");};_fddbc :=float64 (1);if _ecabe .ValueNumber < 0{_fddbc =-1;};if len (args )> 1{_ceca :=args [1].AsNumber ();if _ceca .Type !=ResultTypeNumber {return MakeErrorResult ("\u0073e\u0063\u006fn\u0064\u0020\u0061r\u0067\u0075\u006d\u0065\u006e\u0074\u0020t\u006f\u0020\u0043\u0045\u0049\u004cI\u004e\u0047\u0028\u0029\u0020\u006d\u0075\u0073\u0074\u0020\u0062e\u0020\u0061\u0020\u006e\u0075\u006d\u0062\u0065\u0072");};_fddbc =_ceca .ValueNumber ;};if _fddbc < 0&&_ecabe .ValueNumber > 0{return MakeErrorResultType (ErrorTypeNum ,"\u006e\u0065\u0067\u0061\u0074\u0069v\u0065\u0020\u0073\u0069\u0067\u0020\u0074\u006f\u0020\u0043\u0045\u0049\u004cI\u004e\u0047\u0028\u0029\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};if len (args )==1{return MakeNumberResult (_ea .Ceil (_ecabe .ValueNumber ));};_bgfe :=_ecabe .ValueNumber ;_bgfe ,_efddf :=_ea .Modf (_bgfe /_fddbc );if _efddf > 0{_bgfe ++;};return MakeNumberResult (_bgfe *_fddbc );};

// MakeErrorResult constructs a #VALUE! error with a given extra error message.
// The error message is for debugging formula evaluation only and is not stored
// in the sheet.
func MakeErrorResult (msg string )Result {return MakeErrorResultType (ErrorTypeValue ,msg )};

// NewString constructs a new string expression.
func NewString (v string )Expression {v =_ce .Replace (v ,"\u0022\u0022","\u0022",-1);return String {_defca :v };};

// Reference returns a string reference value to a horizontal range.
func (_agfee HorizontalRange )Reference (ctx Context ,ev Evaluator )Reference {return Reference {Type :ReferenceTypeHorizontalRange ,Value :_agfee .horizontalRangeReference ()};};

// Yield implements the Excel YIELD function.
func Yield (args []Result )Result {_afdbc :=len (args );if _afdbc !=6&&_afdbc !=7{return MakeErrorResult ("\u0059\u0049E\u004c\u0044\u0020\u0072e\u0071\u0075i\u0072\u0065\u0073\u0020\u0073\u0069\u0078\u0020o\u0072\u0020\u0073\u0065\u0076\u0065\u006e\u0020\u0061\u0072\u0067\u0075m\u0065\u006e\u0074\u0073");};_aggb ,_cfbf ,_bbbb :=_egcf (args [0],args [1],"\u0059\u0049\u0045L\u0044");if _bbbb .Type ==ResultTypeError {return _bbbb ;};_babgd :=args [2];if _babgd .Type !=ResultTypeNumber {return MakeErrorResult ("\u0059\u0049\u0045LD\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073 \u0072a\u0074e\u0020o\u0066\u0020\u0074\u0079\u0070\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072");};_fadd :=_babgd .ValueNumber ;if _fadd < 0{return MakeErrorResultType (ErrorTypeNum ,"R\u0061\u0074\u0065\u0020\u0073\u0068o\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u006e\u006fn\u0020\u006e\u0065g\u0061t\u0069\u0076\u0065");};_agcbd :=args [3];if _agcbd .Type !=ResultTypeNumber {return MakeErrorResult ("\u0059\u0049\u0045\u004c\u0044\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020p\u0072 \u006f\u0066\u0020\u0074\u0079\u0070\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072");};_bdeb :=_agcbd .ValueNumber ;if _bdeb <=0{return MakeErrorResultType (ErrorTypeNum ,"p\u0072\u0020\u0073\u0068ou\u006cd\u0020\u0062\u0065\u0020\u0070o\u0073\u0069\u0074\u0069\u0076\u0065");};_agbdd :=args [4];if _agbdd .Type !=ResultTypeNumber {return MakeErrorResult ("Y\u0049\u0045\u004c\u0044\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0072\u0065\u0064\u0065m\u0070\u0074\u0069\u006f\u006e\u0020\u006f\u0066\u0020\u0074yp\u0065\u0020\u006eu\u006db\u0065\u0072");};_ccbf :=_agbdd .ValueNumber ;if _ccbf < 0{return MakeErrorResultType (ErrorTypeNum ,"\u0059\u0069\u0065\u006cd\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065 \u006eo\u006e\u0020\u006e\u0065\u0067\u0061\u0074i\u0076\u0065");};_dfcd :=args [5];if _dfcd .Type !=ResultTypeNumber {return MakeErrorResult ("\u0059\u0049\u0045\u004c\u0044\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065s\u0020\u0066\u0072\u0065\u0071\u0075e\u006e\u0063\u0079\u0020\u006f\u0066\u0020\u0074\u0079\u0070\u0065\u0020\u006eu\u006d\u0062\u0065\u0072");};_dbdaf :=float64 (int (_dfcd .ValueNumber ));if !_cad (_dbdaf ){return MakeErrorResultType (ErrorTypeNum ,"\u0049n\u0063\u006f\u0072\u0072e\u0063\u0074\u0020\u0066\u0072e\u0071u\u0065n\u0063\u0065\u0020\u0076\u0061\u006c\u0075e");};_cdba :=0;if _afdbc ==7&&args [6].Type !=ResultTypeEmpty {_afaaf :=args [6];if _afaaf .Type !=ResultTypeNumber {return MakeErrorResult ("Y\u0049\u0045\u004c\u0044\u0020\u0072e\u0071\u0075\u0069\u0072\u0065\u0073 \u0062\u0061\u0073\u0069\u0073\u0020\u006ff\u0020\u0074\u0079\u0070\u0065\u0020\u006e\u0075\u006d\u0062e\u0072");};_cdba =int (_afaaf .ValueNumber );if !_aaac (_cdba ){return MakeErrorResultType (ErrorTypeNum ,"\u0049\u006e\u0063o\u0072\u0072\u0065\u0063t\u0020\u0062\u0061\u0073\u0069\u0073\u0020v\u0061\u006c\u0075\u0065\u0020\u0066\u006f\u0072\u0020\u0059\u0049\u0045\u004c\u0044");};};_fgaa :=0.0;_eabd :=0.0;_eadb :=1.0;_ggabc ,_bbbb :=_ddcb (_aggb ,_cfbf ,_fadd ,_eabd ,_ccbf ,_dbdaf ,_cdba );if _bbbb .Type ==ResultTypeError {return _bbbb ;};_baedd ,_bbbb :=_ddcb (_aggb ,_cfbf ,_fadd ,_eadb ,_ccbf ,_dbdaf ,_cdba );if _bbbb .Type ==ResultTypeError {return _bbbb ;};_ggbbc :=(_eadb -_eabd )*0.5;for _bbca :=0;_bbca < 100&&_fgaa !=_bdeb ;_bbca ++{_fgaa ,_bbbb =_ddcb (_aggb ,_cfbf ,_fadd ,_ggbbc ,_ccbf ,_dbdaf ,_cdba );if _bbbb .Type ==ResultTypeError {return _bbbb ;};if _bdeb ==_ggabc {return MakeNumberResult (_eabd );}else if _bdeb ==_baedd {return MakeNumberResult (_eadb );}else if _bdeb ==_fgaa {return MakeNumberResult (_ggbbc );}else if _bdeb < _baedd {_eadb *=2.0;_baedd ,_bbbb =_ddcb (_aggb ,_cfbf ,_fadd ,_eadb ,_ccbf ,_dbdaf ,_cdba );if _bbbb .Type ==ResultTypeError {return _bbbb ;};_ggbbc =(_eadb -_eabd )*0.5;}else {if _bdeb < _fgaa {_eabd =_ggbbc ;_ggabc =_fgaa ;}else {_eadb =_ggbbc ;_baedd =_fgaa ;};_ggbbc =_eadb -(_eadb -_eabd )*((_bdeb -_baedd )/(_ggabc -_baedd ));};};return MakeNumberResult (_ggbbc );};const _agge =86400000000000;

// Effect implements the Excel EFFECT function.
func Effect (args []Result )Result {if len (args )!=2{return MakeErrorResult ("\u0045\u0046F\u0045\u0043\u0054\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0074\u0077\u006f\u0020\u0061\u0072\u0067\u0075\u006den\u0074\u0073");};if args [0].Type !=ResultTypeNumber {return MakeErrorResult ("\u0045\u0046\u0046\u0045\u0043\u0054\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u006e\u006f\u006d\u0069n\u0061\u006c\u0020\u0069\u006e\u0074\u0065\u0072\u0065\u0073\u0074\u0020\u0072\u0061\u0074\u0065\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020a\u0072\u0067\u0075\u006d\u0065n\u0074");};_cfcb :=args [0].ValueNumber ;if _cfcb <=0{return MakeErrorResultType (ErrorTypeNum ,"\u0045\u0046\u0046\u0045\u0043\u0054\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u006e\u006f\u006d\u0069n\u0061\u006c\u0020\u0069\u006e\u0074\u0065\u0072\u0065\u0073\u0074\u0020\u0072\u0061\u0074\u0065\u0020\u0074\u006f\u0020\u0062e\u0020\u0070\u006f\u0073\u0069\u0074\u0069\u0076\u0065\u0020\u006e\u0075\u006d\u0062e\u0072\u0020\u0061r\u0067\u0075\u006d\u0065\u006e\u0074");};if args [1].Type !=ResultTypeNumber {return MakeErrorResult ("\u0045\u0046\u0046\u0045\u0043\u0054 \u0072\u0065\u0071\u0075\u0069r\u0065\u0073\u0020\u006e\u0075\u006db\u0065\u0072\u0020\u006f\u0066 \u0063\u006f\u006d\u0070\u006f\u0075\u006e\u0064\u0069\u006e\u0067\u0020p\u0065\u0072\u0069\u006f\u0064\u0073\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u006e\u0075m\u0062\u0065\u0072\u0020\u0061\u0072\u0067\u0075m\u0065\u006e\u0074");};_aga :=float64 (int (args [1].ValueNumber ));if _aga < 1{return MakeErrorResultType (ErrorTypeNum ,"E\u0046\u0046\u0045\u0043\u0054\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u006f\u0066\u0020\u0063o\u006dp\u006f\u0075\u006e\u0064i\u006e\u0067 \u0070\u0065\u0072\u0069\u006f\u0064\u0073\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u0031\u0020\u006f\u0072\u0020\u006d\u006f\u0072\u0065");};return MakeNumberResult (_ea .Pow ((1+_cfcb /_aga ),_aga )-1);};

// Trim is an implementation of the Excel TRIM function that removes leading,
// trailing and consecutive spaces.
func Trim (args []Result )Result {if len (args )!=1{return MakeErrorResult ("\u0054\u0052\u0049\u004d\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0061\u0020\u0073\u0069\u006e\u0067\u006c\u0065\u0020\u0073t\u0072\u0069\u006e\u0067\u0020a\u0072\u0067u\u006d\u0065\u006e\u0074");};_dbca :=args [0].AsString ();if _dbca .Type !=ResultTypeString {return MakeErrorResult ("\u0054\u0052\u0049\u004d\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0061\u0020\u0073\u0069\u006e\u0067\u006c\u0065\u0020\u0073t\u0072\u0069\u006e\u0067\u0020a\u0072\u0067u\u006d\u0065\u006e\u0074");};_ccgc :=_cb .Buffer {};_bbde :=false ;_cbcfc :=false ;_ecdda :=0;for _ ,_ccgdcd :=range _dbca .ValueString {_bfdc :=_ccgdcd ==' ';if _bfdc {if !_bbde {continue ;};if !_cbcfc {_ecdda ++;_ccgc .WriteRune (_ccgdcd );};}else {_ecdda =0;_bbde =true ;_ccgc .WriteRune (_ccgdcd );};_cbcfc =_bfdc ;};_ccgc .Truncate (_ccgc .Len ()-_ecdda );return MakeStringResult (_ccgc .String ());};

// Number is a nubmer expression.
type Number struct{_bcfc float64 };var _ega Result =MakeEmptyResult ();var _aegfd =[]ri {{1000,"\u004d"},{950,"\u004c\u004d"},{900,"\u0043\u004d"},{500,"\u0044"},{450,"\u004c\u0044"},{400,"\u0043\u0044"},{100,"\u0043"},{95,"\u0056\u0043"},{90,"\u0058\u0043"},{50,"\u004c"},{45,"\u0056\u004c"},{40,"\u0058\u004c"},{10,"\u0058"},{9,"\u0049\u0058"},{5,"\u0056"},{4,"\u0049\u0056"},{1,"\u0049"}};

// LastRow returns 0 for the invalid reference context.
func (_cddb *ivr )LastRow (colFrom string )int {return 0};

// String returns a string representation of a horizontal range.
func (_ceded HorizontalRange )String ()string {return _ceded .horizontalRangeReference ()};func _gcfbc (_aabac string )string {_aabac =_ce .Replace (_aabac ,"\u000a","\u005c\u006e",-1);_aabac =_ce .Replace (_aabac ,"\u000d","\u005c\u0072",-1);_aabac =_ce .Replace (_aabac ,"\u0009","\u005c\u0074",-1);return _aabac ;};const _abddc =57347;

// Update updates references in the PrefixVerticalRange after removing a row/column.
func (_dcfed PrefixVerticalRange )Update (q *_ff .UpdateQuery )Expression {if q .UpdateType ==_ff .UpdateActionRemoveColumn {_ddcg :=_dcfed ;_agag :=_dcfed ._fcbe .String ();if _agag ==q .SheetToUpdate {_fbbcf :=q .ColumnIdx ;_ddcg ._acba =_fed (_dcfed ._acba ,_fbbcf );_ddcg ._fcgge =_fed (_dcfed ._fcgge ,_fbbcf );};return _ddcg ;};return _dcfed ;};

// Result is the result of a formula or cell evaluation .
type Result struct{ValueNumber float64 ;ValueString string ;ValueList []Result ;ValueArray [][]Result ;IsBoolean bool ;ErrorMessage string ;Type ResultType ;Ref Reference ;};const _edfd =57370;const _abg ="\u0028\u0028\u005b\u0030\u002d\u0039\u005d\u0029\u002b\u0029\u002d\u0028\u0028\u005b\u0030-\u0039]\u0029\u002b\u0029\u002d\u0028\u0028\u005b\u0030\u002d\u0039\u005d\u0029\u002b\u0029";const _bcdf =187;

// ISNONTEXT is an implementation of the Excel ISNONTEXT() function.
func IsNonText (args []Result )Result {if len (args )!=1{return MakeErrorResult ("\u0049\u0053N\u004f\u004e\u0054\u0045X\u0054\u0028)\u0020\u0061\u0063\u0063\u0065\u0070\u0074\u0073 \u0061\u0020\u0073\u0069\u006e\u0067\u006c\u0065\u0020\u0061\u0072\u0067u\u006d\u0065\u006e\u0074");};return MakeBoolResult (args [0].Type !=ResultTypeString );};

// NewNegate constructs a new negate expression.
func NewNegate (e Expression )Expression {return Negate {_eaaad :e }};var ReferenceInvalid =Reference {Type :ReferenceTypeInvalid };func MakeRangeReference (ref string )Reference {return Reference {Type :ReferenceTypeRange ,Value :ref }};

// FunctionCall is a function call expression.
type FunctionCall struct{_cacb string ;_bdegf []Expression ;};func NewLexer ()*Lexer {return &Lexer {_cbcbf :make (chan *node )}};func _dbfe (_ege ,_cee int )int {switch _cee {case 1:if _gdc (_ege ){return 366;}else {return 365;};case 3:return 365;default:return 360;};};func (_egfg *yyParserImpl )Lookahead ()int {return _egfg ._bdbfc };

// Pricedisc implements the Excel PRICEDISC function.
func Pricedisc (args []Result )Result {_bgcac :=len (args );if _bgcac !=4&&_bgcac !=5{return MakeErrorResult ("\u0050\u0052\u0049\u0043\u0045D\u0049\u0053\u0043\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020f\u006f\u0075\u0072\u0020\u006f\u0072\u0020\u0066\u0069\u0076\u0065\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0073");};_ddgg ,_gabe ,_fcacf :=_egcf (args [0],args [1],"\u0050R\u0049\u0043\u0045\u0044\u0049\u0053C");if _fcacf .Type ==ResultTypeError {return _fcacf ;};if args [2].Type !=ResultTypeNumber {return MakeErrorResult ("\u0050\u0052\u0049C\u0045\u0044\u0049\u0053\u0043\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0064\u0069\u0073\u0063\u006f\u0075\u006e\u0074\u0020\u006f\u0066\u0020\u0074\u0079p\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072");};_bafc :=args [2].ValueNumber ;if _bafc <=0{return MakeErrorResultType (ErrorTypeNum ,"\u0050\u0052\u0049C\u0045\u0044\u0049\u0053\u0043\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0064\u0069\u0073\u0063\u006f\u0075\u006e\u0074\u0020\u0074\u006f\u0020\u0062\u0065 \u0070\u006f\u0073\u0069\u0074\u0069\u0076\u0065");};if args [3].Type !=ResultTypeNumber {return MakeErrorResult ("\u0050R\u0049\u0043E\u0044\u0049\u0053\u0043 \u0072\u0065\u0071u\u0069\u0072\u0065\u0073\u0020\u0072\u0065\u0064\u0065mp\u0074\u0069\u006fn\u0020\u006ff\u0020\u0074\u0079\u0070\u0065\u0020n\u0075\u006db\u0065\u0072");};_feega :=args [3].ValueNumber ;if _feega <=0{return MakeErrorResultType (ErrorTypeNum ,"\u0050R\u0049\u0043E\u0044\u0049\u0053\u0043 \u0072\u0065\u0071u\u0069\u0072\u0065\u0073\u0020\u0072\u0065\u0064\u0065mp\u0074\u0069\u006fn\u0020\u0074o\u0020\u0062\u0065\u0020\u0070\u006fs\u0069\u0074i\u0076\u0065");};_eagd :=0;if _bgcac ==5&&args [4].Type !=ResultTypeEmpty {if args [4].Type !=ResultTypeNumber {return MakeErrorResult ("\u0050\u0052I\u0043\u0045\u0044\u0049\u0053\u0043\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0062\u0061\u0073\u0069\u0073\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};_eagd =int (args [4].ValueNumber );if !_aaac (_eagd ){return MakeErrorResultType (ErrorTypeNum ,"\u0049\u006e\u0063\u006f\u0072\u0072\u0065\u0063\u0074\u0020\u0062\u0061\u0073\u0069\u0073\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074 \u0066\u006f\u0072\u0020\u0050R\u0049\u0043E\u0044\u0049\u0053\u0043");};};_fega ,_fcacf :=_eaee (_ddgg ,_gabe ,_eagd );if _fcacf .Type ==ResultTypeError {return _fcacf ;};return MakeNumberResult (_feega *(1-_bafc *_fega ));};

// Pmt implements the Excel PMT function.
func Pmt (args []Result )Result {_egdd :=len (args );if _egdd < 3||_egdd > 5{return MakeErrorResult ("\u0050\u004dT\u0020\u0072\u0065\u0071\u0075i\u0072\u0065\u0073\u0020\u006eu\u006d\u0062\u0065\u0072\u0020\u006f\u0066\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0073\u0020\u0069\u006e\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u006f\u0066\u0020\u0033\u0020\u0061\u006e\u0064\u0020\u0035");};if args [0].Type !=ResultTypeNumber {return MakeErrorResult ("\u0050\u004d\u0054\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020r\u0061\u0074\u0065\u0020\u0074\u006f \u0062\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0061\u0072\u0067u\u006d\u0065\u006e\u0074");};_edec :=args [0].ValueNumber ;if args [1].Type !=ResultTypeNumber {return MakeErrorResult ("\u0050\u004dT\u0020\u0072\u0065\u0071\u0075i\u0072\u0065\u0073\u0020\u006eu\u006d\u0062\u0065\u0072\u0020\u006f\u0066\u0020\u0070\u0065\u0072\u0069\u006f\u0064\u0073\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};_acfb :=args [1].ValueNumber ;if _acfb ==0{return MakeErrorResultType (ErrorTypeNum ,"\u0050\u004d\u0054\u0020\u0072e\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u006e\u0075\u006d\u0062\u0065\u0072 \u006f\u0066\u0020\u0070\u0065\u0072\u0069\u006f\u0064\u0073\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u006e\u006f\u0074\u0020\u0065\u0071\u0075\u0061\u006c\u0020\u0074\u006f\u00200");};if args [2].Type !=ResultTypeNumber {return MakeErrorResult ("\u0050\u004d\u0054\u0020\u0072\u0065\u0071\u0075i\u0072\u0065\u0073 p\u0072\u0065\u0073\u0065\u006e\u0074 \u0076\u0061\u006c\u0075\u0065\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006db\u0065\u0072\u0020\u0061\u0072\u0067\u0075\u006de\u006e\u0074");};_gbgb :=args [2].ValueNumber ;_egf :=0.0;if _egdd >=4&&args [3].Type !=ResultTypeEmpty {if args [3].Type !=ResultTypeNumber {return MakeErrorResult ("P\u004d\u0054\u0020\u0072\u0065\u0071\u0075\u0069\u0072e\u0073\u0020\u0066\u0075\u0074\u0075\u0072e \u0076\u0061\u006c\u0075e\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u006e\u0075mb\u0065\u0072 \u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};_egf =args [3].ValueNumber ;};_abgge :=0.0;if _egdd ==5&&args [4].Type !=ResultTypeEmpty {if args [4].Type !=ResultTypeNumber {return MakeErrorResult ("\u0050\u004d\u0054\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020t\u0079\u0070\u0065\u0020\u0074\u006f \u0062\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0061\u0072\u0067u\u006d\u0065\u006e\u0074");};_abgge =args [4].ValueNumber ;if _abgge !=0{_abgge =1;};};var _bdad float64 ;if _edec ==0{_bdad =(_gbgb +_egf )/_acfb ;}else {_bddf :=_ea .Pow (1+_edec ,_acfb );if _abgge ==1{_bdad =(_egf *_edec /(_bddf -1)+_gbgb *_edec /(1-1/_bddf ))/(1+_edec );}else {_bdad =_egf *_edec /(_bddf -1)+_gbgb *_edec /(1-1/_bddf );};};return MakeNumberResult (-_bdad );};

// Floor is an implementation of the FlOOR function.
func Floor (args []Result )Result {if len (args )!=2{return MakeErrorResult ("\u0046\u004c\u004f\u004f\u0052\u0028\u0029\u0020\u0072\u0065q\u0075\u0069\u0072\u0065\u0073\u0020\u0074w\u006f\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0073");};_cffc :=args [0].AsNumber ();if _cffc .Type !=ResultTypeNumber {return MakeErrorResult ("\u0066\u0069\u0072s\u0074\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0020\u0074\u006f\u0020\u0046\u004c\u004f\u004f\u0052\u0028\u0029\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065 \u0061\u0020\u006e\u0075\u006d\u0062\u0065\u0072");};var _acdf float64 ;_abcfb :=args [1].AsNumber ();if _abcfb .Type !=ResultTypeNumber {return MakeErrorResult ("\u0073\u0065\u0063\u006f\u006e\u0064\u0020a\u0072\u0067\u0075m\u0065\u006e\u0074\u0020t\u006f\u0020\u0046\u004c\u004f\u004f\u0052\u0028\u0029\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020\u0061\u0020\u006e\u0075\u006d\u0062\u0065\u0072");};_acdf =_abcfb .ValueNumber ;if _acdf < 0&&_cffc .ValueNumber >=0{return MakeErrorResultType (ErrorTypeNum ,"\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0061\u0072\u0067u\u006d\u0065\u006e\u0074\u0073\u0020\u0074\u006f\u0020\u0046L\u004f\u004f\u0052");};_cagb :=_cffc .ValueNumber ;_cagb ,_ddbab :=_ea .Modf (_cagb /_acdf );if _ddbab !=0{if _cffc .ValueNumber < 0&&_ddbab < 0{_cagb --;};};return MakeNumberResult (_cagb *_acdf );};const _gfaad =57367;func _febd (_aefg ,_adag ,_abdd ,_ecf ,_addb float64 ,_ebga int )float64 {_degbf :=_gbac (_aefg ,_abdd ,_ecf ,_addb ,_ebga );var _agbd float64 ;if _adag ==1{if _ebga ==1{_agbd =0;}else {_agbd =-_ecf ;};}else {if _ebga ==1{_agbd =_cgcf (_aefg ,_adag -2,_degbf ,_ecf ,1)-_degbf ;}else {_agbd =_cgcf (_aefg ,_adag -1,_degbf ,_ecf ,0);};};return _agbd *_aefg ;};func _cdec (_aba ,_bgca _f .Time ,_gbag int )_f .Time {_efe :=_f .Date (_aba .Year (),_bgca .Month (),_bgca .Day (),0,0,0,0,_f .UTC );if _efe .After (_aba ){_efe =_efe .AddDate (-1,0,0);};for !_efe .After (_aba ){_efe =_efe .AddDate (0,12/_gbag ,0);};return _efe ;};

// NewSheetPrefixExpr constructs a new prefix expression.
func NewSheetPrefixExpr (s string )Expression {return &SheetPrefixExpr {_bcff :s }};

// Parse parses an io.Reader to get an Expression. If expression is parsed with an error, nil is returned
func Parse (r _c .Reader )Expression {_fdcb :=&plex {_cdbac :LexReader (r )};_gcdg (_fdcb );if _fdcb ._bccce !=""{return nil ;};return _fdcb ._gbceg ;};var _fdgcd =map[string ]bool {"\u0049F\u0045\u0052\u0052\u004f\u0052":true ,"\u0049\u0046\u004e\u0041":true ,"\u005f\u0078\u006c\u0066\u006e\u002e\u0049\u0046\u004e\u0041":true ,"\u0049\u0053\u0045R\u0052":true ,"\u0049S\u0045\u0052\u0052\u004f\u0052":true ,"\u0049\u0053\u004e\u0041":true ,"\u0049\u0053\u0052E\u0046":true };

// Update updates the horizontal range references after removing a row/column.
func (_bbebb HorizontalRange )Update (q *_ff .UpdateQuery )Expression {return _bbebb };

// If is an implementation of the Excel IF() function. It takes one, two or
// three arguments.
func If (args []Result )Result {if len (args )< 2{return MakeErrorResult ("\u0049\u0046\u0020re\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0061\u0074 \u006ce\u0061s\u0074 \u0074\u0077\u006f\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0073");};if len (args )> 3{return MakeErrorResult ("\u0049\u0046\u0020ac\u0063\u0065\u0070\u0074\u0073\u0020\u0061\u0074\u0020m\u006fs\u0074 \u0074h\u0072\u0065\u0065\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0073");};_abce :=args [0];switch _abce .Type {case ResultTypeError :return _abce ;case ResultTypeNumber :if len (args )==1{return MakeBoolResult (_abce .ValueNumber !=0);};if _abce .ValueNumber !=0{return args [1];};if len (args )==3{return args [2];}else {return MakeBoolResult (false );};case ResultTypeList :return _fbbfd (args );case ResultTypeArray :return _bggg (args );default:return MakeErrorResult ("\u0049F\u0020\u0069n\u0069\u0074\u0069\u0061l\u0020\u0061\u0072g\u0075\u006d\u0065\u006e\u0074\u0020\u006d\u0075\u0073t \u0062\u0065\u0020n\u0075\u006de\u0072\u0069\u0063\u0020\u006f\u0072 \u0061\u0072r\u0061\u0079");};};const _dffdg =57374;func _bggg (_ccaa []Result )Result {_cdac :=_ccaa [0].ValueArray ;if len (_ccaa )==1{_gedc :=[][]Result {};for _ ,_bacg :=range _cdac {_gedc =append (_gedc ,_fbbfd ([]Result {MakeListResult (_bacg )}).ValueList );};return MakeArrayResult (_gedc );}else if len (_ccaa )==2{_gaff :=len (_cdac );_fabga :=len (_cdac [0]);_gdgbc :=_bcga (_ccaa [1],_gaff ,_fabga );_gfce :=len (_gdgbc );_eeeg :=[][]Result {};var _agdd []Result ;for _fcfbe ,_becbc :=range _cdac {if _fcfbe < _gfce {_agdd =_gdgbc [_fcfbe ];}else {_agdd =_afcg (MakeErrorResultType (ErrorTypeNA ,""),_fabga );};_eeeg =append (_eeeg ,_fbbfd ([]Result {MakeListResult (_becbc ),MakeListResult (_agdd )}).ValueList );};return MakeArrayResult (_eeeg );}else if len (_ccaa )==3{_fede :=len (_cdac );_edda :=len (_cdac [0]);_gedce :=_bcga (_ccaa [1],_fede ,_edda );_dffc :=_bcga (_ccaa [2],_fede ,_edda );_cfag :=len (_gedce );_gbce :=len (_dffc );_aeeef :=[][]Result {};var _cbff ,_bdcae []Result ;for _dgbee ,_baab :=range _cdac {if _dgbee < _cfag {_cbff =_gedce [_dgbee ];}else {_cbff =_afcg (MakeErrorResultType (ErrorTypeNA ,""),_edda );};if _dgbee < _gbce {_bdcae =_dffc [_dgbee ];}else {_bdcae =_afcg (MakeErrorResultType (ErrorTypeNA ,""),_edda );};_aeeef =append (_aeeef ,_fbbfd ([]Result {MakeListResult (_baab ),MakeListResult (_cbff ),MakeListResult (_bdcae )}).ValueList );};return MakeArrayResult (_aeeef );};return MakeErrorResultType (ErrorTypeValue ,"");};const (_edgef countMode =iota ;_ebgf ;_fegc ;);func _eaeg (_fgbce string )*criteriaRegex {_cgdc :=&criteriaRegex {};if _fgbce ==""{return _cgdc ;};if _feccb :=_cfbec .FindStringSubmatch (_fgbce );len (_feccb )> 1{_cgdc ._beaf =_fedg ;_cgdc ._ebdee =_feccb [1];}else if _dcdf :=_ddec .FindStringSubmatch (_fgbce );len (_dcdf )> 1{_cgdc ._beaf =_fedg ;_cgdc ._ebdee =_dcdf [1];}else if _daaa :=_effe .FindStringSubmatch (_fgbce );len (_daaa )> 1{_cgdc ._beaf =_eead ;_cgdc ._ebdee =_daaa [1];}else if _gfagf :=_agbbd .FindStringSubmatch (_fgbce );len (_gfagf )> 1{_cgdc ._beaf =_gdcg ;_cgdc ._ebdee =_gfagf [1];}else if _abfag :=_dbfcg .FindStringSubmatch (_fgbce );len (_abfag )> 1{_cgdc ._beaf =_gcceb ;_cgdc ._ebdee =_abfag [1];}else if _ddfg :=_abbd .FindStringSubmatch (_fgbce );len (_ddfg )> 1{_cgdc ._beaf =_efdgd ;_cgdc ._ebdee =_ddfg [1];};return _cgdc ;};

// Intrate implements the Excel INTRATE function.
func Intrate (args []Result )Result {_gaag :=len (args );if _gaag !=4&&_gaag !=5{return MakeErrorResult ("\u0049\u004e\u0054\u0052\u0041\u0054\u0045\u0020\u0072\u0065\u0071\u0075\u0069r\u0065\u0073\u0020\u0066\u006f\u0075r\u0020\u006f\u0072\u0020\u0066\u0069\u0076\u0065\u0020\u0061\u0072\u0067\u0075m\u0065\u006e\u0074\u0073");};_deeba ,_ddgd ,_dbda :=_egcf (args [0],args [1],"\u0049N\u0054\u0052\u0041\u0054\u0045");if _dbda .Type ==ResultTypeError {return _dbda ;};if args [2].Type !=ResultTypeNumber {return MakeErrorResult ("\u0049\u004e\u0054\u0052\u0041\u0054E\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0069\u006e\u0076\u0065\u0073\u0074\u006d\u0065\u006e\u0074 \u0074\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0061r\u0067u\u006d\u0065\u006e\u0074");};_edbab :=args [2].ValueNumber ;if _edbab <=0{return MakeErrorResultType (ErrorTypeNum ,"\u0049\u004e\u0054\u0052\u0041\u0054\u0045\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0069\u006e\u0076e\u0073\u0074\u006d\u0065\u006e\u0074\u0020\u0074\u006f \u0062\u0065\u0020\u0070\u006f\u0073\u0069\u0074\u0069\u0076\u0065\u0020\u006eu\u006d\u0062\u0065\u0072\u0020\u0061r\u0067\u0075\u006de\u006e\u0074");};if args [3].Type !=ResultTypeNumber {return MakeErrorResult ("\u0049\u004e\u0054\u0052\u0041\u0054E\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0072\u0065\u0064\u0065\u006d\u0070\u0074\u0069\u006f\u006e \u0074\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0061r\u0067u\u006d\u0065\u006e\u0074");};_bedb :=args [3].ValueNumber ;if _bedb <=0{return MakeErrorResultType (ErrorTypeNum ,"\u0049\u004e\u0054\u0052\u0041\u0054\u0045\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0072\u0065\u0064e\u006d\u0070\u0074\u0069\u006f\u006e\u0020\u0074\u006f \u0062\u0065\u0020\u0070\u006f\u0073\u0069\u0074\u0069\u0076\u0065\u0020\u006eu\u006d\u0062\u0065\u0072\u0020\u0061r\u0067\u0075\u006de\u006e\u0074");};_bdge :=0;if _gaag ==5&&args [4].Type !=ResultTypeEmpty {if args [4].Type !=ResultTypeNumber {return MakeErrorResult ("\u0049N\u0054\u0052A\u0054\u0045\u0020\u0072e\u0071\u0075\u0069r\u0065\u0073\u0020\u0062\u0061\u0073\u0069\u0073\u0020to\u0020\u0062\u0065 \u006e\u0075m\u0062\u0065\u0072\u0020\u0061\u0072g\u0075\u006de\u006e\u0074");};_bdge =int (args [4].ValueNumber );if !_aaac (_bdge ){return MakeErrorResultType (ErrorTypeNum ,"\u0049\u006eco\u0072\u0072\u0065c\u0074\u0020\u0062\u0061sis\u0020ar\u0067\u0075\u006d\u0065\u006e\u0074\u0020fo\u0072\u0020\u0049\u004e\u0054\u0052\u0041T\u0045");};};_bffd ,_dbda :=_eaee (_deeba ,_ddgd ,_bdge );if _dbda .Type ==ResultTypeError {return _dbda ;};return MakeNumberResult ((_bedb -_edbab )/_edbab /_bffd );};const _gcfb =57351;

// Reference returns an invalid reference for FunctionCall.
func (_aggef FunctionCall )Reference (ctx Context ,ev Evaluator )Reference {return ReferenceInvalid };

// Eval evaluates a range returning a list of results or an error.
func (_cbdcd Range )Eval (ctx Context ,ev Evaluator )Result {_ebaaf :=_cbdcd ._cdacg .Reference (ctx ,ev );_gcfbg :=_cbdcd ._faceba .Reference (ctx ,ev );_ebdd :=_bebb (_ebaaf ,_gcfbg );if _ebaaf .Type ==ReferenceTypeCell &&_gcfbg .Type ==ReferenceTypeCell {if _afcde ,_dggc :=ev .GetFromCache (_ebdd );_dggc {return _afcde ;}else {_feada :=_fceb (ctx ,ev ,_ebaaf .Value ,_gcfbg .Value );ev .SetCache (_ebdd ,_feada );return _feada ;};};return MakeErrorResult ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072a\u006e\u0067\u0065\u0020"+_ebdd );};var (_eacgd =0;_feabb =false ;);func Trunc (args []Result )Result {if len (args )==0{return MakeErrorResult ("T\u0052\u0055\u004e\u0043\u0028\u0029\u0020\u0072\u0065q\u0075\u0069\u0072\u0065\u0073\u0020\u0061t \u006c\u0065\u0061\u0073t\u0020\u006f\u006e\u0065\u0020\u006e\u0075\u006d\u0065ri\u0063\u0020a\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0073");};_dafbb :=args [0].AsNumber ();if _dafbb .Type !=ResultTypeNumber {return MakeErrorResult ("\u0066\u0069\u0072s\u0074\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0020\u0074\u006f\u0020\u0054\u0052\u0055\u004e\u0043\u0028\u0029\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065 \u0061\u0020\u006e\u0075\u006d\u0062\u0065\u0072");};_aacfd :=float64 (0);if len (args )> 1{_efdg :=args [1].AsNumber ();if _efdg .Type !=ResultTypeNumber {return MakeErrorResult ("\u0073\u0065\u0063\u006f\u006e\u0064\u0020a\u0072\u0067\u0075m\u0065\u006e\u0074\u0020t\u006f\u0020\u0054\u0052\u0055\u004e\u0043\u0028\u0029\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020\u0061\u0020\u006e\u0075\u006d\u0062\u0065\u0072");};_aacfd =_efdg .ValueNumber ;};_faeg :=_dafbb .ValueNumber ;_bbddb :=1.0;if _aacfd >=0{_bbddb =_ea .Pow (1/10.0,_aacfd );}else {return MakeNumberResult (0);};_faeg ,_acef :=_ea .Modf (_faeg /_bbddb );_cadb :=0.99999;if _acef > _cadb {_faeg ++;}else if _acef < -_cadb {_faeg --;};_ =_acef ;return MakeNumberResult (_faeg *_bbddb );};func _fbbfd (_dedb []Result )Result {_gdac :=_dedb [0].ValueList ;_bbba :=len (_gdac );switch len (_dedb ){case 1:_dgedg :=[]Result {};for _ ,_gfgce :=range _gdac {_dgedg =append (_dgedg ,MakeBoolResult (_gfgce .ValueNumber !=0));};return MakeListResult (_dgedg );case 2:_gbcga :=_dedb [1];switch _gbcga .Type {case ResultTypeNumber ,ResultTypeString ,ResultTypeEmpty :_acga :=[]Result {};for _ ,_dcfeg :=range _gdac {var _dfdd Result ;if _dcfeg .ValueNumber ==0{_dfdd =MakeBoolResult (false );}else {_dfdd =_gbcga ;};_acga =append (_acga ,_dfdd );};return MakeListResult (_acga );case ResultTypeList :_dege :=_afcg (_gbcga ,_bbba );_ecddg :=[]Result {};for _baadd ,_decf :=range _gdac {var _fgca Result ;if _decf .ValueNumber ==0{_fgca =MakeBoolResult (false );}else {_fgca =_dege [_baadd ];};_ecddg =append (_ecddg ,_fgca );};return MakeListResult (_ecddg );case ResultTypeArray :_bcad :=_bcga (_gbcga ,len (_gbcga .ValueArray ),_bbba );_bfgc :=[][]Result {};for _ ,_cggb :=range _bcad {_bfaf :=[]Result {};for _edeag ,_geef :=range _gdac {var _aagf Result ;if _geef .ValueNumber ==0{_aagf =MakeBoolResult (false );}else {_aagf =_cggb [_edeag ];};_bfaf =append (_bfaf ,_aagf );};_bfgc =append (_bfgc ,_bfaf );};return MakeArrayResult (_bfgc );};case 3:_fgef :=_dedb [1];_aegc :=_dedb [2];_fdgf :=_eedb (_fgef );_cagd :=_eedb (_aegc );if _fdgf &&_cagd {_cfce :=[]Result {};for _ ,_cgfa :=range _gdac {var _faag Result ;if _cgfa .ValueNumber ==0{_faag =_aegc ;}else {_faag =_fgef ;};_cfce =append (_cfce ,_faag );};return MakeListResult (_cfce );};if _fgef .Type !=ResultTypeArray &&_aegc .Type !=ResultTypeArray {_bga :=_afcg (_fgef ,_bbba );_dgae :=_afcg (_aegc ,_bbba );_aagbe :=[]Result {};for _aeceg ,_gfacb :=range _gdac {var _eggba Result ;if _gfacb .ValueNumber ==0{_eggba =_dgae [_aeceg ];}else {_eggba =_bga [_aeceg ];};_aagbe =append (_aagbe ,_eggba );};return MakeListResult (_aagbe );};_ggef ,_efac :=len (_fgef .ValueArray ),len (_aegc .ValueArray );_acda ,_efeec :=_ggef ,_efac ;if _efac > _acda {_acda ,_efeec =_efeec ,_acda ;};_fdaf :=_bcga (_fgef ,_acda ,_bbba );_daed :=_bcga (_aegc ,_acda ,_bbba );_acad :=[][]Result {};for _abfa :=0;_abfa < _acda ;_abfa ++{_ageb :=[]Result {};for _ffccb ,_geg :=range _gdac {var _gece Result ;if _geg .ValueNumber ==0{if _abfa < _efac {_gece =_daed [_abfa ][_ffccb ];}else {_gece =MakeErrorResultType (ErrorTypeNA ,"");};}else {if _abfa < _ggef {_gece =_fdaf [_abfa ][_ffccb ];}else {_gece =MakeErrorResultType (ErrorTypeNA ,"");};};_ageb =append (_ageb ,_gece );};_acad =append (_acad ,_ageb );};return MakeArrayResult (_acad );};return MakeErrorResult ("");};

// Update updates references in the Negate after removing a row/column.
func (_egcea Negate )Update (q *_ff .UpdateQuery )Expression {return Negate {_eaaad :_egcea ._eaaad .Update (q )};};

// Power is an implementation of the Excel POWER function that raises a number
// to a power. It requires two numeric arguments.
func Power (args []Result )Result {if len (args )!=2{return MakeErrorResult ("\u0050\u004f\u0057\u0045\u0052\u0028\u0029\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0074\u0077\u006f\u0020\u006e\u0075\u006de\u0072\u0069\u0063\u0020\u0061r\u0067\u0075m\u0065\u006e\u0074\u0073");};_egec :=args [0].AsNumber ();if _egec .Type !=ResultTypeNumber {return MakeErrorResult ("\u0066\u0069\u0072s\u0074\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0020\u0074\u006f\u0020\u0050\u004f\u0057\u0045\u0052\u0028\u0029\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065 \u0061\u0020\u006e\u0075\u006d\u0062\u0065\u0072");};_efgb :=args [1].AsNumber ();if _efgb .Type !=ResultTypeNumber {return MakeErrorResult ("\u0073\u0065\u0063\u006f\u006e\u0064\u0020a\u0072\u0067\u0075m\u0065\u006e\u0074\u0020t\u006f\u0020\u0050\u004f\u0057\u0045\u0052\u0028\u0029\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020\u0061\u0020\u006e\u0075\u006d\u0062\u0065\u0072");};return MakeNumberResult (_ea .Pow (_egec .ValueNumber ,_efgb .ValueNumber ));};const _ecbe =57348;func _aef (_gada int )int {if _gada < 1900{if _gada < 30{_gada +=2000;}else {_gada +=1900;};};return _gada ;};

// BinOpType is the binary operation operator type
//go:generate stringer -type=BinOpType
type BinOpType byte ;const _abaea =57368;func _cdbd (_gede ,_aded ,_afc ,_bff int )int {if !_cdea (_bff ){return _afc ;};_cgf :=_afc ;_agd :=_aeee (_gede ,_aded );if _cgf > 30||_afc >=_agd ||_cgf >=_agd {_cgf =30;};return _cgf ;};

// Cumipmt implements the Excel CUMIPMT function.
func Cumipmt (args []Result )Result {_beaa ,_feaf :=_ecce (args ,"\u0043U\u004d\u0049\u0050\u004d\u0054");if _feaf .Type ==ResultTypeError {return _feaf ;};_gage :=_beaa ._bbcg ;_cgc :=_beaa ._baca ;_dcef :=_beaa ._fbd ;_gfgg :=_beaa ._bgbge ;_aeca :=_beaa ._eeca ;_cgce :=_beaa ._cbgab ;_dfg :=_gbac (_gage ,_cgc ,_dcef ,0,_cgce );_bgfg :=0.0;if _gfgg ==1{if _cgce ==0{_bgfg =-_dcef ;_gfgg ++;};};for _bedg :=_gfgg ;_bedg <=_aeca ;_bedg ++{if _cgce ==1{_bgfg +=_cgcf (_gage ,_bedg -2,_dfg ,_dcef ,1)-_dfg ;}else {_bgfg +=_cgcf (_gage ,_bedg -1,_dfg ,_dcef ,0);};};_bgfg *=_gage ;return MakeNumberResult (_bgfg );};

// Value is an implementation of the Excel VALUE function.
func Value (args []Result )Result {if len (args )!=1{return MakeErrorResult ("\u0056\u0041\u004c\u0055\u0045\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020a\u0020s\u0069\u006e\u0067\u006c\u0065\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};_cedf :=args [0];if _cedf .Type ==ResultTypeNumber {return _cedf ;};if _cedf .Type ==ResultTypeString {_ggagc ,_eeeec :=_gc .ParseFloat (_cedf .Value (),64);if _eeeec ==nil {return MakeNumberResult (_ggagc );};};return MakeErrorResult ("\u0049\u006e\u0063\u006fr\u0072\u0065\u0063\u0074\u0020\u0061\u0072\u0067\u0075\u006de\u006et\u0020\u0066\u006f\u0072\u0020\u0056\u0041L\u0055\u0045");};func _bfc (_bfbc ,_bfef ,_cge int )bool {if _bfef < 1||_bfef > 12{return false ;};if _cge < 1{return false ;};return _cge <=_aeee (_bfbc ,_bfef );};

// ISFORMULA is an implementation of the Excel ISFORMULA() function.
func IsFormula (ctx Context ,ev Evaluator ,args []Result )Result {if len (args )!=1{return MakeErrorResult ("\u0049\u0053F\u004f\u0052\u004d\u0055L\u0041\u0028)\u0020\u0061\u0063\u0063\u0065\u0070\u0074\u0073 \u0061\u0020\u0073\u0069\u006e\u0067\u006c\u0065\u0020\u0061\u0072\u0067u\u006d\u0065\u006e\u0074");};_becgf :=args [0].Ref ;if _becgf .Type !=ReferenceTypeCell {return MakeErrorResult ("I\u0053\u0046\u004f\u0052\u004d\u0055\u004c\u0041\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0074\u0068\u0065\u0020\u0066\u0069\u0072\u0073t\u0020a\u0072\u0067\u0075\u006de\u006e\u0074 \u0074\u006f\u0020\u0062\u0065\u0020\u006f\u0066\u0020\u0074\u0079\u0070\u0065\u0020\u0072\u0065\u0066\u0065\u0072\u0065\u006e\u0063\u0065");};return MakeBoolResult (ctx .HasFormula (_becgf .Value ));};func _gdc (_gbb int )bool {if _gbb ==_gbb /400*400{return true ;};if _gbb ==_gbb /100*100{return false ;};return _gbb ==_gbb /4*4;};var _addd =[...]int {0,1,1,2,4,1,1,1,1,2,2,1,1,1,1,3,1,3,1,3,1,3,1,2,1,1,1,3,4,1,1,1,2,2,3,3,3,3,3,3,3,3,3,3,3,3,1,2,3,1,3,1,1,0};

// Received implements the Excel RECEIVED function.
func Received (args []Result )Result {_gefc :=len (args );if _gefc !=4&&_gefc !=5{return MakeErrorResult ("R\u0045\u0043\u0045\u0049\u0056\u0045\u0044\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0066o\u0075\u0072\u0020\u006f\u0072\u0020\u0066\u0069\u0076\u0065 a\u0072\u0067\u0075m\u0065n\u0074\u0073");};_fgcb ,_agda ,_eddd :=_egcf (args [0],args [1],"\u0052\u0045\u0043\u0045\u0049\u0056\u0045\u0044");if _eddd .Type ==ResultTypeError {return _eddd ;};if args [2].Type !=ResultTypeNumber {return MakeErrorResult ("\u0052\u0045\u0043\u0045\u0049\u0056\u0045\u0044\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020i\u006e\u0076\u0065\u0073\u0074\u006d\u0065n\u0074\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006db\u0065\u0072\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};_gcaece :=args [2].ValueNumber ;if _gcaece <=0{return MakeErrorResultType (ErrorTypeNum ,"\u0052\u0045\u0043\u0045\u0049\u0056\u0045\u0044\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0069\u006ev\u0065\u0073\u0074\u006d\u0065\u006e\u0074\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u0070\u006f\u0073\u0069\u0074\u0069\u0076\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020a\u0072\u0067\u0075\u006d\u0065n\u0074");};if args [3].Type !=ResultTypeNumber {return MakeErrorResult ("\u0052\u0045\u0043\u0045\u0049\u0056\u0045\u0044 \u0072\u0065\u0071ui\u0072\u0065\u0073\u0020\u0064\u0069s\u0063\u006f\u0075\u006e\u0074\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006db\u0065\u0072\u0020\u0061\u0072\u0067\u0075\u006de\u006e\u0074");};_baec :=args [3].ValueNumber ;if _baec <=0{return MakeErrorResultType (ErrorTypeNum ,"\u0052\u0045\u0043\u0045I\u0056\u0045\u0044\u0020\u0072\u0065\u0071\u0075\u0069r\u0065\u0073\u0020\u0064\u0069\u0073\u0063\u006f\u0075\u006e\u0074\u0020\u0074\u006f\u0020\u0062\u0065\u0020p\u006f\u0073\u0069\u0074\u0069v\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};_cefaa :=0;if _gefc ==5&&args [4].Type !=ResultTypeEmpty {if args [4].Type !=ResultTypeNumber {return MakeErrorResult ("\u0052E\u0043\u0045I\u0056\u0045\u0044 \u0072\u0065\u0071\u0075\u0069\u0072\u0065s\u0020\u0062\u0061\u0073\u0069\u0073 \u0074\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006d\u0062\u0065r\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};_cefaa =int (args [4].ValueNumber );if !_aaac (_cefaa ){return MakeErrorResultType (ErrorTypeNum ,"\u0049\u006ec\u006f\u0072\u0072\u0065c\u0074\u0020b\u0061\u0073\u0069\u0073\u0020\u0061\u0072\u0067u\u006d\u0065\u006e\u0074\u0020\u0066\u006f\u0072\u0020\u0052\u0045\u0043E\u0049\u0056\u0045\u0044");};};_cdeg ,_eddd :=_eaee (_fgcb ,_agda ,_cefaa );if _eddd .Type ==ResultTypeError {return _eddd ;};return MakeNumberResult (_gcaece /(1-_baec *_cdeg ));};func (_cdcc *Lexer )lex (_afedd _c .Reader ){_adcec ,_adaeb ,_eeaf :=0,0,0;_cedgc :=-1;_fgbcf ,_gbfbgg ,_aeae :=0,0,0;_ =_aeae ;_acea :=1;_ =_acea ;_cbfagd :=make ([]byte ,4096);_dcgd :=false ;for !_dcgd {_eddb :=0;if _fgbcf > 0{_eddb =_adaeb -_fgbcf ;};_adaeb =0;_faaf ,_cabaf :=_afedd .Read (_cbfagd [_eddb :]);if _faaf ==0||_cabaf !=nil {_dcgd =true ;};_eeaf =_faaf +_eddb ;if _eeaf < len (_cbfagd ){_cedgc =_eeaf ;};{_adcec =_eabga ;_fgbcf =0;_gbfbgg =0;_aeae =0;};{var _dffb int ;var _gcdaa uint ;if _adaeb ==_eeaf {goto _cfea ;};if _adcec ==0{goto _febde ;};_dfgg :_dffb =int (_ecbef [_adcec ]);_gcdaa =uint (_edbdc [_dffb ]);_dffb ++;for ;_gcdaa > 0;_gcdaa --{_dffb ++;switch _edbdc [_dffb -1]{case 2:_fgbcf =_adaeb ;};};switch _adcec {case 30:switch _cbfagd [_adaeb ]{case 34:goto _dcdab ;case 35:goto _fgbdb ;case 36:goto _bcdb ;case 38:goto _edcaf ;case 39:goto _bbdbg ;case 40:goto _afbb ;case 41:goto _dcbf ;case 42:goto _efed ;case 43:goto _bcaf ;case 44:goto _ffbdd ;case 45:goto _fcee ;case 47:goto _ebdeb ;case 58:goto _daffb ;case 59:goto _adgbf ;case 60:goto _bdecd ;case 61:goto _bdec ;case 62:goto _dfdf ;case 63:goto _bdfef ;case 70:goto _ebgfca ;case 84:goto _gcebg ;case 92:goto _edaa ;case 94:goto _edeba ;case 95:goto _cdfgd ;case 123:goto _efabca ;case 125:goto _bcecf ;};switch {case _cbfagd [_adaeb ]< 65:switch {case _cbfagd [_adaeb ]> 37:if 48<=_cbfagd [_adaeb ]&&_cbfagd [_adaeb ]<=57{goto _eaffb ;};case _cbfagd [_adaeb ]>=33:goto _bdfef ;};case _cbfagd [_adaeb ]> 90:switch {case _cbfagd [_adaeb ]> 93:if 97<=_cbfagd [_adaeb ]&&_cbfagd [_adaeb ]<=122{goto _gefac ;};case _cbfagd [_adaeb ]>=91:goto _bdfef ;};default:goto _dedc ;};goto _cdab ;case 1:switch _cbfagd [_adaeb ]{case 33:goto _fbed ;case 47:goto _fgda ;case 123:goto _fgda ;case 125:goto _fgda ;};switch {case _cbfagd [_adaeb ]< 37:if 34<=_cbfagd [_adaeb ]&&_cbfagd [_adaeb ]<=35{goto _fgda ;};case _cbfagd [_adaeb ]> 45:switch {case _cbfagd [_adaeb ]> 63:if 91<=_cbfagd [_adaeb ]&&_cbfagd [_adaeb ]<=94{goto _fgda ;};case _cbfagd [_adaeb ]>=58:goto _fgda ;};default:goto _fgda ;};goto _cdab ;case 0:goto _febde ;case 2:if _cbfagd [_adaeb ]==34{goto _bgaea ;};goto _dcdab ;case 31:if _cbfagd [_adaeb ]==34{goto _dcdab ;};goto _ebfb ;case 3:switch _cbfagd [_adaeb ]{case 78:goto _eda ;case 82:goto _abfec ;};goto _bdfef ;case 4:switch _cbfagd [_adaeb ]{case 47:goto _eaaa ;case 85:goto _affga ;};goto _bdfef ;case 5:if _cbfagd [_adaeb ]==65{goto _bcge ;};goto _bdfef ;case 6:switch _cbfagd [_adaeb ]{case 76:goto _dcfb ;case 77:goto _eceab ;};goto _bdfef ;case 7:if _cbfagd [_adaeb ]==76{goto _eceab ;};goto _bdfef ;case 8:if _cbfagd [_adaeb ]==33{goto _bcge ;};goto _bdfef ;case 9:if _cbfagd [_adaeb ]==69{goto _ggbfcf ;};goto _bdfef ;case 10:if _cbfagd [_adaeb ]==70{goto _fcag ;};goto _bdfef ;case 11:if _cbfagd [_adaeb ]==33{goto _ddbb ;};goto _bdfef ;case 12:switch _cbfagd [_adaeb ]{case 33:goto _fbed ;case 47:goto _bdfef ;case 123:goto _bdfef ;case 125:goto _bdfef ;};switch {case _cbfagd [_adaeb ]< 48:switch {case _cbfagd [_adaeb ]> 35:if 37<=_cbfagd [_adaeb ]&&_cbfagd [_adaeb ]<=45{goto _bdfef ;};case _cbfagd [_adaeb ]>=34:goto _bdfef ;};case _cbfagd [_adaeb ]> 57:switch {case _cbfagd [_adaeb ]< 65:if 58<=_cbfagd [_adaeb ]&&_cbfagd [_adaeb ]<=63{goto _bdfef ;};case _cbfagd [_adaeb ]> 90:if 91<=_cbfagd [_adaeb ]&&_cbfagd [_adaeb ]<=94{goto _bdfef ;};default:goto _dbbc ;};default:goto _ebbd ;};goto _cdab ;case 13:switch _cbfagd [_adaeb ]{case 33:goto _fbed ;case 47:goto _bdfef ;case 58:goto _acadf ;case 123:goto _bdfef ;case 125:goto _bdfef ;};switch {case _cbfagd [_adaeb ]< 48:switch {case _cbfagd [_adaeb ]> 35:if 37<=_cbfagd [_adaeb ]&&_cbfagd [_adaeb ]<=45{goto _bdfef ;};case _cbfagd [_adaeb ]>=34:goto _bdfef ;};case _cbfagd [_adaeb ]> 57:switch {case _cbfagd [_adaeb ]> 63:if 91<=_cbfagd [_adaeb ]&&_cbfagd [_adaeb ]<=94{goto _bdfef ;};case _cbfagd [_adaeb ]>=59:goto _bdfef ;};default:goto _ebbd ;};goto _cdab ;case 14:if _cbfagd [_adaeb ]==36{goto _gafc ;};if 48<=_cbfagd [_adaeb ]&&_cbfagd [_adaeb ]<=57{goto _gbedd ;};goto _fgda ;case 15:if 48<=_cbfagd [_adaeb ]&&_cbfagd [_adaeb ]<=57{goto _gbedd ;};goto _fgda ;case 32:if 48<=_cbfagd [_adaeb ]&&_cbfagd [_adaeb ]<=57{goto _gbedd ;};goto _gdfdf ;case 16:switch _cbfagd [_adaeb ]{case 33:goto _fbed ;case 36:goto _fbbg ;case 47:goto _bdfef ;case 58:goto _fcdf ;case 123:goto _bdfef ;case 125:goto _bdfef ;};switch {case _cbfagd [_adaeb ]< 59:switch {case _cbfagd [_adaeb ]> 45:if 48<=_cbfagd [_adaeb ]&&_cbfagd [_adaeb ]<=57{goto _ddbf ;};case _cbfagd [_adaeb ]>=34:goto _bdfef ;};case _cbfagd [_adaeb ]> 63:switch {case _cbfagd [_adaeb ]> 90:if 91<=_cbfagd [_adaeb ]&&_cbfagd [_adaeb ]<=94{goto _bdfef ;};case _cbfagd [_adaeb ]>=65:goto _dbbc ;};default:goto _bdfef ;};goto _cdab ;case 17:switch _cbfagd [_adaeb ]{case 33:goto _fbed ;case 47:goto _fgda ;case 123:goto _fgda ;case 125:goto _fgda ;};switch {case _cbfagd [_adaeb ]< 48:switch {case _cbfagd [_adaeb ]> 35:if 37<=_cbfagd [_adaeb ]&&_cbfagd [_adaeb ]<=45{goto _fgda ;};case _cbfagd [_adaeb ]>=34:goto _fgda ;};case _cbfagd [_adaeb ]> 57:switch {case _cbfagd [_adaeb ]> 63:if 91<=_cbfagd [_adaeb ]&&_cbfagd [_adaeb ]<=94{goto _fgda ;};case _cbfagd [_adaeb ]>=58:goto _fgda ;};default:goto _ddbf ;};goto _cdab ;case 33:switch _cbfagd [_adaeb ]{case 33:goto _fbed ;case 47:goto _gceaad ;case 123:goto _gceaad ;case 125:goto _gceaad ;};switch {case _cbfagd [_adaeb ]< 48:switch {case _cbfagd [_adaeb ]> 35:if 37<=_cbfagd [_adaeb ]&&_cbfagd [_adaeb ]<=45{goto _gceaad ;};case _cbfagd [_adaeb ]>=34:goto _gceaad ;};case _cbfagd [_adaeb ]> 57:switch {case _cbfagd [_adaeb ]> 63:if 91<=_cbfagd [_adaeb ]&&_cbfagd [_adaeb ]<=94{goto _gceaad ;};case _cbfagd [_adaeb ]>=58:goto _gceaad ;};default:goto _ddbf ;};goto _cdab ;case 18:if _cbfagd [_adaeb ]==36{goto _gdacd ;};if 65<=_cbfagd [_adaeb ]&&_cbfagd [_adaeb ]<=90{goto _gefag ;};goto _fgda ;case 19:if 65<=_cbfagd [_adaeb ]&&_cbfagd [_adaeb ]<=90{goto _gefag ;};goto _fgda ;case 34:if 65<=_cbfagd [_adaeb ]&&_cbfagd [_adaeb ]<=90{goto _gefag ;};goto _cdbb ;case 20:switch _cbfagd [_adaeb ]{case 39:goto _bdfef ;case 42:goto _bdfef ;case 47:goto _bdfef ;case 58:goto _bdfef ;case 63:goto _bdfef ;};if 91<=_cbfagd [_adaeb ]&&_cbfagd [_adaeb ]<=93{goto _bdfef ;};goto _gbed ;case 21:switch _cbfagd [_adaeb ]{case 39:goto _eceed ;case 42:goto _bdfef ;case 47:goto _bdfef ;case 58:goto _bdfef ;case 63:goto _bdfef ;};if 91<=_cbfagd [_adaeb ]&&_cbfagd [_adaeb ]<=93{goto _bdfef ;};goto _gbed ;case 22:if _cbfagd [_adaeb ]==33{goto _dcfc ;};goto _bdfef ;case 35:switch _cbfagd [_adaeb ]{case 33:goto _fbed ;case 46:goto _abffa ;case 58:goto _acadf ;case 101:goto _fcdgdb ;case 123:goto _dagbb ;case 125:goto _dagbb ;};switch {case _cbfagd [_adaeb ]< 48:switch {case _cbfagd [_adaeb ]> 35:if 37<=_cbfagd [_adaeb ]&&_cbfagd [_adaeb ]<=47{goto _dagbb ;};case _cbfagd [_adaeb ]>=34:goto _dagbb ;};case _cbfagd [_adaeb ]> 57:switch {case _cbfagd [_adaeb ]> 63:if 91<=_cbfagd [_adaeb ]&&_cbfagd [_adaeb ]<=94{goto _dagbb ;};case _cbfagd [_adaeb ]>=59:goto _dagbb ;};default:goto _eaffb ;};goto _cdab ;case 36:switch _cbfagd [_adaeb ]{case 33:goto _fbed ;case 47:goto _dagbb ;case 101:goto _fcdgdb ;case 123:goto _dagbb ;case 125:goto _dagbb ;};switch {case _cbfagd [_adaeb ]< 48:switch {case _cbfagd [_adaeb ]> 35:if 37<=_cbfagd [_adaeb ]&&_cbfagd [_adaeb ]<=45{goto _dagbb ;};case _cbfagd [_adaeb ]>=34:goto _dagbb ;};case _cbfagd [_adaeb ]> 57:switch {case _cbfagd [_adaeb ]> 63:if 91<=_cbfagd [_adaeb ]&&_cbfagd [_adaeb ]<=94{goto _dagbb ;};case _cbfagd [_adaeb ]>=58:goto _dagbb ;};default:goto _abffa ;};goto _cdab ;case 23:switch _cbfagd [_adaeb ]{case 33:goto _fbed ;case 47:goto _gdgf ;case 123:goto _gdgf ;case 125:goto _gdgf ;};switch {case _cbfagd [_adaeb ]< 48:switch {case _cbfagd [_adaeb ]> 35:if 37<=_cbfagd [_adaeb ]&&_cbfagd [_adaeb ]<=45{goto _gdgf ;};case _cbfagd [_adaeb ]>=34:goto _gdgf ;};case _cbfagd [_adaeb ]> 57:switch {case _cbfagd [_adaeb ]> 63:if 91<=_cbfagd [_adaeb ]&&_cbfagd [_adaeb ]<=94{goto _gdgf ;};case _cbfagd [_adaeb ]>=58:goto _gdgf ;};default:goto _eaeef ;};goto _cdab ;case 37:switch _cbfagd [_adaeb ]{case 33:goto _fbed ;case 47:goto _dagbb ;case 123:goto _dagbb ;case 125:goto _dagbb ;};switch {case _cbfagd [_adaeb ]< 48:switch {case _cbfagd [_adaeb ]> 35:if 37<=_cbfagd [_adaeb ]&&_cbfagd [_adaeb ]<=45{goto _dagbb ;};case _cbfagd [_adaeb ]>=34:goto _dagbb ;};case _cbfagd [_adaeb ]> 57:switch {case _cbfagd [_adaeb ]> 63:if 91<=_cbfagd [_adaeb ]&&_cbfagd [_adaeb ]<=94{goto _dagbb ;};case _cbfagd [_adaeb ]>=58:goto _dagbb ;};default:goto _eaeef ;};goto _cdab ;case 38:switch _cbfagd [_adaeb ]{case 61:goto _cdfa ;case 62:goto _eeeecb ;};goto _dfbe ;case 39:if _cbfagd [_adaeb ]==61{goto _bccec ;};goto _faee ;case 24:switch _cbfagd [_adaeb ]{case 33:goto _fbed ;case 36:goto _fbbg ;case 40:goto _dbege ;case 46:goto _fcbdg ;case 58:goto _fcdf ;case 92:goto _gbbfg ;case 95:goto _gefcb ;case 123:goto _bdfef ;case 125:goto _bdfef ;};switch {case _cbfagd [_adaeb ]< 59:switch {case _cbfagd [_adaeb ]> 47:if 48<=_cbfagd [_adaeb ]&&_cbfagd [_adaeb ]<=57{goto _bccef ;};case _cbfagd [_adaeb ]>=34:goto _bdfef ;};case _cbfagd [_adaeb ]> 63:switch {case _cbfagd [_adaeb ]< 91:if 65<=_cbfagd [_adaeb ]&&_cbfagd [_adaeb ]<=90{goto _ffde ;};case _cbfagd [_adaeb ]> 94:if 97<=_cbfagd [_adaeb ]&&_cbfagd [_adaeb ]<=122{goto _gefcb ;};default:goto _bdfef ;};default:goto _bdfef ;};goto _cdab ;case 40:switch _cbfagd [_adaeb ]{case 33:goto _fbed ;case 40:goto _dbege ;case 46:goto _fcbdg ;case 92:goto _gbbfg ;case 95:goto _gefcb ;case 123:goto _cgeaa ;case 125:goto _cgeaa ;};switch {case _cbfagd [_adaeb ]< 58:switch {case _cbfagd [_adaeb ]< 37:if 34<=_cbfagd [_adaeb ]&&_cbfagd [_adaeb ]<=35{goto _cgeaa ;};case _cbfagd [_adaeb ]> 47:if 48<=_cbfagd [_adaeb ]&&_cbfagd [_adaeb ]<=57{goto _fcbdg ;};default:goto _cgeaa ;};case _cbfagd [_adaeb ]> 63:switch {case _cbfagd [_adaeb ]< 91:if 65<=_cbfagd [_adaeb ]&&_cbfagd [_adaeb ]<=90{goto _fcbdg ;};case _cbfagd [_adaeb ]> 94:if 97<=_cbfagd [_adaeb ]&&_cbfagd [_adaeb ]<=122{goto _gefcb ;};default:goto _cgeaa ;};default:goto _cgeaa ;};goto _cdab ;case 41:switch _cbfagd [_adaeb ]{case 46:goto _gbbfg ;case 92:goto _gbbfg ;case 95:goto _gbbfg ;};switch {case _cbfagd [_adaeb ]< 65:if 48<=_cbfagd [_adaeb ]&&_cbfagd [_adaeb ]<=57{goto _gbbfg ;};case _cbfagd [_adaeb ]> 90:if 97<=_cbfagd [_adaeb ]&&_cbfagd [_adaeb ]<=122{goto _gbbfg ;};default:goto _gbbfg ;};goto _cgeaa ;case 42:switch _cbfagd [_adaeb ]{case 33:goto _fbed ;case 46:goto _gefcb ;case 92:goto _gbbfg ;case 95:goto _gefcb ;case 123:goto _cgeaa ;case 125:goto _cgeaa ;};switch {case _cbfagd [_adaeb ]< 58:switch {case _cbfagd [_adaeb ]< 37:if 34<=_cbfagd [_adaeb ]&&_cbfagd [_adaeb ]<=35{goto _cgeaa ;};case _cbfagd [_adaeb ]> 47:if 48<=_cbfagd [_adaeb ]&&_cbfagd [_adaeb ]<=57{goto _gefcb ;};default:goto _cgeaa ;};case _cbfagd [_adaeb ]> 63:switch {case _cbfagd [_adaeb ]< 91:if 65<=_cbfagd [_adaeb ]&&_cbfagd [_adaeb ]<=90{goto _gefcb ;};case _cbfagd [_adaeb ]> 94:if 97<=_cbfagd [_adaeb ]&&_cbfagd [_adaeb ]<=122{goto _gefcb ;};default:goto _cgeaa ;};default:goto _cgeaa ;};goto _cdab ;case 43:switch _cbfagd [_adaeb ]{case 33:goto _fbed ;case 40:goto _dbege ;case 46:goto _fcbdg ;case 92:goto _gbbfg ;case 95:goto _gefcb ;case 123:goto _gceaad ;case 125:goto _gceaad ;};switch {case _cbfagd [_adaeb ]< 58:switch {case _cbfagd [_adaeb ]< 37:if 34<=_cbfagd [_adaeb ]&&_cbfagd [_adaeb ]<=35{goto _gceaad ;};case _cbfagd [_adaeb ]> 47:if 48<=_cbfagd [_adaeb ]&&_cbfagd [_adaeb ]<=57{goto _bccef ;};default:goto _gceaad ;};case _cbfagd [_adaeb ]> 63:switch {case _cbfagd [_adaeb ]< 91:if 65<=_cbfagd [_adaeb ]&&_cbfagd [_adaeb ]<=90{goto _fcbdg ;};case _cbfagd [_adaeb ]> 94:if 97<=_cbfagd [_adaeb ]&&_cbfagd [_adaeb ]<=122{goto _gefcb ;};default:goto _gceaad ;};default:goto _gceaad ;};goto _cdab ;case 44:switch _cbfagd [_adaeb ]{case 33:goto _fbed ;case 36:goto _fbbg ;case 40:goto _dbege ;case 46:goto _fcbdg ;case 58:goto _fcdf ;case 92:goto _gbbfg ;case 95:goto _gefcb ;case 123:goto _fgda ;case 125:goto _fgda ;};switch {case _cbfagd [_adaeb ]< 59:switch {case _cbfagd [_adaeb ]> 47:if 48<=_cbfagd [_adaeb ]&&_cbfagd [_adaeb ]<=57{goto _bccef ;};case _cbfagd [_adaeb ]>=34:goto _fgda ;};case _cbfagd [_adaeb ]> 63:switch {case _cbfagd [_adaeb ]< 91:if 65<=_cbfagd [_adaeb ]&&_cbfagd [_adaeb ]<=90{goto _ffde ;};case _cbfagd [_adaeb ]> 94:if 97<=_cbfagd [_adaeb ]&&_cbfagd [_adaeb ]<=122{goto _gefcb ;};default:goto _fgda ;};default:goto _fgda ;};goto _cdab ;case 25:switch _cbfagd [_adaeb ]{case 33:goto _fbed ;case 36:goto _fbbg ;case 40:goto _dbege ;case 46:goto _fcbdg ;case 58:goto _fcdf ;case 65:goto _abdba ;case 92:goto _gbbfg ;case 95:goto _gefcb ;case 123:goto _bdfef ;case 125:goto _bdfef ;};switch {case _cbfagd [_adaeb ]< 59:switch {case _cbfagd [_adaeb ]> 47:if 48<=_cbfagd [_adaeb ]&&_cbfagd [_adaeb ]<=57{goto _bccef ;};case _cbfagd [_adaeb ]>=34:goto _bdfef ;};case _cbfagd [_adaeb ]> 63:switch {case _cbfagd [_adaeb ]< 91:if 66<=_cbfagd [_adaeb ]&&_cbfagd [_adaeb ]<=90{goto _ffde ;};case _cbfagd [_adaeb ]> 94:if 97<=_cbfagd [_adaeb ]&&_cbfagd [_adaeb ]<=122{goto _gefcb ;};default:goto _bdfef ;};default:goto _bdfef ;};goto _cdab ;case 45:switch _cbfagd [_adaeb ]{case 33:goto _fbed ;case 36:goto _fbbg ;case 40:goto _dbege ;case 46:goto _fcbdg ;case 58:goto _fcdf ;case 76:goto _aecc ;case 92:goto _gbbfg ;case 95:goto _gefcb ;case 123:goto _cgeaa ;case 125:goto _cgeaa ;};switch {case _cbfagd [_adaeb ]< 59:switch {case _cbfagd [_adaeb ]> 47:if 48<=_cbfagd [_adaeb ]&&_cbfagd [_adaeb ]<=57{goto _bccef ;};case _cbfagd [_adaeb ]>=34:goto _cgeaa ;};case _cbfagd [_adaeb ]> 63:switch {case _cbfagd [_adaeb ]< 91:if 65<=_cbfagd [_adaeb ]&&_cbfagd [_adaeb ]<=90{goto _ffde ;};case _cbfagd [_adaeb ]> 94:if 97<=_cbfagd [_adaeb ]&&_cbfagd [_adaeb ]<=122{goto _gefcb ;};default:goto _cgeaa ;};default:goto _cgeaa ;};goto _cdab ;case 46:switch _cbfagd [_adaeb ]{case 33:goto _fbed ;case 36:goto _fbbg ;case 40:goto _dbege ;case 46:goto _fcbdg ;case 58:goto _fcdf ;case 83:goto _bccd ;case 92:goto _gbbfg ;case 95:goto _gefcb ;case 123:goto _cgeaa ;case 125:goto _cgeaa ;};switch {case _cbfagd [_adaeb ]< 59:switch {case _cbfagd [_adaeb ]> 47:if 48<=_cbfagd [_adaeb ]&&_cbfagd [_adaeb ]<=57{goto _bccef ;};case _cbfagd [_adaeb ]>=34:goto _cgeaa ;};case _cbfagd [_adaeb ]> 63:switch {case _cbfagd [_adaeb ]< 91:if 65<=_cbfagd [_adaeb ]&&_cbfagd [_adaeb ]<=90{goto _ffde ;};case _cbfagd [_adaeb ]> 94:if 97<=_cbfagd [_adaeb ]&&_cbfagd [_adaeb ]<=122{goto _gefcb ;};default:goto _cgeaa ;};default:goto _cgeaa ;};goto _cdab ;case 47:switch _cbfagd [_adaeb ]{case 33:goto _fbed ;case 36:goto _fbbg ;case 40:goto _dbege ;case 46:goto _fcbdg ;case 58:goto _fcdf ;case 69:goto _dagg ;case 92:goto _gbbfg ;case 95:goto _gefcb ;case 123:goto _cgeaa ;case 125:goto _cgeaa ;};switch {case _cbfagd [_adaeb ]< 59:switch {case _cbfagd [_adaeb ]> 47:if 48<=_cbfagd [_adaeb ]&&_cbfagd [_adaeb ]<=57{goto _bccef ;};case _cbfagd [_adaeb ]>=34:goto _cgeaa ;};case _cbfagd [_adaeb ]> 63:switch {case _cbfagd [_adaeb ]< 91:if 65<=_cbfagd [_adaeb ]&&_cbfagd [_adaeb ]<=90{goto _ffde ;};case _cbfagd [_adaeb ]> 94:if 97<=_cbfagd [_adaeb ]&&_cbfagd [_adaeb ]<=122{goto _gefcb ;};default:goto _cgeaa ;};default:goto _cgeaa ;};goto _cdab ;case 26:switch _cbfagd [_adaeb ]{case 33:goto _fbed ;case 36:goto _fbbg ;case 40:goto _dbege ;case 46:goto _fcbdg ;case 58:goto _fcdf ;case 79:goto _ggaec ;case 82:goto _eccbe ;case 92:goto _gbbfg ;case 95:goto _gefcb ;case 123:goto _bdfef ;case 125:goto _bdfef ;};switch {case _cbfagd [_adaeb ]< 59:switch {case _cbfagd [_adaeb ]> 47:if 48<=_cbfagd [_adaeb ]&&_cbfagd [_adaeb ]<=57{goto _bccef ;};case _cbfagd [_adaeb ]>=34:goto _bdfef ;};case _cbfagd [_adaeb ]> 63:switch {case _cbfagd [_adaeb ]< 91:if 65<=_cbfagd [_adaeb ]&&_cbfagd [_adaeb ]<=90{goto _ffde ;};case _cbfagd [_adaeb ]> 94:if 97<=_cbfagd [_adaeb ]&&_cbfagd [_adaeb ]<=122{goto _gefcb ;};default:goto _bdfef ;};default:goto _bdfef ;};goto _cdab ;case 48:switch _cbfagd [_adaeb ]{case 33:goto _fbed ;case 36:goto _fbbg ;case 40:goto _dbege ;case 46:goto _fcbdg ;case 58:goto _fcdf ;case 68:goto _gabea ;case 92:goto _gbbfg ;case 95:goto _gefcb ;case 123:goto _cgeaa ;case 125:goto _cgeaa ;};switch {case _cbfagd [_adaeb ]< 59:switch {case _cbfagd [_adaeb ]> 47:if 48<=_cbfagd [_adaeb ]&&_cbfagd [_adaeb ]<=57{goto _bccef ;};case _cbfagd [_adaeb ]>=34:goto _cgeaa ;};case _cbfagd [_adaeb ]> 63:switch {case _cbfagd [_adaeb ]< 91:if 65<=_cbfagd [_adaeb ]&&_cbfagd [_adaeb ]<=90{goto _ffde ;};case _cbfagd [_adaeb ]> 94:if 97<=_cbfagd [_adaeb ]&&_cbfagd [_adaeb ]<=122{goto _gefcb ;};default:goto _cgeaa ;};default:goto _cgeaa ;};goto _cdab ;case 49:switch _cbfagd [_adaeb ]{case 33:goto _fbed ;case 36:goto _fbbg ;case 40:goto _dbege ;case 46:goto _fcbdg ;case 58:goto _fcdf ;case 79:goto _agcf ;case 92:goto _gbbfg ;case 95:goto _gefcb ;case 123:goto _cgeaa ;case 125:goto _cgeaa ;};switch {case _cbfagd [_adaeb ]< 59:switch {case _cbfagd [_adaeb ]> 47:if 48<=_cbfagd [_adaeb ]&&_cbfagd [_adaeb ]<=57{goto _bccef ;};case _cbfagd [_adaeb ]>=34:goto _cgeaa ;};case _cbfagd [_adaeb ]> 63:switch {case _cbfagd [_adaeb ]< 91:if 65<=_cbfagd [_adaeb ]&&_cbfagd [_adaeb ]<=90{goto _ffde ;};case _cbfagd [_adaeb ]> 94:if 97<=_cbfagd [_adaeb ]&&_cbfagd [_adaeb ]<=122{goto _gefcb ;};default:goto _cgeaa ;};default:goto _cgeaa ;};goto _cdab ;case 50:switch _cbfagd [_adaeb ]{case 33:goto _fbed ;case 36:goto _fbbg ;case 40:goto _dbege ;case 46:goto _fcbdg ;case 58:goto _fcdf ;case 85:goto _bccd ;case 92:goto _gbbfg ;case 95:goto _gefcb ;case 123:goto _cgeaa ;case 125:goto _cgeaa ;};switch {case _cbfagd [_adaeb ]< 59:switch {case _cbfagd [_adaeb ]> 47:if 48<=_cbfagd [_adaeb ]&&_cbfagd [_adaeb ]<=57{goto _bccef ;};case _cbfagd [_adaeb ]>=34:goto _cgeaa ;};case _cbfagd [_adaeb ]> 63:switch {case _cbfagd [_adaeb ]< 91:if 65<=_cbfagd [_adaeb ]&&_cbfagd [_adaeb ]<=90{goto _ffde ;};case _cbfagd [_adaeb ]> 94:if 97<=_cbfagd [_adaeb ]&&_cbfagd [_adaeb ]<=122{goto _gefcb ;};default:goto _cgeaa ;};default:goto _cgeaa ;};goto _cdab ;case 27:switch _cbfagd [_adaeb ]{case 46:goto _gbbfg ;case 92:goto _gbbfg ;case 95:goto _gbbfg ;};switch {case _cbfagd [_adaeb ]< 65:if 48<=_cbfagd [_adaeb ]&&_cbfagd [_adaeb ]<=57{goto _gbbfg ;};case _cbfagd [_adaeb ]> 90:if 97<=_cbfagd [_adaeb ]&&_cbfagd [_adaeb ]<=122{goto _gbbfg ;};default:goto _gbbfg ;};goto _bdfef ;case 28:switch _cbfagd [_adaeb ]{case 33:goto _fbed ;case 46:goto _gefcb ;case 92:goto _gbbfg ;case 95:goto _gefcb ;case 120:goto _baeg ;case 123:goto _bdfef ;case 125:goto _bdfef ;};switch {case _cbfagd [_adaeb ]< 58:switch {case _cbfagd [_adaeb ]< 37:if 34<=_cbfagd [_adaeb ]&&_cbfagd [_adaeb ]<=35{goto _bdfef ;};case _cbfagd [_adaeb ]> 47:if 48<=_cbfagd [_adaeb ]&&_cbfagd [_adaeb ]<=57{goto _gefcb ;};default:goto _bdfef ;};case _cbfagd [_adaeb ]> 63:switch {case _cbfagd [_adaeb ]< 91:if 65<=_cbfagd [_adaeb ]&&_cbfagd [_adaeb ]<=90{goto _gefcb ;};case _cbfagd [_adaeb ]> 94:if 97<=_cbfagd [_adaeb ]&&_cbfagd [_adaeb ]<=122{goto _gefcb ;};default:goto _bdfef ;};default:goto _bdfef ;};goto _cdab ;case 51:switch _cbfagd [_adaeb ]{case 33:goto _fbed ;case 46:goto _gefcb ;case 92:goto _gbbfg ;case 95:goto _gefcb ;case 108:goto _dbgd ;case 123:goto _cgeaa ;case 125:goto _cgeaa ;};switch {case _cbfagd [_adaeb ]< 58:switch {case _cbfagd [_adaeb ]< 37:if 34<=_cbfagd [_adaeb ]&&_cbfagd [_adaeb ]<=35{goto _cgeaa ;};case _cbfagd [_adaeb ]> 47:if 48<=_cbfagd [_adaeb ]&&_cbfagd [_adaeb ]<=57{goto _gefcb ;};default:goto _cgeaa ;};case _cbfagd [_adaeb ]> 63:switch {case _cbfagd [_adaeb ]< 91:if 65<=_cbfagd [_adaeb ]&&_cbfagd [_adaeb ]<=90{goto _gefcb ;};case _cbfagd [_adaeb ]> 94:if 97<=_cbfagd [_adaeb ]&&_cbfagd [_adaeb ]<=122{goto _gefcb ;};default:goto _cgeaa ;};default:goto _cgeaa ;};goto _cdab ;case 52:switch _cbfagd [_adaeb ]{case 33:goto _fbed ;case 46:goto _gefcb ;case 92:goto _gbbfg ;case 95:goto _gefcb ;case 102:goto _eddaf ;case 110:goto _adge ;case 123:goto _cgeaa ;case 125:goto _cgeaa ;};switch {case _cbfagd [_adaeb ]< 58:switch {case _cbfagd [_adaeb ]< 37:if 34<=_cbfagd [_adaeb ]&&_cbfagd [_adaeb ]<=35{goto _cgeaa ;};case _cbfagd [_adaeb ]> 47:if 48<=_cbfagd [_adaeb ]&&_cbfagd [_adaeb ]<=57{goto _gefcb ;};default:goto _cgeaa ;};case _cbfagd [_adaeb ]> 63:switch {case _cbfagd [_adaeb ]< 91:if 65<=_cbfagd [_adaeb ]&&_cbfagd [_adaeb ]<=90{goto _gefcb ;};case _cbfagd [_adaeb ]> 94:if 97<=_cbfagd [_adaeb ]&&_cbfagd [_adaeb ]<=122{goto _gefcb ;};default:goto _cgeaa ;};default:goto _cgeaa ;};goto _cdab ;case 53:switch _cbfagd [_adaeb ]{case 33:goto _fbed ;case 46:goto _gefcb ;case 92:goto _gbbfg ;case 95:goto _gefcb ;case 110:goto _fcgad ;case 123:goto _cgeaa ;case 125:goto _cgeaa ;};switch {case _cbfagd [_adaeb ]< 58:switch {case _cbfagd [_adaeb ]< 37:if 34<=_cbfagd [_adaeb ]&&_cbfagd [_adaeb ]<=35{goto _cgeaa ;};case _cbfagd [_adaeb ]> 47:if 48<=_cbfagd [_adaeb ]&&_cbfagd [_adaeb ]<=57{goto _gefcb ;};default:goto _cgeaa ;};case _cbfagd [_adaeb ]> 63:switch {case _cbfagd [_adaeb ]< 91:if 65<=_cbfagd [_adaeb ]&&_cbfagd [_adaeb ]<=90{goto _gefcb ;};case _cbfagd [_adaeb ]> 94:if 97<=_cbfagd [_adaeb ]&&_cbfagd [_adaeb ]<=122{goto _gefcb ;};default:goto _cgeaa ;};default:goto _cgeaa ;};goto _cdab ;case 54:switch _cbfagd [_adaeb ]{case 33:goto _fbed ;case 46:goto _cdefc ;case 92:goto _gbbfg ;case 95:goto _gefcb ;case 123:goto _cgeaa ;case 125:goto _cgeaa ;};switch {case _cbfagd [_adaeb ]< 58:switch {case _cbfagd [_adaeb ]< 37:if 34<=_cbfagd [_adaeb ]&&_cbfagd [_adaeb ]<=35{goto _cgeaa ;};case _cbfagd [_adaeb ]> 47:if 48<=_cbfagd [_adaeb ]&&_cbfagd [_adaeb ]<=57{goto _gefcb ;};default:goto _cgeaa ;};case _cbfagd [_adaeb ]> 63:switch {case _cbfagd [_adaeb ]< 91:if 65<=_cbfagd [_adaeb ]&&_cbfagd [_adaeb ]<=90{goto _gefcb ;};case _cbfagd [_adaeb ]> 94:if 97<=_cbfagd [_adaeb ]&&_cbfagd [_adaeb ]<=122{goto _gefcb ;};default:goto _cgeaa ;};default:goto _cgeaa ;};goto _cdab ;case 55:switch _cbfagd [_adaeb ]{case 33:goto _fbed ;case 46:goto _gefcb ;case 92:goto _gbbfg ;case 95:goto _dbced ;case 123:goto _cgeaa ;case 125:goto _cgeaa ;};switch {case _cbfagd [_adaeb ]< 58:switch {case _cbfagd [_adaeb ]< 37:if 34<=_cbfagd [_adaeb ]&&_cbfagd [_adaeb ]<=35{goto _cgeaa ;};case _cbfagd [_adaeb ]> 47:if 48<=_cbfagd [_adaeb ]&&_cbfagd [_adaeb ]<=57{goto _gefcb ;};default:goto _cgeaa ;};case _cbfagd [_adaeb ]> 63:switch {case _cbfagd [_adaeb ]< 91:if 65<=_cbfagd [_adaeb ]&&_cbfagd [_adaeb ]<=90{goto _dbced ;};case _cbfagd [_adaeb ]> 94:if 97<=_cbfagd [_adaeb ]&&_cbfagd [_adaeb ]<=122{goto _gefcb ;};default:goto _cgeaa ;};default:goto _cgeaa ;};goto _cdab ;case 56:switch _cbfagd [_adaeb ]{case 33:goto _fbed ;case 40:goto _gedb ;case 46:goto _dbced ;case 92:goto _gbbfg ;case 95:goto _gefcb ;case 123:goto _cgeaa ;case 125:goto _cgeaa ;};switch {case _cbfagd [_adaeb ]< 58:switch {case _cbfagd [_adaeb ]< 37:if 34<=_cbfagd [_adaeb ]&&_cbfagd [_adaeb ]<=35{goto _cgeaa ;};case _cbfagd [_adaeb ]> 47:if 48<=_cbfagd [_adaeb ]&&_cbfagd [_adaeb ]<=57{goto _dbced ;};default:goto _cgeaa ;};case _cbfagd [_adaeb ]> 63:switch {case _cbfagd [_adaeb ]< 91:if 65<=_cbfagd [_adaeb ]&&_cbfagd [_adaeb ]<=90{goto _dbced ;};case _cbfagd [_adaeb ]> 94:if 97<=_cbfagd [_adaeb ]&&_cbfagd [_adaeb ]<=122{goto _gefcb ;};default:goto _cgeaa ;};default:goto _cgeaa ;};goto _cdab ;case 57:switch _cbfagd [_adaeb ]{case 33:goto _fbed ;case 46:goto _gefcb ;case 92:goto _gbbfg ;case 95:goto _gefcb ;case 109:goto _dddb ;case 123:goto _cgeaa ;case 125:goto _cgeaa ;};switch {case _cbfagd [_adaeb ]< 58:switch {case _cbfagd [_adaeb ]< 37:if 34<=_cbfagd [_adaeb ]&&_cbfagd [_adaeb ]<=35{goto _cgeaa ;};case _cbfagd [_adaeb ]> 47:if 48<=_cbfagd [_adaeb ]&&_cbfagd [_adaeb ]<=57{goto _gefcb ;};default:goto _cgeaa ;};case _cbfagd [_adaeb ]> 63:switch {case _cbfagd [_adaeb ]< 91:if 65<=_cbfagd [_adaeb ]&&_cbfagd [_adaeb ]<=90{goto _gefcb ;};case _cbfagd [_adaeb ]> 94:if 97<=_cbfagd [_adaeb ]&&_cbfagd [_adaeb ]<=122{goto _gefcb ;};default:goto _cgeaa ;};default:goto _cgeaa ;};goto _cdab ;case 58:switch _cbfagd [_adaeb ]{case 33:goto _fbed ;case 46:goto _edffb ;case 92:goto _gbbfg ;case 95:goto _gefcb ;case 123:goto _cgeaa ;case 125:goto _cgeaa ;};switch {case _cbfagd [_adaeb ]< 58:switch {case _cbfagd [_adaeb ]< 37:if 34<=_cbfagd [_adaeb ]&&_cbfagd [_adaeb ]<=35{goto _cgeaa ;};case _cbfagd [_adaeb ]> 47:if 48<=_cbfagd [_adaeb ]&&_cbfagd [_adaeb ]<=57{goto _gefcb ;};default:goto _cgeaa ;};case _cbfagd [_adaeb ]> 63:switch {case _cbfagd [_adaeb ]< 91:if 65<=_cbfagd [_adaeb ]&&_cbfagd [_adaeb ]<=90{goto _gefcb ;};case _cbfagd [_adaeb ]> 94:if 97<=_cbfagd [_adaeb ]&&_cbfagd [_adaeb ]<=122{goto _gefcb ;};default:goto _cgeaa ;};default:goto _cgeaa ;};goto _cdab ;case 59:switch _cbfagd [_adaeb ]{case 33:goto _fbed ;case 46:goto _gefcb ;case 92:goto _gbbfg ;case 95:goto _bcecd ;case 123:goto _fgda ;case 125:goto _fgda ;};switch {case _cbfagd [_adaeb ]< 58:switch {case _cbfagd [_adaeb ]< 37:if 34<=_cbfagd [_adaeb ]&&_cbfagd [_adaeb ]<=35{goto _fgda ;};case _cbfagd [_adaeb ]> 47:if 48<=_cbfagd [_adaeb ]&&_cbfagd [_adaeb ]<=57{goto _gefcb ;};default:goto _fgda ;};case _cbfagd [_adaeb ]> 63:switch {case _cbfagd [_adaeb ]< 91:if 65<=_cbfagd [_adaeb ]&&_cbfagd [_adaeb ]<=90{goto _bcecd ;};case _cbfagd [_adaeb ]> 94:if 97<=_cbfagd [_adaeb ]&&_cbfagd [_adaeb ]<=122{goto _gefcb ;};default:goto _fgda ;};default:goto _fgda ;};goto _cdab ;case 29:switch _cbfagd [_adaeb ]{case 33:goto _fbed ;case 46:goto _gefcb ;case 92:goto _gbbfg ;case 95:goto _gefcb ;case 123:goto _bdfef ;case 125:goto _bdfef ;};switch {case _cbfagd [_adaeb ]< 58:switch {case _cbfagd [_adaeb ]< 37:if 34<=_cbfagd [_adaeb ]&&_cbfagd [_adaeb ]<=35{goto _bdfef ;};case _cbfagd [_adaeb ]> 47:if 48<=_cbfagd [_adaeb ]&&_cbfagd [_adaeb ]<=57{goto _gefcb ;};default:goto _bdfef ;};case _cbfagd [_adaeb ]> 63:switch {case _cbfagd [_adaeb ]< 91:if 65<=_cbfagd [_adaeb ]&&_cbfagd [_adaeb ]<=90{goto _gefcb ;};case _cbfagd [_adaeb ]> 94:if 97<=_cbfagd [_adaeb ]&&_cbfagd [_adaeb ]<=122{goto _gefcb ;};default:goto _bdfef ;};default:goto _bdfef ;};goto _cdab ;};_bdfef :_adcec =0;goto _afaf ;_cdab :_adcec =1;goto _afaf ;_dcdab :_adcec =2;goto _afaf ;_fgbdb :_adcec =3;goto _afaf ;_eda :_adcec =4;goto _afaf ;_eaaa :_adcec =5;goto _afaf ;_affga :_adcec =6;goto _afaf ;_dcfb :_adcec =7;goto _afaf ;_eceab :_adcec =8;goto _afaf ;_abfec :_adcec =9;goto _afaf ;_ggbfcf :_adcec =10;goto _afaf ;_fcag :_adcec =11;goto _afaf ;_bcdb :_adcec =12;goto _afaf ;_ebbd :_adcec =13;goto _afaf ;_acadf :_adcec =14;goto _afaf ;_gafc :_adcec =15;goto _afaf ;_dbbc :_adcec =16;goto _afaf ;_fbbg :_adcec =17;goto _afaf ;_fcdf :_adcec =18;goto _afaf ;_gdacd :_adcec =19;goto _afaf ;_bbdbg :_adcec =20;goto _afaf ;_gbed :_adcec =21;goto _afaf ;_eceed :_adcec =22;goto _afaf ;_fcdgdb :_adcec =23;goto _afaf ;_dedc :_adcec =24;goto _afaf ;_ebgfca :_adcec =25;goto _afaf ;_gcebg :_adcec =26;goto _afaf ;_edaa :_adcec =27;goto _afaf ;_cdfgd :_adcec =28;goto _afaf ;_gefac :_adcec =29;goto _afaf ;_fgda :_adcec =30;goto _dgga ;_fbed :_adcec =30;goto _egeda ;_bcge :_adcec =30;goto _cfgg ;_ddbb :_adcec =30;goto _baabf ;_dcfc :_adcec =30;goto _ddded ;_gdgf :_adcec =30;goto _abef ;_dbege :_adcec =30;goto _cecf ;_edcaf :_adcec =30;goto _dcca ;_afbb :_adcec =30;goto _abgd ;_dcbf :_adcec =30;goto _ddgbf ;_efed :_adcec =30;goto _ffgaf ;_bcaf :_adcec =30;goto _ecdf ;_ffbdd :_adcec =30;goto _aaebb ;_fcee :_adcec =30;goto _egeg ;_ebdeb :_adcec =30;goto _dgfeg ;_daffb :_adcec =30;goto _fbeb ;_adgbf :_adcec =30;goto _bgcfa ;_bdec :_adcec =30;goto _ebdg ;_edeba :_adcec =30;goto _gdcfd ;_efabca :_adcec =30;goto _degg ;_bcecf :_adcec =30;goto _bfegf ;_ebfb :_adcec =30;goto _feed ;_gdfdf :_adcec =30;goto _eaecc ;_gceaad :_adcec =30;goto _fgcba ;_cdbb :_adcec =30;goto _feae ;_dagbb :_adcec =30;goto _bbcad ;_dfbe :_adcec =30;goto _gdafd ;_cdfa :_adcec =30;goto _efaa ;_eeeecb :_adcec =30;goto _eebbg ;_faee :_adcec =30;goto _agdg ;_bccec :_adcec =30;goto _ddff ;_cgeaa :_adcec =30;goto _ceeg ;_gedb :_adcec =30;goto _beebf ;_bgaea :_adcec =31;goto _ebefc ;_gbedd :_adcec =32;goto _afaf ;_ddbf :_adcec =33;goto _abebe ;_gefag :_adcec =34;goto _afaf ;_eaffb :_adcec =35;goto _dccbb ;_abffa :_adcec =36;goto _dccbb ;_eaeef :_adcec =37;goto _dccbb ;_bdecd :_adcec =38;goto _afaf ;_dfdf :_adcec =39;goto _afaf ;_fcbdg :_adcec =40;goto _febbe ;_gbbfg :_adcec =41;goto _afaf ;_gefcb :_adcec =42;goto _febbe ;_bccef :_adcec =43;goto _abebe ;_ffde :_adcec =44;goto _febbe ;_dagg :_adcec =44;goto _gagea ;_agcf :_adcec =44;goto _ggecd ;_abdba :_adcec =45;goto _febbe ;_aecc :_adcec =46;goto _febbe ;_bccd :_adcec =47;goto _febbe ;_ggaec :_adcec =48;goto _febbe ;_gabea :_adcec =49;goto _febbe ;_eccbe :_adcec =50;goto _febbe ;_baeg :_adcec =51;goto _febbe ;_dbgd :_adcec =52;goto _febbe ;_eddaf :_adcec =53;goto _febbe ;_fcgad :_adcec =54;goto _febbe ;_cdefc :_adcec =55;goto _febbe ;_dbced :_adcec =56;goto _febbe ;_adge :_adcec =57;goto _febbe ;_dddb :_adcec =58;goto _febbe ;_edffb :_adcec =59;goto _febbe ;_bcecd :_adcec =59;goto _agfae ;_cfgg :_dffb =3;goto _dbea ;_baabf :_dffb =5;goto _dbea ;_egeda :_dffb =7;goto _dbea ;_ddded :_dffb =9;goto _dbea ;_cecf :_dffb =11;goto _dbea ;_beebf :_dffb =13;goto _dbea ;_dcca :_dffb =15;goto _dbea ;_degg :_dffb =17;goto _dbea ;_bfegf :_dffb =19;goto _dbea ;_abgd :_dffb =21;goto _dbea ;_ddgbf :_dffb =23;goto _dbea ;_ecdf :_dffb =25;goto _dbea ;_egeg :_dffb =27;goto _dbea ;_ffgaf :_dffb =29;goto _dbea ;_dgfeg :_dffb =31;goto _dbea ;_gdcfd :_dffb =33;goto _dbea ;_ebdg :_dffb =35;goto _dbea ;_efaa :_dffb =37;goto _dbea ;_ddff :_dffb =39;goto _dbea ;_eebbg :_dffb =41;goto _dbea ;_fbeb :_dffb =43;goto _dbea ;_bgcfa :_dffb =45;goto _dbea ;_aaebb :_dffb =47;goto _dbea ;_bbcad :_dffb =49;goto _dbea ;_fgcba :_dffb =51;goto _dbea ;_eaecc :_dffb =53;goto _dbea ;_feae :_dffb =55;goto _dbea ;_ceeg :_dffb =57;goto _dbea ;_feed :_dffb =59;goto _dbea ;_gdafd :_dffb =61;goto _dbea ;_agdg :_dffb =63;goto _dbea ;_abef :_dffb =65;goto _dbea ;_dgga :_dffb =67;goto _dbea ;_gagea :_dffb =72;goto _dbea ;_dccbb :_dffb =75;goto _dbea ;_abebe :_dffb =78;goto _dbea ;_ggecd :_dffb =81;goto _dbea ;_agfae :_dffb =84;goto _dbea ;_febbe :_dffb =87;goto _dbea ;_ebefc :_dffb =90;goto _dbea ;_dbea :_gcdaa =uint (_edbdc [_dffb ]);_dffb ++;for ;_gcdaa > 0;_gcdaa --{_dffb ++;switch _edbdc [_dffb -1]{case 3:_gbfbgg =_adaeb +1;case 4:_aeae =1;case 5:_aeae =2;case 6:_aeae =3;case 7:_aeae =4;case 8:_aeae =11;case 9:_aeae =14;case 10:_aeae =15;case 11:_gbfbgg =_adaeb +1;{_cdcc .emit (_bgdc ,_cbfagd [_fgbcf :_gbfbgg ]);};case 12:_gbfbgg =_adaeb +1;{_cdcc .emit (_eebg ,_cbfagd [_fgbcf :_gbfbgg ]);};case 13:_gbfbgg =_adaeb +1;{_cdcc .emit (_fbcd ,_cbfagd [_fgbcf :_gbfbgg -1]);};case 14:_gbfbgg =_adaeb +1;{_cdcc .emit (_fbcd ,_cbfagd [_fgbcf +1:_gbfbgg -2]);};case 15:_gbfbgg =_adaeb +1;{_cdcc .emit (_ffeb ,_cbfagd [_fgbcf :_gbfbgg -1]);};case 16:_gbfbgg =_adaeb +1;{_cdcc .emit (_ffeb ,_cbfagd [_fgbcf :_gbfbgg -1]);};case 17:_gbfbgg =_adaeb +1;{_cdcc .emit (_fgaee ,_cbfagd [_fgbcf :_gbfbgg ]);};case 18:_gbfbgg =_adaeb +1;{_cdcc .emit (_gaaac ,_cbfagd [_fgbcf :_gbfbgg ]);};case 19:_gbfbgg =_adaeb +1;{_cdcc .emit (_fedfb ,_cbfagd [_fgbcf :_gbfbgg ]);};case 20:_gbfbgg =_adaeb +1;{_cdcc .emit (_ecadg ,_cbfagd [_fgbcf :_gbfbgg ]);};case 21:_gbfbgg =_adaeb +1;{_cdcc .emit (_fdfbe ,_cbfagd [_fgbcf :_gbfbgg ]);};case 22:_gbfbgg =_adaeb +1;{_cdcc .emit (_aadc ,_cbfagd [_fgbcf :_gbfbgg ]);};case 23:_gbfbgg =_adaeb +1;{_cdcc .emit (_bccee ,_cbfagd [_fgbcf :_gbfbgg ]);};case 24:_gbfbgg =_adaeb +1;{_cdcc .emit (_eefcb ,_cbfagd [_fgbcf :_gbfbgg ]);};case 25:_gbfbgg =_adaeb +1;{_cdcc .emit (_gfaad ,_cbfagd [_fgbcf :_gbfbgg ]);};case 26:_gbfbgg =_adaeb +1;{_cdcc .emit (_abaea ,_cbfagd [_fgbcf :_gbfbgg ]);};case 27:_gbfbgg =_adaeb +1;{_cdcc .emit (_bdadf ,_cbfagd [_fgbcf :_gbfbgg ]);};case 28:_gbfbgg =_adaeb +1;{_cdcc .emit (_fcafg ,_cbfagd [_fgbcf :_gbfbgg ]);};case 29:_gbfbgg =_adaeb +1;{_cdcc .emit (_fdcc ,_cbfagd [_fgbcf :_gbfbgg ]);};case 30:_gbfbgg =_adaeb +1;{_cdcc .emit (_dffdg ,_cbfagd [_fgbcf :_gbfbgg ]);};case 31:_gbfbgg =_adaeb +1;{_cdcc .emit (_dcecb ,_cbfagd [_fgbcf :_gbfbgg ]);};case 32:_gbfbgg =_adaeb +1;{_cdcc .emit (_bfedg ,_cbfagd [_fgbcf :_gbfbgg ]);};case 33:_gbfbgg =_adaeb +1;{_cdcc .emit (_bbgf ,_cbfagd [_fgbcf :_gbfbgg ]);};case 34:_gbfbgg =_adaeb ;_adaeb --;{_cdcc .emit (_ffgb ,_cbfagd [_fgbcf :_gbfbgg ]);};case 35:_gbfbgg =_adaeb ;_adaeb --;{_cdcc .emit (_faffe ,_cbfagd [_fgbcf :_gbfbgg ]);};case 36:_gbfbgg =_adaeb ;_adaeb --;{_cdcc .emit (_daba ,_cbfagd [_fgbcf :_gbfbgg ]);};case 37:_gbfbgg =_adaeb ;_adaeb --;{_cdcc .emit (_abddc ,_cbfagd [_fgbcf :_gbfbgg ]);};case 38:_gbfbgg =_adaeb ;_adaeb --;{_cdcc .emit (_gcfb ,_cbfagd [_fgbcf :_gbfbgg ]);};case 39:_gbfbgg =_adaeb ;_adaeb --;{_cdcc .emit (_dggb ,_cbfagd [_fgbcf +1:_gbfbgg -1]);};case 40:_gbfbgg =_adaeb ;_adaeb --;{_cdcc .emit (_edfd ,_cbfagd [_fgbcf :_gbfbgg ]);};case 41:_gbfbgg =_adaeb ;_adaeb --;{_cdcc .emit (_fcgf ,_cbfagd [_fgbcf :_gbfbgg ]);};case 42:_adaeb =(_gbfbgg )-1;{_cdcc .emit (_ffgb ,_cbfagd [_fgbcf :_gbfbgg ]);};case 43:switch _aeae {case 0:{_adcec =0;goto _afaf ;};case 1:{_adaeb =(_gbfbgg )-1;_cdcc .emit (_bddg ,_cbfagd [_fgbcf :_gbfbgg ]);};case 2:{_adaeb =(_gbfbgg )-1;_cdcc .emit (_ffgb ,_cbfagd [_fgbcf :_gbfbgg ]);};case 3:{_adaeb =(_gbfbgg )-1;_cdcc .emit (_faffe ,_cbfagd [_fgbcf :_gbfbgg ]);};case 4:{_adaeb =(_gbfbgg )-1;_cdcc .emit (_cgbe ,_cbfagd [_fgbcf :_gbfbgg ]);};case 11:{_adaeb =(_gbfbgg )-1;_cdcc .emit (_ecbe ,_cbfagd [_fgbcf :_gbfbgg ]);};case 14:{_adaeb =(_gbfbgg )-1;_cdcc .emit (_gcfb ,_cbfagd [_fgbcf :_gbfbgg ]);};case 15:{_adaeb =(_gbfbgg )-1;_cdcc .emit (_dggb ,_cbfagd [_fgbcf +1:_gbfbgg -1]);};};};};goto _afaf ;_afaf :_dffb =int (_gadca [_adcec ]);_gcdaa =uint (_edbdc [_dffb ]);_dffb ++;for ;_gcdaa > 0;_gcdaa --{_dffb ++;switch _edbdc [_dffb -1]{case 0:_fgbcf =0;case 1:_aeae =0;};};if _adcec ==0{goto _febde ;};if _adaeb ++;_adaeb !=_eeaf {goto _dfgg ;};_cfea :{};if _adaeb ==_cedgc {switch _adcec {case 1:goto _fgda ;case 2:goto _fgda ;case 31:goto _ebfb ;case 14:goto _fgda ;case 15:goto _fgda ;case 32:goto _gdfdf ;case 17:goto _fgda ;case 33:goto _gceaad ;case 18:goto _fgda ;case 19:goto _fgda ;case 34:goto _cdbb ;case 35:goto _dagbb ;case 36:goto _dagbb ;case 23:goto _gdgf ;case 37:goto _dagbb ;case 38:goto _dfbe ;case 39:goto _faee ;case 40:goto _cgeaa ;case 41:goto _cgeaa ;case 42:goto _cgeaa ;case 43:goto _gceaad ;case 44:goto _fgda ;case 45:goto _cgeaa ;case 46:goto _cgeaa ;case 47:goto _cgeaa ;case 48:goto _cgeaa ;case 49:goto _cgeaa ;case 50:goto _cgeaa ;case 51:goto _cgeaa ;case 52:goto _cgeaa ;case 53:goto _cgeaa ;case 54:goto _cgeaa ;case 55:goto _cgeaa ;case 56:goto _cgeaa ;case 57:goto _cgeaa ;case 58:goto _cgeaa ;case 59:goto _fgda ;};};_febde :{};};if _fgbcf > 0{copy (_cbfagd [0:],_cbfagd [_fgbcf :]);};};_ =_cedgc ;if _adcec ==_ggdb {_cdcc .emit (_eabac ,nil );};close (_cdcc ._cbcbf );};

// MakeErrorResultType makes an error result of a given type with a specified
// debug message
func MakeErrorResultType (t ErrorType ,msg string )Result {switch t {case ErrorTypeNull :return Result {Type :ResultTypeError ,ValueString :"\u0023\u004e\u0055\u004c\u004c\u0021",ErrorMessage :msg };case ErrorTypeValue :return Result {Type :ResultTypeError ,ValueString :"\u0023V\u0041\u004c\u0055\u0045\u0021",ErrorMessage :msg };case ErrorTypeRef :return Result {Type :ResultTypeError ,ValueString :"\u0023\u0052\u0045F\u0021",ErrorMessage :msg };case ErrorTypeName :return Result {Type :ResultTypeError ,ValueString :"\u0023\u004e\u0041\u004d\u0045\u003f",ErrorMessage :msg };case ErrorTypeNum :return Result {Type :ResultTypeError ,ValueString :"\u0023\u004e\u0055M\u0021",ErrorMessage :msg };case ErrorTypeSpill :return Result {Type :ResultTypeError ,ValueString :"\u0023S\u0050\u0049\u004c\u004c\u0021",ErrorMessage :msg };case ErrorTypeNA :return Result {Type :ResultTypeError ,ValueString :"\u0023\u004e\u002f\u0041",ErrorMessage :msg };case ErrorTypeDivideByZero :return Result {Type :ResultTypeError ,ValueString :"\u0023D\u0049\u0056\u002f\u0030\u0021",ErrorMessage :msg };default:return Result {Type :ResultTypeError ,ValueString :"\u0023V\u0041\u004c\u0055\u0045\u0021",ErrorMessage :msg };};};const _bdadf =57369;type countMode byte ;func _edfb (_gdea []Result ,_daaf bool )Result {var _eaba string ;if _daaf {_eaba ="\u004c\u0041\u0052G\u0045";}else {_eaba ="\u0053\u004d\u0041L\u004c";};if len (_gdea )!=2{return MakeErrorResult (_eaba +"\u0020\u0072\u0065qu\u0069\u0072\u0065\u0073\u0020\u0074\u0077\u006f\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0073");};_cfbfa :=_gdea [0];var _aadd [][]Result ;switch _cfbfa .Type {case ResultTypeArray :_aadd =_cfbfa .ValueArray ;case ResultTypeList :_aadd =[][]Result {_cfbfa .ValueList };default:return MakeErrorResult (_eaba +"\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0066\u0069\u0072\u0073\u0074\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074 \u006f\u0066\u0020\u0074\u0079p\u0065\u0020a\u0072\u0072\u0061\u0079");};if len (_aadd )==0{return MakeErrorResult (_eaba +"\u0020\u0072\u0065\u0071\u0075i\u0072\u0065\u0073\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u0074\u006f\u0020c\u006f\u006e\u0074\u0061\u0069\u006e\u0020\u0061\u0074\u0020\u006c\u0065\u0061\u0073\u0074\u0020\u0031\u0020\u0072\u006f\u0077");};if _gdea [1].Type !=ResultTypeNumber {return MakeErrorResult (_eaba +" \u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0073\u0065\u0063\u006f\u006e\u0064\u0020\u0061\u0072g\u0075\u006d\u0065\u006e\u0074\u0020\u006f\u0066\u0020\u0074yp\u0065\u0020\u006eu\u006db\u0065\u0072");};_eabe :=_gdea [1].ValueNumber ;if _eabe < 1{return MakeErrorResultType (ErrorTypeNum ,_eaba +"\u0020\u0072e\u0071\u0075\u0069\u0072\u0065s\u0020\u0073\u0065\u0063\u006fn\u0064\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0020\u006f\u0066\u0020\u0074\u0079\u0070\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u006d\u006f\u0072\u0065\u0020\u0074\u0068\u0061\u006e\u0020\u0030");};_fdegb :=int (_eabe );if float64 (_fdegb )!=_eabe {return MakeErrorResultType (ErrorTypeNum ,_eaba +"\u0020\u0072e\u0071\u0075\u0069\u0072\u0065s\u0020\u0073\u0065\u0063\u006fn\u0064\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0020\u006f\u0066\u0020\u0074\u0079\u0070\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u006d\u006f\u0072\u0065\u0020\u0074\u0068\u0061\u006e\u0020\u0030");};_gbda :=[]float64 {};for _ ,_eggag :=range _aadd {for _ ,_fcfd :=range _eggag {if _fcfd .Type ==ResultTypeNumber {_gbda =append (_gbda ,_fcfd .ValueNumber );};};};if _fdegb > len (_gbda ){return MakeErrorResultType (ErrorTypeNum ,_eaba +" \u0072\u0065\u0071u\u0069\u0072\u0065\u0073\u0020\u0073\u0065\u0063\u006f\u006e\u0064\u0020\u0061\u0072\u0067u\u006d\u0065\u006e\u0074\u0020\u006f\u0066\u0020\u0074\u0079\u0070\u0065\u0020n\u0075\u006d\u0062\u0065\u0072\u0020\u006c\u0065s\u0073\u0020\u006f\u0072\u0020\u0065\u0071\u0075\u0061\u006c\u0020\u0074\u0068\u0061\u006e\u0020t\u0068\u0065\u0020\u006e\u0075m\u0062\u0065\u0072\u0020\u006f\u0066\u0020\u006e\u0075\u006d\u0062\u0065\u0072s\u0020\u0069\u006e\u0020t\u0068\u0065\u0020\u0061\u0072\u0072\u0061\u0079");};_adda :=_dfa .MergeSort (_gbda );if _daaf {return MakeNumberResult (_adda [len (_adda )-_fdegb ]);}else {return MakeNumberResult (_adda [_fdegb -1]);};};func _dbdf (_acd string )bool {for _ ,_fad :=range _dfcc {_gcfa :=_fad .FindStringSubmatch (_acd );if len (_gcfa )> 1{return true ;};};return false ;};func _feab (_adec ,_ddga []float64 ,_edf float64 )float64 {_beba :=_edf +1;_dddc :=_adec [0];_ffcc :=len (_adec );_gdgg :=_ddga [0];for _egee :=1;_egee < _ffcc ;_egee ++{_dddc +=_adec [_egee ]/_ea .Pow (_beba ,(_ddga [_egee ]-_gdgg )/365);};return _dddc ;};func (_cdge *ivr )SetOffset (col ,row uint32 ){};

// NewFunction constructs a new function call expression.
func NewFunction (name string ,args []Expression )Expression {return FunctionCall {_cacb :name ,_bdegf :args };};var _ddae =false ;

// Odd is an implementation of the Excel ODD() that rounds a number to the
// nearest odd integer.
func Odd (args []Result )Result {if len (args )!=1{return MakeErrorResult ("O\u0044\u0044\u0028\u0029\u0020\u0072e\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u006f\u006ee\u0020\u0061\u0072g\u0075m\u0065\u006e\u0074");};_bcbg :=args [0].AsNumber ();if _bcbg .Type !=ResultTypeNumber {return MakeErrorResult ("\u004f\u0044\u0044\u0028\u0029\u0020\u0072\u0065\u0071\u0075i\u0072\u0065\u0073\u0020\u006e\u0075\u006db\u0065\u0072\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};_dcece :=_ea .Signbit (_bcbg .ValueNumber );_aebf ,_fcfac :=_ea .Modf ((_bcbg .ValueNumber -1)/2);_abee :=_aebf *2+1;if _fcfac !=0{if !_dcece {_abee +=2;}else {_abee -=2;};};return MakeNumberResult (_abee );};

// CeilingMath implements _xlfn.CEILING.MATH which rounds numbers to the nearest
// multiple of the second argument, toward or away from zero as specified by the
// third argument.
func CeilingMath (args []Result )Result {if len (args )==0{return MakeErrorResult ("\u0043E\u0049\u004cI\u004e\u0047\u002eM\u0041\u0054\u0048\u0028\u0029\u0020\u0072e\u0071\u0075\u0069\u0072\u0065\u0073 \u0061\u0074\u0020\u006c\u0065\u0061\u0073\u0074\u0020\u006f\u006ee\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};if len (args )> 3{return MakeErrorResult ("\u0043E\u0049\u004cI\u004e\u0047\u002eM\u0041\u0054\u0048\u0028\u0029\u0020\u0061l\u006c\u006f\u0077\u0073\u0020\u0061t\u0020\u006d\u006f\u0073\u0074\u0020\u0074\u0068\u0072\u0065\u0065 \u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0073");};_bbbgg :=args [0].AsNumber ();if _bbbgg .Type !=ResultTypeNumber {return MakeErrorResult ("\u0066\u0069\u0072\u0073\u0074\u0020a\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0020\u0074\u006f\u0020\u0043\u0045\u0049\u004c\u0049\u004e\u0047\u002e\u004dA\u0054\u0048\u0028\u0029\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020\u0061 \u006eu\u006d\u0062\u0065\u0072");};_feag :=float64 (1);if _bbbgg .ValueNumber < 0{_feag =-1;};if len (args )> 1{_beadb :=args [1].AsNumber ();if _beadb .Type !=ResultTypeNumber {return MakeErrorResult ("\u0073\u0065\u0063\u006f\u006e\u0064\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0020\u0074\u006f \u0043\u0045\u0049\u004c\u0049\u004e\u0047.\u004d\u0041\u0054\u0048\u0028\u0029\u0020\u006d\u0075\u0073\u0074 \u0062\u0065\u0020\u0061\u0020\u006e\u0075\u006d\u0062\u0065\u0072");};_feag =_beadb .ValueNumber ;};_afgbe :=float64 (1);if len (args )> 2{_bafa :=args [2].AsNumber ();if _bafa .Type !=ResultTypeNumber {return MakeErrorResult ("\u0074\u0068\u0069\u0072\u0064\u0020a\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0020\u0074\u006f\u0020\u0043\u0045\u0049\u004c\u0049\u004e\u0047\u002e\u004dA\u0054\u0048\u0028\u0029\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020\u0061 \u006eu\u006d\u0062\u0065\u0072");};_afgbe =_bafa .ValueNumber ;};if len (args )==1{return MakeNumberResult (_ea .Ceil (_bbbgg .ValueNumber ));};_cbcaf :=_bbbgg .ValueNumber ;_cbcaf ,_aegcc :=_ea .Modf (_cbcaf /_feag );if _aegcc !=0{if _bbbgg .ValueNumber > 0{_cbcaf ++;}else if _afgbe < 0{_cbcaf --;};};return MakeNumberResult (_cbcaf *_feag );};

// Reference returns an invalid reference for Negate.
func (_cffd Negate )Reference (ctx Context ,ev Evaluator )Reference {return ReferenceInvalid };func _cdd ()evCache {_bba :=evCache {};_bba ._beb =make (map[string ]Result );_bba ._ebde =&_ga .Mutex {};return _bba ;};

// Search is an implementation of the Excel SEARCH().
func Search (args []Result )Result {_bgaff ,_dcgcb :=_cccca ("\u0046\u0049\u004e\u0044",args );if _dcgcb .Type !=ResultTypeEmpty {return _dcgcb ;};_ebce :=_ce .ToLower (_bgaff ._cfddd );if _ebce ==""{return MakeNumberResult (1.0);};_aebfc :=_ce .ToLower (_bgaff ._dgbd );_egbc :=_bgaff ._daag ;_deceg :=1;for _fbfdg :=range _aebfc {if _deceg < _egbc {_deceg ++;continue ;};_ggefd :=_ba .Index (_ebce ,_aebfc [_fbfdg :]);if _ggefd ==0{return MakeNumberResult (float64 (_deceg ));};_deceg ++;};return MakeErrorResultType (ErrorTypeValue ,"\u004eo\u0074\u0020\u0066\u006f\u0075\u006ed");};func _ccb (_eg BinOpType ,_ebg []Result ,_dec Result )Result {_aab :=[]Result {};switch _dec .Type {case ResultTypeNumber :_baag :=_dec .ValueNumber ;for _fg :=range _ebg {_ffc :=_ebg [_fg ].AsNumber ();if _ffc .Type !=ResultTypeNumber {return MakeErrorResult ("\u006e\u006f\u006e\u002d\u006e\u0075\u006e\u006d\u0065\u0072\u0069\u0063\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u0069\u006e\u0020\u0062\u0069n\u0061\u0072\u0079\u0020\u006fp\u0065\u0072a\u0074\u0069\u006f\u006e");};switch _eg {case BinOpTypePlus :_aab =append (_aab ,MakeNumberResult (_ffc .ValueNumber +_baag ));case BinOpTypeMinus :_aab =append (_aab ,MakeNumberResult (_ffc .ValueNumber -_baag ));case BinOpTypeMult :_aab =append (_aab ,MakeNumberResult (_ffc .ValueNumber *_baag ));case BinOpTypeDiv :if _baag ==0{return MakeErrorResultType (ErrorTypeDivideByZero ,"");};_aab =append (_aab ,MakeNumberResult (_ffc .ValueNumber /_baag ));case BinOpTypeExp :_aab =append (_aab ,MakeNumberResult (_ea .Pow (_ffc .ValueNumber ,_baag )));case BinOpTypeLT :_aab =append (_aab ,MakeBoolResult (_ffc .ValueNumber < _baag ));case BinOpTypeGT :_aab =append (_aab ,MakeBoolResult (_ffc .ValueNumber > _baag ));case BinOpTypeEQ :_aab =append (_aab ,MakeBoolResult (_ffc .ValueNumber ==_baag ));case BinOpTypeLEQ :_aab =append (_aab ,MakeBoolResult (_ffc .ValueNumber <=_baag ));case BinOpTypeGEQ :_aab =append (_aab ,MakeBoolResult (_ffc .ValueNumber >=_baag ));case BinOpTypeNE :_aab =append (_aab ,MakeBoolResult (_ffc .ValueNumber !=_baag ));default:return MakeErrorResult (_dc .Sprintf ("\u0075\u006es\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u006c\u0069\u0073\u0074\u0020\u0062\u0069\u006e\u0061\u0072\u0079\u0020\u006fp \u0025\u0073",_eg ));};};case ResultTypeString :_gag :=_dec .ValueString ;for _cfa :=range _ebg {_fa :=_ebg [_cfa ].AsString ();if _fa .Type !=ResultTypeString {return MakeErrorResult ("\u006e\u006f\u006e\u002d\u006e\u0075\u006e\u006d\u0065\u0072\u0069\u0063\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u0069\u006e\u0020\u0062\u0069n\u0061\u0072\u0079\u0020\u006fp\u0065\u0072a\u0074\u0069\u006f\u006e");};switch _eg {case BinOpTypeLT :_aab =append (_aab ,MakeBoolResult (_fa .ValueString < _gag ));case BinOpTypeGT :_aab =append (_aab ,MakeBoolResult (_fa .ValueString > _gag ));case BinOpTypeEQ :_aab =append (_aab ,MakeBoolResult (_fa .ValueString ==_gag ));case BinOpTypeLEQ :_aab =append (_aab ,MakeBoolResult (_fa .ValueString <=_gag ));case BinOpTypeGEQ :_aab =append (_aab ,MakeBoolResult (_fa .ValueString >=_gag ));case BinOpTypeNE :_aab =append (_aab ,MakeBoolResult (_fa .ValueString !=_gag ));default:return MakeErrorResult (_dc .Sprintf ("\u0075\u006es\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u006c\u0069\u0073\u0074\u0020\u0062\u0069\u006e\u0061\u0072\u0079\u0020\u006fp \u0025\u0073",_eg ));};};default:return MakeErrorResult ("\u006e\u006f\u006e\u002d\u006e\u0075\u006e\u006d\u0065\u0072\u0069c\u0020\u0061\u006e\u0064\u0020\u006e\u006f\u006e-\u0073t\u0072\u0069\u006e\u0067\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u0069\u006e\u0020\u0062\u0069\u006e\u0061r\u0079\u0020\u006f\u0070\u0065\u0072\u0061\u0074\u0069\u006f\u006e");};return MakeListResult (_aab );};

// Combin is an implementation of the Excel COMBINA function whic returns the
// number of combinations.
func Combin (args []Result )Result {if len (args )!=2{return MakeErrorResult ("\u0043\u004f\u004d\u0042\u0049\u004e\u0028\u0029\u0020\u0072e\u0071\u0075\u0069\u0072\u0065\u0073\u0020t\u0077\u006f\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};_gfde :=args [0].AsNumber ();_agded :=args [1].AsNumber ();if _gfde .Type !=ResultTypeNumber ||_agded .Type !=ResultTypeNumber {return MakeErrorResult ("C\u004f\u004d\u0042\u0049\u004e\u0028)\u0020\u0072\u0065\u0071\u0075\u0069r\u0065\u0073\u0020\u006e\u0075\u006d\u0065r\u0069\u0063\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006et\u0073");};_gfeeef :=_ea .Trunc (_gfde .ValueNumber );_bfcg :=_ea .Trunc (_agded .ValueNumber );if _bfcg > _gfeeef {return MakeErrorResult ("\u0043O\u004d\u0042\u0049\u004e\u0028\u0029\u0020\u0072\u0065\u0071\u0075i\u0072\u0065\u0073\u0020\u006b\u0020\u003c\u003d\u0020\u006e");};if _bfcg ==_gfeeef ||_bfcg ==0{return MakeNumberResult (1);};_bbddf :=float64 (1);for _cagf :=float64 (1);_cagf <=_bfcg ;_cagf ++{_bbddf *=(_gfeeef +1-_cagf )/_cagf ;};return MakeNumberResult (_bbddf );};const (_ddce rmode =iota ;_bgae ;_gadc ;);

// Couppcd implements the Excel COUPPCD function.
func Couppcd (args []Result )Result {_fabf ,_bdcg :=_fggc (args ,"\u0043O\u0055\u0050\u0050\u0043\u0044");if _bdcg .Type ==ResultTypeError {return _bdcg ;};_bcea :=_acb (_fabf ._dcd );_fdde :=_acb (_fabf ._efce );_beef :=_fabf ._bfeg ;_ddd :=_fabf ._gdb ;_bead :=_abdg (_bcea ,_fdde ,_beef ,_ddd );_dfcgg ,_dcae ,_dbc :=_bead .Date ();return MakeNumberResult (_fcg (_dfcgg ,int (_dcae ),_dbc ));};

// Date is an implementation of the Excel DATE() function.
func Date (args []Result )Result {if len (args )!=3||args [0].Type !=ResultTypeNumber ||args [1].Type !=ResultTypeNumber ||args [2].Type !=ResultTypeNumber {return MakeErrorResult ("\u0044\u0041TE\u0020\u0072\u0065q\u0075\u0069\u0072\u0065s t\u0068re\u0065\u0020\u006e\u0075\u006d\u0062\u0065r \u0061\u0072\u0067\u0075\u006d\u0065\u006et\u0073");};_dcad :=int (args [0].ValueNumber );if _dcad < 0||_dcad >=10000{return MakeErrorResultType (ErrorTypeNum ,"\u0049\u006e\u0063\u006f\u0072\u0072\u0065\u0063\u0074 \u0064\u0061\u0074\u0065");}else if _dcad <=1899{_dcad +=1900;};_gfgc :=_f .Month (args [1].ValueNumber );_ded :=int (args [2].ValueNumber );_acf :=_adc (_dcad ,_gfgc ,_ded );_gcda :=_degf (_gee ,_acf )+1;if _gcda < 0{return MakeErrorResultType (ErrorTypeNum ,"\u0049\u006e\u0063\u006f\u0072\u0072\u0065\u0063\u0074 \u0064\u0061\u0074\u0065");};return MakeNumberResult (_gcda );};var _bdbb _ga .Mutex ;

// SumIfs implements the SUMIFS function.
func SumIfs (args []Result )Result {_adce :=_gcafd (args ,true ,"\u0053\u0055\u004d\u0049\u0046\u0053");if _adce .Type !=ResultTypeEmpty {return _adce ;};_dagb :=_edca (args [1:]);_faec :=0.0;_faffa :=_affb (args [0]);for _ ,_deece :=range _dagb {_faec +=_faffa [_deece ._dgdeb ][_deece ._cbcaa ].ValueNumber ;};return MakeNumberResult (float64 (_faec ));};var _gadca []byte =[]byte {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,69,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0};

// ListValues converts an array to a list or returns a lists values. This is used
// for functions that can accept an array, but don't care about ordering to
// reuse the list function logic.
func (_fdcce Result )ListValues ()[]Result {if _fdcce .Type ==ResultTypeArray {_aeeb :=[]Result {};for _ ,_fabd :=range _fdcce .ValueArray {for _ ,_fgeef :=range _fabd {_aeeb =append (_aeeb ,_fgeef );};};return _aeeb ;};if _fdcce .Type ==ResultTypeList {return _fdcce .ValueList ;};return nil ;};

// True is an implementation of the Excel TRUE() function.  It takes no
// arguments.
func True (args []Result )Result {if len (args )!=0{return MakeErrorResult ("\u0054\u0052\u0055E \u0074\u0061\u006b\u0065\u0073\u0020\u006e\u006f\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0073");};return MakeBoolResult (true );};

// Mid is an implementation of the Excel MID function that returns a copy
// of the string with each word capitalized.
func Mid (args []Result )Result {if len (args )!=3{return MakeErrorResult ("\u004d\u0049\u0044\u0020r\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0074\u0068r\u0065e\u0020\u0061\u0072\u0067\u0075\u006d\u0065n\u0074\u0073");};_ccbd :=args [0];if _ccbd .Type ==ResultTypeError {return _ccbd ;};if _ccbd .Type !=ResultTypeString &&_ccbd .Type !=ResultTypeNumber &&_ccbd .Type !=ResultTypeEmpty {return MakeErrorResult ("\u004d\u0049\u0044\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0074\u0065x\u0074 \u0074\u006f\u0020\u0062\u0065\u0020\u0061\u0020\u0073\u0074\u0072\u0069\u006e\u0067");};_cggf :=args [0].Value ();if args [1].Type !=ResultTypeNumber {return MakeErrorResult ("\u004d\u0049D\u0020\u0072\u0065\u0071u\u0069\u0072e\u0073\u0020\u0073\u0074\u0061\u0072\u0074\u005fn\u0075\u006d\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u0061\u0020\u006eu\u006d\u0062\u0065\u0072");};_dbcbb :=int (args [1].ValueNumber );if _dbcbb < 1{return MakeErrorResult ("M\u0049\u0044\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0073\u0074\u0061\u0072\u0074\u005fn\u0075\u006d\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u006dor\u0065\u0020\u0074h\u0061n\u0020\u0030");};if args [2].Type !=ResultTypeNumber {return MakeErrorResult ("\u004d\u0049D\u0020\u0072\u0065\u0071u\u0069\u0072e\u0073\u0020\u006e\u0075\u006d\u005f\u0063\u0068a\u0072\u0073\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u0061\u0020\u006eu\u006d\u0062\u0065\u0072");};_babae :=int (args [2].ValueNumber );if _babae < 0{return MakeErrorResult ("\u004d\u0049\u0044\u0020\u0072e\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u006e\u0075\u006d\u005f\u0063\u0068a\u0072\u0073\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u006e\u006f\u006e\u0020\u006e\u0065\u0067\u0061\u0074\u0069\u0076\u0065");};_bfbb :=len (_cggf );if _dbcbb > _bfbb {return MakeStringResult ("");};_dbcbb --;_abadb :=_dbcbb +_babae ;if _abadb > _bfbb {return MakeStringResult (_cggf [_dbcbb :]);}else {return MakeStringResult (_cggf [_dbcbb :_abadb ]);};};func _deg (){_eedd ["\u006d\u006d\u002f\u0064\u0064\u002f\u0079\u0079"]=_be .MustCompile ("\u005e"+_cagg +_decc );_eedd ["\u006dm\u0020\u0064\u0064\u002c\u0020\u0079y"]=_be .MustCompile ("\u005e"+_ccc +_decc );_eedd ["\u0079\u0079\u002d\u006d\u006d\u002d\u0064\u0064"]=_be .MustCompile ("\u005e"+_abg +_decc );_eedd ["y\u0079\u002d\u006d\u006d\u0053\u0074\u0072\u002d\u0064\u0064"]=_be .MustCompile ("\u005e"+_bac +_decc );_ecc ["\u0068\u0068"]=_be .MustCompile (_aaf +_ggbg +"\u0024");_ecc ["\u0068\u0068\u003am\u006d"]=_be .MustCompile (_aaf +_eca +"\u0024");_ecc ["\u006d\u006d\u003as\u0073"]=_be .MustCompile (_aaf +_dgeb +"\u0024");_ecc ["\u0068\u0068\u003a\u006d\u006d\u003a\u0073\u0073"]=_be .MustCompile (_aaf +_cbc +"\u0024");_dfcc =[]*_be .Regexp {_be .MustCompile ("\u005e"+_cagg +"\u0024"),_be .MustCompile ("\u005e"+_ccc +"\u0024"),_be .MustCompile ("\u005e"+_abg +"\u0024"),_be .MustCompile ("\u005e"+_bac +"\u0024")};_fgee =[]*_be .Regexp {_be .MustCompile ("\u005e"+_ggbg +"\u0024"),_be .MustCompile ("\u005e"+_eca +"\u0024"),_be .MustCompile ("\u005e"+_dgeb +"\u0024"),_be .MustCompile ("\u005e"+_cbc +"\u0024")};};

// Reference returns a string reference value to a horizontal range with prefix.
func (_bdbe PrefixHorizontalRange )Reference (ctx Context ,ev Evaluator )Reference {_ffeca :=_bdbe ._bedeg .Reference (ctx ,ev );return Reference {Type :ReferenceTypeHorizontalRange ,Value :_bdbe .horizontalRangeReference (_ffeca .Value )};};func (_cd *defEval )checkLastEvalIsRef (_fce Context ,_egb Expression ){switch _egb .(type ){case FunctionCall :switch _egb .(FunctionCall )._cacb {case "\u0049\u0053\u0052E\u0046":for _ ,_fdf :=range _egb .(FunctionCall )._bdegf {switch _fdf .(type ){case CellRef ,Range ,HorizontalRange ,VerticalRange ,NamedRangeRef ,PrefixExpr ,PrefixRangeExpr ,PrefixHorizontalRange ,PrefixVerticalRange :_cde :=_fdf .Eval (_fce ,_cd );_cd ._bbe =!(_cde .Type ==ResultTypeError &&_cde .ValueString =="\u0023\u004e\u0041\u004d\u0045\u003f");default:_cd ._bbe =false ;};};};};};

// Mduration implements the Excel MDURATION function.
func Mduration (args []Result )Result {_caeg ,_bcgd :=_bfa (args ,"\u004dD\u0055\u0052\u0041\u0054\u0049\u004fN");if _bcgd .Type ==ResultTypeError {return _bcgd ;};_dbag :=_caeg ._ceae ;_fgcgc :=_caeg ._dbgg ;_gabd :=_caeg ._dceg ;_cdbf :=_caeg ._bdf ;_fabc :=_caeg ._bab ;_efba :=_caeg ._eea ;_affcg :=_gbaa (_dbag ,_fgcgc ,_gabd ,_cdbf ,_fabc ,_efba );if _affcg .Type ==ResultTypeError {return _affcg ;};_cddg :=_affcg .ValueNumber /(1.0+_cdbf /_fabc );return MakeNumberResult (_cddg );};const _ffeb =57359;

// Amordegrc implements the Excel AMORDEGRC function.
func Amordegrc (args []Result )Result {_ebda ,_acdc :=_gebe (args ,"\u0041M\u004f\u0052\u0044\u0045\u0047\u0052C");if _acdc .Type ==ResultTypeError {return _acdc ;};_face :=_ebda ._bcead ;_cceg :=_ebda ._ddee ;_adg :=_ebda ._bgde ;_egcg :=_ebda ._fbg ;_bbcb :=_ebda ._gdca ;_adgd :=_ebda ._dffg ;if _adgd >=0.5{return MakeErrorResultType (ErrorTypeNum ,"\u0041\u004d\u004f\u0052\u0044\u0045\u0047R\u0043\u0020\u0072e\u0071\u0075\u0069\u0072e\u0073\u0020\u0072\u0061\u0074\u0065\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u006c\u0065\u0073\u0073\u0020\u0074\u0068\u0061\u006e\u0020\u0030\u002e\u0035");};_adbe :=_ebda ._gcfc ;_cddf :=1.0/_adgd ;_bgbb :=2.5;if _cddf < 3{_bgbb =1;}else if _cddf < 5{_bgbb =1.5;}else if _cddf <=6{_bgbb =2;};_adgd *=_bgbb ;_bdb ,_cgdb :=_eaee (_cceg ,_adg ,_adbe );if _cgdb .Type ==ResultTypeError {return MakeErrorResult ("\u0069\u006ec\u006f\u0072\u0072\u0065\u0063\u0074\u0020\u0064\u0061\u0074\u0065\u0073\u0020\u0066\u006f\u0072\u0020\u0041\u004d\u004f\u0052\u0044EG\u0052\u0043");};_cbef :=_gacd (_bdb *_adgd *_face );_face -=_cbef ;_bffc :=_face -_egcg ;for _gbbb :=0;_gbbb < _bbcb ;_gbbb ++{_cbef =_gacd (_adgd *_face );_bffc -=_cbef ;if _bffc < 0{switch _bbcb -_gbbb {case 0:case 1:return MakeNumberResult (_gacd (_face *0.5));default:return MakeNumberResult (0);};};_face -=_cbef ;};return MakeNumberResult (_cbef );};func _edgdf (_eddcd []Result ,_dagbd bool )Result {_bacda :="\u004d\u0041\u0058";if _dagbd {_bacda ="\u004d\u0041\u0058\u0041";};if len (_eddcd )==0{return MakeErrorResult (_bacda +"\u0020\u0072\u0065q\u0075\u0069\u0072\u0065s\u0020\u0061\u0074\u0020\u006c\u0065\u0061s\u0074\u0020\u006f\u006e\u0065\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};_fddf :=-_ea .MaxFloat64 ;for _ ,_beecc :=range _eddcd {switch _beecc .Type {case ResultTypeNumber :if (_dagbd ||!_beecc .IsBoolean )&&_beecc .ValueNumber > _fddf {_fddf =_beecc .ValueNumber ;};case ResultTypeList ,ResultTypeArray :_bbgd :=_edgdf (_beecc .ListValues (),_dagbd );if _bbgd .ValueNumber > _fddf {_fddf =_bbgd .ValueNumber ;};case ResultTypeEmpty :case ResultTypeString :_abeebe :=0.0;if _dagbd {_abeebe =_beecc .AsNumber ().ValueNumber ;};if _abeebe > _fddf {_fddf =_abeebe ;};default:_bf .Log .Debug ("\u0075\u006e\u0068\u0061\u006e\u0064\u006c\u0065\u0064\u0020"+_bacda +"\u0028\u0029\u0020\u0061rg\u0075\u006d\u0065\u006e\u0074\u0020\u0074\u0079\u0070\u0065\u0020\u0025\u0073",_beecc .Type );};};if _fddf ==-_ea .MaxFloat64 {_fddf =0;};return MakeNumberResult (_fddf );};func _dedaa (_geba []string ,_becc int )string {return _gc .Itoa (len (_geba [len (_geba )-1-_becc ]))};

// Upper is an implementation of the Excel UPPER function that returns a upper
// case version of a string.
func Upper (args []Result )Result {if len (args )!=1{return MakeErrorResult ("\u0055\u0050\u0050\u0045\u0052\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065s\u0020\u0061\u0020\u0073\u0069\u006eg\u006c\u0065\u0020\u0073\u0074\u0072\u0069\u006e\u0067\u0020\u0061\u0072\u0067u\u006d\u0065\u006e\u0074");};_dcda :=args [0].AsString ();if _dcda .Type !=ResultTypeString {return MakeErrorResult ("\u0055\u0050\u0050\u0045\u0052\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065s\u0020\u0061\u0020\u0073\u0069\u006eg\u006c\u0065\u0020\u0073\u0074\u0072\u0069\u006e\u0067\u0020\u0061\u0072\u0067u\u006d\u0065\u006e\u0074");};return MakeStringResult (_ce .ToUpper (_dcda .ValueString ));};func LexReader (r _c .Reader )chan *node {_edbe :=NewLexer ();go _edbe .lex (r );return _edbe ._cbcbf };var _edbdc []byte =[]byte {0,1,2,1,11,1,12,1,13,1,14,1,15,1,16,1,17,1,18,1,19,1,20,1,21,1,22,1,23,1,24,1,25,1,26,1,27,1,28,1,29,1,30,1,31,1,32,1,33,1,34,1,35,1,36,1,37,1,38,1,39,1,40,1,41,1,42,1,43,2,0,1,2,3,4,2,3,5,2,3,6,2,3,7,2,3,8,2,3,9,2,3,10};func _egaf (_edee _f .Time )bool {return _f .Now ().Sub (_edee )>=_gfec };

// Replace is an implementation of the Excel REPLACE().
func Replace (args []Result )Result {_baeaf ,_cbeg :=_fgcbc ("\u0052E\u0050\u004c\u0041\u0043\u0045",args );if _cbeg .Type !=ResultTypeEmpty {return _cbeg ;};_ffece :=_baeaf ._bbabg ;_aaeag :=_baeaf ._cgdgf ;_ggbef :=_baeaf ._adaf ;_cffbf :=_baeaf ._debb ;_ggff :=len (_ffece );if _aaeag > _ggff {_aaeag =_ggff ;};_dadb :=_aaeag +_ggbef ;if _dadb > _ggff {_dadb =_ggff ;};_cagc :=_ffece [0:_aaeag ]+_cffbf +_ffece [_dadb :];return MakeStringResult (_cagc );};

// Coupnum implements the Excel COUPNUM function.
func Coupnum (args []Result )Result {_feeb ,_dcfa :=_fggc (args ,"\u0043O\u0055\u0050\u004e\u0055\u004d");if _dcfa .Type ==ResultTypeError {return _dcfa ;};_baad :=_feeb ._bfeg ;_badf :=_feeb ._gdb ;_cac ,_dcfa :=_dgef (_feeb ._dcd ,_feeb ._efce ,_baad ,_badf );if _dcfa .Type ==ResultTypeError {return _dcfa ;};return MakeNumberResult (_cac );};

// String returns a string representation of String.
func (_acaea String )String ()string {return "\u0022"+_acaea ._defca +"\u0022"};const _eabac =57350;

// ErrorType is a formula evaluation error type.
type ErrorType byte ;func _ccae (_bcab ,_adfc float64 )bool {return _ea .Abs (_bcab -_adfc )< 1.0e-6};

// Row implements the Excel ROW function.
func Row (args []Result )Result {if len (args )< 1{return MakeErrorResult ("\u0052O\u0057\u0020\u0072\u0065q\u0075\u0069\u0072\u0065\u0073 \u006fn\u0065 \u0061\u0072\u0067\u0075\u006d\u0065\u006et");};_agfa :=args [0].Ref ;if _agfa .Type !=ReferenceTypeCell {return MakeErrorResult ("\u0052\u004f\u0057\u0020\u0072\u0065\u0071\u0075i\u0072\u0065\u0073 a\u006e\u0020\u0061\u0072\u0067\u0075m\u0065\u006e\u0074\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u006f\u0066\u0020\u0074\u0079p\u0065\u0020\u0072\u0065\u0066\u0065\u0072\u0065n\u0063\u0065");};_dddf ,_dgcg :=_bef .ParseCellReference (_agfa .Value );if _dgcg !=nil {return MakeErrorResult ("I\u006e\u0063\u006f\u0072re\u0063t\u0020\u0072\u0065\u0066\u0065r\u0065\u006e\u0063\u0065\u003a\u0020"+_agfa .Value );};return MakeNumberResult (float64 (_dddf .RowIdx ));};

// Range is a range expression that when evaluated returns a list of Results.
type Range struct{_cdacg ,_faceba Expression };

// Npv implements the Excel NPV function.
func Npv (args []Result )Result {_edbae :=len (args );if _edbae < 2{return MakeErrorResult ("\u004e\u0050\u0056 r\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0074w\u006f \u006fr\u0020m\u006f\u0072\u0065\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0073");};if args [0].Type !=ResultTypeNumber {return MakeErrorResult ("\u004e\u0050\u0056\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020r\u0061\u0074\u0065\u0020\u0074\u006f \u0062\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0061\u0072\u0067u\u006d\u0065\u006e\u0074");};_edgd :=args [0].ValueNumber ;if _edgd ==-1{return MakeErrorResultType (ErrorTypeDivideByZero ,"");};_dcagf :=[]float64 {};for _ ,_fdca :=range args [1:]{switch _fdca .Type {case ResultTypeNumber :_dcagf =append (_dcagf ,_fdca .ValueNumber );case ResultTypeArray ,ResultTypeList :_gbeb :=_affb (_fdca );for _ ,_gdbd :=range _gbeb {for _ ,_cgbc :=range _gdbd {if _cgbc .Type ==ResultTypeNumber &&!_cgbc .IsBoolean {_dcagf =append (_dcagf ,_cgbc .ValueNumber );};};};};};_gbcg :=0.0;for _faceb ,_decaf :=range _dcagf {_gbcg +=_decaf /_ea .Pow (1+_edgd ,float64 (_faceb )+1);};return MakeNumberResult (_gbcg );};func _dgbga (_dfef float64 )float64 {_ceaef :=float64 (1);for _edcg :=float64 (2);_edcg <=_dfef ;_edcg ++{_ceaef *=_edcg ;};return _ceaef ;};

// Averagea implements the AVERAGEA function, AVERAGEA counts cells that contain
// text as a zero where AVERAGE ignores them entirely.
func Averagea (args []Result )Result {_ebgcf ,_fgace :=_dfaa (args ,true );if _fgace ==0{return MakeErrorResultType (ErrorTypeDivideByZero ,"\u0041\u0056\u0045\u0052AG\u0045\u0020\u0064\u0069\u0076\u0069\u0064\u0065\u0020\u0062\u0079\u0020\u007a\u0065r\u006f");};return MakeNumberResult (_ebgcf /_fgace );};

// Offset is an implementation of the Excel OFFSET function.
func Offset (ctx Context ,ev Evaluator ,args []Result )Result {if len (args )!=3&&len (args )!=5{return MakeErrorResult ("\u004f\u0046\u0046\u0053\u0045\u0054\u0020\u0072\u0065\u0071\u0075\u0069\u0072e\u0073\u0020\u0074\u0068\u0072\u0065e\u0020\u006f\u0072\u0020\u0066\u0069\u0076\u0065\u0020\u0061\u0072\u0067\u0075m\u0065\u006e\u0074\u0073");};_gcea :=args [0].Ref ;for _gcea .Type ==ReferenceTypeNamedRange {_gcea =ctx .NamedRange (_gcea .Value );};_aaeg :="";switch _gcea .Type {case ReferenceTypeCell :_aaeg =_gcea .Value ;case ReferenceTypeRange :_gebg :=_ce .Split (_gcea .Value ,"\u003a");if len (_gebg )==2{_aaeg =_gebg [0];};default:return MakeErrorResult (_dc .Sprintf ("\u0049\u006ev\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u0069\u006e\u0020\u004f\u0046\u0046\u0053\u0045\u0054\u0028\u0029: \u0025\u0073",_gcea .Type ));};_agff ,_ecdde :=_bef .ParseCellReference (_aaeg );if _ecdde !=nil {return MakeErrorResult (_dc .Sprintf ("\u0070\u0061\u0072s\u0065\u0020\u006f\u0072i\u0067\u0069\u006e\u0020\u0065\u0072\u0072o\u0072\u0020\u004f\u0046\u0046\u0053\u0045\u0054\u0028\u0029\u003a\u0020\u0025\u0073",_ecdde .Error ()));};_gbfbc ,_bdcf ,_ddeed :=_agff .Column ,_agff .RowIdx ,_agff .SheetName ;_ecca :=args [1].AsNumber ();if _ecca .Type !=ResultTypeNumber {return MakeErrorResult ("\u004f\u0046\u0046SE\u0054\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065s\u0020n\u0075m\u0065r\u0069\u0063\u0020\u0072\u006f\u0077\u0020\u006f\u0066\u0066\u0073\u0065\u0074");};_abga :=args [2].AsNumber ();if _abga .Type !=ResultTypeNumber {return MakeErrorResult ("\u004f\u0046\u0046SE\u0054\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065s\u0020n\u0075m\u0065r\u0069\u0063\u0020\u0063\u006f\u006c\u0020\u006f\u0066\u0066\u0073\u0065\u0074");};var _gfae ,_afcb Result ;if len (args )==3{_gfae =MakeNumberResult (1);_afcb =MakeNumberResult (1);}else {_gfae =args [3].AsNumber ();if _gfae .Type !=ResultTypeNumber {return MakeErrorResult ("\u004f\u0046\u0046\u0053\u0045\u0054\u0020\u0072\u0065\u0071u\u0069\u0072\u0065\u0073\u0020\u006e\u0075m\u0065\u0072\u0069\u0063\u0020\u0068\u0065\u0069\u0067\u0068\u0074");};if _gfae .ValueNumber ==0{return MakeErrorResultType (ErrorTypeRef ,"");};_afcb =args [4].AsNumber ();if _afcb .Type !=ResultTypeNumber {return MakeErrorResult ("\u004f\u0046F\u0053\u0045\u0054\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u006e\u0075\u006d\u0065\u0072\u0069\u0063\u0020\u0077id\u0074\u0068");};if _afcb .ValueNumber ==0{return MakeErrorResultType (ErrorTypeRef ,"");};};_dfeg :=_bef .ColumnToIndex (_gbfbc );_caacf :=_bdcf +uint32 (_ecca .ValueNumber );_ccbac :=_dfeg +uint32 (_abga .ValueNumber );_fdda :=_caacf +uint32 (_gfae .ValueNumber );_ageeg :=_ccbac +uint32 (_afcb .ValueNumber );if _gfae .ValueNumber > 0{_fdda --;}else {_fdda ++;_caacf ,_fdda =_fdda ,_caacf ;};if _afcb .ValueNumber > 0{_ageeg --;}else {_ageeg ++;_ccbac ,_ageeg =_ageeg ,_ccbac ;};_bgdd :=_dc .Sprintf ("\u0025\u0073\u0025\u0064",_bef .IndexToColumn (_ccbac ),_caacf );_afecc :=_dc .Sprintf ("\u0025\u0073\u0025\u0064",_bef .IndexToColumn (_ageeg ),_fdda );if _ddeed ==""{return _fceb (ctx ,ev ,_bgdd ,_afecc );}else {return _fceb (ctx .Sheet (_ddeed ),ev ,_bgdd ,_afecc );};};

// Reference returns an invalid reference for ConstArrayExpr.
func (_dbd ConstArrayExpr )Reference (ctx Context ,ev Evaluator )Reference {return ReferenceInvalid };type criteriaRegex struct{_beaf byte ;_ebdee string ;};func (_dccd *plex )Lex (lval *yySymType )int {_feabb =true ;_cfdbe :=<-_dccd ._cdbac ;if _cfdbe !=nil {lval ._aedaf =_cfdbe ;return int (lval ._aedaf ._bbcc );};return 0;};

// Disc implements the Excel DISC function.
func Disc (args []Result )Result {_fag :=len (args );if _fag !=4&&_fag !=5{return MakeErrorResult ("\u0044\u0049SC\u0020\u0072\u0065q\u0075\u0069\u0072\u0065s f\u006fur\u0020\u006f\u0072\u0020\u0066\u0069\u0076e \u0061\u0072\u0067\u0075\u006d\u0065\u006et\u0073");};_fcfb ,_ddb ,_abgb :=_egcf (args [0],args [1],"\u0044\u0049\u0053\u0043");if _abgb .Type ==ResultTypeError {return _abgb ;};if args [2].Type !=ResultTypeNumber {return MakeErrorResult ("\u0044\u0049\u0053\u0043\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0070\u0072\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u006eu\u006d\u0062\u0065\u0072\u0020a\u0072\u0067u\u006d\u0065\u006e\u0074");};_gge :=args [2].ValueNumber ;if _gge <=0{return MakeErrorResultType (ErrorTypeNum ,"D\u0049\u0053\u0043\u0020\u0072\u0065\u0071\u0075\u0069r\u0065\u0073\u0020\u0070\u0072\u0020\u0074o \u0062\u0065\u0020\u0070o\u0073\u0069\u0074\u0069\u0076\u0065\u0020\u006e\u0075mb\u0065\u0072 \u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};if args [3].Type !=ResultTypeNumber {return MakeErrorResult ("\u0044\u0049S\u0043\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0072\u0065\u0064\u0065\u006d\u0070\u0074\u0069\u006f\u006e\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};_bfdd :=args [3].ValueNumber ;if _bfdd <=0{return MakeErrorResultType (ErrorTypeNum ,"\u0044\u0049\u0053\u0043\u0020\u0072\u0065q\u0075\u0069\u0072e\u0073\u0020\u0072e\u0064\u0065m\u0070\u0074\u0069\u006f\u006e\u0020t\u006f b\u0065\u0020\u0070\u006f\u0073\u0069\u0074\u0069\u0076\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};_dae :=0;if _fag ==5&&args [4].Type !=ResultTypeEmpty {if args [4].Type !=ResultTypeNumber {return MakeErrorResult ("\u0044\u0049\u0053\u0043\u0020r\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0062\u0061\u0073\u0069\u0073 \u0074\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};_dae =int (args [4].ValueNumber );if !_aaac (_dae ){return MakeErrorResultType (ErrorTypeNum ,"\u0049\u006e\u0063\u006f\u0072\u0072e\u0063\u0074\u0020\u0062\u0061\u0073\u0069\u0073\u0020\u0061\u0072\u0067\u0075m\u0065\u006e\u0074\u0020\u0066\u006f\u0072 \u0044\u0049\u0053\u0043");};};_deeb ,_abgb :=_eaee (_fcfb ,_ddb ,_dae );if _abgb .Type ==ResultTypeError {return _abgb ;};return MakeNumberResult ((_bfdd -_gge )/_bfdd /_deeb );};

// SumIf implements the SUMIF function.
func SumIf (args []Result )Result {if len (args )< 3{return MakeErrorResult ("\u0053\u0055\u004d\u0049\u0046\u0020\u0072\u0065\u0071\u0075i\u0072\u0065\u0073\u0020\u0074\u0068\u0072e\u0065\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0073");};_daae :=args [0];if _daae .Type !=ResultTypeArray &&_daae .Type !=ResultTypeList {return MakeErrorResult ("\u0053\u0055\u004d\u0049\u0046\u0020\u0072e\u0071\u0075\u0069r\u0065\u0073\u0020\u0066i\u0072\u0073\u0074\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0020\u006f\u0066\u0020\u0074\u0079\u0070\u0065\u0020\u0061\u0072\u0072\u0061\u0079");};_aagd :=_affb (_daae );_bbgc :=args [2];if _bbgc .Type !=ResultTypeArray &&_bbgc .Type !=ResultTypeList {return MakeErrorResult ("\u0053\u0055\u004dI\u0046\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u006c\u0061\u0073\u0074\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0020\u006f\u0066\u0020\u0074y\u0070\u0065\u0020\u0061\u0072\u0072\u0061\u0079");};_eafdd :=_affb (_bbgc );_gdee :=_ccceg (args [1]);_cbdc :=0.0;for _aabdd ,_aeege :=range _aagd {for _bdbd ,_cebg :=range _aeege {if _fdaaa (_cebg ,_gdee ){_cbdc +=_eafdd [_aabdd ][_bdbd ].ValueNumber ;};};};return MakeNumberResult (_cbdc );};const _ggdb int =0;type cmpResult int8 ;

// Reference returns an invalid reference for Bool.
func (_ef Bool )Reference (ctx Context ,ev Evaluator )Reference {return ReferenceInvalid };

// Reference returns an invalid reference for Error.
func (_dbb Error )Reference (ctx Context ,ev Evaluator )Reference {return ReferenceInvalid };

// Year is an implementation of the Excel YEAR() function.
func Year (ctx Context ,ev Evaluator ,args []Result )Result {if len (args )!=1||args [0].Type !=ResultTypeNumber {return MakeErrorResult ("\u0059\u0045\u0041\u0052\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0061\u0020\u0073\u0069\u006e\u0067\u006c\u0065\u0020\u006eu\u006d\u0062\u0065\u0072\u0020a\u0072\u0067u\u006d\u0065\u006e\u0074");};_bfcc :=ctx .GetEpoch ();_abcg ,_cda :=_dgcf (args [0].Value (),_bfcc );if _cda !=nil {return MakeErrorResult ("\u0059\u0045AR\u0020\u0072\u0065q\u0075\u0069\u0072\u0065s a\u0020si\u006e\u0067\u006c\u0065\u0020\u0064\u0061te\u0020\u0061\u0072\u0067\u0075\u006d\u0065n\u0074");};return MakeNumberResult (float64 (_abcg .Year ()));};

// RegisterFunction registers a standard function.
func RegisterFunction (name string ,fn Function ){_bdbb .Lock ();defer _bdbb .Unlock ();if _ ,_ffff :=_babcg [name ];_ffff {_bf .Log .Debug ("\u0064\u0075p\u006c\u0069\u0063\u0061t\u0065\u0020r\u0065\u0067\u0069\u0073\u0074\u0072\u0061\u0074i\u006f\u006e\u0020\u006f\u0066\u0020\u0066\u0075\u006e\u0063\u0074\u0069o\u006e\u0020\u0025\u0073",name );};_babcg [name ]=fn ;};func _bfa (_gccf []Result ,_degff string )(*durationArgs ,Result ){_dcaf :=len (_gccf );if _dcaf !=5&&_dcaf !=6{return nil ,MakeErrorResult (_degff +"\u0020\u0072\u0065q\u0075\u0069\u0072\u0065s\u0020\u0066\u0069\u0076\u0065\u0020\u006fr\u0020\u0073\u0069\u0078\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0073");};_ggbd ,_acgg ,_fdbg :=_egcf (_gccf [0],_gccf [1],_degff );if _fdbg .Type ==ResultTypeError {return nil ,_fdbg ;};_geaa :=_gccf [2];if _geaa .Type !=ResultTypeNumber {return nil ,MakeErrorResult (_degff +"\u0020\u0072eq\u0075\u0069\u0072e\u0073\u0020\u0063\u006fupo\u006e r\u0061\u0074\u0065\u0020\u006f\u0066\u0020ty\u0070\u0065\u0020\u006e\u0075\u006d\u0062e\u0072");};_eebec :=_geaa .ValueNumber ;if _eebec < 0{return nil ,MakeErrorResultType (ErrorTypeNum ,"\u0043\u006f\u0075po\u006e\u0020\u0072\u0061\u0074\u0065\u0020\u0073\u0068o\u0075l\u0064 \u006eo\u0074\u0020\u0062\u0065\u0020\u006e\u0065\u0067\u0061\u0074\u0069\u0076\u0065");};_eec :=_gccf [3];if _eec .Type !=ResultTypeNumber {return nil ,MakeErrorResult (_degff +" \u0072\u0065\u0071\u0075\u0069\u0072e\u0073\u0020\u0079\u0069\u0065\u006cd\u0020\u0072\u0061\u0074\u0065\u0020\u006ff\u0020\u0074\u0079\u0070\u0065\u0020\u006e\u0075\u006d\u0062e\u0072");};_dde :=_eec .ValueNumber ;if _dde < 0{return nil ,MakeErrorResultType (ErrorTypeNum ,"\u0059\u0069\u0065\u006c\u0064\u0020r\u0061\u0074\u0065\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u006e\u006ft\u0020\u0062\u0065\u0020\u006e\u0065\u0067a\u0074\u0069\u0076\u0065");};_dbfc :=_gccf [4];if _dbfc .Type !=ResultTypeNumber {return nil ,MakeErrorResult (_degff +"\u0020\u0072\u0065qu\u0069\u0072\u0065\u0073\u0020\u0066\u0072\u0065\u0071u\u0065n\u0063y\u0020o\u0066\u0020\u0074\u0079\u0070\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072");};_efb :=float64 (int (_dbfc .ValueNumber ));if !_cad (_efb ){return nil ,MakeErrorResultType (ErrorTypeNum ,"\u0049n\u0063\u006f\u0072\u0072e\u0063\u0074\u0020\u0066\u0072e\u0071u\u0065n\u0063\u0065\u0020\u0076\u0061\u006c\u0075e");};_afg :=0;if _dcaf ==6&&_gccf [5].Type !=ResultTypeEmpty {_caf :=_gccf [5];if _caf .Type !=ResultTypeNumber {return nil ,MakeErrorResult (_degff +"\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020b\u0061\u0073\u0069\u0073\u0020\u006f\u0066 \u0074\u0079\u0070\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072");};_afg =int (_caf .ValueNumber );if !_aaac (_afg ){return nil ,MakeErrorResultType (ErrorTypeNum ,"\u0049\u006e\u0063\u006f\u0072\u0072\u0065\u0063\u0074\u0020\u0062a\u0073\u0069\u0073\u0020\u0076\u0061\u006c\u0075\u0065\u0020f\u006f\u0072\u0020"+_degff );};};return &durationArgs {_ggbd ,_acgg ,_eebec ,_dde ,_efb ,_afg },_ega ;};

// Oddlyield implements the Excel ODDLYIELD function.
func Oddlyield (args []Result )Result {if len (args )!=7&&len (args )!=8{return MakeErrorResult ("\u004f\u0044\u0044\u004c\u0059\u0049\u0045L\u0044\u0020\u0072e\u0071\u0075\u0069\u0072e\u0073\u0020\u0073\u0065\u0076\u0065\u006e\u0020\u006f\u0072\u0020\u0065\u0069\u0067\u0068\u0074\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0073");};_ffdg ,_gdcb ,_gfga :=_egcf (args [0],args [1],"\u004fD\u0044\u004c\u0059\u0049\u0045\u004cD");if _gfga .Type ==ResultTypeError {return _gfga ;};_aegdc ,_gfga :=_gagf (args [2],"\u0069\u0073\u0073\u0075\u0065\u0020\u0064\u0061\u0074\u0065","\u004fD\u0044\u004c\u0050\u0052\u0049\u0043E");if _gfga .Type ==ResultTypeError {return _gfga ;};if _aegdc >=_ffdg {return MakeErrorResultType (ErrorTypeNum ,"\u004c\u0061\u0073\u0074\u0020i\u006e\u0074\u0065\u0072\u0065\u0073\u0074\u0020\u0064\u0061\u0074\u0065\u0020s\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0062\u0065\u0066\u006f\u0072\u0065\u0020\u0073\u0065\u0074\u0074\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u0064\u0061\u0074e");};if args [3].Type !=ResultTypeNumber {return MakeErrorResult ("\u004f\u0044\u0044\u004c\u0059\u0049\u0045\u004c\u0044\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0072\u0061\u0074\u0065\u0020o\u0066\u0020\u0074\u0079\u0070e\u0020\u006eu\u006d\u0062\u0065\u0072");};_dgbb :=args [3].ValueNumber ;if _dgbb < 0{return MakeErrorResultType (ErrorTypeNum ,"R\u0061\u0074\u0065\u0020\u0073\u0068o\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u006e\u006fn\u0020\u006e\u0065g\u0061t\u0069\u0076\u0065");};if args [4].Type !=ResultTypeNumber {return MakeErrorResult ("O\u0044\u0044\u004c\u0059\u0049\u0045\u004c\u0044\u0020r\u0065\u0071\u0075\u0069\u0072\u0065\u0073 p\u0072\u0065\u0073\u0065n\u0074\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u006ff \u0074\u0079p\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072");};_eefc :=args [4].ValueNumber ;if _eefc <=0{return MakeErrorResultType (ErrorTypeNum ,"\u0050\u0072\u0065\u0073\u0065\u006e\u0074\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u0073h\u006fu\u006c\u0064\u0020\u0062\u0065\u0020\u0070\u006f\u0073\u0069\u0074\u0069\u0076\u0065");};if args [5].Type !=ResultTypeNumber {return MakeErrorResult ("\u004fD\u0044\u004cY\u0049\u0045\u004c\u0044 \u0072\u0065\u0071u\u0069\u0072\u0065\u0073\u0020\u0072\u0065\u0064\u0065mp\u0074\u0069\u006fn\u0020\u006ff\u0020\u0074\u0079\u0070\u0065\u0020n\u0075\u006db\u0065\u0072");};_cedcc :=args [5].ValueNumber ;if _cedcc < 0{return MakeErrorResultType (ErrorTypeNum ,"\u0059\u0069\u0065\u006cd\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065 \u006eo\u006e\u0020\u006e\u0065\u0067\u0061\u0074i\u0076\u0065");};if args [6].Type !=ResultTypeNumber {return MakeErrorResult ("\u004f\u0044\u0044\u004c\u0059\u0049\u0045L\u0044\u0020\u0072e\u0071\u0075\u0069\u0072e\u0073\u0020\u0066\u0072\u0065\u0071\u0075\u0065\u006e\u0063\u0079\u0020\u006f\u0066\u0020\u0074\u0079\u0070\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072");};_gbbbb :=float64 (int (args [6].ValueNumber ));if !_cad (_gbbbb ){return MakeErrorResultType (ErrorTypeNum ,"\u0049n\u0063\u006f\u0072\u0072e\u0063\u0074\u0020\u0066\u0072e\u0071u\u0065n\u0063\u0065\u0020\u0076\u0061\u006c\u0075e");};_gfeg :=0;if len (args )==8&&args [7].Type !=ResultTypeEmpty {if args [7].Type !=ResultTypeNumber {return MakeErrorResult ("\u004f\u0044\u0044\u004c\u0059\u0049\u0045\u004c\u0044\u0020\u0072\u0065\u0071u\u0069\u0072\u0065\u0073\u0020\u0062a\u0073\u0069\u0073\u0020\u006f\u0066\u0020\u0074\u0079\u0070\u0065\u0020\u006eu\u006d\u0062\u0065\u0072");};_gfeg =int (args [7].ValueNumber );if !_aaac (_gfeg ){return MakeErrorResultType (ErrorTypeNum ,"I\u006e\u0063\u006f\u0072\u0072\u0065c\u0074\u0020\u0062\u0061\u0073\u0069s\u0020\u0076\u0061\u006c\u0075\u0065\u0020f\u006f\u0072\u0020\u004f\u0044\u0044\u004c\u0059\u0049\u0045L\u0044");};};_bbage ,_gfga :=_eaee (_aegdc ,_gdcb ,_gfeg );if _gfga .Type ==ResultTypeError {return _gfga ;};_bbage *=_gbbbb ;_ddca ,_gfga :=_eaee (_ffdg ,_gdcb ,_gfeg );if _gfga .Type ==ResultTypeError {return _gfga ;};_ddca *=_gbbbb ;_becb ,_gfga :=_eaee (_aegdc ,_ffdg ,_gfeg );if _gfga .Type ==ResultTypeError {return _gfga ;};_becb *=_gbbbb ;_bgcd :=_cedcc +_bbage *100*_dgbb /_gbbbb ;_bgcd /=_eefc +_becb *100*_dgbb /_gbbbb ;_bgcd --;_bgcd *=_gbbbb /_ddca ;return MakeNumberResult (_bgcd );};func _ffbd (_dbf string )bool {for _ ,_bbf :=range _fgee {_afdb :=_bbf .FindStringSubmatch (_dbf );if len (_afdb )> 1{return true ;};};return false ;};type rmode byte ;

// Update updates references in the PrefixHorizontalRange after removing a row/column.
func (_bbfec PrefixHorizontalRange )Update (q *_ff .UpdateQuery )Expression {return _bbfec };func _fcbdb (){_cfbec =_be .MustCompile ("\u005e\u0028\u005b\u0030\u002d\u0039\u005d\u002b\u0029\u0024");_ddec =_be .MustCompile ("\u005e=\u0028\u002e\u002a\u0029\u0024");_dbfcg =_be .MustCompile ("\u005e<\u0028\u002e\u002a\u0029\u0024");_abbd =_be .MustCompile ("\u005e>\u0028\u002e\u002a\u0029\u0024");_effe =_be .MustCompile ("\u005e\u003c\u003d\u0028\u002e\u002a\u0029\u0024");_agbbd =_be .MustCompile ("\u005e\u003e\u003d\u0028\u002e\u002a\u0029\u0024");};

// ResultType is the type of the result
//go:generate stringer -type=ResultType
type ResultType byte ;type couponArgs struct{_dcd float64 ;_efce float64 ;_bfeg int ;_gdb int ;};var _ebgcd =[...]int {0,7,3,3,3,8,8,8,8,1,1,1,2,2,2,2,2,14,15,15,17,17,4,4,4,13,5,6,6,6,6,6,6,6,12,12,12,12,12,12,12,12,12,12,12,12,9,9,9,16,16,11,10,10};

// Function is a standard function whose result only depends on its arguments.
type Function func (_gacdc []Result )Result ;

// Eval evaluates and returns the result of a constant array expression.
func (_fea ConstArrayExpr )Eval (ctx Context ,ev Evaluator )Result {_ca :=[][]Result {};for _ ,_gb :=range _fea ._ccd {_bfe :=[]Result {};for _ ,_befc :=range _gb {_bfe =append (_bfe ,_befc .Eval (ctx ,ev ));};_ca =append (_ca ,_bfe );};return MakeArrayResult (_ca );};type noCache struct{};

// AsNumber attempts to intepret a string cell value as a number. Upon success,
// it returns a new number result, upon  failure it returns the original result.
// This is used as functions return strings that can then act like number (e.g.
// LEFT(1.2345,3) + LEFT(1.2345,3) = 2.4)
func (_egege Result )AsNumber ()Result {if _egege .Type ==ResultTypeString {_gdcgg ,_gggec :=_gc .ParseFloat (_egege .ValueString ,64);if _gggec ==nil {return MakeNumberResult (_gdcgg );};};if _egege .Type ==ResultTypeEmpty {return MakeNumberResult (0);};return _egege ;};

// HasFormula returns FALSE for the invalid reference context.
func (_adbf *ivr )HasFormula (cellRef string )bool {return false };

// Reference returns a string reference value to a sheet.
func (_ccdbc SheetPrefixExpr )Reference (ctx Context ,ev Evaluator )Reference {return Reference {Type :ReferenceTypeSheet ,Value :_ccdbc ._bcff };};

// Dollarfr implements the Excel DOLLARFR function.
func Dollarfr (args []Result )Result {_gaa ,_degc ,_acfe :=_cegc (args ,"\u0044\u004f\u004c\u004c\u0041\u0052\u0046\u0052");if _acfe .Type ==ResultTypeError {return _acfe ;};if _degc ==0{return MakeErrorResultType (ErrorTypeDivideByZero ,"\u0044\u004f\u004c\u004c\u0041R\u0046\u0052\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0066r\u0061\u0063\u0074\u0069\u006f\u006e\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u0070\u006f\u0073\u0069\u0074\u0069\u0076\u0065");};if _gaa ==0{return MakeNumberResult (0);};_ebeg :=_gaa < 0;if _ebeg {_gaa =-_gaa ;};_gebbd :=float64 (int (_gaa ));_abe :=args [0].Value ();_bced :=_ce .Split (_abe ,"\u002e");_cdecc :=0.0;if len (_bced )> 1{var _afe error ;_feecg :=_bced [1];_cdecc ,_afe =_gc .ParseFloat (_feecg ,64);if _afe !=nil {return MakeErrorResult ("I\u006e\u0063\u006f\u0072\u0072\u0065\u0063\u0074\u0020\u0066\u0072\u0061\u0063\u0074\u0069\u006f\u006e\u0020a\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0020\u0066\u006fr \u0044\u004f\u004cL\u0041R\u0046\u0052");};_fcac :=float64 (len (_feecg ));_cdecc /=_ea .Pow (10,_fcac );};_eged :=_cdecc *_degc /_ea .Pow (10,float64 (int (_ea .Log10 (_degc )))+1)+_gebbd ;if _ebeg {_eged =-_eged ;};return MakeNumberResult (_eged );};

// NamedRangeRef is a reference to a named range.
type NamedRangeRef struct{_gbdeb string };

// Roman is an implementation of the Excel ROMAN function that convers numbers
// to roman numerals in one of 5 formats.
func Roman (args []Result )Result {if len (args )==0{return MakeErrorResult ("\u0052\u004fM\u0041\u004e\u0028\u0029\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0061\u0074\u0020\u006c\u0065\u0061\u0073\u0074\u0020\u006f\u006e\u0065\u0020\u006e\u0075\u006d\u0065\u0072\u0069\u0063\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};if len (args )> 2{return MakeErrorResult ("\u0052\u004fM\u0041\u004e\u0028\u0029\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0061\u0074\u0020\u006d\u006f\u0073\u0074\u0020\u0074\u0077\u006f\u0020\u006e\u0075\u006d\u0065\u0072\u0069\u0063\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0073");};_dggdb :=args [0].AsNumber ();if _dggdb .Type !=ResultTypeNumber {return MakeErrorResult ("\u0052\u004fM\u0041\u004e\u0028\u0029\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0061\u0074\u0020\u006c\u0065\u0061\u0073\u0074\u0020\u006f\u006e\u0065\u0020\u006e\u0075\u006d\u0065\u0072\u0069\u0063\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};_gfaeb :=0;if len (args )> 1{_faca :=args [1];if _faca .Type !=ResultTypeNumber {return MakeErrorResult ("\u0052\u004fM\u0041\u004e\u0028\u0029\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0073\u0065\u0063\u006f\u006e\u0064\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006d\u0065\u0072\u0069\u0063");};_gfaeb =int (_faca .ValueNumber );if _gfaeb < 0{_gfaeb =0;}else if _gfaeb > 4{_gfaeb =4;};};_adfb :=_adcbb ;switch _gfaeb {case 1:_adfb =_aegfd ;case 2:_adfb =_adeac ;case 3:_adfb =_eeab ;case 4:_adfb =_gbfgd ;};_adfff :=_ea .Trunc (_dggdb .ValueNumber );_cgea :=_cb .Buffer {};for _ ,_ffgf :=range _adfb {for _adfff >=_ffgf ._gfaf {_cgea .WriteString (_ffgf ._cfeeb );_adfff -=_ffgf ._gfaf ;};};return MakeStringResult (_cgea .String ());};type tokenType int ;

// String returns a string representation of CellRef.
func (_efa CellRef )String ()string {return _efa ._cbe };func _abdg (_fdbe ,_fccd _f .Time ,_agde ,_agcb int )_f .Time {_bgfc :=_fccd ;_gced :=_fdbe .Year ()-_fccd .Year ();_bgfc =_bgfc .AddDate (_gced ,0,0);if _fdbe .After (_bgfc ){_bgfc =_bgfc .AddDate (1,0,0);};_fbbe :=-12/_agde ;for _bgfc .After (_fdbe ){_bgfc =_bgfc .AddDate (0,_fbbe ,0);};return _bgfc ;};

// Pi is an implementation of the Excel Pi() function that just returns the Pi
// constant.
func Pi (args []Result )Result {if len (args )!=0{return MakeErrorResult ("\u0050I\u0028\u0029\u0020\u0061c\u0063\u0065\u0070\u0074\u0073 \u006eo\u0020a\u0072\u0067\u0075\u006d\u0065\u006e\u0074s");};return MakeNumberResult (_ea .Pi );};

// Coupdays implements the Excel COUPDAYS function.
func Coupdays (args []Result )Result {_dgf ,_dfed :=_fggc (args ,"\u0043\u004f\u0055\u0050\u0044\u0041\u0059\u0053");if _dfed .Type ==ResultTypeError {return _dfed ;};return MakeNumberResult (_bbga (_dgf ._dcd ,_dgf ._efce ,_dgf ._bfeg ,_dgf ._gdb ));};func _cdcefb (_fgge Result ,_bcagf *criteriaParsed )bool {_fcdb :=_ce .ToLower (_fgge .ValueString );_aggg :=_bcagf ._gbbc ._beaf ;_eggg :=_bcagf ._gbbc ._ebdee ;if _aggg ==_fedg {return _fcdb ==_eggg ||_ba .Match (_eggg ,_fcdb );};if _fgge .Type !=ResultTypeEmpty {if _fcdb ==_bcagf ._babgc ||_ba .Match (_bcagf ._babgc ,_fcdb ){return true ;};if _ ,_ecaf :=_gc .ParseFloat (_eggg ,64);_ecaf ==nil {return false ;};switch _aggg {case _eead :return _fcdb <=_eggg ;case _gdcg :return _fcdb >=_eggg ;case _gcceb :return _fcdb < _eggg ;case _efdgd :return _fcdb > _eggg ;};};return false ;};

// Log implements the Excel LOG function which returns the log of a number. By
// default the result is base 10, however the second argument to the function
// can specify a different base.
func Log (args []Result )Result {if len (args )==0{return MakeErrorResult ("\u004cO\u0047\u0028)\u0020\u0072\u0065\u0071u\u0069\u0072\u0065s\u0020\u0061\u0074\u0020\u006c\u0065\u0061\u0073\u0074 o\u006e\u0065\u0020n\u0075\u006de\u0072\u0069\u0063\u0020\u0061\u0072g\u0075\u006de\u006e\u0074");};if len (args )> 2{return MakeErrorResult ("L\u004f\u0047\u0028\u0029\u0020\u0061\u0063\u0063\u0065\u0070\u0074\u0073\u0020\u0061\u0020\u006d\u0061\u0078i\u006d\u0075\u006d\u0020\u006f\u0066\u0020\u0074\u0077\u006f a\u0072\u0067\u0075m\u0065n\u0074\u0073");};_cefeg :=args [0].AsNumber ();if _cefeg .Type !=ResultTypeNumber {return MakeErrorResult ("\u004cO\u0047\u0028)\u0020\u0072\u0065\u0071u\u0069\u0072\u0065s\u0020\u0061\u0074\u0020\u006c\u0065\u0061\u0073\u0074 o\u006e\u0065\u0020n\u0075\u006de\u0072\u0069\u0063\u0020\u0061\u0072g\u0075\u006de\u006e\u0074");};_degce :=10.0;if len (args )> 1{_egbb :=args [1].AsNumber ();if _egbb .Type !=ResultTypeNumber {return MakeErrorResult ("\u004cO\u0047\u0028)\u0020\u0072\u0065\u0071u\u0069\u0072\u0065s\u0020\u0073\u0065\u0063\u006f\u006e\u0064\u0020\u0061rg\u0075\u006d\u0065n\u0074\u0020t\u006f\u0020\u0062\u0065\u0020\u006eu\u006d\u0065r\u0069\u0063");};_degce =args [1].ValueNumber ;};if _cefeg .ValueNumber ==0{return MakeErrorResult ("\u004cO\u0047\u0028)\u0020\u0072\u0065\u0071u\u0069\u0072\u0065s\u0020\u0066\u0069\u0072\u0073\u0074\u0020\u0061\u0072gu\u006d\u0065\u006et\u0020\u0074o\u0020\u0062\u0065\u0020\u006e\u006fn\u002d\u007ae\u0072\u006f");};if _degce ==0{return MakeErrorResult ("\u004cO\u0047\u0028)\u0020\u0072\u0065q\u0075\u0069\u0072\u0065\u0073\u0020\u0073e\u0063\u006f\u006e\u0064\u0020\u0061r\u0067\u0075\u006d\u0065\u006e\u0074\u0020\u0074\u006f\u0020\u0062e\u0020\u006e\u006f\u006e\u002d\u007a\u0065\u0072\u006f");};return MakeNumberResult (_ea .Log (_cefeg .ValueNumber )/_ea .Log (_degce ));};

// String returns a string representation for Bool.
func (_afa Bool )String ()string {if _afa ._aag {return "\u0054\u0052\u0055\u0045";}else {return "\u0046\u0041\u004cS\u0045";};};func _fd (_da ,_ag [][]Result )bool {if len (_da )!=len (_ag ){return false ;};for _ad :=range _da {if len (_da [_ad ])!=len (_ag [_ad ]){return false ;};};return true ;};type evCache struct{_beb map[string ]Result ;_ebde *_ga .Mutex ;};const (_ byte =iota ;_fedg ;_eead ;_gdcg ;_gcceb ;_efdgd ;);const _ccc =_ebdb +"\u0020\u0028\u0028[0\u002d\u0039\u005d\u0029\u002b\u0029\u002c\u0020\u0028\u0028\u005b\u0030\u002d\u0039\u005d\u0029\u002b\u0029";

// Update updates the FunctionCall references after removing a row/column.
func (_dbeb FunctionCall )Update (q *_ff .UpdateQuery )Expression {_agffab :=[]Expression {};for _ ,_eeba :=range _dbeb ._bdegf {_ddeb :=_eeba .Update (q );_agffab =append (_agffab ,_ddeb );};return FunctionCall {_cacb :_dbeb ._cacb ,_bdegf :_agffab };};

// Ddb implements the Excel DDB function.
func Ddb (args []Result )Result {_ebfgd :=len (args );if _ebfgd !=4&&_ebfgd !=5{return MakeErrorResult ("\u0044\u0044\u0042 \u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0066\u006f\u0075\u0072\u0020\u006f\u0072\u0020\u0066\u0069\u0076\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020a\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0073");};if args [0].Type !=ResultTypeNumber {return MakeErrorResult ("\u0044\u0044\u0042\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020c\u006f\u0073\u0074\u0020\u0074\u006f \u0062\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0061\u0072\u0067u\u006d\u0065\u006e\u0074");};_geaf :=args [0].ValueNumber ;if _geaf < 0{return MakeErrorResultType (ErrorTypeNum ,"\u0044\u0044B \u0072\u0065\u0071u\u0069\u0072\u0065\u0073 co\u0073t \u0074\u006f\u0020\u0062\u0065\u0020\u006eon\u0020\u006e\u0065\u0067\u0061\u0074\u0069v\u0065");};if args [1].Type !=ResultTypeNumber {return MakeErrorResult ("\u0044\u0044\u0042 \u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0073\u0061\u006c\u0076\u0061\u0067\u0065\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072 \u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};_affe :=args [1].ValueNumber ;if _affe < 0{return MakeErrorResultType (ErrorTypeNum ,"\u0044\u0044\u0042\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020s\u0061\u006c\u0076\u0061\u0067\u0065 \u0074\u006f\u0020\u0062\u0065\u0020\u006e\u006f\u006e\u0020\u006e\u0065\u0067a\u0074\u0069\u0076\u0065");};if args [2].Type !=ResultTypeNumber {return MakeErrorResult ("\u0044\u0044\u0042\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020l\u0069\u0066\u0065\u0020\u0074\u006f \u0062\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0061\u0072\u0067u\u006d\u0065\u006e\u0074");};_cfba :=args [2].ValueNumber ;if _cfba <=0{return MakeErrorResultType (ErrorTypeNum ,"\u0044\u0044\u0042\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u006c\u0069f\u0065 \u0074\u006f\u0020\u0062\u0065\u0020\u0070\u006f\u0073\u0069\u0074\u0069\u0076\u0065");};if args [3].Type !=ResultTypeNumber {return MakeErrorResult ("\u0044\u0044\u0042\u0020\u0072e\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0070\u0065\u0072\u0069\u006f\u0064 \u0074\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};_bdccb :=args [3].ValueNumber ;if _bdccb < 1{return MakeErrorResultType (ErrorTypeNum ,"\u0044\u0044\u0042\u0020\u0072\u0065\u0071u\u0069\u0072\u0065s\u0020\u0070\u0065\u0072i\u006f\u0064\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u006e\u006f\u0074\u0020\u006c\u0065\u0073\u0073\u0020\u0074\u0068\u0061\u006e\u0020\u006f\u006e\u0065");};if _bdccb > _cfba {return MakeErrorResultType (ErrorTypeNum ,"\u0049n\u0063\u006f\u0072\u0072\u0065\u0063\u0074\u0020\u0070\u0065\u0072i\u006f\u0064\u0020\u0066\u006f\u0072\u0020\u0044\u0044\u0042");};_dcff :=2.0;if _ebfgd ==5&&args [4].Type !=ResultTypeEmpty {if args [4].Type !=ResultTypeNumber {return MakeErrorResult ("\u0044\u0044\u0042\u0020\u0072e\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0066\u0061\u0063\u0074\u006f\u0072 \u0074\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};_dcff =args [4].ValueNumber ;if _dcff < 0{return MakeErrorResultType (ErrorTypeNum ,"\u0044\u0044\u0042\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0066\u0061\u0063\u0074\u006f\u0072\u0020\u0074\u006f\u0020\u0062e\u0020\u006e\u006f\u006e\u0020n\u0065\u0067a\u0074\u0069\u0076\u0065");};};return MakeNumberResult (_fgbf (_geaf ,_affe ,_cfba ,_bdccb ,_dcff ));};func _adc (_agbe int ,_fbb _f .Month ,_fabge int )int64 {if _agbe ==1900&&int (_fbb )<=2{_fabge --;};_dba :=_f .Date (_agbe ,_fbb ,_fabge ,0,0,0,0,_f .UTC );return _dba .Unix ();};

// NewPrefixHorizontalRange constructs a new full rows range with prefix.
func NewPrefixHorizontalRange (pfx Expression ,v string )Expression {_ffcb :=_ce .Split (v ,"\u003a");if len (_ffcb )!=2{return nil ;};_bccbb ,_ :=_gc .Atoi (_ffcb [0]);_decac ,_ :=_gc .Atoi (_ffcb [1]);if _bccbb > _decac {_bccbb ,_decac =_decac ,_bccbb ;};return PrefixHorizontalRange {_bedeg :pfx ,_adffe :_bccbb ,_adead :_decac };};var _dabfg *_df .Rand ;

// LastEvalIsRef returns if last evaluation with the evaluator was a reference.
func (_bcb *defEval )LastEvalIsRef ()bool {return _bcb ._bbe };

// Yieldmat implements the Excel YIELDMAT function.
func Yieldmat (args []Result )Result {_gceb :=len (args );if _gceb !=5&&_gceb !=6{return MakeErrorResult ("\u0059\u0049\u0045\u004c\u0044\u004d\u0041\u0054\u0020\u0072\u0065\u0071\u0075i\u0072\u0065\u0073\u0020\u0066\u0069v\u0065\u0020\u006f\u0072\u0020\u0073\u0069\u0078\u0020\u0061\u0072\u0067\u0075m\u0065\u006e\u0074\u0073");};_bceb ,_gdfb ,_fgbcd :=_egcf (args [0],args [1],"\u0059\u0049\u0045\u004c\u0044\u004d\u0041\u0054");if _fgbcd .Type ==ResultTypeError {return _fgbcd ;};_bfefd ,_fgbcd :=_gagf (args [2],"\u0069\u0073\u0073\u0075\u0065\u0020\u0064\u0061\u0074\u0065","\u0059\u0049\u0045\u004c\u0044\u004d\u0041\u0054");if _fgbcd .Type ==ResultTypeError {return _fgbcd ;};if _bfefd >=_bceb {return MakeErrorResult ("\u0059\u0049\u0045\u004cD\u004d\u0041\u0054\u0020\u0072\u0065\u0071\u0075\u0069r\u0065\u0073\u0020\u0069\u0073\u0073\u0075\u0065\u0020\u0064\u0061\u0074\u0065\u0020\u0074\u006f\u0020\u0062e\u0020\u0062\u0065\u0066\u006fr\u0065\u0020\u0073\u0065\u0074\u0074\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u0064\u0061\u0074\u0065");};if args [3].Type !=ResultTypeNumber {return MakeErrorResult ("\u0059\u0049E\u004c\u0044\u004d\u0041T\u0020\u0072e\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0072a\u0074\u0065\u0020\u006f\u0066\u0020\u0074\u0079\u0070\u0065\u0020\u006eu\u006d\u0062\u0065\u0072");};_ecda :=args [3].ValueNumber ;if _ecda < 0{return MakeErrorResultType (ErrorTypeNum ,"\u0059\u0049\u0045\u004c\u0044M\u0041\u0054\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0072a\u0074\u0065\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u006e\u006f\u006e\u0020\u006e\u0065\u0067\u0061\u0074\u0069\u0076\u0065");};if args [4].Type !=ResultTypeNumber {return MakeErrorResult ("\u0059\u0049\u0045\u004c\u0044\u004d\u0041\u0054\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0079\u0069\u0065\u006c\u0064\u0020o\u0066\u0020\u0074\u0079\u0070e\u0020\u006eu\u006d\u0062\u0065\u0072");};_afef :=args [4].ValueNumber ;if _afef <=0{return MakeErrorResultType (ErrorTypeNum ,"Y\u0049\u0045\u004c\u0044\u004d\u0041T\u0020\u0072\u0065\u0071\u0075\u0069r\u0065\u0073\u0020\u0070\u0072\u0020\u0074o\u0020\u0062\u0065\u0020\u0070\u006f\u0073\u0069\u0074\u0069v\u0065");};_bafba :=0;if _gceb ==6&&args [5].Type !=ResultTypeEmpty {if args [5].Type !=ResultTypeNumber {return MakeErrorResult ("\u0059I\u0045\u004cD\u004d\u0041\u0054 \u0072\u0065\u0071\u0075\u0069\u0072\u0065s\u0020\u0062\u0061\u0073\u0069\u0073 \u0074\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006d\u0062\u0065r\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};_bafba =int (args [5].ValueNumber );if !_aaac (_bafba ){return MakeErrorResultType (ErrorTypeNum ,"\u0049\u006ec\u006f\u0072\u0072\u0065c\u0074\u0020b\u0061\u0073\u0069\u0073\u0020\u0061\u0072\u0067u\u006d\u0065\u006e\u0074\u0020\u0066\u006f\u0072\u0020\u0059\u0049\u0045L\u0044\u004d\u0041\u0054");};};_ebaad ,_fgbcd :=_eaee (_bfefd ,_gdfb ,_bafba );if _fgbcd .Type ==ResultTypeError {return _fgbcd ;};_ddgbe ,_fgbcd :=_eaee (_bfefd ,_bceb ,_bafba );if _fgbcd .Type ==ResultTypeError {return _fgbcd ;};_eecf ,_fgbcd :=_eaee (_bceb ,_gdfb ,_bafba );if _fgbcd .Type ==ResultTypeError {return _fgbcd ;};_dbff :=1+_ebaad *_ecda ;_dbff /=_afef /100+_ddgbe *_ecda ;_dbff --;_dbff /=_eecf ;return MakeNumberResult (_dbff );};

// Eval evaluates and returns the result of a sheet expression.
func (_egdg SheetPrefixExpr )Eval (ctx Context ,ev Evaluator )Result {return MakeErrorResult ("\u0073\u0068\u0065\u0065\u0074\u0020\u0070\u0072\u0065\u0066\u0069\u0078\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u006e\u0065\u0076\u0065r\u0020\u0062\u0065\u0020\u0065v\u0061\u006cu\u0061\u0074\u0065\u0064");};const (ErrorTypeValue ErrorType =iota ;ErrorTypeNull ;ErrorTypeRef ;ErrorTypeName ;ErrorTypeNum ;ErrorTypeSpill ;ErrorTypeNA ;ErrorTypeDivideByZero ;);const _dggb =57354;func _fed (_fac string ,_def uint32 )string {_cbgf :=_bef .ColumnToIndex (_fac );if _cbgf ==_def {return "\u0023\u0052\u0045F\u0021";}else if _cbgf > _def {return _bef .IndexToColumn (_cbgf -1);}else {return _fac ;};};

// Update returns the same object as updating sheet references does not affect String.
func (_cafee String )Update (q *_ff .UpdateQuery )Expression {return _cafee };const _fcafg =57372;

// Index implements the Excel INDEX function.
func Index (args []Result )Result {_bbfd :=len (args );if _bbfd < 2||_bbfd > 3{return MakeErrorResult ("\u0049\u004e\u0044E\u0058\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0066\u0072\u006f\u006d\u0020\u006f\u006e\u0065\u0020\u0074\u006f\u0020\u0074\u0068\u0072\u0065\u0065\u0020a\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0073");};_deda :=args [0];if _deda .Type !=ResultTypeArray &&_deda .Type !=ResultTypeList {return MakeErrorResult ("\u0049\u004e\u0044\u0045\u0058\u0020\u0072e\u0071\u0075\u0069r\u0065\u0073\u0020\u0066i\u0072\u0073\u0074\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0020\u006f\u0066\u0020\u0074\u0079\u0070\u0065\u0020\u0061\u0072\u0072\u0061\u0079");};_aaab :=args [1].AsNumber ();if _aaab .Type !=ResultTypeNumber {return MakeErrorResult ("I\u004e\u0044\u0045\u0058\u0020\u0072e\u0071\u0075\u0069\u0072\u0065\u0073 \u006e\u0075\u006d\u0065\u0072\u0069\u0063 \u0072\u006f\u0077\u0020\u0061\u0072\u0067\u0075\u006d\u0065n\u0074");};_bggd :=int (_aaab .ValueNumber )-1;_afec :=-1;if _bbfd ==3&&args [2].Type !=ResultTypeEmpty {_gbcc :=args [2].AsNumber ();if _gbcc .Type !=ResultTypeNumber {return MakeErrorResult ("I\u004e\u0044\u0045\u0058\u0020\u0072e\u0071\u0075\u0069\u0072\u0065\u0073 \u006e\u0075\u006d\u0065\u0072\u0069\u0063 \u0063\u006f\u006c\u0020\u0061\u0072\u0067\u0075\u006d\u0065n\u0074");};_afec =int (_gbcc .ValueNumber )-1;};if _bggd ==-1&&_afec ==-1{return MakeErrorResult ("\u0049\u004e\u0044EX\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073 \u0072o\u0077 \u006fr\u0020\u0063\u006f\u006c\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};var _gbdgd []Result ;if _deda .Type ==ResultTypeArray {_ccegd :=_deda .ValueArray ;if _bggd < -1||_bggd >=len (_ccegd ){return MakeErrorResult ("\u0049\u004e\u0044\u0045\u0058\u0020\u0068\u0061\u0073\u0020\u0072o\u0077\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0072a\u006e\u0067\u0065");};if _bggd ==-1{if _afec >=len (_ccegd [0]){return MakeErrorResult ("\u0049\u004e\u0044\u0045\u0058\u0020\u0068\u0061\u0073\u0020\u0063o\u006c\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0072a\u006e\u0067\u0065");};_fggd :=[][]Result {};for _ ,_abfe :=range _ccegd {_eace :=_abfe [_afec ];if _eace .Type ==ResultTypeEmpty {_eace =MakeNumberResult (0);};_fggd =append (_fggd ,[]Result {_eace });};return MakeArrayResult (_fggd );};_gbdgd =_ccegd [_bggd ];}else {_bgfd :=_deda .ValueList ;if _bggd < -1||_bggd >=1{return MakeErrorResult ("\u0049\u004e\u0044\u0045\u0058\u0020\u0068\u0061\u0073\u0020\u0072o\u0077\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0072a\u006e\u0067\u0065");};if _bggd ==-1{if _afec >=len (_bgfd ){return MakeErrorResult ("\u0049\u004e\u0044\u0045\u0058\u0020\u0068\u0061\u0073\u0020\u0063o\u006c\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0072a\u006e\u0067\u0065");};_egdc :=_bgfd [_afec ];if _egdc .Type ==ResultTypeEmpty {_egdc =MakeNumberResult (0);};return _egdc ;};_gbdgd =_bgfd ;};if _afec < -1||_afec > len (_gbdgd ){return MakeErrorResult ("\u0049\u004e\u0044\u0045\u0058\u0020\u0068\u0061\u0073\u0020\u0063o\u006c\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0072a\u006e\u0067\u0065");};if _afec ==-1{_bede :=[]Result {};for _ ,_beeba :=range _gbdgd {if _beeba .Type ==ResultTypeEmpty {_bede =append (_bede ,MakeNumberResult (0));}else {_bede =append (_bede ,_beeba );};};return MakeArrayResult ([][]Result {_bede });};_cggd :=_gbdgd [_afec ];if _cggd .Type ==ResultTypeEmpty {return MakeNumberResult (0);};return _cggd ;};

// String returns a string representation of a vertical range.
func (_bdcad VerticalRange )String ()string {return _bdcad .verticalRangeReference ()};

// Min is an implementation of the Excel MIN() function.
func Min (args []Result )Result {return _daeb (args ,false )};const _fabgd ="\u0052\u0065\u0073\u0075\u006c\u0074\u0054\u0079\u0070\u0065U\u006e\u006b\u006e\u006f\u0077\u006e\u0052\u0065\u0073u\u006c\u0074\u0054y\u0070\u0065\u004e\u0075\u006d\u0062\u0065\u0072\u0052\u0065s\u0075\u006c\u0074\u0054\u0079\u0070\u0065\u0053\u0074\u0072\u0069\u006e\u0067\u0052\u0065\u0073\u0075\u006c\u0074\u0054\u0079\u0070\u0065\u004c\u0069\u0073\u0074\u0052\u0065\u0073\u0075lt\u0054\u0079p\u0065\u0041r\u0072\u0061\u0079\u0052\u0065\u0073\u0075\u006c\u0074\u0054\u0079\u0070\u0065\u0045\u0072\u0072\u006f\u0072\u0052\u0065\u0073\u0075\u006c\u0074\u0054\u0079\u0070\u0065\u0045\u006d\u0070\u0074\u0079";

// ISTEXT is an implementation of the Excel ISTEXT() function.
func IsText (args []Result )Result {if len (args )!=1{return MakeErrorResult ("\u0049\u0053\u0054EX\u0054\u0028\u0029\u0020\u0061\u0063\u0063\u0065\u0070t\u0073 \u0061 \u0073i\u006e\u0067\u006c\u0065\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};return MakeBoolResult (args [0].Type ==ResultTypeString );};

// VerticalRange is a range expression that when evaluated returns a list of Results from references like AA:IJ (all cells from columns AA to IJ).
type VerticalRange struct{_begc ,_fcdba string };

// ReferenceType is a type of reference
//go:generate stringer -type=ReferenceType
type ReferenceType byte ;func _dece (_babf Result )[]Result {_ecab :=_babf .ValueList ;if _babf .Type ==ResultTypeArray {_ecab =nil ;for _ ,_ffgaa :=range _babf .ValueArray {if len (_ffgaa )> 0{_ecab =append (_ecab ,_ffgaa [0]);}else {_ecab =append (_ecab ,_ega );};};};return _ecab ;};

// MakeArrayResult constructs an array result (matrix).
func MakeArrayResult (arr [][]Result )Result {return Result {Type :ResultTypeArray ,ValueArray :arr }};

// GetWidth returns 0 for the invalid reference context.
func (_gdeba *ivr )GetWidth (colIdx int )float64 {return float64 (0)};func (_fgdge *noCache )GetFromCache (key string )(Result ,bool ){return _ega ,false };

// Reference returns a string reference value to a vertical range with prefix.
func (_fdcda PrefixVerticalRange )Reference (ctx Context ,ev Evaluator )Reference {_bdba :=_fdcda ._fcbe .Reference (ctx ,ev );return Reference {Type :ReferenceTypeVerticalRange ,Value :_fdcda .verticalRangeReference (_bdba .Value )};};type node struct{_bbcc tokenType ;_addbb string ;};type parsedSearchObject struct{_cfddd string ;_dgbd string ;_daag int ;};

// GetFormat returns an empty string for the invalid reference context.
func (_cbab *ivr )GetFormat (cellRef string )string {return ""};func _gbaa (_aadb ,_fbagf ,_caa ,_effc ,_fdc float64 ,_ccg int )Result {_dcbd ,_befa :=_eaee (_aadb ,_fbagf ,_ccg );if _befa .Type ==ResultTypeError {return _befa ;};_edg ,_fgf :=_dgef (_aadb ,_fbagf ,int (_fdc ),_ccg );if _fgf .Type ==ResultTypeError {return _fgf ;};_egd :=0.0;_afcd :=0.0;_caa *=100/_fdc ;_effc /=_fdc ;_effc ++;_dcfe :=_dcbd *_fdc -_edg ;for _dfbf :=1.0;_dfbf < _edg ;_dfbf ++{_gdde :=_dfbf +_dcfe ;_dcdg :=_caa /_ea .Pow (_effc ,_gdde );_afcd +=_dcdg ;_egd +=_gdde *_dcdg ;};_cbcbc :=(_caa +100)/_ea .Pow (_effc ,_edg +_dcfe );_afcd +=_cbcbc ;_egd +=(_edg +_dcfe )*_cbcbc ;_egd /=_afcd ;_egd /=_fdc ;return MakeNumberResult (_egd );};const _aaf ="\u005e\u0028\u0028"+_cagg +"\u007c"+_ccc +"\u007c"+_abg +"\u007c"+_bac +"\u0029\u0020\u0029\u003f";func _daeb (_bgdg []Result ,_gbbfb bool )Result {_bffa :="\u004d\u0049\u004e";if _gbbfb {_bffa ="\u004d\u0049\u004e\u0041";};if len (_bgdg )==0{return MakeErrorResult (_bffa +"\u0020\u0072\u0065q\u0075\u0069\u0072\u0065s\u0020\u0061\u0074\u0020\u006c\u0065\u0061s\u0074\u0020\u006f\u006e\u0065\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};_bfcd :=_ea .MaxFloat64 ;for _ ,_gae :=range _bgdg {switch _gae .Type {case ResultTypeNumber :if (_gbbfb ||!_gae .IsBoolean )&&_gae .ValueNumber < _bfcd {_bfcd =_gae .ValueNumber ;};case ResultTypeList ,ResultTypeArray :_ffbg :=_daeb (_gae .ListValues (),_gbbfb );if _ffbg .ValueNumber < _bfcd {_bfcd =_ffbg .ValueNumber ;};case ResultTypeEmpty :case ResultTypeString :_cdcef :=0.0;if _gbbfb {_cdcef =_gae .AsNumber ().ValueNumber ;};if _cdcef < _bfcd {_bfcd =_cdcef ;};default:_bf .Log .Debug ("\u0075\u006e\u0068\u0061\u006e\u0064\u006c\u0065\u0064\u0020"+_bffa +"\u0028\u0029\u0020\u0061rg\u0075\u006d\u0065\u006e\u0074\u0020\u0074\u0079\u0070\u0065\u0020\u0025\u0073",_gae .Type );};};if _bfcd ==_ea .MaxFloat64 {_bfcd =0;};return MakeNumberResult (_bfcd );};

// ConstArrayExpr is a constant array expression.
type ConstArrayExpr struct{_ccd [][]Expression };type Reference struct{Type ReferenceType ;Value string ;};

// MakeStringResult constructs a string result.
func MakeStringResult (s string )Result {return Result {Type :ResultTypeString ,ValueString :s }};

// TextJoin is an implementation of the Excel TEXTJOIN function.
func TextJoin (args []Result )Result {if len (args )< 3{return MakeErrorResult ("\u0054\u0045\u0058\u0054\u004aO\u0049\u004e\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0074h\u0072\u0065\u0065\u0020\u006f\u0072\u0020\u006d\u006f\u0072\u0065\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0073");};if args [0].Type !=ResultTypeString {return MakeErrorResult ("\u0054\u0045\u0058T\u004a\u004f\u0049\u004e\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0064\u0065\u006c\u0069\u006d\u0069\u0074\u0065\u0072\u0020\u0074\u006f\u0020\u0062\u0065 \u0061\u0020\u0073\u0074\u0072\u0069\u006e\u0067");};_fafdf :=args [0].ValueString ;if args [1].Type !=ResultTypeNumber {return MakeErrorResult ("\u0054\u0045\u0058\u0054\u004a\u004f\u0049\u004e\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0073\u0065c\u006f\u006e\u0064\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u0061\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u006f\u0072 \u0062\u006f\u006f\u006c\u0065a\u006e");};_fgaba :=args [1].ValueNumber !=0;_gdagd :=_adad (args [2:],[]string {},_fgaba );return MakeStringResult (_ce .Join (_gdagd ,_fafdf ));};func _fdbc (_cfge Context ,_debcf ,_effd int )(string ,string ){_aaecf :="\u0041"+_gc .Itoa (_debcf );_dfccb :=_cfge .LastColumn (_debcf ,_effd );_aabda :=_dfccb +_gc .Itoa (_effd );return _aaecf ,_aabda ;};

// Ppmt implements the Excel PPPMT function.
func Ppmt (args []Result )Result {_bedf :=len (args );if _bedf < 4||_bedf > 6{return MakeErrorResult ("\u0050\u0050\u004d\u0054\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u006e\u0075\u006d\u0062\u0065\u0072 \u006f\u0066\u0020\u0061\u0072\u0067\u0075\u006d\u0065n\u0074\u0073\u0020\u0069\u006e\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u006ff\u0020\u0066\u006f\u0075\u0072\u0020a\u006e\u0064\u0020s\u0069\u0078");};if args [0].Type !=ResultTypeNumber {return MakeErrorResult ("P\u0050\u004d\u0054\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0072\u0061\u0074\u0065\u0020t\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006d\u0062\u0065r \u0061\u0072\u0067u\u006de\u006e\u0074");};_abfc :=args [0].ValueNumber ;if args [1].Type !=ResultTypeNumber {return MakeErrorResult ("\u0050\u0050\u004dT\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0070\u0065\u0072\u0069\u006f\u0064\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072 \u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};_gbecc :=args [1].ValueNumber ;if _gbecc <=0{return MakeErrorResultType (ErrorTypeNum ,"P\u0050\u004d\u0054\u0020\u0072\u0065q\u0075\u0069\u0072\u0065\u0073\u0020p\u0065\u0072\u0069\u006f\u0064\u0020\u0074o\u0020\u0062\u0065\u0020\u0070\u006f\u0073\u0069\u0074\u0069v\u0065");};if args [2].Type !=ResultTypeNumber {return MakeErrorResult ("\u0050\u0050\u004d\u0054\u0020\u0072\u0065\u0071\u0075\u0069\u0072e\u0073\u0020\u006e\u0075\u006d\u0062\u0065\u0072 \u006ff\u0020\u0070\u0065\u0072\u0069\u006f\u0064\u0073\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006db\u0065\u0072\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};_dbae :=args [2].ValueNumber ;if _dbae < _gbecc {return MakeErrorResultType (ErrorTypeNum ,"\u0050\u0050\u004d\u0054\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u006e\u0075\u006d\u0062\u0065\u0072 \u006f\u0066\u0020\u0070\u0065\u0072\u0069\u006f\u0064s\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u006e\u006f\u0074\u0020\u006c\u0065s\u0073\u0020\u0074\u0068\u0061\u006e \u0070\u0065\u0072i\u006f\u0064");};if args [3].Type !=ResultTypeNumber {return MakeErrorResult ("\u0050\u0050\u004d\u0054\u0020\u0072e\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0020\u0076\u0061\u006c\u0075\u0065 \u0074\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0061r\u0067u\u006d\u0065\u006e\u0074");};_bacf :=args [3].ValueNumber ;_fdac :=0.0;if _bedf >=5&&args [4].Type !=ResultTypeEmpty {if args [4].Type !=ResultTypeNumber {return MakeErrorResult ("\u0050\u0050\u004d\u0054\u0020\u0072\u0065\u0071u\u0069\u0072\u0065s \u0066\u0075\u0074\u0075\u0072\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006db\u0065\u0072\u0020\u0061\u0072\u0067\u0075\u006de\u006e\u0074");};_fdac =args [4].ValueNumber ;};_caggd :=0;if _bedf ==6&&args [5].Type !=ResultTypeEmpty {if args [5].Type !=ResultTypeNumber {return MakeErrorResult ("P\u0050\u004d\u0054\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0074\u0079\u0070\u0065\u0020t\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006d\u0062\u0065r \u0061\u0072\u0067u\u006de\u006e\u0074");};_caggd =int (args [5].ValueNumber );if _caggd !=0{_caggd =1;};};return MakeNumberResult (_gbac (_abfc ,_dbae ,_bacf ,_fdac ,_caggd )-_febd (_abfc ,_gbecc ,_dbae ,_bacf ,_fdac ,_caggd ));};

// Atan2 implements the Excel ATAN2 function.  It accepts two numeric arguments,
// and the arguments are (x,y), reversed from normal to match Excel's behaviour.
func Atan2 (args []Result )Result {if len (args )!=2{return MakeErrorResult ("\u0041\u0054\u0041\u004e2\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020t\u0077o\u0020\u0061\u0072\u0067\u0075\u006d\u0065n\u0074\u0073");};_daeg :=args [0].AsNumber ();_dgde :=args [1].AsNumber ();if _daeg .Type ==ResultTypeNumber &&_dgde .Type ==ResultTypeNumber {_feeaf :=_ea .Atan2 (_dgde .ValueNumber ,_daeg .ValueNumber );if _feeaf !=_feeaf {return MakeErrorResult ("\u0041T\u0041N\u0032\u0020\u0072\u0065\u0074u\u0072\u006ee\u0064\u0020\u004e\u0061\u004e");};return MakeNumberResult (_feeaf );};for _ ,_gead :=range []ResultType {_daeg .Type ,_dgde .Type }{switch _gead {case ResultTypeList ,ResultTypeString :return MakeErrorResult ("\u0041\u0054\u0041\u004e\u0032\u0020r\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0061\u0020\u006e\u0075\u006de\u0072\u0069\u0063\u0020\u0061\u0072\u0067u\u006d\u0065\u006e\u0074");case ResultTypeError :return _daeg ;default:return MakeErrorResult (_dc .Sprintf ("\u0075\u006e\u0068an\u0064\u006c\u0065\u0064\u0020\u0041\u0054\u0041\u004e2\u0028)\u0020a\u0072g\u0075\u006d\u0065\u006e\u0074\u0020\u0074\u0079\u0070\u0065\u0020\u0025\u0073",_gead ));};};return MakeErrorResult ("u\u006e\u0068\u0061\u006e\u0064\u006ce\u0064\u0020\u0065\u0072\u0072\u006f\u0072\u0020\u0066o\u0072\u0020\u0041T\u0041N\u0032\u0028\u0029");};

// PrefixHorizontalRange is a range expression that when evaluated returns a list of Results from references like Sheet1!1:4 (all cells from rows 1 to 4 of sheet 'Sheet1').
type PrefixHorizontalRange struct{_bedeg Expression ;_adffe ,_adead int ;};func _eedb (_ecde Result )bool {_cbfag :=_ecde .Type ;return _cbfag !=ResultTypeArray &&_cbfag !=ResultTypeList ;};var _ggb =[...]uint8 {0,16,29,43,56,68,80,91,102,113,125,137,148,163};

// Amorlinc implements the Excel AMORLINC function.
func Amorlinc (args []Result )Result {_beeaf ,_cbd :=_gebe (args ,"\u0041\u004d\u004f\u0052\u004c\u0049\u004e\u0043");if _cbd .Type ==ResultTypeError {return _cbd ;};_dcgf :=_beeaf ._bcead ;_dfcf :=_beeaf ._ddee ;_ffbf :=_beeaf ._bgde ;_accd :=_beeaf ._fbg ;_cdda :=_beeaf ._gdca ;_feec :=_beeaf ._dffg ;_dgff :=_beeaf ._gcfc ;_bda ,_bbfg :=_eaee (_dfcf ,_ffbf ,_dgff );if _bbfg .Type ==ResultTypeError {return MakeErrorResult ("\u0069\u006e\u0063\u006fr\u0072\u0065\u0063\u0074\u0020\u0064\u0061\u0074\u0065\u0073 \u0066o\u0072\u0020\u0041\u004d\u004f\u0052\u004cI\u004e\u0043");};_aaed :=_bda *_feec *_dcgf ;if _cdda ==0{return MakeNumberResult (_aaed );};_gffa :=_dcgf *_feec ;_gfb :=_dcgf -_accd ;_eeeab :=int ((_gfb -_aaed )/_gffa );if _cdda <=_eeeab {return MakeNumberResult (_gffa );}else if _cdda ==_eeeab +1{return MakeNumberResult (_gfb -_gffa *float64 (_eeeab )-_aaed );}else {return MakeNumberResult (0);};};

// Xirr implements the Excel XIRR function.
func Xirr (args []Result )Result {_afbe :=len (args );if _afbe !=2&&_afbe !=3{return MakeErrorResult ("\u0058\u0049RR\u0020\u0072\u0065q\u0075\u0069\u0072\u0065s t\u0077o \u006f\u0072\u0020\u0074\u0068\u0072\u0065e \u0061\u0072\u0067\u0075\u006d\u0065\u006et\u0073");};_fgeg ,_ecg :=_bagbf (args [0],args [1],"\u0058\u0049\u0052\u0052");if _ecg .Type ==ResultTypeError {return _ecg ;};_ggae :=_fgeg ._bfed ;_eceg :=_fgeg ._ggfbf ;_cedga :=0.1;if _afbe ==3&&args [2].Type !=ResultTypeEmpty {if args [2].Type !=ResultTypeNumber {return MakeErrorResult ("\u0058\u0049\u0052\u0052\u0020r\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0067\u0075\u0065\u0073\u0073 \u0074\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};_cedga =args [2].ValueNumber ;if _cedga <=-1{return MakeErrorResult ("\u0058\u0049\u0052\u0052\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0067\u0075\u0065\u0073\u0073\u0020\u0074\u006f\u0020\u0062e\u0020\u006d\u006f\u0072\u0065 \u0074\u0068a\u006e\u0020\u002d\u0031");};};return _cccg (_ggae ,_eceg ,_cedga );};

// RandBetween is an implementation of the Excel RANDBETWEEN() function that returns a random
// integer in the range specified.
func RandBetween (args []Result )Result {if len (args )!=2{return MakeErrorResult ("\u0052A\u004e\u0044B\u0045\u0054\u0057\u0045E\u004e\u0028\u0029 \u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020tw\u006f\u0020\u006eu\u006d\u0065r\u0069\u0063\u0020\u0061\u0072\u0067u\u006d\u0065n\u0074\u0073");};_fcaf :=args [0].AsNumber ();_aggff :=args [1].AsNumber ();if _fcaf .Type !=ResultTypeNumber ||_aggff .Type !=ResultTypeNumber {return MakeErrorResult ("\u0052A\u004e\u0044B\u0045\u0054\u0057\u0045E\u004e\u0028\u0029 \u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020tw\u006f\u0020\u006eu\u006d\u0065r\u0069\u0063\u0020\u0061\u0072\u0067u\u006d\u0065n\u0074\u0073");};if _aggff .ValueNumber < _fcaf .ValueNumber {return MakeErrorResult ("\u0052\u0041\u004e\u0044\u0042E\u0054\u0057\u0045\u0045\u004e\u0028\u0029\u0020\u0072\u0065\u0071\u0075\u0069r\u0065\u0073\u0020\u0073\u0065\u0063\u006f\u006e\u0064\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u006c\u0061\u0072\u0067\u0065r");};_ecdeg :=int64 (_fcaf .ValueNumber );_adff :=int64 (_aggff .ValueNumber );return MakeNumberResult (float64 (_dabfg .Int63n (_adff -_ecdeg +1)+_ecdeg ));};func _gagf (_eabg Result ,_dcab ,_dcg string )(float64 ,Result ){var _ace float64 ;switch _eabg .Type {case ResultTypeNumber :_ace =float64 (int (_eabg .ValueNumber ));case ResultTypeString :_adcb :=DateValue ([]Result {_eabg });if _adcb .Type ==ResultTypeError {return 0,MakeErrorResult ("\u0049\u006e\u0063\u006f\u0072\u0072\u0065\u0063\u0074\u0020"+_dcab +"\u0020\u0064\u0061\u0074\u0065\u0020\u0066\u006f\u0072\u0020"+_dcg );};_ace =_adcb .ValueNumber ;default:return 0,MakeErrorResult ("\u0049\u006e\u0063or\u0072\u0065\u0063\u0074\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0020\u0066\u006f\u0072\u0020"+_dcg );};if _ace < 0{return 0,MakeErrorResultType (ErrorTypeNum ,_dcab +"\u0020\u0073\u0068ou\u006c\u0064\u0020\u0062\u0065\u0020\u006e\u006f\u006e\u0020\u006e\u0065\u0067\u0061\u0074\u0069\u0076\u0065");};return _ace ,_ega ;};

// Eval evaluates and returns the result of an empty expression.
func (_fde EmptyExpr )Eval (ctx Context ,ev Evaluator )Result {return MakeEmptyResult ()};

// NewRange constructs a new range.
func NewRange (from ,to Expression )Expression {_bccg ,_bbdf ,_cfae :=_eccf (from ,to );if _cfae !=nil {_bf .Log .Debug (_cfae .Error ());return NewError (_cfae .Error ());};return Range {_cdacg :_bccg ,_faceba :_bbdf };};

// MaxIfs implements the MAXIFS function.
func MaxIfs (args []Result )Result {_fdef :=_gcafd (args ,true ,"\u004d\u0041\u0058\u0049\u0046\u0053");if _fdef .Type !=ResultTypeEmpty {return _fdef ;};_ffec :=_edca (args [1:]);_cgbd :=-_ea .MaxFloat64 ;_ffdfg :=_affb (args [0]);for _ ,_bgaf :=range _ffec {_bbgag :=_ffdfg [_bgaf ._dgdeb ][_bgaf ._cbcaa ].ValueNumber ;if _cgbd < _bbgag {_cgbd =_bbgag ;};};if _cgbd ==-_ea .MaxFloat64 {_cgbd =0;};return MakeNumberResult (float64 (_cgbd ));};

// Product is an implementation of the Excel PRODUCT() function.
func Product (args []Result )Result {_ddda :=1.0;for _ ,_gcce :=range args {_gcce =_gcce .AsNumber ();switch _gcce .Type {case ResultTypeNumber :_ddda *=_gcce .ValueNumber ;case ResultTypeList ,ResultTypeArray :_cdce :=Product (_gcce .ListValues ());if _cdce .Type !=ResultTypeNumber {return _cdce ;};_ddda *=_cdce .ValueNumber ;case ResultTypeString :case ResultTypeError :return _gcce ;case ResultTypeEmpty :default:return MakeErrorResult (_dc .Sprintf ("\u0075\u006eha\u006e\u0064\u006ce\u0064\u0020\u0050\u0052ODU\u0043T(\u0029\u0020\u0061\u0072\u0067\u0075\u006den\u0074\u0020\u0074\u0079\u0070\u0065\u0020%\u0073",_gcce .Type ));};};return MakeNumberResult (_ddda );};func _aaac (_aced int )bool {return _aced >=0&&_aced <=4};

// Match implements the MATCH function.
func Match (args []Result )Result {_eddc :=len (args );if _eddc !=2&&_eddc !=3{return MakeErrorResult ("\u004d\u0041T\u0043\u0048\u0020\u0072e\u0071\u0075i\u0072\u0065\u0073\u0020\u0074\u0077\u006f\u0020o\u0072\u0020\u0074\u0068\u0072\u0065\u0065\u0020\u0061\u0072\u0067\u0075m\u0065\u006e\u0074\u0073");};_gbccg :=1;if _eddc ==3&&args [2].Type !=ResultTypeEmpty {if args [2].Type !=ResultTypeNumber {return MakeErrorResult ("\u004d\u0041\u0054\u0043\u0048\u0020\u0072\u0065q\u0075\u0069\u0072es\u0020\u0074\u0068\u0065\u0020\u0074h\u0069\u0072\u0064\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0020\u0074\u006f \u0062\u0065\u0020\u0061\u0020\u006e\u0075\u006db\u0065\u0072");};_addbf :=args [2].ValueNumber ;if _addbf ==-1||_addbf ==0{_gbccg =int (_addbf );};};_gddf :=args [1];var _ffcf []Result ;switch _gddf .Type {case ResultTypeList :_ffcf =_gddf .ValueList ;case ResultTypeArray :_ggec :=_gddf .ValueArray ;for _ ,_dfac :=range _ggec {if len (_dfac )!=1{return MakeErrorResult ("\u004d\u0041\u0054\u0043\u0048\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0074\u0068e\u0020\u0073\u0065\u0063\u006f\u006e\u0064\u0020\u0061\u0072g\u0075\u006d\u0065\u006e\u0074\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u0061\u0020\u006f\u006e\u0065\u002dd\u0069\u006d\u0065\u006e\u0073\u0069o\u006e\u0061l\u0020\u0072a\u006eg\u0065");};_ffcf =append (_ffcf ,_dfac [0]);};default:return MakeErrorResult ("\u004d\u0041\u0054\u0043\u0048\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0074\u0068e\u0020\u0073\u0065\u0063\u006f\u006e\u0064\u0020\u0061\u0072g\u0075\u006d\u0065\u006e\u0074\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u0061\u0020\u006f\u006e\u0065\u002dd\u0069\u006d\u0065\u006e\u0073\u0069o\u006e\u0061l\u0020\u0072a\u006eg\u0065");};_abcf :=_ccceg (args [0]);switch _gbccg {case 0:for _bacef ,_aecf :=range _ffcf {if _eecfa (_aecf ,_abcf ){return MakeNumberResult (float64 (_bacef +1));};};case -1:for _egcb :=0;_egcb < len (_ffcf );_egcb ++{if _eecfa (_ffcf [_egcb ],_abcf ){return MakeNumberResult (float64 (_egcb +1));};if _abcf ._ebabc &&(_ffcf [_egcb ].ValueNumber < _abcf ._ggdc ){if _egcb ==0{return MakeErrorResultType (ErrorTypeNA ,"");};return MakeNumberResult (float64 (_egcb ));};};case 1:for _bgfcd :=0;_bgfcd < len (_ffcf );_bgfcd ++{if _eecfa (_ffcf [_bgfcd ],_abcf ){return MakeNumberResult (float64 (_bgfcd +1));};if _abcf ._ebabc &&(_ffcf [_bgfcd ].ValueNumber > _abcf ._ggdc ){if _bgfcd ==0{return MakeErrorResultType (ErrorTypeNA ,"");};return MakeNumberResult (float64 (_bgfcd ));};};};return MakeErrorResultType (ErrorTypeNA ,"");};

// IsBool returns false for the invalid reference context.
func (_gfagg *ivr )IsBool (cellRef string )bool {return false };func _befe ()yyParser {return &yyParserImpl {}};

// Tbillyield implements the Excel TBILLYIELD function.
func Tbillyield (args []Result )Result {if len (args )!=3{return MakeErrorResult ("T\u0042\u0049\u004c\u004c\u0059\u0049E\u004c\u0044\u0020\u0072\u0065\u0071u\u0069\u0072\u0065\u0073\u0020\u0074\u0068r\u0065\u0065\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006et\u0073");};_fddb ,_eefe ,_bddfa :=_egcf (args [0],args [1],"\u0054\u0042\u0049\u004c\u004c\u0059\u0049\u0045\u004c\u0044");if _bddfa .Type ==ResultTypeError {return _bddfa ;};if args [2].Type !=ResultTypeNumber {return MakeErrorResult ("\u0054\u0042\u0049\u004c\u004c\u0059\u0049\u0045\u004c\u0044\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065s\u0020\u0064\u0069\u0073\u0063\u006f\u0075n\u0074\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006db\u0065\u0072\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};_ddcba :=_eefe -_fddb ;if _ddcba > 365{return MakeErrorResultType (ErrorTypeNum ,"\u0054\u0042\u0049\u004c\u004cY\u0049\u0045\u004c\u0044\u0020\u0072e\u0071\u0075\u0069\u0072\u0065\u0073\u0020m\u0061\u0074\u0075r\u0069\u0074\u0079\u0020t\u006f\u0020\u0062\u0065\u0020\u006eo\u0074\u0020\u006d\u006f\u0072\u0065\u0020\u0074\u0068\u0061\u006e\u0020\u006f\u006e\u0065\u0020\u0079e\u0061\u0072\u0020\u0061\u0066\u0074\u0065\u0072\u0020\u0073\u0065\u0074\u0074\u006c\u0065\u006d\u0065\u006e\u0074");};_edc :=args [2].ValueNumber ;if _edc <=0{return MakeErrorResultType (ErrorTypeNum ,"\u0054\u0042\u0049\u004c\u004c\u0059\u0049\u0045\u004c\u0044\u0020r\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020p\u0072 \u0074\u006f\u0020\u0062\u0065\u0020\u0070\u006f\u0073\u0069\u0074\u0069\u0076\u0065\u0020\u006e\u0075\u006db\u0065\u0072\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};_aebe :=(100-_edc )/_edc ;_gbbf :=360/_ddcba ;return MakeNumberResult (_aebe *_gbbf );};

// String returns a string representation of a range with prefix.
func (_cgfce PrefixRangeExpr )String ()string {return _dc .Sprintf ("\u0025\u0073\u0021\u0025\u0073\u003a\u0025\u0073",_cgfce ._fcagg .String (),_cgfce ._cfddb .String (),_cgfce ._befed .String ());};

// HorizontalRange is a range expression that when evaluated returns a list of Results from references like 1:4 (all cells from rows 1 to 4).
type HorizontalRange struct{_dbdff ,_aaacf int };

// String returns a string representation of a horizontal range with prefix.
func (_cafa PrefixHorizontalRange )String ()string {return _dc .Sprintf ("\u0025\u0073\u0021\u0025\u0064\u003a\u0025\u0064",_cafa ._bedeg .String (),_cafa ._adffe ,_cafa ._adead );};var _cefegf =[...]int {2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36};func (_bbebe Result )String ()string {return _bbebe .Value ()};const _ecbb int =30;

// GCD implements the Excel GCD() function which returns the greatest common
// divisor of a range of numbers.
func GCD (args []Result )Result {if len (args )==0{return MakeErrorResult ("\u0047\u0043D(\u0029\u0020\u0072e\u0071\u0075\u0069\u0072es \u0061t \u006c\u0065\u0061\u0073\u0074\u0020\u006fne\u0020\u0061\u0072\u0067\u0075\u006d\u0065n\u0074");};_fegf :=[]float64 {};for _ ,_dafg :=range args {switch _dafg .Type {case ResultTypeString :_bffcc :=_dafg .AsNumber ();if _bffcc .Type !=ResultTypeNumber {return MakeErrorResult ("\u0047\u0043D(\u0029\u0020\u006fn\u006c\u0079\u0020\u0061cce\u0070ts\u0020\u006e\u0075\u006d\u0065\u0072\u0069c \u0061\u0072\u0067\u0075\u006d\u0065\u006et\u0073");};_fegf =append (_fegf ,_bffcc .ValueNumber );case ResultTypeList ,ResultTypeArray :_bcfbb :=GCD (_dafg .ListValues ());if _bcfbb .Type !=ResultTypeNumber {return _bcfbb ;};_fegf =append (_fegf ,_bcfbb .ValueNumber );case ResultTypeNumber :_fegf =append (_fegf ,_dafg .ValueNumber );case ResultTypeError :return _dafg ;default:return MakeErrorResult (_dc .Sprintf ("\u0047\u0043\u0044()\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072t\u0065d\u0020a\u0072g\u0075\u006d\u0065\u006e\u0074\u0020\u0074\u0079\u0070\u0065\u0020\u0025\u0073",_dafg .Type ));};};if _fegf [0]< 0{return MakeErrorResult ("\u0047\u0043D\u0028\u0029\u0020\u006fn\u006c\u0079 \u0061\u0063\u0063\u0065\u0070\u0074\u0073\u0020p\u006f\u0073\u0069\u0074\u0069\u0076\u0065\u0020\u0061\u0072\u0067\u0075m\u0065\u006e\u0074\u0073");};if len (_fegf )==1{return MakeNumberResult (_fegf [0]);};_dcgff :=_fegf [0];for _bdce :=1;_bdce < len (_fegf );_bdce ++{if _fegf [_bdce ]< 0{return MakeErrorResult ("\u0047\u0043D\u0028\u0029\u0020\u006fn\u006c\u0079 \u0061\u0063\u0063\u0065\u0070\u0074\u0073\u0020p\u006f\u0073\u0069\u0074\u0069\u0076\u0065\u0020\u0061\u0072\u0067\u0075m\u0065\u006e\u0074\u0073");};_dcgff =_fagg (_dcgff ,_fegf [_bdce ]);};return MakeNumberResult (_dcgff );};

// Eval evaluates and returns a boolean.
func (_gd Bool )Eval (ctx Context ,ev Evaluator )Result {return MakeBoolResult (_gd ._aag )};

// Eval evaluates and returns the result of a formula.
func (_ggg *defEval )Eval (ctx Context ,formula string )Result {_dab :=ParseString (formula );_ed :=make (chan Result );go func (){if _dab ==nil {_ed <-MakeErrorResult (_dc .Sprintf ("\u0075\u006e\u0061\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0070a\u0072\u0073\u0065\u0020\u0066\u006f\u0072\u006d\u0075\u006ca\u0020\u0025\u0073",formula ));}else {_ggg .checkLastEvalIsRef (ctx ,_dab );_ed <-_dab .Eval (ctx ,_ggg );};}();select{case _dd :=<-_ed :return _dd ;case <-_f .After (_dce ):_bf .Log .Debug ("\u0055\u006e\u0069\u004ff\u0066\u0069\u0063\u0065\u0020\u0065\u0076\u0061\u006c\u0075a\u0074i\u006f\u006e\u0020\u0074\u0069\u006d\u0065o\u0075\u0074");return MakeNumberResult (0);};};

// Len is an implementation of the Excel LEN function that returns length of a string
func Len (args []Result )Result {if len (args )!=1{return MakeErrorResult ("\u004c\u0045N\u0020\u0072\u0065\u0071u\u0069\u0072e\u0073\u0020\u0061\u0020\u0073\u0069\u006e\u0067l\u0065\u0020\u0073\u0074\u0072\u0069\u006e\u0067\u0020\u0061\u0072\u0067u\u006d\u0065\u006e\u0074");};_gdfe :=args [0].AsString ();if _gdfe .Type !=ResultTypeString {return MakeErrorResult ("\u004c\u0045N\u0020\u0072\u0065\u0071u\u0069\u0072e\u0073\u0020\u0061\u0020\u0073\u0069\u006e\u0067l\u0065\u0020\u0073\u0074\u0072\u0069\u006e\u0067\u0020\u0061\u0072\u0067u\u006d\u0065\u006e\u0074");};return MakeNumberResult (float64 (len (_gdfe .ValueString )));};var _ecbef []byte =[]byte {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0};

// Xor is an implementation of the Excel XOR() function and takes a variable
// number of arguments. It's odd to say the least.  If any argument is numeric,
// it returns true if the number of non-zero numeric arguments is odd and false
// otherwise.  If no argument is numeric, it returns an error.
func Xor (args []Result )Result {if len (args )< 1{return MakeErrorResult ("\u0058\u004f\u0052 r\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0061t\u0020l\u0065a\u0073t\u0020\u006f\u006e\u0065\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};_gecef :=0;_cefbc :=false ;for _ ,_cggbe :=range args {switch _cggbe .Type {case ResultTypeList ,ResultTypeArray :_aabaa :=Xor (_cggbe .ListValues ());if _aabaa .Type ==ResultTypeError {return _aabaa ;};if _aabaa .ValueNumber !=0{_gecef ++;};_cefbc =true ;case ResultTypeNumber :if _cggbe .ValueNumber !=0{_gecef ++;};_cefbc =true ;case ResultTypeString :case ResultTypeError :return _cggbe ;default:return MakeErrorResult ("\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0061\u0072\u0067u\u006de\u006e\u0074\u0020\u0074\u0079\u0070\u0065\u0020\u0069\u006e\u0020\u0058\u004f\u0052");};};if !_cefbc {return MakeErrorResult ("\u0058\u004f\u0052\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065s\u0020\u006e\u0075\u006d\u0065\u0072\u0069\u0063\u0020\u0069n\u0070\u0075\u0074");};return MakeBoolResult (_gecef %2!=0);};

// Update returns the same object as updating sheet references does not affect ConstArrayExpr.
func (_dgb ConstArrayExpr )Update (q *_ff .UpdateQuery )Expression {return _dgb };func _fgefd (_gfab Result ,_dage ,_aaec string )(string ,Result ){switch _gfab .Type {case ResultTypeString ,ResultTypeNumber ,ResultTypeEmpty :return _gfab .Value (),_ega ;default:return "",MakeErrorResult (_dage +"\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020"+_aaec +"\u0020t\u006f\u0020\u0062\u0065 \u0061\u0020\u006e\u0075\u006db\u0065r\u0020o\u0072\u0020\u0073\u0074\u0072\u0069\u006eg");};};

// Bool is a boolean expression.
type Bool struct{_aag bool };func _gfcec (_fgea Result )Result {if _fgea .Type ==ResultTypeEmpty {return _fgea ;};_fecfb :=_fgea .AsString ();if _fecfb .Type !=ResultTypeString {return MakeErrorResult ("\u004c\u004f\u0057\u0045\u0052\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065s\u0020\u0061\u0020\u0073\u0069\u006eg\u006c\u0065\u0020\u0073\u0074\u0072\u0069\u006e\u0067\u0020\u0061\u0072\u0067u\u006d\u0065\u006e\u0074");};if _fgea .IsBoolean {if _fecfb .ValueString =="\u0031"{return MakeStringResult ("\u0074\u0072\u0075\u0065");}else if _fecfb .ValueString =="\u0030"{return MakeStringResult ("\u0066\u0061\u006cs\u0065");}else {return MakeErrorResult ("\u0049\u006e\u0063\u006fr\u0072\u0065\u0063\u0074\u0020\u0061\u0072\u0067\u0075\u006de\u006et\u0020\u0066\u006f\u0072\u0020\u004c\u004fW\u0045\u0052");};}else {return MakeStringResult (_ce .ToLower (_fecfb .ValueString ));};};

// Price implements the Excel PRICE function.
func Price (args []Result )Result {_cebe :=len (args );if _cebe !=6&&_cebe !=7{return MakeErrorResult ("\u0050\u0052I\u0043\u0045\u0020\u0072e\u0071\u0075i\u0072\u0065\u0073\u0020\u0073\u0069\u0078\u0020o\u0072\u0020\u0073\u0065\u0076\u0065\u006e\u0020\u0061\u0072\u0067\u0075m\u0065\u006e\u0074\u0073");};_geea ,_bcgf ,_bccf :=_egcf (args [0],args [1],"\u0050\u0052\u0049C\u0045");if _bccf .Type ==ResultTypeError {return _bccf ;};if args [2].Type !=ResultTypeNumber {return MakeErrorResult ("\u0050\u0052\u0049CE\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073 \u0072a\u0074e\u0020o\u0066\u0020\u0074\u0079\u0070\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072");};_cfad :=args [2].ValueNumber ;if _cfad < 0{return MakeErrorResultType (ErrorTypeNum ,"\u0050\u0052\u0049\u0043\u0045\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0072\u0061\u0074\u0065\u0020\u0074\u006f\u0020\u006eo\u0074\u0020\u0062\u0065\u0020n\u0065\u0067a\u0074\u0069\u0076\u0065");};if args [3].Type !=ResultTypeNumber {return MakeErrorResult ("P\u0052\u0049\u0043\u0045\u0020\u0072e\u0071\u0075\u0069\u0072\u0065\u0073 \u0079\u0069\u0065\u006c\u0064\u0020\u006ff\u0020\u0074\u0079\u0070\u0065\u0020\u006e\u0075\u006d\u0062e\u0072");};_afed :=args [3].ValueNumber ;if _afed < 0{return MakeErrorResultType (ErrorTypeNum ,"\u0050\u0052\u0049\u0043\u0045\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065s\u0020\u0079\u0069\u0065\u006c\u0064 \u0074\u006f\u0020\u006e\u006f\u0074\u0020\u0062\u0065\u0020\u006e\u0065\u0067a\u0074\u0069\u0076\u0065");};if args [4].Type !=ResultTypeNumber {return MakeErrorResult ("P\u0052\u0049\u0043\u0045\u0020\u0072\u0065\u0071\u0075i\u0072\u0065\u0073\u0020\u0072\u0065\u0064em\u0070\u0074\u0069\u006fn\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u006e\u0075mb\u0065\u0072 \u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};_aedd :=args [4].ValueNumber ;if _aedd <=0{return MakeErrorResultType (ErrorTypeNum ,"\u0050\u0052\u0049\u0043\u0045\u0020r\u0065\u0071\u0075i\u0072\u0065\u0073 \u0072\u0065\u0064\u0065\u006d\u0070\u0074\u0069\u006f\u006e \u0074\u006f\u0020\u0062\u0065 p\u006f\u0073\u0069\u0074\u0069\u0076\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};_eebb :=args [5];if _eebb .Type !=ResultTypeNumber {return MakeErrorResult ("\u0050\u0052\u0049\u0043\u0045\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065s\u0020\u0066\u0072\u0065\u0071\u0075e\u006e\u0063\u0079\u0020\u006f\u0066\u0020\u0074\u0079\u0070\u0065\u0020\u006eu\u006d\u0062\u0065\u0072");};_bdcgf :=_eebb .ValueNumber ;if !_cad (_bdcgf ){return MakeErrorResultType (ErrorTypeNum ,"\u0049n\u0063\u006f\u0072\u0072e\u0063\u0074\u0020\u0066\u0072e\u0071u\u0065n\u0063\u0065\u0020\u0076\u0061\u006c\u0075e");};_bbbf :=0;if _cebe ==7&&args [6].Type !=ResultTypeEmpty {if args [6].Type !=ResultTypeNumber {return MakeErrorResult ("\u0050\u0052\u0049C\u0045\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0062\u0061\u0073\u0069\u0073\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072 \u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};_bbbf =int (args [6].ValueNumber );if !_aaac (_bbbf ){return MakeErrorResultType (ErrorTypeNum ,"\u0049\u006e\u0063or\u0072\u0065\u0063\u0074\u0020\u0062\u0061\u0073\u0069s\u0020a\u0072g\u0075m\u0065\u006e\u0074\u0020\u0066\u006f\u0072\u0020\u0050\u0052\u0049\u0043\u0045");};};_gfgb ,_bccf :=_ddcb (_geea ,_bcgf ,_cfad ,_afed ,_aedd ,_bdcgf ,_bbbf );if _bccf .Type ==ResultTypeError {return _bccf ;};return MakeNumberResult (_gfgb );};const _babag =-1000;

// MakeBoolResult constructs a boolean result (internally a number).
func MakeBoolResult (b bool )Result {if b {return Result {Type :ResultTypeNumber ,ValueNumber :1,IsBoolean :true };};return Result {Type :ResultTypeNumber ,ValueNumber :0,IsBoolean :true };};func _ecaa (_aad string )(int ,int ,float64 ,bool ,bool ,Result ){_cgg :="";_dggd :=[]string {};for _facg ,_cfaa :=range _ecc {_dggd =_cfaa .FindStringSubmatch (_aad );if len (_dggd )> 1{_cgg =_facg ;break ;};};if _cgg ==""{return 0,0,0,false ,false ,MakeErrorResultType (ErrorTypeValue ,_cbcf );};_fafa :=_dggd [1]=="";_dggd =_dggd [49:];_ebdf :=len (_dggd );_bafb :=_dggd [_ebdf -1];_agbb :=_bafb =="\u0061\u006d";_fade :=_bafb =="\u0070\u006d";var _egg ,_gfag int ;var _daa float64 ;var _eef error ;switch _cgg {case "\u0068\u0068":_egg ,_eef =_gc .Atoi (_dggd [0]);if _eef !=nil {return 0,0,0,false ,false ,MakeErrorResultType (ErrorTypeValue ,_cbcf );};_gfag =0;_daa =0;case "\u0068\u0068\u003am\u006d":_egg ,_eef =_gc .Atoi (_dggd [0]);if _eef !=nil {return 0,0,0,false ,false ,MakeErrorResultType (ErrorTypeValue ,_cbcf );};_gfag ,_eef =_gc .Atoi (_dggd [2]);if _eef !=nil {return 0,0,0,false ,false ,MakeErrorResultType (ErrorTypeValue ,_cbcf );};_daa =0;case "\u006d\u006d\u003as\u0073":_egg =0;_gfag ,_eef =_gc .Atoi (_dggd [0]);if _eef !=nil {return 0,0,0,false ,false ,MakeErrorResultType (ErrorTypeValue ,_cbcf );};_daa ,_eef =_gc .ParseFloat (_dggd [2],64);if _eef !=nil {return 0,0,0,false ,false ,MakeErrorResultType (ErrorTypeValue ,_cbcf );};case "\u0068\u0068\u003a\u006d\u006d\u003a\u0073\u0073":_egg ,_eef =_gc .Atoi (_dggd [0]);if _eef !=nil {return 0,0,0,false ,false ,MakeErrorResultType (ErrorTypeValue ,_cbcf );};_gfag ,_eef =_gc .Atoi (_dggd [2]);if _eef !=nil {return 0,0,0,false ,false ,MakeErrorResultType (ErrorTypeValue ,_cbcf );};_daa ,_eef =_gc .ParseFloat (_dggd [4],64);if _eef !=nil {return 0,0,0,false ,false ,MakeErrorResultType (ErrorTypeValue ,_cbcf );};};if _gfag >=60{return 0,0,0,false ,false ,MakeErrorResultType (ErrorTypeValue ,_cbcf );};if _agbb ||_fade {if _egg > 12||_daa >=60{return 0,0,0,false ,false ,MakeErrorResultType (ErrorTypeValue ,_cbcf );}else if _egg ==12{_egg =0;};}else if _egg >=24||_daa >=10000{return 0,0,0,false ,false ,MakeErrorResultType (ErrorTypeValue ,_cbcf );};return _egg ,_gfag ,_daa ,_fade ,_fafa ,_ega ;};

// Update updates references in the Range after removing a row/column.
func (_cacf Range )Update (q *_ff .UpdateQuery )Expression {_cbaa :=_cacf ;if q .UpdateCurrentSheet {_cbaa ._cdacg =_cacf ._cdacg .Update (q );_cbaa ._faceba =_cacf ._faceba .Update (q );};return _cbaa ;};func (_fegab VerticalRange )verticalRangeReference ()string {return _dc .Sprintf ("\u0025\u0073\u003a%\u0073",_fegab ._begc ,_fegab ._fcdba );};

// String is a string expression.
type String struct{_defca string };func _degf (_efae ,_fec int64 )float64 {return float64 (int (0.5+float64 ((_fec -_efae )/86400)))};

// Cell is an implementation of the Excel CELL function that returns information
// about the formatting, location, or contents of a cell.
func Cell (ctx Context ,ev Evaluator ,args []Result )Result {if len (args )!=1&&len (args )!=2{return MakeErrorResult ("\u0043\u0045\u004cL \u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020o\u006ee\u0020o\u0072 \u0074\u0077\u006f\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0073");};_egccf :=args [0].AsString ();if _egccf .Type !=ResultTypeString {return MakeErrorResult ("\u0043\u0045\u004c\u004c\u0020\u0072e\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0066\u0069\u0072\u0073\u0074\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006et\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u006f\u0066\u0020\u0074\u0079\u0070\u0065 \u0073t\u0072\u0069\u006e\u0067");};_ecdb :="\u0041\u0031";if len (args )==2{_dcfef :=args [1].Ref ;if _dcfef .Type !=ReferenceTypeCell {return MakeErrorResult ("\u0043\u0045\u004c\u004c\u0020\u0072\u0065\u0071\u0075\u0069\u0072e\u0073\u0020\u0073\u0065\u0063\u006f\u006e\u0064 \u0061r\u0067\u0075\u006d\u0065\u006e\u0074\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u006f\u0066\u0020\u0074\u0079p\u0065\u0020\u0072\u0065\u0066\u0065\u0072\u0065\u006e\u0063\u0065");};_ecdb =_dcfef .Value ;};switch _egccf .ValueString {case "\u0061d\u0064\u0072\u0065\u0073\u0073":_adca ,_gbba :=_bef .ParseCellReference (_ecdb );if _gbba !=nil {return MakeErrorResult ("I\u006e\u0063\u006f\u0072re\u0063t\u0020\u0072\u0065\u0066\u0065r\u0065\u006e\u0063\u0065\u003a\u0020"+_ecdb );};_dgbe :="\u0024"+_adca .Column +"\u0024"+_gc .Itoa (int (_adca .RowIdx ));if _adca .SheetName !=""{_dgbe =_adca .SheetName +"\u0021"+_dgbe ;};return MakeStringResult (_dgbe );case "\u0063\u006f\u006c":_dgea ,_dfag :=_bef .ParseCellReference (_ecdb );if _dfag !=nil {return MakeErrorResult ("I\u006e\u0063\u006f\u0072re\u0063t\u0020\u0072\u0065\u0066\u0065r\u0065\u006e\u0063\u0065\u003a\u0020"+_ecdb );};return MakeNumberResult (float64 (_dgea .ColumnIdx +1));case "\u0063\u006f\u006co\u0072":_agbfb :=_ce .Contains (ctx .GetFormat (_ecdb ),"\u005b\u0052\u0045D\u005d");return MakeBoolResult (_agbfb );case "\u0063\u006f\u006e\u0074\u0065\u006e\u0074\u0073":return args [1];case "\u0066\u0069\u006c\u0065\u006e\u0061\u006d\u0065":return MakeStringResult (ctx .GetFilename ());case "\u0066\u006f\u0072\u006d\u0061\u0074":_fddd :="\u0047";_affa :=ctx .GetFormat (_ecdb );if _affa =="\u0047e\u006e\u0065\u0072\u0061\u006c"||_ccgdc .MatchString (_affa ){_fddd ="\u0046\u0030";}else if _affa =="\u0030\u0025"{_fddd ="\u0050\u0030";}else if _affa =="\u004d\u004d\u004d\u0020\u0044\u0044"{_fddd ="\u0044\u0032";}else if _affa =="\u004d\u004d\u002fY\u0059"{_fddd ="\u0044\u0033";}else if _affa =="\u004d\u004d\u002f\u0044D/\u0059\u0059\u005c\u0020\u0048\u0048\u003a\u004d\u004d\u005c\u0020\u0041\u004d\u002fP\u004d"||_affa =="M\u004d/\u0044\u0044\u002f\u0059\u0059\u0059\u0059\u005c \u0048\u0048\u003a\u004dM:\u0053\u0053"{_fddd ="\u0044\u0034";}else if _affa =="\u004d\u004d\u005c\u002d\u0044\u0044"{_fddd ="\u0044\u0035";}else if _affa =="\u0048H\u003aM\u004d\u003a\u0053\u0053\u005c\u0020\u0041\u004d\u002f\u0050\u004d"{_fddd ="\u0044\u0036";}else if _affa =="\u0048\u0048\u003aM\u004d\u005c\u0020\u0041\u004d\u002f\u0050\u004d"{_fddd ="\u0044\u0037";}else if _affa =="\u0048\u0048\u003a\u004d\u004d\u003a\u0053\u0053"{_fddd ="\u0044\u0038";}else if _affa =="\u0048\u0048\u003aM\u004d"{_fddd ="\u0044\u0039";}else if _gagg .MatchString (_affa ){_fddd ="\u002e\u0030";}else if _bddad .MatchString (_affa ){_fddd ="\u002e\u0030\u0028\u0029";}else if _fcbd .MatchString (_affa ){_fddd ="\u0043\u0030";}else if _fafc .MatchString (_affa )||_fdaa .MatchString (_affa ){_fddd ="\u0044\u0031";}else if _bade :=_agbfg .FindStringSubmatch (_affa );len (_bade )> 1{_fddd ="\u0046"+_gc .Itoa (len (_bade [1]));}else if _debc :=_gagb .FindStringSubmatch (_affa );len (_debc )> 1{_fddd ="\u002e"+_gc .Itoa (len (_debc [2]));}else if _baae :=_ecfc .FindStringSubmatch (_affa );len (_baae )> 1{_fddd ="\u0050"+_gc .Itoa (len (_baae [2]));}else if _eefg :=_bgef .FindStringSubmatch (_affa );len (_eefg )> 1{_fddd ="\u0043"+_dedaa (_eefg ,1);}else if _bgec :=_abgbd .FindStringSubmatch (_affa );len (_bgec )> 1{_fddd ="\u0043"+_dedaa (_bgec ,1);}else if _aaebef :=_eggb .FindStringSubmatch (_affa );len (_aaebef )> 1{_fddd ="\u002e"+_dedaa (_aaebef ,1)+"\u0028\u0029";}else if _fcfa :=_fgfc .FindStringSubmatch (_affa );len (_fcfa )> 1{_fddd ="\u002e"+_dedaa (_fcfa ,1);}else if _aeaabe :=_aeaaba .FindStringSubmatch (_affa );len (_aeaabe )> 1{_fddd ="\u0053"+_dedaa (_aeaabe ,3);};if _fddd !="\u0047"&&_ce .Contains (_affa ,"\u005b\u0052\u0045D\u005d"){_fddd +="\u002d";};return MakeStringResult (_fddd );case "p\u0061\u0072\u0065\u006e\u0074\u0068\u0065\u0073\u0065\u0073":_acbc :=ctx .GetFormat (_ecdb );if _cega .MatchString (_acbc ){return MakeNumberResult (1);}else {return MakeNumberResult (0);};case "\u0070\u0072\u0065\u0066\u0069\u0078":return MakeStringResult (ctx .GetLabelPrefix (_ecdb ));case "\u0070r\u006f\u0074\u0065\u0063\u0074":_ggga :=0.0;if ctx .GetLocked (_ecdb ){_ggga =1.0;};return MakeNumberResult (_ggga );case "\u0072\u006f\u0077":_aefgf ,_babdb :=_bef .ParseCellReference (_ecdb );if _babdb !=nil {return MakeErrorResult ("I\u006e\u0063\u006f\u0072re\u0063t\u0020\u0072\u0065\u0066\u0065r\u0065\u006e\u0063\u0065\u003a\u0020"+_ecdb );};return MakeNumberResult (float64 (_aefgf .RowIdx ));case "\u0074\u0079\u0070\u0065":switch args [1].Type {case ResultTypeEmpty :return MakeStringResult ("\u0062");case ResultTypeString :return MakeStringResult ("\u006c");default:return MakeStringResult ("\u0076");};case "\u0077\u0069\u0064t\u0068":_bdbf ,_dadc :=_bef .ParseCellReference (_ecdb );if _dadc !=nil {return MakeErrorResult ("I\u006e\u0063\u006f\u0072re\u0063t\u0020\u0072\u0065\u0066\u0065r\u0065\u006e\u0063\u0065\u003a\u0020"+_ecdb );};if _bdbf .SheetName ==""{return MakeNumberResult (ctx .GetWidth (int (_bdbf .ColumnIdx )));}else {return MakeNumberResult (ctx .Sheet (_bdbf .SheetName ).GetWidth (int (_bdbf .ColumnIdx )));};};return MakeErrorResult ("\u0049\u006e\u0063or\u0072\u0065\u0063\u0074\u0020\u0066\u0069\u0072\u0073t\u0020a\u0072g\u0075m\u0065\u006e\u0074\u0020\u006f\u0066\u0020\u0043\u0045\u004c\u004c\u003a\u0020"+_egccf .ValueString );};func (_aabba node )String ()string {return _dc .Sprintf ("\u007b%\u0073\u0020\u0025\u0073\u007d",_aabba ._bbcc ,_gcfbc (string (_aabba ._addbb )));};

// SumSquares is an implementation of the Excel SUMSQ() function.
func SumSquares (args []Result )Result {_bdebf :=MakeNumberResult (0);for _ ,_dgaa :=range args {_dgaa =_dgaa .AsNumber ();switch _dgaa .Type {case ResultTypeNumber :_bdebf .ValueNumber +=_dgaa .ValueNumber *_dgaa .ValueNumber ;case ResultTypeList ,ResultTypeArray :_edgf :=SumSquares (_dgaa .ListValues ());if _edgf .Type !=ResultTypeNumber {return _edgf ;};_bdebf .ValueNumber +=_edgf .ValueNumber ;case ResultTypeString :case ResultTypeError :return _dgaa ;case ResultTypeEmpty :default:return MakeErrorResult (_dc .Sprintf ("\u0075\u006e\u0068\u0061\u006e\u0064\u006c\u0065\u0064\u0020\u0053\u0055\u004dS\u0051\u0055\u0041\u0052\u0045\u0053(\u0029\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0020\u0074\u0079p\u0065\u0020\u0025\u0073",_dgaa .Type ));};};return _bdebf ;};func _fgbg (_fdff []Result ,_afea rmode )Result {if len (_fdff )!=2{return MakeErrorResult ("\u0052\u004f\u0055\u004e\u0044\u0028\u0029\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0074\u0077\u006f\u0020\u006e\u0075\u006de\u0072\u0069\u0063\u0020\u0061r\u0067\u0075m\u0065\u006e\u0074\u0073");};_gcge :=_fdff [0].AsNumber ();if _gcge .Type !=ResultTypeNumber {return MakeErrorResult ("\u0066\u0069\u0072s\u0074\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0020\u0074\u006f\u0020\u0052\u004f\u0055\u004e\u0044\u0028\u0029\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065 \u0061\u0020\u006e\u0075\u006d\u0062\u0065\u0072");};_ddbaa :=_fdff [1].AsNumber ();if _ddbaa .Type !=ResultTypeNumber {return MakeErrorResult ("\u0073\u0065\u0063\u006f\u006e\u0064\u0020a\u0072\u0067\u0075m\u0065\u006e\u0074\u0020t\u006f\u0020\u0052\u004f\u0055\u004e\u0044\u0028\u0029\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020\u0061\u0020\u006e\u0075\u006d\u0062\u0065\u0072");};_ebfc :=_ddbaa .ValueNumber ;_fgff :=_gcge .ValueNumber ;_fgfb :=1.0;if _ebfc > 0{_fgfb =_ea .Pow (1/10.0,_ebfc );}else {_fgfb =_ea .Pow (10.0,-_ebfc );};_fgff ,_fdag :=_ea .Modf (_fgff /_fgfb );switch _afea {case _ddce :const _afab =0.499999999;if _fdag >=_afab {_fgff ++;}else if _fdag <=-_afab {_fgff --;};case _bgae :case _gadc :if _fdag > 0{_fgff ++;}else if _fdag < 0{_fgff --;};};return MakeNumberResult (_fgff *_fgfb );};

// GetFilename returns an empty string for the invalid reference context.
func (_bgea *ivr )GetFilename ()string {return ""};func _gafbc (_eagb ,_dccea int )string {const TOKSTART =4;if !_feabb {return "\u0073\u0079\u006et\u0061\u0078\u0020\u0065\u0072\u0072\u006f\u0072";};for _ ,_bcbca :=range _gaaeb {if _bcbca ._dbce ==_eagb &&_bcbca ._cggc ==_dccea {return "\u0073\u0079\u006e\u0074\u0061\u0078\u0020\u0065\u0072r\u006f\u0072\u003a\u0020"+_bcbca ._ffgbc ;};};_aaefe :="\u0073y\u006e\u0074\u0061\u0078 \u0065\u0072\u0072\u006f\u0072:\u0020u\u006ee\u0078\u0070\u0065\u0063\u0074\u0065\u0064 "+_geeac (_dccea );_ebacb :=make ([]int ,0,4);_aead :=_bbdb [_eagb ];for _cgbdb :=TOKSTART ;_cgbdb -1< len (_dcdfb );_cgbdb ++{if _cdacb :=_aead +_cgbdb ;_cdacb >=0&&_cdacb < _bcdf &&_abdb [_dffcc [_cdacb ]]==_cgbdb {if len (_ebacb )==cap (_ebacb ){return _aaefe ;};_ebacb =append (_ebacb ,_cgbdb );};};if _ecbeb [_eagb ]==-2{_gdbee :=0;for _dgcd [_gdbee ]!=-1||_dgcd [_gdbee +1]!=_eagb {_gdbee +=2;};for _gdbee +=2;_dgcd [_gdbee ]>=0;_gdbee +=2{_aeed :=_dgcd [_gdbee ];if _aeed < TOKSTART ||_dgcd [_gdbee +1]==0{continue ;};if len (_ebacb )==cap (_ebacb ){return _aaefe ;};_ebacb =append (_ebacb ,_aeed );};if _dgcd [_gdbee +1]!=0{return _aaefe ;};};for _agegb ,_ecgfb :=range _ebacb {if _agegb ==0{_aaefe +="\u002c\u0020\u0065x\u0070\u0065\u0063\u0074\u0069\u006e\u0067\u0020";}else {_aaefe +="\u0020\u006f\u0072\u0020";};_aaefe +=_geeac (_ecgfb );};return _aaefe ;};

// Clean is an implementation of the Excel CLEAN function that removes
// unprintable characters.
func Clean (args []Result )Result {if len (args )!=1{return MakeErrorResult ("\u0043\u004c\u0045\u0041\u004e\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065s\u0020\u0061\u0020\u0073\u0069\u006eg\u006c\u0065\u0020\u0073\u0074\u0072\u0069\u006e\u0067\u0020\u0061\u0072\u0067u\u006d\u0065\u006e\u0074");};_gdgbb :=args [0].AsString ();if _gdgbb .Type !=ResultTypeString {return MakeErrorResult ("\u0043\u0048\u0041\u0052\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0061\u0020\u0073\u0069\u006e\u0067\u006c\u0065\u0020\u0073t\u0072\u0069\u006e\u0067\u0020a\u0072\u0067u\u006d\u0065\u006e\u0074");};_agffg :=_cb .Buffer {};for _ ,_afga :=range _gdgbb .ValueString {if _cf .IsPrint (_afga ){_agffg .WriteRune (_afga );};};return MakeStringResult (_agffg .String ());};func (_dded *ivr )Cell (ref string ,ev Evaluator )Result {return MakeErrorResult ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0065\u0066\u0065r\u0065\u006e\u0063\u0065");};

// IfNA is an implementation of the Excel IFNA() function. It takes two arguments.
func IfNA (args []Result )Result {if len (args )!=2{return MakeErrorResult ("I\u0046\u004e\u0041\u0020\u0072\u0065q\u0075\u0069\u0072\u0065\u0073\u0020\u0074\u0077\u006f \u0061\u0072\u0067u\u006de\u006e\u0074\u0073");};if args [0].Type ==ResultTypeError &&args [0].ValueString =="\u0023\u004e\u002f\u0041"{return args [1];};return args [0];};

// Update updates references in the BinaryExpr after removing a row/column.
func (_aeg BinaryExpr )Update (q *_ff .UpdateQuery )Expression {_bc :=_aeg ;_bc ._ced =_aeg ._ced .Update (q );_bc ._baa =_aeg ._baa .Update (q );return _bc ;};func _bagbf (_afgb ,_eede Result ,_geag string )(*xargs ,Result ){if _afgb .Type !=ResultTypeList &&_afgb .Type !=ResultTypeArray {return nil ,MakeErrorResult (_geag +"\u0020\u0072eq\u0075\u0069\u0072e\u0073\u0020\u0076\u0061lue\u0073 t\u006f\u0020\u0062\u0065\u0020\u006f\u0066 a\u0072\u0072\u0061\u0079\u0020\u0074\u0079p\u0065");};_baecf :=_affb (_afgb );_badb :=[]float64 {};for _ ,_bgbbe :=range _baecf {for _ ,_bbea :=range _bgbbe {if _bbea .Type ==ResultTypeNumber &&!_bbea .IsBoolean {_badb =append (_badb ,_bbea .ValueNumber );}else {return nil ,MakeErrorResult (_geag +"\u0072\u0065q\u0075\u0069\u0072\u0065\u0073\u0020\u0076\u0061\u006c\u0075\u0065\u0073\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006dbe\u0072\u0073");};};};_bdaf :=len (_badb );if len (_badb )< 2{return nil ,MakeErrorResultType (ErrorTypeNum ,"");};if _eede .Type !=ResultTypeList &&_eede .Type !=ResultTypeArray {return nil ,MakeErrorResult (_geag +" \u0072\u0065\u0071\u0075\u0069\u0072e\u0073\u0020\u0064\u0061\u0074\u0065s\u0020\u0074\u006f\u0020\u0062\u0065\u0020o\u0066\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u0074\u0079p\u0065");};_fff :=_affb (_eede );_edgc :=[]float64 {};_eedfe :=0.0;for _ ,_gecce :=range _fff {for _ ,_fgbc :=range _gecce {if _fgbc .Type ==ResultTypeNumber &&!_fgbc .IsBoolean {_egef :=float64 (int (_fgbc .ValueNumber ));if _egef < _eedfe {return nil ,MakeErrorResultType (ErrorTypeNum ,_geag +" \u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0064\u0061\u0074\u0065\u0073\u0020\u0074\u006f\u0020b\u0065\u0020\u0069\u006e\u0020\u0061\u0073\u0063\u0065\u006edi\u006e\u0067\u0020o\u0072d\u0065\u0072");};_edgc =append (_edgc ,_egef );_eedfe =_egef ;}else {return nil ,MakeErrorResult (_geag +"\u0072\u0065\u0071\u0075i\u0072\u0065\u0073\u0020\u0064\u0061\u0074\u0065\u0073\u0020t\u006f \u0062\u0065\u0020\u006e\u0075\u006d\u0062e\u0072\u0073");};};};if len (_edgc )!=_bdaf {return nil ,MakeErrorResultType (ErrorTypeNum ,"");};return &xargs {_badb ,_edgc },MakeEmptyResult ();};

// Round is an implementation of the Excel ROUND function that rounds a number
// to a specified number of digits.
func Round (args []Result )Result {return _fgbg (args ,_ddce )};type plex struct{_cdbac chan *node ;_gbceg Expression ;_bccce string ;};

// Eval evaluates a vertical range returning a list of results or an error.
func (_ffcbe VerticalRange )Eval (ctx Context ,ev Evaluator )Result {_aadaf :=_ffcbe .verticalRangeReference ();if _bddc ,_dgbba :=ev .GetFromCache (_aadaf );_dgbba {return _bddc ;};_gbdgbg ,_abefg :=_cggac (ctx ,_ffcbe ._begc ,_ffcbe ._fcdba );_fcfdef :=_fceb (ctx ,ev ,_gbdgbg ,_abefg );ev .SetCache (_aadaf ,_fcfdef );return _fcfdef ;};const _ffbb ="\u0049\u006e\u0063\u006f\u0072\u0072\u0065\u0063\u0074\u0020\u0061\u0072\u0067\u0075\u006de\u006et\u0020\u0066\u006f\u0072\u0020\u0044\u0041\u0054\u0045\u0056\u0041\u004c\u0055\u0045";func _ddcb (_becba ,_bega ,_egga ,_afeg ,_adgc ,_cfdfa float64 ,_deeca int )(float64 ,Result ){_gbfb :=int (_cfdfa );_ccabd :=_bbga (_becba ,_bega ,_gbfb ,_deeca );_efdf :=_gfee (_becba ,_bega ,_gbfb ,_deeca )/_ccabd ;_aaee ,_ffga :=_dgef (_becba ,_bega ,_gbfb ,_deeca );if _ffga .Type ==ResultTypeError {return 0,_ffga ;};_ebbge :=_gffcc (_becba ,_bega ,_gbfb ,_deeca );_gfeee :=_adgc /_ea .Pow (1+_afeg /_cfdfa ,_aaee -1+_efdf );_gfeee -=100*_egga /_cfdfa *_ebbge /_ccabd ;_adcf :=100*_egga /_cfdfa ;_ggbe :=1+_afeg /_cfdfa ;for _gdbe :=0.0;_gdbe < _aaee ;_gdbe ++{_gfeee +=_adcf /_ea .Pow (_ggbe ,_gdbe +_efdf );};return _gfeee ,MakeEmptyResult ();};

// ISERR is an implementation of the Excel ISERR() function.
func IsErr (args []Result )Result {if len (args )!=1{return MakeErrorResult ("\u0049\u0053\u0045\u0052\u0052\u0028)\u0020\u0061\u0063\u0063\u0065\u0070\u0074\u0073\u0020\u0061\u0020\u0073\u0069n\u0067\u006c\u0065\u0020\u0061\u0072\u0067u\u006d\u0065\u006e\u0074");};return MakeBoolResult (args [0].Type ==ResultTypeError &&args [0].ValueString !="\u0023\u004e\u002f\u0041");};

// LookupFunction looks up and returns a standard function or nil.
func LookupFunction (name string )Function {_bdbb .Lock ();defer _bdbb .Unlock ();if _decee ,_bcda :=_babcg [name ];_bcda {return _decee ;};return nil ;};func _ecce (_cabd []Result ,_adfe string )(*cumulArgs ,Result ){if len (_cabd )!=6{return nil ,MakeErrorResult (_adfe +"\u0020\u0072\u0065qu\u0069\u0072\u0065\u0073\u0020\u0073\u0069\u0078\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0073");};if _cabd [0].Type !=ResultTypeNumber {return nil ,MakeErrorResult (_adfe +"\u0020\u0072eq\u0075\u0069\u0072e\u0073\u0020\u0072\u0061te \u0074o \u0062\u0065\u0020\u006e\u0075\u006d\u0062er\u0020\u0061\u0072\u0067\u0075\u006d\u0065n\u0074");};_ddgb :=_cabd [0].ValueNumber ;if _ddgb <=0{return nil ,MakeErrorResultType (ErrorTypeNum ,_adfe +"\u0020r\u0065\u0071u\u0069\u0072\u0065s\u0020\u0072\u0061\u0074\u0065\u0020\u0074o\u0020\u0062\u0065\u0020\u0070\u006fs\u0069\u0074\u0069\u0076\u0065\u0020\u006e\u0075\u006d\u0062\u0065r\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};if _cabd [1].Type !=ResultTypeNumber {return nil ,MakeErrorResult (_adfe +"\u0020\u0072\u0065\u0071\u0075\u0069r\u0065\u0073\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u006f\u0066\u0020\u0070\u0065\u0072\u0069\u006f\u0064\u0073 \u0074\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0061r\u0067u\u006d\u0065\u006e\u0074");};_beda :=_cabd [1].ValueNumber ;if _beda <=0{return nil ,MakeErrorResultType (ErrorTypeNum ,_adfe +"\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u006f\u0066\u0020p\u0065\u0072\u0069\u006f\u0064\u0073\u0020\u0074\u006f \u0062\u0065\u0020\u0070\u006f\u0073\u0069\u0074\u0069\u0076\u0065\u0020\u006eu\u006d\u0062\u0065\u0072\u0020\u0061r\u0067\u0075\u006de\u006e\u0074");};if _cabd [2].Type !=ResultTypeNumber {return nil ,MakeErrorResult (_adfe +"\u0020r\u0065\u0071u\u0069\u0072\u0065s\u0020\u0070\u0072\u0065\u0073\u0065\u006et\u0020\u0076\u0061\u006c\u0075\u0065 \u0074\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006d\u0062\u0065r\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};_dbdfa :=_cabd [2].ValueNumber ;if _dbdfa <=0{return nil ,MakeErrorResultType (ErrorTypeNum ,_adfe +"\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0070\u0072\u0065\u0073\u0065n\u0074\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u0074\u006f\u0020\u0062\u0065 \u0070\u006f\u0073\u0069\u0074\u0069\u0076\u0065\u0020\u006e\u0075\u006dbe\u0072\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};if _cabd [3].Type !=ResultTypeNumber {return nil ,MakeErrorResult (_adfe +"\u0020r\u0065\u0071u\u0069\u0072\u0065\u0073 \u0073\u0074\u0061r\u0074\u0020\u0070\u0065\u0072\u0069\u006f\u0064\u0020to\u0020\u0062\u0065 \u006e\u0075m\u0062\u0065\u0072\u0020\u0061\u0072g\u0075\u006de\u006e\u0074");};_ddde :=_cabd [3].ValueNumber ;if _ddde <=0{return nil ,MakeErrorResultType (ErrorTypeNum ,_adfe +"\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0073t\u0061\u0072\u0074\u0020\u0070\u0065\u0072\u0069o\u0064 \u0074\u006f\u0020\u0062\u0065\u0020\u0070\u006f\u0073\u0069\u0074\u0069\u0076\u0065\u0020\u006e\u0075\u006db\u0065\u0072\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};if _cabd [4].Type !=ResultTypeNumber {return nil ,MakeErrorResult (_adfe +"\u0020\u0072\u0065q\u0075\u0069\u0072\u0065\u0073\u0020\u0065\u006e\u0064\u0020\u0070\u0065\u0072\u0069\u006f\u0064\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072 \u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};_fdfb :=_cabd [4].ValueNumber ;if _fdfb <=0{return nil ,MakeErrorResultType (ErrorTypeNum ,_adfe +"\u0020\u0072\u0065\u0071\u0075i\u0072\u0065\u0073\u0020\u0065\u006e\u0064\u0020\u0070\u0065\u0072\u0069\u006fd\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u0070\u006f\u0073\u0069\u0074\u0069\u0076\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006et");};if _fdfb < _ddde {return nil ,MakeErrorResultType (ErrorTypeNum ,_adfe +"\u0020\u0072\u0065\u0071u\u0069\u0072\u0065\u0073\u0020\u0065\u006e\u0064\u0020p\u0065\u0072\u0069\u006f\u0064\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u006c\u0061\u0074\u0065\u0072\u0020o\u0072\u0020\u0065\u0071\u0075a\u006c\u0020\u0074\u006f\u0020\u0073\u0074\u0061\u0072\u0074\u0020\u0070\u0065\u0072\u0069\u006f\u0064");};if _fdfb > _beda {return nil ,MakeErrorResultType (ErrorTypeNum ,_adfe +" \u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0070\u0065\u0072\u0069\u006f\u0064\u0073\u0020\u0074o\u0020\u0062\u0065\u0020\u0069\u006e\u0020\u0070\u0065\u0072io\u0064\u0073\u0020r\u0061n\u0067\u0065");};_bdae :=int (_cabd [5].ValueNumber );if _bdae !=0&&_bdae !=1{return nil ,MakeErrorResultType (ErrorTypeNum ,_adfe +" \u0072\u0065\u0071\u0075\u0069\u0072e\u0073\u0020\u0074\u0079\u0070\u0065\u0020\u0074\u006f \u0062\u0065\u00200\u0020o\u0072\u0020\u0031");};return &cumulArgs {_ddgb ,_beda ,_dbdfa ,_ddde ,_fdfb ,_bdae },_ega ;};const _bbded =2;

// Eval evaluates a range with prefix returning a list of results or an error.
func (_eegd PrefixRangeExpr )Eval (ctx Context ,ev Evaluator )Result {_bbdgc :=_eegd ._fcagg .Reference (ctx ,ev );_fdead :=_eegd ._cfddb .Reference (ctx ,ev );_ebag :=_eegd ._befed .Reference (ctx ,ev );switch _bbdgc .Type {case ReferenceTypeSheet :if _eegb (_bbdgc ,ctx ){return MakeErrorResultType (ErrorTypeName ,_dc .Sprintf ("\u0053h\u0065e\u0074\u0020\u0025\u0073\u0020n\u006f\u0074 \u0066\u006f\u0075\u006e\u0064",_bbdgc .Value ));};_edag :=_fdbff (_bbdgc ,_fdead ,_ebag );if _fdead .Type ==ReferenceTypeCell &&_ebag .Type ==ReferenceTypeCell {if _gcccc ,_ccgf :=ev .GetFromCache (_edag );_ccgf {return _gcccc ;}else {_fcagf :=_fceb (ctx .Sheet (_bbdgc .Value ),ev ,_fdead .Value ,_ebag .Value );ev .SetCache (_edag ,_fcagf );return _fcagf ;};};return MakeErrorResult ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072a\u006e\u0067\u0065\u0020"+_edag );default:return MakeErrorResult (_dc .Sprintf ("\u006e\u006f\u0020\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0020\u0066\u006f\u0072\u0020r\u0065f\u0065\u0072\u0065\u006e\u0063\u0065\u0020\u0074\u0079\u0070\u0065\u0020\u0025\u0073",_bbdgc .Type ));};};

// NA is an implementation of the Excel NA() function that just returns the #N/A! error.
func NA (args []Result )Result {if len (args )!=0{return MakeErrorResult ("\u004eA\u0028\u0029\u0020\u0061c\u0063\u0065\u0070\u0074\u0073 \u006eo\u0020a\u0072\u0067\u0075\u006d\u0065\u006e\u0074s");};return MakeErrorResultType (ErrorTypeNA ,"");};

// Median implements the MEDIAN function that returns the median of a range of
// values.
func Median (args []Result )Result {if len (args )==0{return MakeErrorResult ("\u004d\u0045D\u0049\u0041\u004e\u0020r\u0065\u0071u\u0069\u0072\u0065\u0073\u0020\u0061\u0074\u0020l\u0065\u0061\u0073\u0074\u0020\u006f\u006e\u0065\u0020\u0061\u0072\u0067u\u006d\u0065\u006e\u0074");};_cgaa :=_bdac (args );_b .Float64s (_cgaa );var _geead float64 ;if len (_cgaa )%2==0{_geead =(_cgaa [len (_cgaa )/2-1]+_cgaa [len (_cgaa )/2])/2;}else {_geead =_cgaa [len (_cgaa )/2];};return MakeNumberResult (_geead );};