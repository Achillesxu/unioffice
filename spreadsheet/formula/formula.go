//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

// Package formula provides formula parsing and evaluation. The lexer is
// implemented with a ragel grammar while the the parser is implemented with
// goyacc. The entire formula grammar is not implemented and not all functions
// are supported yet. For compatibility sake, upon failure to parse or execute a
// formula, unioffice leaves cached formula results blank allowing Excel to compute
// formulas upon load. This is similar to what most other Excel libraries do
// which leave all cached results blank instead of attempting to execute
// formulas.
//
// The unit tests for this package are unique in that we can take advantage of
// "cached" formula results that Excel/LibreOffice write to the sheet.  These
// are the computed results of a formula in string form.  By comparing these
// values to the value computed by the unioffice evaluation of the formula, adding
// a new test means just adding a new formula to one of the reference sheets
// with Excel. During the unit test, we evaluate the formula and compare it to
// the value that Excel computed.  If they're the same, the test passes.
package formula ;import (_eb "bytes";_e "errors";_a "fmt";_cc "github.com/unidoc/unioffice/common/logger";_bg "github.com/unidoc/unioffice/internal/mergesort";_gf "github.com/unidoc/unioffice/internal/wildcard";_gc "github.com/unidoc/unioffice/spreadsheet/format";_de "github.com/unidoc/unioffice/spreadsheet/reference";_fe "github.com/unidoc/unioffice/spreadsheet/update";_g "io";_aca "math";_b "math/big";_gb "math/rand";_bd "regexp";_ac "sort";_d "strconv";_bf "strings";_cb "sync";_ad "time";_c "unicode";);

// LookupFunctionComplex looks up and returns a complex function or nil.
func LookupFunctionComplex (name string )FunctionComplex {_gcdba .Lock ();defer _gcdba .Unlock ();if _eebeef ,_cffe :=_ffadf [name ];_cffe {return _eebeef ;};return nil ;};

// Round is an implementation of the Excel ROUND function that rounds a number
// to a specified number of digits.
func Round (args []Result )Result {return _dafdc (args ,_ddgb )};

// Xirr implements the Excel XIRR function.
func Xirr (args []Result )Result {_degfc :=len (args );if _degfc !=2&&_degfc !=3{return MakeErrorResult ("\u0058\u0049RR\u0020\u0072\u0065q\u0075\u0069\u0072\u0065s t\u0077o \u006f\u0072\u0020\u0074\u0068\u0072\u0065e \u0061\u0072\u0067\u0075\u006d\u0065\u006et\u0073");};_efed ,_dabda :=_ebfcde (args [0],args [1],"\u0058\u0049\u0052\u0052");if _dabda .Type ==ResultTypeError {return _dabda ;};_cfea :=_efed ._fegg ;_aegd :=_efed ._gfd ;_egefg :=0.1;if _degfc ==3&&args [2].Type !=ResultTypeEmpty {if args [2].Type !=ResultTypeNumber {return MakeErrorResult ("\u0058\u0049\u0052\u0052\u0020r\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0067\u0075\u0065\u0073\u0073 \u0074\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};_egefg =args [2].ValueNumber ;if _egefg <=-1{return MakeErrorResult ("\u0058\u0049\u0052\u0052\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0067\u0075\u0065\u0073\u0073\u0020\u0074\u006f\u0020\u0062e\u0020\u006d\u006f\u0072\u0065 \u0074\u0068a\u006e\u0020\u002d\u0031");};};return _gbab (_cfea ,_aegd ,_egefg );};const _gafb =57377;

// SetLocked does nothing for the invalid reference context.
func (_befg *ivr )SetLocked (cellRef string ,locked bool ){};

// Lookup implements the LOOKUP function that returns a matching value from a
// column, or from the same index in a second column.
func Lookup (args []Result )Result {if len (args )< 2{return MakeErrorResult ("\u004c\u004f\u004f\u004b\u0055\u0050\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0061\u0074\u0020\u006c\u0065\u0061\u0073\u0074 \u0074\u0077\u006f\u0020\u0061r\u0067\u0075m\u0065\u006e\u0074\u0073");};if len (args )> 3{return MakeErrorResult ("\u004c\u004f\u004f\u004b\u0055\u0050\u0020\u0072\u0065\u0071\u0075\u0069\u0072e\u0073\u0020\u0061\u0074\u0020\u006do\u0073\u0074\u0020\u0074\u0068\u0072\u0065\u0065\u0020\u0061\u0072\u0067\u0075m\u0065\u006e\u0074\u0073");};_gcdffa :=args [0];_facd :=args [1];if _facd .Type !=ResultTypeArray &&_facd .Type !=ResultTypeList {return MakeErrorResult ("\u0056\u004cO\u004f\u004b\u0055\u0050\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0073\u0065\u0063\u006f\u006e\u0064\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0020\u006f\u0066\u0020\u0074\u0079\u0070\u0065\u0020\u0061\u0072\u0072\u0061\u0079");};_daccc :=_bgdf (_facd );_bbeb :=-1;for _daad ,_edaa :=range _daccc {if _cacc (_gcdffa ,_edaa ,false ,false )==_ageeb {_bbeb =_daad ;};};if _bbeb ==-1{return MakeErrorResultType (ErrorTypeNA ,"\u004c\u004f\u004f\u004bUP\u0020\u006e\u006f\u0020\u0072\u0065\u0073\u0075\u006c\u0074\u0020\u0066\u006f\u0075n\u0064");};_fbdg :=_daccc ;if len (args )==3{_fbdg =_bgdf (args [2]);};if _bbeb < 0||_bbeb >=len (_fbdg ){return MakeErrorResultType (ErrorTypeNA ,"\u004c\u004f\u004f\u004bUP\u0020\u006e\u006f\u0020\u0072\u0065\u0073\u0075\u006c\u0074\u0020\u0066\u006f\u0075n\u0064");};return _fbdg [_bbeb ];};

// AsNumber attempts to intepret a string cell value as a number. Upon success,
// it returns a new number result, upon  failure it returns the original result.
// This is used as functions return strings that can then act like number (e.g.
// LEFT(1.2345,3) + LEFT(1.2345,3) = 2.4)
func (_ceae Result )AsNumber ()Result {if _ceae .Type ==ResultTypeString {_baeab ,_beeec :=_d .ParseFloat (_ceae .ValueString ,64);if _beeec ==nil {return MakeNumberResult (_baeab );};};if _ceae .Type ==ResultTypeEmpty {return MakeNumberResult (0);};return _ceae ;};

// String returns a string representation of String.
func (_fbaaf String )String ()string {return "\u0022"+_fbaaf ._edag +"\u0022"};func _fc (_dg BinOpType ,_gfc ,_bb []Result )Result {_dec :=[]Result {};for _ed :=range _gfc {_gfg :=_gfc [_ed ].AsNumber ();_fec :=_bb [_ed ].AsNumber ();if _gfg .Type !=ResultTypeNumber ||_fec .Type !=ResultTypeNumber {return MakeErrorResult ("\u006e\u006f\u006e\u002d\u006e\u0075\u006e\u006d\u0065\u0072\u0069\u0063\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u0069\u006e\u0020\u0062\u0069n\u0061\u0072\u0079\u0020\u006fp\u0065\u0072a\u0074\u0069\u006f\u006e");};switch _dg {case BinOpTypePlus :_dec =append (_dec ,MakeNumberResult (_gfg .ValueNumber +_fec .ValueNumber ));case BinOpTypeMinus :_dec =append (_dec ,MakeNumberResult (_gfg .ValueNumber -_fec .ValueNumber ));case BinOpTypeMult :_dec =append (_dec ,MakeNumberResult (_gfg .ValueNumber *_fec .ValueNumber ));case BinOpTypeDiv :if _fec .ValueNumber ==0{return MakeErrorResultType (ErrorTypeDivideByZero ,"");};_dec =append (_dec ,MakeNumberResult (_gfg .ValueNumber /_fec .ValueNumber ));case BinOpTypeExp :_dec =append (_dec ,MakeNumberResult (_aca .Pow (_gfg .ValueNumber ,_fec .ValueNumber )));case BinOpTypeLT :_dec =append (_dec ,MakeBoolResult (_gfg .ValueNumber < _fec .ValueNumber ));case BinOpTypeGT :_dec =append (_dec ,MakeBoolResult (_gfg .ValueNumber > _fec .ValueNumber ));case BinOpTypeEQ :_dec =append (_dec ,MakeBoolResult (_gfg .ValueNumber ==_fec .ValueNumber ));case BinOpTypeLEQ :_dec =append (_dec ,MakeBoolResult (_gfg .ValueNumber <=_fec .ValueNumber ));case BinOpTypeGEQ :_dec =append (_dec ,MakeBoolResult (_gfg .ValueNumber >=_fec .ValueNumber ));case BinOpTypeNE :_dec =append (_dec ,MakeBoolResult (_gfg .ValueNumber !=_fec .ValueNumber ));default:return MakeErrorResult (_a .Sprintf ("\u0075\u006es\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u006c\u0069\u0073\u0074\u0020\u0062\u0069\u006e\u0061\u0072\u0079\u0020\u006fp \u0025\u0073",_dg ));};};return MakeListResult (_dec );};

// Eval evaluates and returns a boolean.
func (_ffb Bool )Eval (ctx Context ,ev Evaluator )Result {return MakeBoolResult (_ffb ._efe )};

// Eval evaluates a range with prefix returning a list of results or an error.
func (_bdbd PrefixRangeExpr )Eval (ctx Context ,ev Evaluator )Result {_cfgff :=_bdbd ._fgead .Reference (ctx ,ev );_acbce :=_bdbd ._fbade .Reference (ctx ,ev );_bgbce :=_bdbd ._gdegd .Reference (ctx ,ev );switch _cfgff .Type {case ReferenceTypeSheet :if _bedge (_cfgff ,ctx ){return MakeErrorResultType (ErrorTypeName ,_a .Sprintf ("\u0053h\u0065e\u0074\u0020\u0025\u0073\u0020n\u006f\u0074 \u0066\u006f\u0075\u006e\u0064",_cfgff .Value ));};_gddae :=_gegdg (_cfgff ,_acbce ,_bgbce );if _acbce .Type ==ReferenceTypeCell &&_bgbce .Type ==ReferenceTypeCell {if _abec ,_gaega :=ev .GetFromCache (_gddae );_gaega {return _abec ;}else {_faagd :=_dbcgg (ctx .Sheet (_cfgff .Value ),ev ,_acbce .Value ,_bgbce .Value );ev .SetCache (_gddae ,_faagd );return _faagd ;};};return MakeErrorResult ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072a\u006e\u0067\u0065\u0020"+_gddae );default:return MakeErrorResult (_a .Sprintf ("\u006e\u006f\u0020\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0020\u0066\u006f\u0072\u0020r\u0065f\u0065\u0072\u0065\u006e\u0063\u0065\u0020\u0074\u0079\u0070\u0065\u0020\u0025\u0073",_cfgff .Type ));};};func _gcfa (_cade string )*criteriaRegex {_dacb :=&criteriaRegex {};if _cade ==""{return _dacb ;};if _gefaa :=_gdggf .FindStringSubmatch (_cade );len (_gefaa )> 1{_dacb ._eaedc =_bfacb ;_dacb ._fbaad =_gefaa [1];}else if _ceggc :=_gaefc .FindStringSubmatch (_cade );len (_ceggc )> 1{_dacb ._eaedc =_bfacb ;_dacb ._fbaad =_ceggc [1];}else if _cfdaf :=_bbabf .FindStringSubmatch (_cade );len (_cfdaf )> 1{_dacb ._eaedc =_gdba ;_dacb ._fbaad =_cfdaf [1];}else if _decd :=_gfgef .FindStringSubmatch (_cade );len (_decd )> 1{_dacb ._eaedc =_ecfgb ;_dacb ._fbaad =_decd [1];}else if _gbbdb :=_cdefe .FindStringSubmatch (_cade );len (_gbbdb )> 1{_dacb ._eaedc =_cdfee ;_dacb ._fbaad =_gbbdb [1];}else if _fbafe :=_cgaag .FindStringSubmatch (_cade );len (_fbafe )> 1{_dacb ._eaedc =_fcag ;_dacb ._fbaad =_fbafe [1];};return _dacb ;};const _fadab =57371;

// Concat is an implementation of the Excel CONCAT() and deprecated CONCATENATE() function.
func Concat (args []Result )Result {_decfe :=_eb .Buffer {};for _ ,_aadc :=range args {switch _aadc .Type {case ResultTypeString :_decfe .WriteString (_aadc .ValueString );case ResultTypeNumber :var _fgcbg string ;if _aadc .IsBoolean {if _aadc .ValueNumber ==0{_fgcbg ="\u0046\u0041\u004cS\u0045";}else {_fgcbg ="\u0054\u0052\u0055\u0045";};}else {_fgcbg =_aadc .AsString ().ValueString ;};_decfe .WriteString (_fgcbg );default:return MakeErrorResult ("\u0043\u004f\u004e\u0043\u0041T\u0028\u0029\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0061r\u0067\u0075\u006d\u0065\u006e\u0074\u0073\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u0073\u0074\u0072\u0069\u006e\u0067\u0073");};};return MakeStringResult (_decfe .String ());};func (_edab *ivr )NamedRange (ref string )Reference {return ReferenceInvalid };

// MakeListResult constructs a list result.
func MakeListResult (list []Result )Result {return Result {Type :ResultTypeList ,ValueList :list }};

// String returns a string representation of SheetPrefixExpr.
func (_dceee SheetPrefixExpr )String ()string {return _dceee ._dcae };

// Days is an implementation of the Excel DAYS() function.
func Days (args []Result )Result {if len (args )!=2{return MakeErrorResult ("D\u0041\u0059\u0053\u0020\u0072\u0065q\u0075\u0069\u0072\u0065\u0073\u0020\u0074\u0077\u006f \u0061\u0072\u0067u\u006de\u006e\u0074\u0073");};var _dd ,_adc float64 ;switch args [0].Type {case ResultTypeNumber :_adc =args [0].ValueNumber ;case ResultTypeString :_addb :=DateValue ([]Result {args [0]});if _addb .Type ==ResultTypeError {return MakeErrorResult ("I\u006e\u0063\u006f\u0072\u0072\u0065c\u0074\u0020\u0065\u006e\u0064\u0020\u0064\u0061\u0074e\u0020\u0066\u006fr\u0020D\u0041\u0059\u0053");};_adc =_addb .ValueNumber ;default:return MakeErrorResult ("I\u006e\u0063\u006f\u0072\u0072\u0065c\u0074\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006et\u0020\u0066\u006fr\u0020D\u0041\u0059\u0053");};switch args [1].Type {case ResultTypeNumber :_dd =args [1].ValueNumber ;if _dd < 62&&_adc >=62{_dd --;};case ResultTypeString :_ccd :=DateValue ([]Result {args [1]});if _ccd .Type ==ResultTypeError {return MakeErrorResult ("\u0049\u006ec\u006f\u0072\u0072\u0065\u0063\u0074\u0020\u0073\u0074\u0061\u0072\u0074\u0020\u0064\u0061\u0074\u0065\u0020\u0066\u006f\u0072\u0020DA\u0059\u0053");};_dd =_ccd .ValueNumber ;default:return MakeErrorResult ("I\u006e\u0063\u006f\u0072\u0072\u0065c\u0074\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006et\u0020\u0066\u006fr\u0020D\u0041\u0059\u0053");};_ddf :=float64 (int (_adc -_dd ));return MakeNumberResult (_ddf );};

// NewHorizontalRange constructs a new full rows range.
func NewHorizontalRange (v string )Expression {_dcce :=_bf .Split (v ,"\u003a");if len (_dcce )!=2{return nil ;};_dcfb ,_ :=_d .Atoi (_dcce [0]);_defe ,_ :=_d .Atoi (_dcce [1]);if _dcfb > _defe {_dcfb ,_defe =_defe ,_dcfb ;};return HorizontalRange {_dfga :_dcfb ,_fgbbc :_defe };};

// Mid is an implementation of the Excel MID function that returns a copy
// of the string with each word capitalized.
func Mid (args []Result )Result {if len (args )!=3{return MakeErrorResult ("\u004d\u0049\u0044\u0020r\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0074\u0068r\u0065e\u0020\u0061\u0072\u0067\u0075\u006d\u0065n\u0074\u0073");};_gagf :=args [0];if _gagf .Type ==ResultTypeError {return _gagf ;};if _gagf .Type !=ResultTypeString &&_gagf .Type !=ResultTypeNumber &&_gagf .Type !=ResultTypeEmpty {return MakeErrorResult ("\u004d\u0049\u0044\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0074\u0065x\u0074 \u0074\u006f\u0020\u0062\u0065\u0020\u0061\u0020\u0073\u0074\u0072\u0069\u006e\u0067");};_cfeb :=args [0].Value ();if args [1].Type !=ResultTypeNumber {return MakeErrorResult ("\u004d\u0049D\u0020\u0072\u0065\u0071u\u0069\u0072e\u0073\u0020\u0073\u0074\u0061\u0072\u0074\u005fn\u0075\u006d\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u0061\u0020\u006eu\u006d\u0062\u0065\u0072");};_fgafe :=int (args [1].ValueNumber );if _fgafe < 1{return MakeErrorResult ("M\u0049\u0044\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0073\u0074\u0061\u0072\u0074\u005fn\u0075\u006d\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u006dor\u0065\u0020\u0074h\u0061n\u0020\u0030");};if args [2].Type !=ResultTypeNumber {return MakeErrorResult ("\u004d\u0049D\u0020\u0072\u0065\u0071u\u0069\u0072e\u0073\u0020\u006e\u0075\u006d\u005f\u0063\u0068a\u0072\u0073\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u0061\u0020\u006eu\u006d\u0062\u0065\u0072");};_aeccc :=int (args [2].ValueNumber );if _aeccc < 0{return MakeErrorResult ("\u004d\u0049\u0044\u0020\u0072e\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u006e\u0075\u006d\u005f\u0063\u0068a\u0072\u0073\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u006e\u006f\u006e\u0020\u006e\u0065\u0067\u0061\u0074\u0069\u0076\u0065");};_ccf :=len (_cfeb );if _fgafe > _ccf {return MakeStringResult ("");};_fgafe --;_ceggca :=_fgafe +_aeccc ;if _ceggca > _ccf {return MakeStringResult (_cfeb [_fgafe :]);}else {return MakeStringResult (_cfeb [_fgafe :_ceggca ]);};};var _acddb =[...]int {1};

// SupportedFunctions returns a list of supported functions.
func SupportedFunctions ()[]string {_afceb :=[]string {};for _ceecf :=range _cggb {_afceb =append (_afceb ,_ceecf );};for _bcfdf :=range _ffadf {_afceb =append (_afceb ,_bcfdf );};_ac .Strings (_afceb );return _afceb ;};func _gacb (_dddb ,_caab float64 ,_bgaf int )(float64 ,Result ){_cegf ,_dcfeb :=_cgf (_dddb ),_cgf (_caab );_edfg :=_cegf .Unix ();_bgab :=_dcfeb .Unix ();if _edfg ==_bgab {return 0,_ebega ;};_adeg ,_bgea ,_agg :=_cegf .Date ();_beda ,_efad ,_fdbb :=_dcfeb .Date ();_afg ,_cbda :=int (_bgea ),int (_efad );var _cbb ,_gcg float64 ;switch _bgaf {case 0:if _agg ==31{_agg --;};if _agg ==30&&_fdbb ==31{_fdbb --;}else if _gee :=_cgec (_adeg );_afg ==2&&((_gee &&_agg ==29)||(!_gee &&_agg ==28)){_agg =30;if _adeaf :=_cgec (_beda );_cbda ==2&&((_adeaf &&_fdbb ==29)||(!_adeaf &&_fdbb ==28)){_fdbb =30;};};_cbb =float64 ((_beda -_adeg )*360+(_cbda -_afg )*30+(_fdbb -_agg ));_gcg =360;case 1:_cbb =_caab -_dddb ;_eagf :=_adeg !=_beda ;if _eagf &&(_beda !=_adeg +1||_afg < _cbda ||(_afg ==_cbda &&_agg < _fdbb )){_fgd :=0;for _cgdec :=_adeg ;_cgdec <=_beda ;_cgdec ++{_fgd +=_ebfc (_cgdec ,1);};_gcg =float64 (_fgd )/float64 (_beda -_adeg +1);}else {if !_eagf &&_cgec (_adeg ){_gcg =366;}else {if _eagf &&((_cgec (_adeg )&&(_afg < 2||(_afg ==2&&_agg <=29)))||(_cgec (_beda )&&(_cbda > 2||(_cbda ==2&&_fdbb ==29)))){_gcg =366;}else {_gcg =365;};};};case 2:_cbb =_caab -_dddb ;_gcg =360;case 3:_cbb =_caab -_dddb ;_gcg =365;case 4:if _agg ==31{_agg --;};if _fdbb ==31{_fdbb --;};_cbb =float64 ((_beda -_adeg )*360+(_cbda -_afg )*30+(_fdbb -_agg ));_gcg =360;default:return 0,MakeErrorResultType (ErrorTypeNum ,"\u0049\u006e\u0063\u006fr\u0072\u0065\u0063\u0074\u0020\u0062\u0061\u0073\u0069\u0073 \u0066o\u0072\u0020\u0059\u0065\u0061\u0072\u0046r\u0061\u0063");};return _cbb /_gcg ,_ebega ;};

// IsLogical is an implementation of the Excel ISLOGICAL() function.
func IsLogical (ctx Context ,ev Evaluator ,args []Result )Result {if len (args )!=1{return MakeErrorResult ("\u0049\u0053\u004c\u004f\u0047\u0049\u0043A\u004c\u0020\u0072e\u0071\u0075\u0069\u0072e\u0073\u0020\u0061\u0020\u0073\u0069\u006e\u0067\u006c\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};_ffbe :=args [0].Ref ;if _ffbe .Type !=ReferenceTypeCell {return MakeErrorResult ("I\u0053\u004c\u004f\u0047\u0049\u0043\u0041\u004c\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0074\u0068\u0065\u0020\u0066\u0069\u0072\u0073t\u0020a\u0072\u0067\u0075\u006de\u006e\u0074 \u0074\u006f\u0020\u0062\u0065\u0020\u006f\u0066\u0020\u0074\u0079\u0070\u0065\u0020\u0072\u0065\u0066\u0065\u0072\u0065\u006e\u0063\u0065");};return MakeBoolResult (ctx .Cell (_ffbe .Value ,ev ).IsBoolean );};type defEval struct{evCache ;_bcaa bool ;};var _gaffe =[...]int {0,7,3,3,3,8,8,8,8,1,1,1,2,2,2,2,2,14,15,15,17,17,4,4,4,13,5,6,6,6,6,6,6,6,12,12,12,12,12,12,12,12,12,12,12,12,9,9,9,16,16,11,10,10};func _gbddgb (_dcc Result )[][]Result {switch _dcc .Type {case ResultTypeArray :return _dcc .ValueArray ;case ResultTypeList :return [][]Result {_dcc .ValueList };default:return [][]Result {};};};func _bccb (_aaddb []Result ,_gfcc countMode )float64 {_fgbg :=0.0;for _ ,_fdce :=range _aaddb {switch _fdce .Type {case ResultTypeNumber :if _gfcc ==_eede ||(_gfcc ==_bcaf &&!_fdce .IsBoolean ){_fgbg ++;};case ResultTypeList ,ResultTypeArray :_fgbg +=_bccb (_fdce .ListValues (),_gfcc );case ResultTypeString :if _gfcc ==_eede {_fgbg ++;};case ResultTypeEmpty :if _gfcc ==_efeff {_fgbg ++;};};};return _fgbg ;};

// YearFrac is an implementation of the Excel YEARFRAC() function.
func YearFrac (args []Result )Result {_ebcf :=len (args );if (_ebcf !=2&&_ebcf !=3)||args [0].Type !=ResultTypeNumber ||args [1].Type !=ResultTypeNumber {return MakeErrorResult ("Y\u0045\u0041\u0052\u0046\u0052\u0041\u0043\u0020\u0072e\u0071\u0075\u0069\u0072\u0065\u0073\u0020tw\u006f\u0020\u006f\u0072 \u0074\u0068\u0072\u0065\u0065\u0020\u006e\u0075\u006dbe\u0072\u0020a\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0073");};_adbc :=0;if _ebcf ==3&&args [2].Type !=ResultTypeEmpty {if args [2].Type !=ResultTypeNumber {return MakeErrorResult ("Y\u0045\u0041\u0052\u0046\u0052\u0041\u0043\u0020\u0072e\u0071\u0075\u0069\u0072\u0065\u0073\u0020ba\u0073\u0069\u0073\u0020a\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0020\u0074o \u0062\u0065 \u0061\u0020\u006e\u0075\u006d\u0062\u0065\u0072");};_adbc =int (args [2].ValueNumber );if !_facb (_adbc ){return MakeErrorResultType (ErrorTypeNum ,"\u0049\u006ec\u006f\u0072\u0072\u0065c\u0074\u0020b\u0061\u0073\u0069\u0073\u0020\u0061\u0072\u0067u\u006d\u0065\u006e\u0074\u0020\u0066\u006f\u0072\u0020\u0059\u0045\u0041R\u0046\u0052\u0041\u0043");};};if args [0].Type !=ResultTypeNumber {return MakeErrorResult ("\u0059\u0045\u0041\u0052\u0046\u0052\u0041\u0043\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020s\u0074\u0061\u0072\u0074\u0020\u0064\u0061t\u0065\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006db\u0065\u0072\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};_cgdeg :=args [0].ValueNumber ;if args [1].Type !=ResultTypeNumber {return MakeErrorResult ("\u0059\u0045\u0041\u0052\u0046\u0052\u0041\u0043 \u0072\u0065\u0071ui\u0072\u0065\u0073\u0020\u0065\u006ed\u0020\u0064\u0061\u0074\u0065\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006db\u0065\u0072\u0020\u0061\u0072\u0067\u0075\u006de\u006e\u0074");};_cgdea :=args [1].ValueNumber ;_agc ,_ggc :=_gacb (_cgdeg ,_cgdea ,_adbc );if _ggc .Type ==ResultTypeError {return _ggc ;};return MakeNumberResult (_agc );};

// Right implements the Excel RIGHT(string,[n]) function which returns the
// rightmost n characters.
func Right (args []Result )Result {_fdae :=1;switch len (args ){case 1:case 2:if args [1].Type !=ResultTypeNumber {return MakeErrorResult ("\u0052\u0049\u0047\u0048\u0054\u0020\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u006e\u0075\u006db\u0065\u0072\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};_fdae =int (args [1].ValueNumber );if _fdae < 0{return MakeErrorResult ("R\u0049\u0047\u0048\u0054\u0020\u0065x\u0070\u0065\u0063\u0074\u0065\u0064 \u006e\u0075\u006d\u0062\u0065\u0072\u0020a\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0020\u003e\u003d \u0030");};if _fdae ==0{return MakeStringResult ("");};default:return MakeErrorResult ("\u0052\u0049\u0047HT\u0020\u0061\u0063\u0063\u0065\u0070\u0074\u0073\u0020o\u006ee\u0020o\u0072 \u0074\u0077\u006f\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0073");};if args [0].Type ==ResultTypeList {return MakeErrorResult ("\u0052\u0049\u0047\u0048\u0054\u0020\u0063\u0061\u006e\u0027\u0074\u0020\u0062\u0065\u0020c\u0061l\u006c\u0065\u0064\u0020\u006f\u006e\u0020\u0061\u0020\u0072\u0061\u006e\u0067\u0065");};_afeb :=args [0].Value ();_ceab :=len (_afeb );if _fdae > _ceab {return MakeStringResult (_afeb );};return MakeStringResult (_afeb [_ceab -_fdae :_ceab ]);};func _dfgga (_dgfe []Result ,_acef bool )Result {_fgab :="\u004d\u0049\u004e";if _acef {_fgab ="\u004d\u0049\u004e\u0041";};if len (_dgfe )==0{return MakeErrorResult (_fgab +"\u0020\u0072\u0065q\u0075\u0069\u0072\u0065s\u0020\u0061\u0074\u0020\u006c\u0065\u0061s\u0074\u0020\u006f\u006e\u0065\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};_dgabc :=_aca .MaxFloat64 ;for _ ,_abaf :=range _dgfe {switch _abaf .Type {case ResultTypeNumber :if (_acef ||!_abaf .IsBoolean )&&_abaf .ValueNumber < _dgabc {_dgabc =_abaf .ValueNumber ;};case ResultTypeList ,ResultTypeArray :_aabd :=_dfgga (_abaf .ListValues (),_acef );if _aabd .ValueNumber < _dgabc {_dgabc =_aabd .ValueNumber ;};case ResultTypeEmpty :case ResultTypeString :_gegac :=0.0;if _acef {_gegac =_abaf .AsNumber ().ValueNumber ;};if _gegac < _dgabc {_dgabc =_gegac ;};default:_cc .Log .Debug ("\u0075\u006e\u0068\u0061\u006e\u0064\u006c\u0065\u0064\u0020"+_fgab +"\u0028\u0029\u0020\u0061rg\u0075\u006d\u0065\u006e\u0074\u0020\u0074\u0079\u0070\u0065\u0020\u0025\u0073",_abaf .Type );};};if _dgabc ==_aca .MaxFloat64 {_dgabc =0;};return MakeNumberResult (_dgabc );};const _dcbc =86400000000000;

// Rand is an implementation of the Excel RAND() function that returns random
// numbers in the range [0,1).
func Rand (args []Result )Result {if len (args )!=0{return MakeErrorResult ("R\u0041\u004e\u0044\u0028\u0029\u0020a\u0063\u0063\u0065\u0070\u0074\u0073\u0020\u006e\u006f \u0061\u0072\u0067u\u006de\u006e\u0074\u0073");};return MakeNumberResult (_egcf .Float64 ());};

// Number is a nubmer expression.
type Number struct{_dadgc float64 };var _dcdff =[...]uint8 {0,17,33,49,63,78,93,108};func _bcbc (_gabggc ,_cgcbc []string )[]string {for _ ,_cage :=range _cgcbc {_gabggc =append (_gabggc ,_cage );};return _gabggc ;};

// Choose implements the Excel CHOOSE function.
func Choose (args []Result )Result {if len (args )< 2{return MakeErrorResult ("\u0043\u0048O\u004f\u0053\u0045\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0074\u0077\u006f\u0020\u0061\u0072\u0067\u0075\u006den\u0074\u0073");};_gbdg :=args [0];if _gbdg .Type !=ResultTypeNumber {return MakeErrorResult ("\u0043H\u004f\u004fS\u0045\u0020\u0072e\u0071\u0075\u0069\u0072\u0065\u0073\u0020f\u0069\u0072\u0073\u0074\u0020\u0061r\u0067\u0075\u006d\u0065\u006e\u0074\u0020\u006f\u0066\u0020\u0074y\u0070\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072");};_eaab :=int (_gbdg .ValueNumber );if _eaab < 1{return MakeErrorResult ("\u0049\u006e\u0064\u0065\u0078\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065 \u0061 \u0070\u006f\u0073\u0069\u0074\u0069\u0076\u0065\u0020\u0076\u0061\u006c\u0075\u0065");};if len (args )<=_eaab {return MakeErrorResult ("\u0049\u006e\u0064\u0065\u0078\u0020\u0073\u0068\u006f\u0075\u006cd\u0020\u0062\u0065\u0020\u006c\u0065\u0073\u0073 \u006fr\u0020\u0065\u0071\u0075\u0061\u006c\u0020\u0074\u006f\u0020\u0074\u0068\u0065\u0020\u006e\u0075\u006d\u0062e\u0072\u0020\u006f\u0066\u0020\u0076\u0061\u006c\u0075\u0065\u0073");};return args [_eaab ];};

// NewEmptyExpr constructs a new empty expression.
func NewEmptyExpr ()Expression {return EmptyExpr {}};

// Char is an implementation of the Excel CHAR function that takes an integer in
// the range [0,255] and returns the corresponding ASCII character.
func Char (args []Result )Result {if len (args )!=1{return MakeErrorResult ("\u0043\u0048\u0041\u0052\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073 \u0061\u0020\u0073\u0069\u006e\u0067l\u0065\u0020\u006e\u0075\u006d\u0065\u0072\u0069\u0063\u0020\u0061\u0072\u0067u\u006d\u0065\u006e\u0074");};_cagcg :=args [0].AsNumber ();if _cagcg .Type !=ResultTypeNumber {return MakeErrorResult ("\u0043\u0048\u0041\u0052\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073 \u0061\u0020\u0073\u0069\u006e\u0067l\u0065\u0020\u006e\u0075\u006d\u0065\u0072\u0069\u0063\u0020\u0061\u0072\u0067u\u006d\u0065\u006e\u0074");};_cgfg :=int (_cagcg .ValueNumber );if _cgfg < 0||_cgfg > 255{return MakeErrorResult ("\u0043H\u0041\u0052 \u0072\u0065\u0071\u0075i\u0072\u0065\u0073 \u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0073 i\u006e\u0020\u0074h\u0065\u0020r\u0061\u006e\u0067\u0065\u0020\u005b0\u002c\u00325\u0035\u005d");};return MakeStringResult (_a .Sprintf ("\u0025\u0063",_cgfg ));};func _egg (_ffc string )(int ,int ,int ,bool ,Result ){_egd :="";_ace :=[]string {};for _ecdc ,_cbcc :=range _afe {_ace =_cbcc .FindStringSubmatch (_ffc );if len (_ace )> 1{_egd =_ecdc ;break ;};};if _egd ==""{return 0,0,0,false ,MakeErrorResultType (ErrorTypeValue ,_eba );};_gfgd :=false ;var _gfce ,_gdfc ,_bfg int ;var _dega error ;switch _egd {case "\u006d\u006d\u002f\u0064\u0064\u002f\u0079\u0079":_gdfc ,_dega =_d .Atoi (_ace [1]);if _dega !=nil {return 0,0,0,false ,MakeErrorResultType (ErrorTypeValue ,_eba );};_bfg ,_dega =_d .Atoi (_ace [3]);if _dega !=nil {return 0,0,0,false ,MakeErrorResultType (ErrorTypeValue ,_eba );};_gfce ,_dega =_d .Atoi (_ace [5]);if _dega !=nil {return 0,0,0,false ,MakeErrorResultType (ErrorTypeValue ,_eba );};if _gfce < 0||_gfce > 9999||(_gfce > 99&&_gfce < 1900){return 0,0,0,false ,MakeErrorResultType (ErrorTypeValue ,_eba );};_gfce =_edf (_gfce );_gfgd =_ace [8]=="";case "\u006dm\u0020\u0064\u0064\u002c\u0020\u0079y":_gdfc =_gaa [_ace [1]];_bfg ,_dega =_d .Atoi (_ace [14]);if _dega !=nil {return 0,0,0,false ,MakeErrorResultType (ErrorTypeValue ,_eba );};_gfce ,_dega =_d .Atoi (_ace [16]);if _dega !=nil {return 0,0,0,false ,MakeErrorResultType (ErrorTypeValue ,_eba );};if _gfce < 0||_gfce > 9999||(_gfce > 99&&_gfce < 1900){return 0,0,0,false ,MakeErrorResultType (ErrorTypeValue ,_eba );};_gfce =_edf (_gfce );_gfgd =_ace [19]=="";case "\u0079\u0079\u002d\u006d\u006d\u002d\u0064\u0064":_fac ,_cceg :=_d .Atoi (_ace [1]);if _cceg !=nil {return 0,0,0,false ,MakeErrorResultType (ErrorTypeValue ,_eba );};_ageg ,_cceg :=_d .Atoi (_ace [3]);if _cceg !=nil {return 0,0,0,false ,MakeErrorResultType (ErrorTypeValue ,_eba );};_cdg ,_cceg :=_d .Atoi (_ace [5]);if _cceg !=nil {return 0,0,0,false ,MakeErrorResultType (ErrorTypeValue ,_eba );};if _fac >=1900&&_fac < 10000{_gfce =_fac ;_gdfc =_ageg ;_bfg =_cdg ;}else if _fac > 0&&_fac < 13{_gdfc =_fac ;_bfg =_ageg ;_gfce =_cdg ;}else {return 0,0,0,false ,MakeErrorResultType (ErrorTypeValue ,_eba );};_gfgd =_ace [8]=="";case "y\u0079\u002d\u006d\u006d\u0053\u0074\u0072\u002d\u0064\u0064":_gfce ,_dega =_d .Atoi (_ace [16]);if _dega !=nil {return 0,0,0,false ,MakeErrorResultType (ErrorTypeValue ,_eba );};_gdfc =_gaa [_ace [3]];_bfg ,_dega =_d .Atoi (_ace [1]);if _dega !=nil {return 0,0,0,false ,MakeErrorResultType (ErrorTypeValue ,_eba );};_gfgd =_ace [19]=="";};if !_ede (_gfce ,_gdfc ,_bfg ){return 0,0,0,false ,MakeErrorResultType (ErrorTypeValue ,_eba );};return _gfce ,_gdfc ,_bfg ,_gfgd ,_ebega ;};func _ege (_afde ,_edcc ,_ddb ,_cgdc int )int {if !_agfb (_cgdc ){return _ddb ;};_badg :=_ddb ;_dedd :=_egdc (_afde ,_edcc );if _badg > 30||_ddb >=_dedd ||_badg >=_dedd {_badg =30;};return _badg ;};func _gegdg (_dbdaa ,_dadf ,_efaec Reference )string {return _a .Sprintf ("\u0025\u0073\u0021\u0025\u0073\u003a\u0025\u0073",_dbdaa .Value ,_dadf .Value ,_efaec .Value );};

// Xnpv implements the Excel XNPV function.
func Xnpv (args []Result )Result {if len (args )!=3{return MakeErrorResult ("\u0058\u004eP\u0056\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0074\u0068\u0072\u0065\u0065\u0020\u0061\u0072\u0067\u0075\u006den\u0074\u0073");};if args [0].Type !=ResultTypeNumber {return MakeErrorResult ("X\u004e\u0050\u0056\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0072\u0061\u0074\u0065\u0020t\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006d\u0062\u0065r \u0061\u0072\u0067u\u006de\u006e\u0074");};_daga :=args [0].ValueNumber ;if _daga <=0{return MakeErrorResultType (ErrorTypeNum ,"\u0058\u004e\u0050\u0056\u0020\u0072e\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0072\u0061\u0074\u0065\u0020\u0074o\u0020\u0062\u0065\u0020\u0070\u006f\u0073i\u0074\u0069\u0076\u0065");};_egfg ,_gbfda :=_ebfcde (args [1],args [2],"\u0058\u004e\u0050\u0056");if _gbfda .Type ==ResultTypeError {return _gbfda ;};_fdg :=_egfg ._fegg ;_cgeef :=_egfg ._gfd ;_bgbb :=0.0;_bcea :=_cgeef [0];for _cdcf ,_cefgf :=range _fdg {_bgbb +=_cefgf /_aca .Pow (1+_daga ,(_cgeef [_cdcf ]-_bcea )/365);};return MakeNumberResult (_bgbb );};var _fcd float64 =25569.0;func _cacd (_bfae ,_gffg ,_adbg ,_ddaf float64 ,_ece int )float64 {var _ecgg float64 ;if _bfae ==0{_ecgg =_ddaf +_adbg *_gffg ;}else {_ccec :=_aca .Pow (1+_bfae ,_gffg );if _ece ==1{_ecgg =_ddaf *_ccec +_adbg *(1+_bfae )*(_ccec -1)/_bfae ;}else {_ecgg =_ddaf *_ccec +_adbg *(_ccec -1)/_bfae ;};};return -_ecgg ;};const _fgbe =16;

// Result is the result of a formula or cell evaluation .
type Result struct{ValueNumber float64 ;ValueString string ;ValueList []Result ;ValueArray [][]Result ;IsBoolean bool ;ErrorMessage string ;Type ResultType ;Ref Reference ;};func _adcg (_cgbf ,_cgbaa Expression )(Expression ,Expression ,error ){_aefd ,_fabf :=_cgbf .(CellRef );if !_fabf {return nil ,nil ,_e .New (_a .Sprintf ("\u0049\u006e\u0063\u006frr\u0065\u0063\u0074\u0020\u0072\u0065\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0020%\u0073",_cgbf .String ()));};_gcbgd ,_fabf :=_cgbaa .(CellRef );if !_fabf {return nil ,nil ,_e .New (_a .Sprintf ("\u0049\u006e\u0063\u006frr\u0065\u0063\u0074\u0020\u0072\u0065\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0020%\u0073",_cgbaa .String ()));};_aaeag ,_babaf :=_de .ParseCellReference (_aefd ._acbc );if _babaf !=nil {return nil ,nil ,_babaf ;};_gfcdb ,_cffdf :=_de .ParseCellReference (_gcbgd ._acbc );if _cffdf !=nil {return nil ,nil ,_cffdf ;};_fgag :=false ;if _aaeag .RowIdx > _gfcdb .RowIdx {_fgag =true ;_aaeag .RowIdx ,_gfcdb .RowIdx =_gfcdb .RowIdx ,_aaeag .RowIdx ;};if _aaeag .ColumnIdx > _gfcdb .ColumnIdx {_fgag =true ;_aaeag .ColumnIdx ,_gfcdb .ColumnIdx =_gfcdb .ColumnIdx ,_aaeag .ColumnIdx ;_aaeag .Column ,_gfcdb .Column =_gfcdb .Column ,_aaeag .Column ;};if _fgag {return NewCellRef (_aaeag .String ()),NewCellRef (_gfcdb .String ()),nil ;};return _cgbf ,_cgbaa ,nil ;};const (_bcaf countMode =iota ;_eede ;_efeff ;);func _gfge (_cabcd ,_ddda ,_efef ,_fcbb ,_bdc float64 ,_dcbf int )Result {_agec ,_bgb :=_gacb (_cabcd ,_ddda ,_dcbf );if _bgb .Type ==ResultTypeError {return _bgb ;};_agff ,_ddgf :=_fba (_cabcd ,_ddda ,int (_bdc ),_dcbf );if _ddgf .Type ==ResultTypeError {return _ddgf ;};_gdc :=0.0;_cad :=0.0;_efef *=100/_bdc ;_fcbb /=_bdc ;_fcbb ++;_fbed :=_agec *_bdc -_agff ;for _febd :=1.0;_febd < _agff ;_febd ++{_cbe :=_febd +_fbed ;_afa :=_efef /_aca .Pow (_fcbb ,_cbe );_cad +=_afa ;_gdc +=_cbe *_afa ;};_beb :=(_efef +100)/_aca .Pow (_fcbb ,_agff +_fbed );_cad +=_beb ;_gdc +=(_agff +_fbed )*_beb ;_gdc /=_cad ;_gdc /=_bdc ;return MakeNumberResult (_gdc );};

// Reference returns a string reference value to a horizontal range with prefix.
func (_ffgc PrefixHorizontalRange )Reference (ctx Context ,ev Evaluator )Reference {_degg :=_ffgc ._aaaeb .Reference (ctx ,ev );return Reference {Type :ReferenceTypeHorizontalRange ,Value :_ffgc .horizontalRangeReference (_degg .Value )};};func (_bfacd *ivr )Sheet (name string )Context {return _bfacd };

// GetLabelPrefix returns an empty string for the invalid reference context.
func (_daeed *ivr )GetLabelPrefix (cellRef string )string {return ""};func _gbab (_afdc ,_eebee []float64 ,_bdda float64 )Result {_ffabd :=false ;_eecdd :=false ;for _ggfaf :=0;_ggfaf < len (_afdc );_ggfaf ++{if _afdc [_ggfaf ]> 0{_ffabd =true ;};if _afdc [_ggfaf ]< 0{_eecdd =true ;};};if !_ffabd ||!_eecdd {return MakeErrorResultType (ErrorTypeNum ,"");};_adgd :=_bdda ;_cabf :=1e-10;_cdff :=0;_cgeed :=50;_beba :=false ;for {_ggga :=_ddbg (_afdc ,_eebee ,_adgd );_dfbg :=_adgd -_ggga /_aaad (_afdc ,_eebee ,_adgd );_dddf :=_aca .Abs (_dfbg -_adgd );_adgd =_dfbg ;_cdff ++;if _dddf <=_cabf ||_aca .Abs (_ggga )<=_cabf {break ;};if _cdff > _cgeed {_beba =true ;break ;};};if _beba ||_aca .IsNaN (_adgd )||_aca .IsInf (_adgd ,0){return MakeErrorResultType (ErrorTypeNum ,"");};return MakeNumberResult (_adgd );};const _gcd ="\u0028\u0028\u005b0\u002d\u0039\u005d\u0029\u002b\u0029\u003a\u0028\u0028\u005b\u0030\u002d\u0039\u005d\u0029\u002b\u005c\u002e\u0028\u005b\u0030\u002d\u0039\u005d\u0029\u002b\u0029\u0028\u0020(\u0061\u006d\u007c\u0070\u006d\u0029\u0029\u003f";

// Error is called in the case of parsing error and saves an error to a plex.
func (_adbdg *plex )Error (s string ){_cc .Log .Debug ("\u0070a\u0072s\u0065\u0020\u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0073",s );_adbdg ._aea =s ;};

// Reference returns an invalid reference for EmptyExpr.
func (_dbg EmptyExpr )Reference (ctx Context ,ev Evaluator )Reference {return ReferenceInvalid };var _ecg =[]*_bd .Regexp {};

// String returns a string representation of a horizontal range with prefix.
func (_eafe PrefixHorizontalRange )String ()string {return _a .Sprintf ("\u0025\u0073\u0021\u0025\u0064\u003a\u0025\u0064",_eafe ._aaaeb .String (),_eafe ._bfcaf ,_eafe ._geec );};

// ISNUMBER is an implementation of the Excel ISNUMBER() function.
func IsNumber (args []Result )Result {if len (args )!=1{return MakeErrorResult ("\u0049\u0053NU\u004d\u0042\u0045R\u0028\u0029\u0020\u0061cce\u0070ts\u0020\u0061\u0020\u0073\u0069\u006e\u0067le\u0020\u0061\u0072\u0067\u0075\u006d\u0065n\u0074");};return MakeBoolResult (args [0].Type ==ResultTypeNumber );};

// Upper is an implementation of the Excel UPPER function that returns a upper
// case version of a string.
func Upper (args []Result )Result {if len (args )!=1{return MakeErrorResult ("\u0055\u0050\u0050\u0045\u0052\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065s\u0020\u0061\u0020\u0073\u0069\u006eg\u006c\u0065\u0020\u0073\u0074\u0072\u0069\u006e\u0067\u0020\u0061\u0072\u0067u\u006d\u0065\u006e\u0074");};_dcee :=args [0].AsString ();if _dcee .Type !=ResultTypeString {return MakeErrorResult ("\u0055\u0050\u0050\u0045\u0052\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065s\u0020\u0061\u0020\u0073\u0069\u006eg\u006c\u0065\u0020\u0073\u0074\u0072\u0069\u006e\u0067\u0020\u0061\u0072\u0067u\u006d\u0065\u006e\u0074");};return MakeStringResult (_bf .ToUpper (_dcee .ValueString ));};func (_fbcf *plex )Lex (lval *yySymType )int {_aegea =true ;_acbcf :=<-_fbcf ._ecceb ;if _acbcf !=nil {lval ._ffef =_acbcf ;return int (lval ._ffef ._eaacdb );};return 0;};func init (){_bee ();RegisterFunction ("\u0044\u0041\u0054\u0045",Date );RegisterFunction ("\u0044A\u0054\u0045\u0044\u0049\u0046",DateDif );RegisterFunction ("\u0044A\u0054\u0045\u0056\u0041\u004c\u0055E",DateValue );RegisterFunction ("\u0044\u0041\u0059",Day );RegisterFunction ("\u0044\u0041\u0059\u0053",Days );RegisterFunction ("\u005f\u0078\u006c\u0066\u006e\u002e\u0044\u0041\u0059\u0053",Days );RegisterFunction ("\u0045\u0044\u0041T\u0045",Edate );RegisterFunction ("\u0045O\u004d\u004f\u004e\u0054\u0048",Eomonth );RegisterFunction ("\u004d\u0049\u004e\u0055\u0054\u0045",Minute );RegisterFunction ("\u004d\u004f\u004eT\u0048",Month );RegisterFunction ("\u004e\u004f\u0057",Now );RegisterFunction ("\u0054\u0049\u004d\u0045",Time );RegisterFunction ("\u0054I\u004d\u0045\u0056\u0041\u004c\u0055E",TimeValue );RegisterFunction ("\u0054\u004f\u0044A\u0059",Today );RegisterFunctionComplex ("\u0059\u0045\u0041\u0052",Year );RegisterFunction ("\u0059\u0045\u0041\u0052\u0046\u0052\u0041\u0043",YearFrac );};

// CountIfs implements the COUNTIFS function.
func CountIfs (args []Result )Result {_gdaa :=_aaea (args ,false ,"\u0043\u004f\u0055\u004e\u0054\u0049\u0046\u0053");if _gdaa .Type !=ResultTypeEmpty {return _gdaa ;};_becbe :=_cdgb (args );return MakeNumberResult (float64 (len (_becbe )));};

// Reference returns a string reference value to a sheet.
func (_cabae SheetPrefixExpr )Reference (ctx Context ,ev Evaluator )Reference {return Reference {Type :ReferenceTypeSheet ,Value :_cabae ._dcae };};

// Mduration implements the Excel MDURATION function.
func Mduration (args []Result )Result {_abgg ,_baaf :=_aedg (args ,"\u004dD\u0055\u0052\u0041\u0054\u0049\u004fN");if _baaf .Type ==ResultTypeError {return _baaf ;};_bgddg :=_abgg ._cdbc ;_dbef :=_abgg ._fef ;_dbbe :=_abgg ._bgec ;_cffd :=_abgg ._cgeb ;_dedge :=_abgg ._fcgc ;_eefa :=_abgg ._dfcb ;_eaac :=_gfge (_bgddg ,_dbef ,_dbbe ,_cffd ,_dedge ,_eefa );if _eaac .Type ==ResultTypeError {return _eaac ;};_babg :=_eaac .ValueNumber /(1.0+_cffd /_dedge );return MakeNumberResult (_babg );};func _aabc (_dgcb string ,_fecce func (_agbd float64 )float64 )Function {return func (_beab []Result )Result {if len (_beab )!=1{return MakeErrorResult (_dgcb +"\u0020\u0072\u0065\u0071ui\u0072\u0065\u0073\u0020\u006f\u006e\u0065\u0020\u0061\u0072\u0067\u0075\u006d\u0065n\u0074");};_beefa :=_beab [0].AsNumber ();switch _beefa .Type {case ResultTypeNumber :_faege :=_fecce (_beefa .ValueNumber );if _aca .IsNaN (_faege ){return MakeErrorResult (_dgcb +"\u0020\u0072\u0065\u0074\u0075\u0072\u006e\u0065\u0064\u0020\u004e\u0061\u004e");};if _aca .IsInf (_faege ,0){return MakeErrorResult (_dgcb +"\u0020r\u0065t\u0075\u0072\u006e\u0065\u0064 \u0069\u006ef\u0069\u006e\u0069\u0074\u0079");};return MakeNumberResult (_faege );case ResultTypeList ,ResultTypeString :return MakeErrorResult (_dgcb +"\u0020\u0072\u0065\u0071u\u0069\u0072\u0065\u0073\u0020\u0061\u0020\u006e\u0075\u006de\u0072i\u0063\u0020\u0061\u0072\u0067\u0075\u006de\u006e\u0074");case ResultTypeError :return _beefa ;default:return MakeErrorResult (_a .Sprintf ("\u0075\u006e\u0068a\u006e\u0064\u006c\u0065d\u0020\u0025\u0073\u0028\u0029\u0020\u0061r\u0067\u0075\u006d\u0065\u006e\u0074\u0020\u0074\u0079\u0070\u0065\u0020\u0025\u0073",_dgcb ,_beefa .Type ));};};};

// Eval evaluates a horizontal range returning a list of results or an error.
func (_dgga HorizontalRange )Eval (ctx Context ,ev Evaluator )Result {_efcc :=_dgga .horizontalRangeReference ();if _dbce ,_cdeag :=ev .GetFromCache (_efcc );_cdeag {return _dbce ;};_dfbged ,_gbee :=_daeef (ctx ,_dgga ._dfga ,_dgga ._fgbbc );_gebf :=_dbcgg (ctx ,ev ,_dfbged ,_gbee );ev .SetCache (_efcc ,_gebf );return _gebf ;};

// Sln implements the Excel SLN function.
func Sln (args []Result )Result {if len (args )!=3{return MakeErrorResult ("\u0053\u004c\u004e\u0020r\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0074\u0068r\u0065e\u0020\u0061\u0072\u0067\u0075\u006d\u0065n\u0074\u0073");};if args [0].Type !=ResultTypeNumber {return MakeErrorResult ("\u0053\u004c\u004e\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020c\u006f\u0073\u0074\u0020\u0074\u006f \u0062\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0061\u0072\u0067u\u006d\u0065\u006e\u0074");};_aaac :=args [0].ValueNumber ;if args [1].Type !=ResultTypeNumber {return MakeErrorResult ("\u0053\u004c\u004e \u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0073\u0061\u006c\u0076\u0061\u0067\u0065\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072 \u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};_fbgc :=args [1].ValueNumber ;if args [2].Type !=ResultTypeNumber {return MakeErrorResult ("\u0053\u004c\u004e\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020l\u0069\u0066\u0065\u0020\u0074\u006f \u0062\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0061\u0072\u0067u\u006d\u0065\u006e\u0074");};_aeg :=args [2].ValueNumber ;if _aeg ==0{return MakeErrorResultType (ErrorTypeDivideByZero ,"\u0053\u004c\u004e\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u006c\u0069f\u0065 \u0074\u006f\u0020\u0062\u0065\u0020\u006e\u006f\u006e\u0020\u007a\u0065\u0072\u006f");};return MakeNumberResult ((_aaac -_fbgc )/_aeg );};

// Couppcd implements the Excel COUPPCD function.
func Couppcd (args []Result )Result {_gggg ,_bag :=_fcdg (args ,"\u0043O\u0055\u0050\u0050\u0043\u0044");if _bag .Type ==ResultTypeError {return _bag ;};_ccca :=_cgf (_gggg ._cgfd );_agab :=_cgf (_gggg ._fccg );_fccge :=_gggg ._eccb ;_eddg :=_gggg ._bgf ;_bbga :=_dda (_ccca ,_agab ,_fccge ,_eddg );_gde ,_fgdg ,_gggfb :=_bbga .Date ();return MakeNumberResult (_dbeg (_gde ,int (_fgdg ),_gggfb ));};func _aedg (_bacd []Result ,_becf string )(*durationArgs ,Result ){_cga :=len (_bacd );if _cga !=5&&_cga !=6{return nil ,MakeErrorResult (_becf +"\u0020\u0072\u0065q\u0075\u0069\u0072\u0065s\u0020\u0066\u0069\u0076\u0065\u0020\u006fr\u0020\u0073\u0069\u0078\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0073");};_begc ,_gcae ,_aag :=_dbda (_bacd [0],_bacd [1],_becf );if _aag .Type ==ResultTypeError {return nil ,_aag ;};_fgde :=_bacd [2];if _fgde .Type !=ResultTypeNumber {return nil ,MakeErrorResult (_becf +"\u0020\u0072eq\u0075\u0069\u0072e\u0073\u0020\u0063\u006fupo\u006e r\u0061\u0074\u0065\u0020\u006f\u0066\u0020ty\u0070\u0065\u0020\u006e\u0075\u006d\u0062e\u0072");};_dagg :=_fgde .ValueNumber ;if _dagg < 0{return nil ,MakeErrorResultType (ErrorTypeNum ,"\u0043\u006f\u0075po\u006e\u0020\u0072\u0061\u0074\u0065\u0020\u0073\u0068o\u0075l\u0064 \u006eo\u0074\u0020\u0062\u0065\u0020\u006e\u0065\u0067\u0061\u0074\u0069\u0076\u0065");};_bfbc :=_bacd [3];if _bfbc .Type !=ResultTypeNumber {return nil ,MakeErrorResult (_becf +" \u0072\u0065\u0071\u0075\u0069\u0072e\u0073\u0020\u0079\u0069\u0065\u006cd\u0020\u0072\u0061\u0074\u0065\u0020\u006ff\u0020\u0074\u0079\u0070\u0065\u0020\u006e\u0075\u006d\u0062e\u0072");};_edg :=_bfbc .ValueNumber ;if _edg < 0{return nil ,MakeErrorResultType (ErrorTypeNum ,"\u0059\u0069\u0065\u006c\u0064\u0020r\u0061\u0074\u0065\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u006e\u006ft\u0020\u0062\u0065\u0020\u006e\u0065\u0067a\u0074\u0069\u0076\u0065");};_fcba :=_bacd [4];if _fcba .Type !=ResultTypeNumber {return nil ,MakeErrorResult (_becf +"\u0020\u0072\u0065qu\u0069\u0072\u0065\u0073\u0020\u0066\u0072\u0065\u0071u\u0065n\u0063y\u0020o\u0066\u0020\u0074\u0079\u0070\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072");};_dce :=float64 (int (_fcba .ValueNumber ));if !_baeg (_dce ){return nil ,MakeErrorResultType (ErrorTypeNum ,"\u0049n\u0063\u006f\u0072\u0072e\u0063\u0074\u0020\u0066\u0072e\u0071u\u0065n\u0063\u0065\u0020\u0076\u0061\u006c\u0075e");};_bddgb :=0;if _cga ==6&&_bacd [5].Type !=ResultTypeEmpty {_gcc :=_bacd [5];if _gcc .Type !=ResultTypeNumber {return nil ,MakeErrorResult (_becf +"\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020b\u0061\u0073\u0069\u0073\u0020\u006f\u0066 \u0074\u0079\u0070\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072");};_bddgb =int (_gcc .ValueNumber );if !_facb (_bddgb ){return nil ,MakeErrorResultType (ErrorTypeNum ,"\u0049\u006e\u0063\u006f\u0072\u0072\u0065\u0063\u0074\u0020\u0062a\u0073\u0069\u0073\u0020\u0076\u0061\u006c\u0075\u0065\u0020f\u006f\u0072\u0020"+_becf );};};return &durationArgs {_begc ,_gcae ,_dagg ,_edg ,_dce ,_bddgb },_ebega ;};

// Reference returns an invalid reference for Bool.
func (_bge Bool )Reference (ctx Context ,ev Evaluator )Reference {return ReferenceInvalid };

// ISFORMULA is an implementation of the Excel ISFORMULA() function.
func IsFormula (ctx Context ,ev Evaluator ,args []Result )Result {if len (args )!=1{return MakeErrorResult ("\u0049\u0053F\u004f\u0052\u004d\u0055L\u0041\u0028)\u0020\u0061\u0063\u0063\u0065\u0070\u0074\u0073 \u0061\u0020\u0073\u0069\u006e\u0067\u006c\u0065\u0020\u0061\u0072\u0067u\u006d\u0065\u006e\u0074");};_eacge :=args [0].Ref ;if _eacge .Type !=ReferenceTypeCell {return MakeErrorResult ("I\u0053\u0046\u004f\u0052\u004d\u0055\u004c\u0041\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0074\u0068\u0065\u0020\u0066\u0069\u0072\u0073t\u0020a\u0072\u0067\u0075\u006de\u006e\u0074 \u0074\u006f\u0020\u0062\u0065\u0020\u006f\u0066\u0020\u0074\u0079\u0070\u0065\u0020\u0072\u0065\u0066\u0065\u0072\u0065\u006e\u0063\u0065");};return MakeBoolResult (ctx .HasFormula (_eacge .Value ));};

// RoundUp is an implementation of the Excel ROUNDUP function that rounds a number
// up to a specified number of digits.
func RoundUp (args []Result )Result {return _dafdc (args ,_dcfec )};var _efaed =[...]int {0};

// Oddlyield implements the Excel ODDLYIELD function.
func Oddlyield (args []Result )Result {if len (args )!=7&&len (args )!=8{return MakeErrorResult ("\u004f\u0044\u0044\u004c\u0059\u0049\u0045L\u0044\u0020\u0072e\u0071\u0075\u0069\u0072e\u0073\u0020\u0073\u0065\u0076\u0065\u006e\u0020\u006f\u0072\u0020\u0065\u0069\u0067\u0068\u0074\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0073");};_gdgfg ,_adbd ,_dadg :=_dbda (args [0],args [1],"\u004fD\u0044\u004c\u0059\u0049\u0045\u004cD");if _dadg .Type ==ResultTypeError {return _dadg ;};_bbaa ,_dadg :=_ged (args [2],"\u0069\u0073\u0073\u0075\u0065\u0020\u0064\u0061\u0074\u0065","\u004fD\u0044\u004c\u0050\u0052\u0049\u0043E");if _dadg .Type ==ResultTypeError {return _dadg ;};if _bbaa >=_gdgfg {return MakeErrorResultType (ErrorTypeNum ,"\u004c\u0061\u0073\u0074\u0020i\u006e\u0074\u0065\u0072\u0065\u0073\u0074\u0020\u0064\u0061\u0074\u0065\u0020s\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0062\u0065\u0066\u006f\u0072\u0065\u0020\u0073\u0065\u0074\u0074\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u0064\u0061\u0074e");};if args [3].Type !=ResultTypeNumber {return MakeErrorResult ("\u004f\u0044\u0044\u004c\u0059\u0049\u0045\u004c\u0044\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0072\u0061\u0074\u0065\u0020o\u0066\u0020\u0074\u0079\u0070e\u0020\u006eu\u006d\u0062\u0065\u0072");};_fbaa :=args [3].ValueNumber ;if _fbaa < 0{return MakeErrorResultType (ErrorTypeNum ,"R\u0061\u0074\u0065\u0020\u0073\u0068o\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u006e\u006fn\u0020\u006e\u0065g\u0061t\u0069\u0076\u0065");};if args [4].Type !=ResultTypeNumber {return MakeErrorResult ("O\u0044\u0044\u004c\u0059\u0049\u0045\u004c\u0044\u0020r\u0065\u0071\u0075\u0069\u0072\u0065\u0073 p\u0072\u0065\u0073\u0065n\u0074\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u006ff \u0074\u0079p\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072");};_cfc :=args [4].ValueNumber ;if _cfc <=0{return MakeErrorResultType (ErrorTypeNum ,"\u0050\u0072\u0065\u0073\u0065\u006e\u0074\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u0073h\u006fu\u006c\u0064\u0020\u0062\u0065\u0020\u0070\u006f\u0073\u0069\u0074\u0069\u0076\u0065");};if args [5].Type !=ResultTypeNumber {return MakeErrorResult ("\u004fD\u0044\u004cY\u0049\u0045\u004c\u0044 \u0072\u0065\u0071u\u0069\u0072\u0065\u0073\u0020\u0072\u0065\u0064\u0065mp\u0074\u0069\u006fn\u0020\u006ff\u0020\u0074\u0079\u0070\u0065\u0020n\u0075\u006db\u0065\u0072");};_eacgg :=args [5].ValueNumber ;if _eacgg < 0{return MakeErrorResultType (ErrorTypeNum ,"\u0059\u0069\u0065\u006cd\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065 \u006eo\u006e\u0020\u006e\u0065\u0067\u0061\u0074i\u0076\u0065");};if args [6].Type !=ResultTypeNumber {return MakeErrorResult ("\u004f\u0044\u0044\u004c\u0059\u0049\u0045L\u0044\u0020\u0072e\u0071\u0075\u0069\u0072e\u0073\u0020\u0066\u0072\u0065\u0071\u0075\u0065\u006e\u0063\u0079\u0020\u006f\u0066\u0020\u0074\u0079\u0070\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072");};_gbed :=float64 (int (args [6].ValueNumber ));if !_baeg (_gbed ){return MakeErrorResultType (ErrorTypeNum ,"\u0049n\u0063\u006f\u0072\u0072e\u0063\u0074\u0020\u0066\u0072e\u0071u\u0065n\u0063\u0065\u0020\u0076\u0061\u006c\u0075e");};_edcf :=0;if len (args )==8&&args [7].Type !=ResultTypeEmpty {if args [7].Type !=ResultTypeNumber {return MakeErrorResult ("\u004f\u0044\u0044\u004c\u0059\u0049\u0045\u004c\u0044\u0020\u0072\u0065\u0071u\u0069\u0072\u0065\u0073\u0020\u0062a\u0073\u0069\u0073\u0020\u006f\u0066\u0020\u0074\u0079\u0070\u0065\u0020\u006eu\u006d\u0062\u0065\u0072");};_edcf =int (args [7].ValueNumber );if !_facb (_edcf ){return MakeErrorResultType (ErrorTypeNum ,"I\u006e\u0063\u006f\u0072\u0072\u0065c\u0074\u0020\u0062\u0061\u0073\u0069s\u0020\u0076\u0061\u006c\u0075\u0065\u0020f\u006f\u0072\u0020\u004f\u0044\u0044\u004c\u0059\u0049\u0045L\u0044");};};_cgcaeb ,_dadg :=_gacb (_bbaa ,_adbd ,_edcf );if _dadg .Type ==ResultTypeError {return _dadg ;};_cgcaeb *=_gbed ;_fbbe ,_dadg :=_gacb (_gdgfg ,_adbd ,_edcf );if _dadg .Type ==ResultTypeError {return _dadg ;};_fbbe *=_gbed ;_agda ,_dadg :=_gacb (_bbaa ,_gdgfg ,_edcf );if _dadg .Type ==ResultTypeError {return _dadg ;};_agda *=_gbed ;_ead :=_eacgg +_cgcaeb *100*_fbaa /_gbed ;_ead /=_cfc +_agda *100*_fbaa /_gbed ;_ead --;_ead *=_gbed /_fbbe ;return MakeNumberResult (_ead );};

// Degrees is an implementation of the Excel function DEGREES() that converts
// radians to degrees.
func Degrees (args []Result )Result {if len (args )!=1{return MakeErrorResult ("\u0044\u0045\u0047R\u0045\u0045\u0053\u0028)\u0020\u0072\u0065\u0071\u0075\u0069\u0072e\u0073\u0020\u006f\u006e\u0065\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};_edec :=args [0].AsNumber ();if _edec .Type !=ResultTypeNumber {return MakeErrorResult ("\u0044\u0045\u0047RE\u0045\u0053\u0028\u0029\u0020\u0072\u0065\u0071\u0075i\u0072e\u0073 \u006eu\u006d\u0062\u0065\u0072\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};return MakeNumberResult (180.0/_aca .Pi *_edec .ValueNumber );};

// Parse parses a string to get an Expression.
func ParseString (s string )Expression {if s ==""{return NewEmptyExpr ();};return Parse (_bf .NewReader (s ));};type Expression interface{Eval (_dcg Context ,_afc Evaluator )Result ;Reference (_adb Context ,_acd Evaluator )Reference ;String ()string ;Update (_gdgf *_fe .UpdateQuery )Expression ;};var _afe =map[string ]*_bd .Regexp {};

// Replace is an implementation of the Excel REPLACE().
func Replace (args []Result )Result {_bcbdc ,_gfef :=_cgcb ("\u0052E\u0050\u004c\u0041\u0043\u0045",args );if _gfef .Type !=ResultTypeEmpty {return _gfef ;};_dbfb :=_bcbdc ._ebagf ;_bggd :=_bcbdc ._fdaaa ;_cgcg :=_bcbdc ._ddfb ;_gcca :=_bcbdc ._fdgb ;_fbba :=len (_dbfb );if _bggd > _fbba {_bggd =_fbba ;};_bbdaa :=_bggd +_cgcg ;if _bbdaa > _fbba {_bbdaa =_fbba ;};_bfaac :=_dbfb [0:_bggd ]+_gcca +_dbfb [_bbdaa :];return MakeStringResult (_bfaac );};

// NewSheetPrefixExpr constructs a new prefix expression.
func NewSheetPrefixExpr (s string )Expression {return &SheetPrefixExpr {_dcae :s }};const _acaee =57362;

// Evaluator is the interface for a formula evaluator.  This is needed so we can
// pass it to the spreadsheet to let it evaluate formula cells before returning
// the results.
// NOTE: in order to implement Evaluator without cache embed noCache in it.
type Evaluator interface{Eval (_bcb Context ,formula string )Result ;SetCache (_cgg string ,_dfb Result );GetFromCache (_bae string )(Result ,bool );LastEvalIsRef ()bool ;};func _cgf (_geg float64 )_ad .Time {_eacb :=int64 ((_geg -_fcd )*_dcbc );return _ad .Unix (0,_eacb ).UTC ();};func _degbc (){_bdbb =_bd .MustCompile ("\u005e\u0030\u002b\u0024");_cagfe =_bd .MustCompile ("\u005e\u0028\u0028\u0023|0\u0029\u002b\u002c\u0029\u002b\u0028\u0023\u007c\u0030\u0029\u002b\u0028\u003b\u007c$\u0029");_gecf =_bd .MustCompile ("\u005e\u0028\u0023\u007c\u0030\u007c\u002c\u0029\u002a\u005f\u005c\u0029\u003b");_cbea =_bd .MustCompile ("\u005e\u0030\u002b\u005c\u002e\u0028\u0030\u002b\u0029\u0024");_dgfge =_bd .MustCompile ("\u005e\u0028\u0028\u0023\u007c\u0030\u0029\u002b\u002c\u0029+\u0028\u0023\u007c\u0030\u0029\u002b\u005c.\u0028\u0030\u002b\u0029\u002e\u002a\u0028\u003b\u007c\u0024\u0029");_egdgg =_bd .MustCompile ("^\u0028\u005f\u007c\u002d\u007c\u0020)\u002b\u005c\u002a\u0020\u0023\u002b\u002c\u0023\u002b0\u005c\u002e\u00280\u002b)\u002e\u002a\u003b");_adeb =_bd .MustCompile ("\u005e\u0028\u0028\u0023\u007c\u0030)\u002b\u002c\u0029\u002b\u0028\u0023\u007c\u0030\u0029\u002b\u005c\u002e\u0028(\u0023\u007c\u0030\u0029\u002b\u0029\u005f\\\u0029\u002e\u002a\u003b");_ddgd =_bd .MustCompile ("\u005e\u0028\u0023\u007c0)\u002b\u005c\u002e\u0028\u0028\u0023\u007c\u0030\u0029\u002b\u0029\u0025\u0024");_bdba =_bd .MustCompile ("\u005c\u005b\u005c$\u005c\u0024\u002d\u002e+\u005c\u005d\u0028\u005c\u002a\u0020\u0029?\u0028\u0023\u007c\u0030\u0029\u002b\u002c\u0028\u0023\u007c\u0030\u0029\u002b\u003b");_beac =_bd .MustCompile ("\u005c[\u005c\u0024\\\u0024\u002d\u002e+\u005c\u005d\u0028\u005c\u002a\u0020\u0029?\u0028\u0023\u007c\u0030\u0029\u002b,\u0028\u0023\u007c\u0030\u0029\u002b\u005c\u002e\u0028\u0028\u0023|\u0030\u007c\u002d\u0029\u002b\u0029\u002e\u002a\u003b");_eaed =_bd .MustCompile ("\u005e(\u0028\u0023|\u0030\u0029\u002b,\u0029\u002b\u0028\u0023\u007c\u0030\u0029+\u0028\u005c\u002e\u0028\u0028\u0023|\u0030\u007c\u002d\u0029\u002b\u0029\u0029\u003f\u002e\u002b\u005c[\u005c\u0024\u002e\u002b\u005c\u005d\u002e\u002a\u003b");_gecg =_bd .MustCompile ("\u005e\u004d\u002b(\u002f\u007c\u0020\u007c\u002c\u007c\u0022\u007c"+_afcbe +_afcbe +"\u0029\u002b\u0044\u002b\u0028\u002f\u007c\u0020\u007c\u002c\u007c\u0022\u007c"+_afcbe +_afcbe +"\u0029\u002b\u0059+\u0024");_bcgfa =_bd .MustCompile ("\u005e\u0044\u002b\u0028\u002f\u007c\u0020\u007c\u005c\u002e\u007c\u0022\u007c"+_afcbe +_afcbe +"\u0029\u002b\u004d\u002b\u0028\u002f\u007c\u0020\u007c\\\u002e\u007c\u0022\u007c"+_afcbe +_afcbe +"\u0029\u002b\u0059+\u0024");_cfdb =_bd .MustCompile ("\u005e\u0028\u0023|\u0030\u0029\u002b\u005c.\u0028\u0028\u0023\u007c\u0030\u0029\u002a)\u0045\u005c\u002b\u0028\u0023\u007c\u0030\u0029\u002b\u0028\u003b\u007c\u0024\u0029");_ebed =_bd .MustCompile ("\u005e.\u002a\u005f\u005c\u0029\u002e\u002a;");};const _gdbg =57368;const _cee ="\u0028\u0020\u0028"+_bda +"\u007c"+_efc +"\u007c"+_gcd +"\u007c"+_bcbg +"\u0029\u0029\u003f\u0024";

// Coupdaybs implements the Excel COUPDAYBS function.
func Coupdaybs (args []Result )Result {_cag ,_gab :=_fcdg (args ,"\u0043O\u0055\u0050\u0044\u0041\u0059\u0042S");if _gab .Type ==ResultTypeError {return _gab ;};return MakeNumberResult (_feba (_cag ._cgfd ,_cag ._fccg ,_cag ._eccb ,_cag ._bgf ));};

// SumSquares is an implementation of the Excel SUMSQ() function.
func SumSquares (args []Result )Result {_affcc :=MakeNumberResult (0);for _ ,_ecbg :=range args {_ecbg =_ecbg .AsNumber ();switch _ecbg .Type {case ResultTypeNumber :_affcc .ValueNumber +=_ecbg .ValueNumber *_ecbg .ValueNumber ;case ResultTypeList ,ResultTypeArray :_fgggg :=SumSquares (_ecbg .ListValues ());if _fgggg .Type !=ResultTypeNumber {return _fgggg ;};_affcc .ValueNumber +=_fgggg .ValueNumber ;case ResultTypeString :case ResultTypeError :return _ecbg ;case ResultTypeEmpty :default:return MakeErrorResult (_a .Sprintf ("\u0075\u006e\u0068\u0061\u006e\u0064\u006c\u0065\u0064\u0020\u0053\u0055\u004dS\u0051\u0055\u0041\u0052\u0045\u0053(\u0029\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0020\u0074\u0079p\u0065\u0020\u0025\u0073",_ecbg .Type ));};};return _affcc ;};const _bggg =57374;var _dgca =[...]int {0,0,71,70,69,4,67,66,53,51,50,49,48,47,46,45,44,2};type countMode byte ;

// ISTEXT is an implementation of the Excel ISTEXT() function.
func IsText (args []Result )Result {if len (args )!=1{return MakeErrorResult ("\u0049\u0053\u0054EX\u0054\u0028\u0029\u0020\u0061\u0063\u0063\u0065\u0070t\u0073 \u0061 \u0073i\u006e\u0067\u006c\u0065\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};return MakeBoolResult (args [0].Type ==ResultTypeString );};

// IfError is an implementation of the Excel IFERROR() function. It takes two arguments.
func IfError (args []Result )Result {if len (args )!=2{return MakeErrorResult ("\u0049\u0046\u0045\u0052\u0052\u004f\u0052\u0020\u0072\u0065q\u0075\u0069\u0072\u0065\u0073\u0020\u0074w\u006f\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0073");};if args [0].Type !=ResultTypeError {if args [0].Type ==ResultTypeEmpty {return MakeNumberResult (0);};return args [0];};return args [1];};var _ecacg =[]ri {{1000,"\u004d"},{999,"\u0049\u004d"},{995,"\u0056\u004d"},{990,"\u0058\u004d"},{950,"\u004c\u004d"},{900,"\u0043\u004d"},{500,"\u0044"},{499,"\u0049\u0044"},{495,"\u0056\u0044"},{490,"\u0058\u0044"},{450,"\u004c\u0044"},{400,"\u0043\u0044"},{100,"\u0043"},{99,"\u0049\u0043"},{90,"\u0058\u0043"},{50,"\u004c"},{45,"\u0056\u004c"},{40,"\u0058\u004c"},{10,"\u0058"},{9,"\u0049\u0058"},{5,"\u0056"},{4,"\u0049\u0056"},{1,"\u0049"}};func _ebfc (_dabd ,_fbgb int )int {switch _fbgb {case 1:if _cgec (_dabd ){return 366;}else {return 365;};case 3:return 365;default:return 360;};};

// HLookup implements the HLOOKUP function that returns a matching value from a
// row in an array.
func HLookup (args []Result )Result {if len (args )< 3{return MakeErrorResult ("\u0048\u004c\u004f\u004f\u004bU\u0050\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0061\u0074 \u006c\u0065\u0061\u0073\u0074\u0020\u0074\u0068\u0072\u0065\u0065\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0073");};if len (args )> 4{return MakeErrorResult ("\u0048\u004c\u004f\u004f\u004b\u0055\u0050\u0020\u0072\u0065\u0071\u0075\u0069r\u0065\u0073\u0020\u0061\u0074\u0020m\u006f\u0073\u0074\u0020\u0066\u006f\u0075\u0072\u0020\u0061\u0072\u0067\u0075m\u0065\u006e\u0074\u0073");};_cdca :=args [0];_fagce :=args [1];if _fagce .Type !=ResultTypeArray {return MakeErrorResult ("\u0048\u004cO\u004f\u004b\u0055\u0050\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0073\u0065\u0063\u006f\u006e\u0064\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0020\u006f\u0066\u0020\u0074\u0079\u0070\u0065\u0020\u0061\u0072\u0072\u0061\u0079");};_eace :=args [2].AsNumber ();if _eace .Type !=ResultTypeNumber {return MakeErrorResult ("\u0048\u004cO\u004f\u004b\u0055\u0050 \u0072\u0065q\u0075\u0069\u0072\u0065\u0073\u0020\u006e\u0075m\u0065\u0072\u0069\u0063\u0020\u0072\u006f\u0077\u0020\u0061\u0072\u0067u\u006d\u0065\u006e\u0074");};_cdce :=false ;if len (args )==4{_eaagd :=args [3].AsNumber ();if _eaagd .Type !=ResultTypeNumber {return MakeErrorResult ("\u0048\u004c\u004f\u004f\u004b\u0055\u0050\u0020\u0072\u0065\u0071\u0075\u0069r\u0065\u0073\u0020\u006e\u0075\u006de\u0072\u0069\u0063\u0020\u006d\u0061\u0074\u0063\u0068\u0020\u0061\u0072\u0067u\u006d\u0065\u006e\u0074");};if _eaagd .ValueNumber ==0{_cdce =true ;};};_gbece :=-1;_fecbc :=false ;if len (_fagce .ValueArray )==0{return MakeErrorResult ("\u0048\u004c\u004f\u004f\u004b\u0055\u0050\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065s\u0020n\u006f\u006e\u002d\u0065\u006d\u0070\u0074\u0079\u0020\u0061\u0072\u0072\u0061\u0079");};_ggbc :=_fagce .ValueArray [0];_eacaf :for _acaa ,_ecef :=range _ggbc {switch _cacc (_ecef ,_cdca ,false ,_cdce ){case _bgaeg :_gbece =_acaa ;case _ageeb :_gbece =_acaa ;_fecbc =true ;break _eacaf ;};};if _gbece ==-1{return MakeErrorResultType (ErrorTypeNA ,"\u0048\u004c\u004fOK\u0055\u0050\u0020\u006e\u006f\u0020\u0072\u0065\u0073\u0075\u006c\u0074\u0020\u0066\u006f\u0075\u006e\u0064");};_eeec :=int (_eace .ValueNumber )-1;if _eeec < 0||_eeec > len (_fagce .ValueArray ){return MakeErrorResult ("\u0048L\u004f\u004f\u004b\u0055P\u0020\u0068\u0061\u0064\u0020i\u006ev\u0061l\u0069\u0064\u0020\u0069\u006e\u0064\u0065x");};_ggbc =_fagce .ValueArray [_eeec ];if _gbece < 0||_gbece >=len (_ggbc ){return MakeErrorResult ("\u0056\u004c\u004f\u004f\u004b\u0055\u0050\u0020\u0068\u0061\u0073\u0020\u0069\u006e\u0076a\u006ci\u0064\u0020\u0063\u006f\u006c\u0075\u006d\u006e\u0020\u0069\u006e\u0064\u0065\u0078");};if _fecbc ||!_cdce {return _ggbc [_gbece ];};return MakeErrorResultType (ErrorTypeNA ,"\u0056\u004c\u004fOK\u0055\u0050\u0020\u006e\u006f\u0020\u0072\u0065\u0073\u0075\u006c\u0074\u0020\u0066\u006f\u0075\u006e\u0064");};

// Fvschedule implements the Excel FVSCHEDULE function.
func Fvschedule (args []Result )Result {if len (args )!=2{return MakeErrorResult ("\u0046\u0056\u0053\u0043\u0048\u0045D\u0055\u004c\u0045\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020t\u0077\u006f\u0020\u0061\u0072\u0067\u0075m\u0065\u006e\u0074\u0073");};if args [0].Type !=ResultTypeNumber {return MakeErrorResult ("\u0046\u0056\u0053\u0043\u0048E\u0044\u0055\u004c\u0045\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073 \u0070\u0072\u0069\u006e\u0063\u0069\u0070\u0061\u006c\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006et");};_gbffa :=args [0].ValueNumber ;switch args [1].Type {case ResultTypeNumber :return MakeNumberResult (_gbffa *(args [1].ValueNumber +1));case ResultTypeList ,ResultTypeArray :_fbfc :=_gbddgb (args [1]);for _ ,_cff :=range _fbfc {for _ ,_fege :=range _cff {if _fege .Type !=ResultTypeNumber ||_fege .IsBoolean {return MakeErrorResult ("\u0046\u0056\u0053\u0043\u0048\u0045\u0044\u0055\u004c\u0045\u0020\u0072\u0065q\u0075\u0069\u0072\u0065\u0073\u0020r\u0061\u0074\u0065\u0073\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u006e\u0075m\u0062\u0065\u0072\u0073");};_gbffa *=1.0+_fege .ValueNumber ;};};return MakeNumberResult (_gbffa );default:return MakeErrorResult ("\u0046\u0056\u0053\u0043\u0048\u0045\u0044\u0055\u004c\u0045\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020s\u0063\u0068\u0065\u0064\u0075\u006c\u0065\u0020\u0074o\u0020\u0062\u0065\u0020\u006f\u0066\u0020\u006e\u0075\u006d\u0062\u0065\u0072 \u006f\u0072\u0020\u0061\u0072\u0072a\u0079\u0020\u0074y\u0070\u0065");};};

// Mod is an implementation of the Excel MOD function which returns the
// remainder after division. It requires two numeric argumnts.
func Mod (args []Result )Result {if len (args )!=2{return MakeErrorResult ("\u004d\u004fD(\u0029\u0020\u0072e\u0071\u0075\u0069\u0072es \u0074wo\u0020\u006e\u0075\u006d\u0065\u0072\u0069c \u0061\u0072\u0067\u0075\u006d\u0065\u006et\u0073");};_dfgc :=args [0].AsNumber ();_fcee :=args [1].AsNumber ();if _dfgc .Type !=ResultTypeNumber ||_fcee .Type !=ResultTypeNumber {return MakeErrorResult ("\u004d\u004fD(\u0029\u0020\u0072e\u0071\u0075\u0069\u0072es \u0074wo\u0020\u006e\u0075\u006d\u0065\u0072\u0069c \u0061\u0072\u0067\u0075\u006d\u0065\u006et\u0073");};if _fcee .ValueNumber ==0{return MakeErrorResultType (ErrorTypeDivideByZero ,"M\u004fD\u0028\u0029\u0020\u0064\u0069\u0076\u0069\u0064e\u0020\u0062\u0079\u0020ze\u0072\u006f");};_dgaa ,_abgc :=_aca .Modf (_dfgc .ValueNumber /_fcee .ValueNumber );if _abgc < 0{_dgaa --;};return MakeNumberResult (_dfgc .ValueNumber -_fcee .ValueNumber *_dgaa );};

// SeriesSum implements the Excel SERIESSUM function.
func SeriesSum (args []Result )Result {if len (args )!=4{return MakeErrorResult ("\u0053\u0045\u0052\u0049\u0045\u0053\u0053\u0055\u004d\u0028\u0029\u0020\u0072\u0065\u0071u\u0069r\u0065\u0073\u0020\u0034\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0073");};_dgede :=args [0].AsNumber ();_bfef :=args [1].AsNumber ();_bdeeb :=args [2].AsNumber ();_dbgc :=args [3].ListValues ();if _dgede .Type !=ResultTypeNumber ||_bfef .Type !=ResultTypeNumber ||_bdeeb .Type !=ResultTypeNumber {return MakeErrorResult ("\u0053\u0045\u0052\u0049\u0045\u0053S\u0055\u004d\u0028)\u0020\u0072\u0065q\u0075\u0069\u0072\u0065\u0073\u0020\u0066\u0069\u0072\u0073t\u0020\u0074\u0068\u0072\u0065e \u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0073\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006d\u0065\u0072\u0069\u0063");};_gefda :=float64 (0);for _begd ,_dcdfb :=range _dbgc {_gefda +=_dcdfb .ValueNumber *_aca .Pow (_dgede .ValueNumber ,_bfef .ValueNumber +float64 (_begd )*_bdeeb .ValueNumber );};return MakeNumberResult (_gefda );};func (_gced PrefixHorizontalRange )horizontalRangeReference (_bgbe string )string {return _a .Sprintf ("\u0025\u0073\u0021\u0025\u0064\u003a\u0025\u0064",_bgbe ,_gced ._bfcaf ,_gced ._geec );};

// Reference returns an invalid reference for Error.
func (_dgb Error )Reference (ctx Context ,ev Evaluator )Reference {return ReferenceInvalid };func _effe (_fbabe []Result ,_gdbc []string ,_agccc bool )[]string {for _ ,_cdbcd :=range _fbabe {switch _cdbcd .Type {case ResultTypeEmpty :if !_agccc {_gdbc =append (_gdbc ,"");};case ResultTypeString :if _cdbcd .ValueString !=""||!_agccc {_gdbc =append (_gdbc ,_cdbcd .ValueString );};case ResultTypeNumber :_gdbc =append (_gdbc ,_cdbcd .Value ());case ResultTypeList :_gdbc =_bcbc (_gdbc ,_effe (_cdbcd .ValueList ,[]string {},_agccc ));case ResultTypeArray :for _ ,_cdgd :=range _cdbcd .ValueArray {_gdbc =_bcbc (_gdbc ,_effe (_cdgd ,[]string {},_agccc ));};};};return _gdbc ;};

// T is an implementation of the Excel T function that returns whether the
// argument is text.
func T (args []Result )Result {if len (args )!=1{return MakeErrorResult ("T\u0020\u0072\u0065\u0071\u0075\u0069r\u0065\u0073\u0020\u0061\u0020\u0073i\u006e\u0067\u006c\u0065\u0020\u0073\u0074r\u0069\u006e\u0067\u0020\u0061\u0072\u0067\u0075\u006d\u0065n\u0074");};_fgeeb :=args [0];if _fgeeb .Type ==ResultTypeError ||_fgeeb .Type ==ResultTypeString {return _fgeeb ;};return _ebega ;};type Reference struct{Type ReferenceType ;Value string ;};const _eba ="\u0049\u006e\u0063\u006f\u0072\u0072\u0065\u0063\u0074\u0020\u0061\u0072\u0067\u0075\u006de\u006et\u0020\u0066\u006f\u0072\u0020\u0044\u0041\u0054\u0045\u0056\u0041\u004c\u0055\u0045";func NewLexer ()*Lexer {return &Lexer {_ggdfc :make (chan *node )}};

// Min is an implementation of the Excel MIN() function.
func Min (args []Result )Result {return _dfgga (args ,false )};const (ErrorTypeValue ErrorType =iota ;ErrorTypeNull ;ErrorTypeRef ;ErrorTypeName ;ErrorTypeNum ;ErrorTypeSpill ;ErrorTypeNA ;ErrorTypeDivideByZero ;);type criteriaParsed struct{_ddefc bool ;_geab float64 ;_daafa string ;_gggb *criteriaRegex ;};

// Day is an implementation of the Excel DAY() function.
func Day (args []Result )Result {if len (args )!=1{return MakeErrorResult ("\u0044A\u0059\u0020\u0072\u0065q\u0075\u0069\u0072\u0065\u0073 \u006fn\u0065 \u0061\u0072\u0067\u0075\u006d\u0065\u006et");};_bcd :=args [0];switch _bcd .Type {case ResultTypeEmpty :return MakeNumberResult (0);case ResultTypeNumber :_dcb :=_cgf (_bcd .ValueNumber );return MakeNumberResult (float64 (_dcb .Day ()));case ResultTypeString :_fcdc :=_bf .ToLower (_bcd .ValueString );if !_cce (_fcdc ){_ ,_ ,_ ,_ ,_fggb ,_bff :=_fgfe (_fcdc );if _bff .Type ==ResultTypeError {_bff .ErrorMessage ="I\u006e\u0063\u006f\u0072\u0072\u0065c\u0074\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006et\u0073\u0020\u0066o\u0072 \u0044\u0041\u0059";return _bff ;};if _fggb {return MakeNumberResult (0);};};_ ,_ ,_ade ,_ ,_aga :=_egg (_fcdc );if _aga .Type ==ResultTypeError {return _aga ;};return MakeNumberResult (float64 (_ade ));default:return MakeErrorResult ("\u0049\u006e\u0063\u006f\u0072\u0072\u0065\u0063\u0074\u0020\u0061r\u0067\u0075\u006d\u0065\u006e\u0074\u0020\u0066\u006f\u0072 \u0044\u0041\u0059");};};var _fdd =[]*_bd .Regexp {};type yyLexer interface{Lex (_feae *yySymType )int ;Error (_dbee string );};

// CellRef is a reference to a single cell
type CellRef struct{_acbc string };

// Pduration implements the Excel PDURATION function.
func Pduration (args []Result )Result {if len (args )!=3{return MakeErrorResult ("\u0050\u0044\u0055RA\u0054\u0049\u004f\u004e\u0020\u0072\u0065\u0071\u0075i\u0072e\u0073 \u0074h\u0072\u0065\u0065\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0073");};if args [0].Type !=ResultTypeNumber {return MakeErrorResult ("\u0050D\u0055\u0052A\u0054\u0049\u004fN\u0020\u0072\u0065\u0071\u0075\u0069\u0072e\u0073\u0020\u0072\u0061\u0074\u0065 \u0074\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006d\u0062\u0065r\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};_abad :=args [0].ValueNumber ;if _abad <=0{return MakeErrorResultType (ErrorTypeNum ,"\u0050\u0044\u0055\u0052\u0041\u0054\u0049\u004f\u004e\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0072\u0061\u0074\u0065\u0020t\u006f\u0020\u0062\u0065\u0020p\u006f\u0073i\u0074\u0069\u0076\u0065");};if args [1].Type !=ResultTypeNumber {return MakeErrorResult ("\u0050\u0044\u0055\u0052\u0041\u0054\u0049\u004f\u004e\u0020\u0072\u0065\u0071\u0075\u0069r\u0065\u0073\u0020\u0063\u0075\u0072\u0072\u0065\u006e\u0074\u0020\u0076\u0061l\u0075\u0065\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006dbe\u0072\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};_bfdg :=args [1].ValueNumber ;if _bfdg <=0{return MakeErrorResultType (ErrorTypeNum ,"P\u0044\u0055\u0052\u0041\u0054\u0049\u004f\u004e\u0020r\u0065\u0071\u0075\u0069\u0072\u0065\u0073 c\u0075\u0072\u0072\u0065n\u0074\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u0074o \u0062\u0065 \u0070\u006f\u0073\u0069\u0074\u0069\u0076\u0065");};if args [2].Type !=ResultTypeNumber {return MakeErrorResult ("\u0050\u0044\u0055\u0052\u0041\u0054I\u004f\u004e\u0020r\u0065\u0071\u0075i\u0072\u0065\u0073\u0020\u0073\u0070\u0065\u0063\u0069\u0066i\u0065\u0064\u0020\u0076\u0061lu\u0065\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};_bcef :=args [2].ValueNumber ;if _bcef <=0{return MakeErrorResultType (ErrorTypeNum ,"\u0050\u0044\u0055\u0052\u0041\u0054I\u004f\u004e\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065d\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u0070o\u0073i\u0074\u0069\u0076\u0065");};return MakeNumberResult ((_aca .Log10 (_bcef )-_aca .Log10 (_bfdg ))/_aca .Log10 (1+_abad ));};

// String returns a string representation of a named range.
func (_dgbb NamedRangeRef )String ()string {return _dgbb ._ggbf };

// Sum is an implementation of the Excel SUM() function.
func Sum (args []Result )Result {_afba :=MakeNumberResult (0);for _ ,_fede :=range args {_fede =_fede .AsNumber ();switch _fede .Type {case ResultTypeNumber :_afba .ValueNumber +=_fede .ValueNumber ;case ResultTypeList ,ResultTypeArray :_bgead :=Sum (_fede .ListValues ());if _bgead .Type !=ResultTypeNumber {return _bgead ;};_afba .ValueNumber +=_bgead .ValueNumber ;case ResultTypeString :case ResultTypeError :return _fede ;case ResultTypeEmpty :default:return MakeErrorResult (_a .Sprintf ("\u0075\u006e\u0068\u0061\u006e\u0064\u006c\u0065\u0064\u0020\u0053\u0055\u004d\u0028\u0029 \u0061r\u0067\u0075\u006d\u0065\u006e\u0074\u0020\u0074\u0079\u0070\u0065\u0020\u0025\u0073",_fede .Type ));};};return _afba ;};type couponArgs struct{_cgfd float64 ;_fccg float64 ;_eccb int ;_bgf int ;};

// MakeBoolResult constructs a boolean result (internally a number).
func MakeBoolResult (b bool )Result {if b {return Result {Type :ResultTypeNumber ,ValueNumber :1,IsBoolean :true };};return Result {Type :ResultTypeNumber ,ValueNumber :0,IsBoolean :true };};

// Irr implements the Excel IRR function.
func Irr (args []Result )Result {_baec :=len (args );if _baec ==0||_baec > 2{return MakeErrorResult ("\u0049\u0052\u0052\u0020\u0072\u0065q\u0075\u0069\u0072\u0065\u0073\u0020\u006f\u006e\u0065\u0020\u006f\u0072\u0020t\u0077\u006f\u0020\u0061\u0072\u0067\u0075m\u0065\u006e\u0074\u0073");};if args [0].Type !=ResultTypeList &&args [0].Type !=ResultTypeArray {return MakeErrorResult ("\u0049\u0052\u0052\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020v\u0061\u006c\u0075\u0065\u0073\u0020t\u006f\u0020\u0062\u0065\u0020\u006f\u0066\u0020\u0061\u0072\u0072\u0061\u0079 \u0074\u0079\u0070\u0065");};_ecda :=_gbddgb (args [0]);_addf :=[]float64 {};for _ ,_gafc :=range _ecda {for _ ,_gbdd :=range _gafc {if _gbdd .Type ==ResultTypeNumber &&!_gbdd .IsBoolean {_addf =append (_addf ,_gbdd .ValueNumber );};};};_fcga :=len (_addf );if len (_addf )< 2{return MakeErrorResultType (ErrorTypeNum ,"");};_gag :=0.1;if _baec ==2&&args [1].Type !=ResultTypeEmpty {if args [1].Type !=ResultTypeNumber {return MakeErrorResult ("I\u0052\u0052\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0067\u0075\u0065\u0073\u0073\u0020t\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006d\u0062\u0065r \u0061\u0072\u0067u\u006de\u006e\u0074");};_gag =args [1].ValueNumber ;if _gag <=-1{return MakeErrorResult ("\u0049\u0052R\u0020\u0072\u0065\u0071u\u0069\u0072e\u0073\u0020\u0067\u0075\u0065\u0073\u0073\u0020t\u006f\u0020\u0062\u0065\u0020\u006d\u006f\u0072\u0065\u0020\u0074\u0068a\u006e\u0020\u002d\u0031");};};_bedg :=[]float64 {};for _dedc :=0;_dedc < _fcga ;_dedc ++{if _dedc ==0{_bedg =append (_bedg ,0);}else {_bedg =append (_bedg ,_bedg [_dedc -1]+365);};};return _gbab (_addf ,_bedg ,_gag );};

// String returns a string of a range.
func (_gbade Range )String ()string {return _a .Sprintf ("\u0025\u0073\u003a%\u0073",_gbade ._gdefe .String (),_gbade ._daea .String ());};func _facb (_ebaea int )bool {return _ebaea >=0&&_ebaea <=4};

// Eval evaluates and returns the result of a constant array expression.
func (_gebd ConstArrayExpr )Eval (ctx Context ,ev Evaluator )Result {_cd :=[][]Result {};for _ ,_bbb :=range _gebd ._fee {_bgg :=[]Result {};for _ ,_dc :=range _bbb {_bgg =append (_bgg ,_dc .Eval (ctx ,ev ));};_cd =append (_cd ,_bgg );};return MakeArrayResult (_cd );};func init (){RegisterFunction ("\u0041\u0043\u0043\u0052\u0049\u004e\u0054\u004d",Accrintm );RegisterFunction ("\u0041M\u004f\u0052\u0044\u0045\u0047\u0052C",Amordegrc );RegisterFunction ("\u0041\u004d\u004f\u0052\u004c\u0049\u004e\u0043",Amorlinc );RegisterFunction ("\u0043O\u0055\u0050\u0044\u0041\u0059\u0042S",Coupdaybs );RegisterFunction ("\u0043\u004f\u0055\u0050\u0044\u0041\u0059\u0053",Coupdays );RegisterFunction ("\u0043\u004f\u0055\u0050\u0044\u0041\u0059\u0053\u004e\u0043",Coupdaysnc );RegisterFunction ("\u0043O\u0055\u0050\u004e\u0055\u004d",Coupnum );RegisterFunction ("\u0043O\u0055\u0050\u004e\u0043\u0044",Coupncd );RegisterFunction ("\u0043O\u0055\u0050\u0050\u0043\u0044",Couppcd );RegisterFunction ("\u0043U\u004d\u0049\u0050\u004d\u0054",Cumipmt );RegisterFunction ("\u0043\u0055\u004d\u0050\u0052\u0049\u004e\u0043",Cumprinc );RegisterFunction ("\u0044\u0042",Db );RegisterFunction ("\u0044\u0044\u0042",Ddb );RegisterFunction ("\u0044\u0049\u0053\u0043",Disc );RegisterFunction ("\u0044\u004f\u004c\u004c\u0041\u0052\u0044\u0045",Dollarde );RegisterFunction ("\u0044\u004f\u004c\u004c\u0041\u0052\u0046\u0052",Dollarfr );RegisterFunction ("\u0044\u0055\u0052\u0041\u0054\u0049\u004f\u004e",Duration );RegisterFunction ("\u0045\u0046\u0046\u0045\u0043\u0054",Effect );RegisterFunction ("\u0046\u0056",Fv );RegisterFunction ("\u0046\u0056\u0053\u0043\u0048\u0045\u0044\u0055\u004c\u0045",Fvschedule );RegisterFunction ("\u0049N\u0054\u0052\u0041\u0054\u0045",Intrate );RegisterFunction ("\u0049\u0050\u004d\u0054",Ipmt );RegisterFunction ("\u0049\u0052\u0052",Irr );RegisterFunction ("\u0049\u0053\u0050M\u0054",Ispmt );RegisterFunction ("\u004dD\u0055\u0052\u0041\u0054\u0049\u004fN",Mduration );RegisterFunction ("\u004d\u0049\u0052\u0052",Mirr );RegisterFunction ("\u004eO\u004d\u0049\u004e\u0041\u004c",Nominal );RegisterFunction ("\u004e\u0050\u0045\u0052",Nper );RegisterFunction ("\u004e\u0050\u0056",Npv );RegisterFunction ("\u004fD\u0044\u004c\u0050\u0052\u0049\u0043E",Oddlprice );RegisterFunction ("\u004fD\u0044\u004c\u0059\u0049\u0045\u004cD",Oddlyield );RegisterFunction ("\u0050D\u0055\u0052\u0041\u0054\u0049\u004fN",Pduration );RegisterFunction ("\u005fx\u006cf\u006e\u002e\u0050\u0044\u0055\u0052\u0041\u0054\u0049\u004f\u004e",Pduration );RegisterFunction ("\u0050\u004d\u0054",Pmt );RegisterFunction ("\u0050\u0050\u004d\u0054",Ppmt );RegisterFunction ("\u0050\u0052\u0049C\u0045",Price );RegisterFunction ("\u0050R\u0049\u0043\u0045\u0044\u0049\u0053C",Pricedisc );RegisterFunction ("\u0050\u0052\u0049\u0043\u0045\u004d\u0041\u0054",Pricemat );RegisterFunction ("\u0050\u0056",Pv );RegisterFunction ("\u0052\u0041\u0054\u0045",Rate );RegisterFunction ("\u0052\u0045\u0043\u0045\u0049\u0056\u0045\u0044",Received );RegisterFunction ("\u0052\u0052\u0049",Rri );RegisterFunction ("\u005fx\u006c\u0066\u006e\u002e\u0052\u0052I",Rri );RegisterFunction ("\u0053\u004c\u004e",Sln );RegisterFunction ("\u0053\u0059\u0044",Syd );RegisterFunction ("\u0054B\u0049\u004c\u004c\u0045\u0051",Tbilleq );RegisterFunction ("\u0054\u0042\u0049\u004c\u004c\u0050\u0052\u0049\u0043\u0045",Tbillprice );RegisterFunction ("\u0054\u0042\u0049\u004c\u004c\u0059\u0049\u0045\u004c\u0044",Tbillyield );RegisterFunction ("\u0056\u0044\u0042",Vdb );RegisterFunction ("\u0058\u0049\u0052\u0052",Xirr );RegisterFunction ("\u0058\u004e\u0050\u0056",Xnpv );RegisterFunction ("\u0059\u0049\u0045L\u0044",Yield );RegisterFunction ("\u0059I\u0045\u004c\u0044\u0044\u0049\u0053C",Yielddisc );RegisterFunction ("\u0059\u0049\u0045\u004c\u0044\u004d\u0041\u0054",Yieldmat );};const _affea =_ad .Millisecond *1000;func _dda (_fcdgd ,_ddfd _ad .Time ,_gaeb ,_adbe int )_ad .Time {_ddde :=_ddfd ;_aedd :=_fcdgd .Year ()-_ddfd .Year ();_ddde =_ddde .AddDate (_aedd ,0,0);if _fcdgd .After (_ddde ){_ddde =_ddde .AddDate (1,0,0);};_gbdc :=-12/_gaeb ;for _ddde .After (_fcdgd ){_ddde =_ddde .AddDate (0,_gbdc ,0);};return _ddde ;};const _beag ="\u0028\u0028\u005b\u0030\u002d\u0039\u005d\u0029\u002b\u0029\u002d\u0028\u0028\u005b\u0030-\u0039]\u0029\u002b\u0029\u002d\u0028\u0028\u005b\u0030\u002d\u0039\u005d\u0029\u002b\u0029";

// NewFunction constructs a new function call expression.
func NewFunction (name string ,args []Expression )Expression {return FunctionCall {_fcgae :name ,_agdag :args };};

// String returns a string representation of Number.
func (_ceccc Number )String ()string {return _d .FormatFloat (_ceccc ._dadgc ,'f',-1,64)};var _fadbc =map[string ]bool {"\u0049F\u0045\u0052\u0052\u004f\u0052":true ,"\u0049\u0046\u004e\u0041":true ,"\u005f\u0078\u006c\u0066\u006e\u002e\u0049\u0046\u004e\u0041":true ,"\u0049\u0053\u0045R\u0052":true ,"\u0049S\u0045\u0052\u0052\u004f\u0052":true ,"\u0049\u0053\u004e\u0041":true ,"\u0049\u0053\u0052E\u0046":true };func _ebfcde (_fcfb ,_egee Result ,_aaed string )(*xargs ,Result ){if _fcfb .Type !=ResultTypeList &&_fcfb .Type !=ResultTypeArray {return nil ,MakeErrorResult (_aaed +"\u0020\u0072eq\u0075\u0069\u0072e\u0073\u0020\u0076\u0061lue\u0073 t\u006f\u0020\u0062\u0065\u0020\u006f\u0066 a\u0072\u0072\u0061\u0079\u0020\u0074\u0079p\u0065");};_bagb :=_gbddgb (_fcfb );_agae :=[]float64 {};for _ ,_gfdd :=range _bagb {for _ ,_bebg :=range _gfdd {if _bebg .Type ==ResultTypeNumber &&!_bebg .IsBoolean {_agae =append (_agae ,_bebg .ValueNumber );}else {return nil ,MakeErrorResult (_aaed +"\u0072\u0065q\u0075\u0069\u0072\u0065\u0073\u0020\u0076\u0061\u006c\u0075\u0065\u0073\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006dbe\u0072\u0073");};};};_acga :=len (_agae );if len (_agae )< 2{return nil ,MakeErrorResultType (ErrorTypeNum ,"");};if _egee .Type !=ResultTypeList &&_egee .Type !=ResultTypeArray {return nil ,MakeErrorResult (_aaed +" \u0072\u0065\u0071\u0075\u0069\u0072e\u0073\u0020\u0064\u0061\u0074\u0065s\u0020\u0074\u006f\u0020\u0062\u0065\u0020o\u0066\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u0074\u0079p\u0065");};_cbcfc :=_gbddgb (_egee );_ecgb :=[]float64 {};_bfac :=0.0;for _ ,_egde :=range _cbcfc {for _ ,_dcedc :=range _egde {if _dcedc .Type ==ResultTypeNumber &&!_dcedc .IsBoolean {_ecb :=float64 (int (_dcedc .ValueNumber ));if _ecb < _bfac {return nil ,MakeErrorResultType (ErrorTypeNum ,_aaed +" \u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0064\u0061\u0074\u0065\u0073\u0020\u0074\u006f\u0020b\u0065\u0020\u0069\u006e\u0020\u0061\u0073\u0063\u0065\u006edi\u006e\u0067\u0020o\u0072d\u0065\u0072");};_ecgb =append (_ecgb ,_ecb );_bfac =_ecb ;}else {return nil ,MakeErrorResult (_aaed +"\u0072\u0065\u0071\u0075i\u0072\u0065\u0073\u0020\u0064\u0061\u0074\u0065\u0073\u0020t\u006f \u0062\u0065\u0020\u006e\u0075\u006d\u0062e\u0072\u0073");};};};if len (_ecgb )!=_acga {return nil ,MakeErrorResultType (ErrorTypeNum ,"");};return &xargs {_agae ,_ecgb },MakeEmptyResult ();};const _fgb ="\u0028\u0028\u006a\u0061\u006e|\u006a\u0061\u006e\u0075\u0061\u0072\u0079\u0029\u007c\u0028\u0066\u0065\u0062\u007c\u0066\u0065\u0062\u0072\u0075a\u0072\u0079\u0029\u007c\u0028\u006da\u0072\u007c\u006da\u0072\u0063\u0068\u0029\u007c\u0028\u0061\u0070\u0072\u007c\u0061\u0070\u0072\u0069\u006c\u0029\u007c\u0028\u006d\u0061\u0079\u0029\u007c\u0028j\u0075\u006e\u007cj\u0075\u006e\u0065\u0029\u007c\u0028\u006a\u0075\u006c\u007c\u006a\u0075\u006c\u0079\u0029\u007c\u0028a\u0075\u0067\u007c\u0061\u0075\u0067\u0075\u0073t\u0029\u007c\u0028\u0073\u0065\u0070\u007c\u0073\u0065\u0070\u0074\u0065\u006d\u0062\u0065\u0072\u0029\u007c\u0028o\u0063\u0074\u007c\u006f\u0063\u0074\u006f\u0062\u0065\u0072\u0029\u007c\u0028\u006e\u006f\u0076\u007c\u006e\u006f\u0076\u0065\u006d\u0062e\u0072\u0029\u007c\u0028\u0064\u0065\u0063\u007c\u0064\u0065\u0063\u0065\u006d\u0062\u0065\u0072\u0029\u0029";const _ebaeg =57358;const _fffb =187;

// VLookup implements the VLOOKUP function that returns a matching value from a
// column in an array.
func VLookup (args []Result )Result {_egdb :=len (args );if _egdb < 3{return MakeErrorResult ("\u0056\u004c\u004f\u004f\u004bU\u0050\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0061\u0074 \u006c\u0065\u0061\u0073\u0074\u0020\u0074\u0068\u0072\u0065\u0065\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0073");};if _egdb > 4{return MakeErrorResult ("\u0056\u004c\u004f\u004f\u004b\u0055\u0050\u0020\u0072\u0065\u0071\u0075\u0069r\u0065\u0073\u0020\u0061\u0074\u0020m\u006f\u0073\u0074\u0020\u0066\u006f\u0075\u0072\u0020\u0061\u0072\u0067\u0075m\u0065\u006e\u0074\u0073");};_aecbe :=args [0];_dcgfe :=args [1];if _dcgfe .Type !=ResultTypeArray {return MakeErrorResult ("\u0056\u004cO\u004f\u004b\u0055\u0050\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0073\u0065\u0063\u006f\u006e\u0064\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0020\u006f\u0066\u0020\u0074\u0079\u0070\u0065\u0020\u0061\u0072\u0072\u0061\u0079");};_dffd :=args [2].AsNumber ();if _dffd .Type !=ResultTypeNumber {return MakeErrorResult ("\u0056\u004cO\u004f\u004b\u0055\u0050 \u0072\u0065q\u0075\u0069\u0072\u0065\u0073\u0020\u006e\u0075m\u0065\u0072\u0069\u0063\u0020\u0063\u006f\u006c\u0020\u0061\u0072\u0067u\u006d\u0065\u006e\u0074");};_eefda :=false ;if _egdb ==4&&args [3].Type !=ResultTypeEmpty {_addbe :=args [3].AsNumber ();if _addbe .Type !=ResultTypeNumber {return MakeErrorResult ("\u0056\u004c\u004f\u004f\u004b\u0055\u0050\u0020\u0072\u0065\u0071\u0075\u0069r\u0065\u0073\u0020\u006e\u0075\u006de\u0072\u0069\u0063\u0020\u006d\u0061\u0074\u0063\u0068\u0020\u0061\u0072\u0067u\u006d\u0065\u006e\u0074");};if _addbe .ValueNumber ==0{_eefda =true ;};};_adggc :=int (_dffd .ValueNumber )-1;_ggcdg :=-1;_bfcbd :=false ;_abeb :for _edaf ,_gbad :=range _dcgfe .ValueArray {if len (_gbad )==0{continue ;};_deab :=_gbad [0];switch _cacc (_deab ,_aecbe ,false ,_eefda ){case _bgaeg :_ggcdg =_edaf ;case _ageeb :_ggcdg =_edaf ;_bfcbd =true ;break _abeb ;};};if _ggcdg ==-1{return MakeErrorResultType (ErrorTypeNA ,"\u0056\u004c\u004fOK\u0055\u0050\u0020\u006e\u006f\u0020\u0072\u0065\u0073\u0075\u006c\u0074\u0020\u0066\u006f\u0075\u006e\u0064");};_baddd :=_dcgfe .ValueArray [_ggcdg ];if _adggc < 0||_adggc >=len (_baddd ){return MakeErrorResult ("\u0056\u004c\u004f\u004f\u004b\u0055\u0050\u0020\u0068\u0061\u0073\u0020\u0069\u006e\u0076a\u006ci\u0064\u0020\u0063\u006f\u006c\u0075\u006d\u006e\u0020\u0069\u006e\u0064\u0065\u0078");};if _bfcbd ||!_eefda {return _baddd [_adggc ];};return MakeErrorResultType (ErrorTypeNA ,"\u0056\u004c\u004fOK\u0055\u0050\u0020\u006e\u006f\u0020\u0072\u0065\u0073\u0075\u006c\u0074\u0020\u0066\u006f\u0075\u006e\u0064");};

// Update returns the same object as updating sheet references does not affect ConstArrayExpr.
func (_bgdb ConstArrayExpr )Update (q *_fe .UpdateQuery )Expression {return _bgdb };

// CountIf implements the COUNTIF function.
func CountIf (args []Result )Result {if len (args )< 2{return MakeErrorResult ("\u0043\u004f\u0055N\u0054\u0049\u0046\u0020r\u0065\u0071\u0075\u0069\u0072\u0065\u0073 \u0074\u0077\u006f\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0073\u0073");};_bfda :=args [0];if _bfda .Type !=ResultTypeArray &&_bfda .Type !=ResultTypeList {return MakeErrorResult ("\u0043O\u0055\u004eT\u0049\u0046\u0020r\u0065\u0071\u0075\u0069\u0072\u0065\u0073 \u0066\u0069\u0072\u0073\u0074\u0020a\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0020\u006f\u0066\u0020t\u0079\u0070\u0065\u0020\u0061\u0072\u0072\u0061\u0079");};_eabe :=_cebfd (args [1]);_ddcf :=0;for _ ,_aagag :=range _gbddgb (_bfda ){for _ ,_egbaee :=range _aagag {if _gfddg (_egbaee ,_eabe ){_ddcf ++;};};};return MakeNumberResult (float64 (_ddcf ));};

// String returns a string representation of PrefixExpr.
func (_bedgc PrefixExpr )String ()string {return _a .Sprintf ("\u0025\u0073\u0021%\u0073",_bedgc ._dbfebd .String (),_bedgc ._afed .String ());};

// Trim is an implementation of the Excel TRIM function that removes leading,
// trailing and consecutive spaces.
func Trim (args []Result )Result {if len (args )!=1{return MakeErrorResult ("\u0054\u0052\u0049\u004d\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0061\u0020\u0073\u0069\u006e\u0067\u006c\u0065\u0020\u0073t\u0072\u0069\u006e\u0067\u0020a\u0072\u0067u\u006d\u0065\u006e\u0074");};_cbgg :=args [0].AsString ();if _cbgg .Type !=ResultTypeString {return MakeErrorResult ("\u0054\u0052\u0049\u004d\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0061\u0020\u0073\u0069\u006e\u0067\u006c\u0065\u0020\u0073t\u0072\u0069\u006e\u0067\u0020a\u0072\u0067u\u006d\u0065\u006e\u0074");};_gagd :=_eb .Buffer {};_aedc :=false ;_fbbc :=false ;_gdag :=0;for _ ,_dbag :=range _cbgg .ValueString {_cbaff :=_dbag ==' ';if _cbaff {if !_aedc {continue ;};if !_fbbc {_gdag ++;_gagd .WriteRune (_dbag );};}else {_gdag =0;_aedc =true ;_gagd .WriteRune (_dbag );};_fbbc =_cbaff ;};_gagd .Truncate (_gagd .Len ()-_gdag );return MakeStringResult (_gagd .String ());};

// Floor is an implementation of the FlOOR function.
func Floor (args []Result )Result {if len (args )!=2{return MakeErrorResult ("\u0046\u004c\u004f\u004f\u0052\u0028\u0029\u0020\u0072\u0065q\u0075\u0069\u0072\u0065\u0073\u0020\u0074w\u006f\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0073");};_ccce :=args [0].AsNumber ();if _ccce .Type !=ResultTypeNumber {return MakeErrorResult ("\u0066\u0069\u0072s\u0074\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0020\u0074\u006f\u0020\u0046\u004c\u004f\u004f\u0052\u0028\u0029\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065 \u0061\u0020\u006e\u0075\u006d\u0062\u0065\u0072");};var _cbag float64 ;_fbga :=args [1].AsNumber ();if _fbga .Type !=ResultTypeNumber {return MakeErrorResult ("\u0073\u0065\u0063\u006f\u006e\u0064\u0020a\u0072\u0067\u0075m\u0065\u006e\u0074\u0020t\u006f\u0020\u0046\u004c\u004f\u004f\u0052\u0028\u0029\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020\u0061\u0020\u006e\u0075\u006d\u0062\u0065\u0072");};_cbag =_fbga .ValueNumber ;if _cbag < 0&&_ccce .ValueNumber >=0{return MakeErrorResultType (ErrorTypeNum ,"\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0061\u0072\u0067u\u006d\u0065\u006e\u0074\u0073\u0020\u0074\u006f\u0020\u0046L\u004f\u004f\u0052");};_gdgff :=_ccce .ValueNumber ;_gdgff ,_eceff :=_aca .Modf (_gdgff /_cbag );if _eceff !=0{if _ccce .ValueNumber < 0&&_eceff < 0{_gdgff --;};};return MakeNumberResult (_gdgff *_cbag );};

// NewBool constructs a new boolean expression.
func NewBool (v string )Expression {_dfa ,_adg :=_d .ParseBool (v );if _adg !=nil {_cc .Log .Debug ("\u0065\u0072\u0072\u006f\u0072\u0020p\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0066\u006f\u0072\u006d\u0075\u006ca\u0020\u0062\u006f\u006f\u006c\u0020\u0025s\u003a\u0020\u0025\u0076",v ,_adg );};return Bool {_efe :_dfa };};

// Now is an implementation of the Excel NOW() function.
func Now (args []Result )Result {if len (args )> 0{return MakeErrorResult ("\u004e\u004fW\u0020\u0064\u006f\u0065\u0073\u006e\u0027\u0074\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0020\u0061\u0072\u0067\u0075\u006den\u0074\u0073");};_ddd :=_ad .Now ();_ ,_eaf :=_ddd .Zone ();_fag :=_fcd +float64 (_ddd .Unix ()+int64 (_eaf ))/86400;return MakeNumberResult (_fag );};

// Received implements the Excel RECEIVED function.
func Received (args []Result )Result {_febe :=len (args );if _febe !=4&&_febe !=5{return MakeErrorResult ("R\u0045\u0043\u0045\u0049\u0056\u0045\u0044\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0066o\u0075\u0072\u0020\u006f\u0072\u0020\u0066\u0069\u0076\u0065 a\u0072\u0067\u0075m\u0065n\u0074\u0073");};_egab ,_cdga ,_bcgf :=_dbda (args [0],args [1],"\u0052\u0045\u0043\u0045\u0049\u0056\u0045\u0044");if _bcgf .Type ==ResultTypeError {return _bcgf ;};if args [2].Type !=ResultTypeNumber {return MakeErrorResult ("\u0052\u0045\u0043\u0045\u0049\u0056\u0045\u0044\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020i\u006e\u0076\u0065\u0073\u0074\u006d\u0065n\u0074\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006db\u0065\u0072\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};_cggc :=args [2].ValueNumber ;if _cggc <=0{return MakeErrorResultType (ErrorTypeNum ,"\u0052\u0045\u0043\u0045\u0049\u0056\u0045\u0044\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0069\u006ev\u0065\u0073\u0074\u006d\u0065\u006e\u0074\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u0070\u006f\u0073\u0069\u0074\u0069\u0076\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020a\u0072\u0067\u0075\u006d\u0065n\u0074");};if args [3].Type !=ResultTypeNumber {return MakeErrorResult ("\u0052\u0045\u0043\u0045\u0049\u0056\u0045\u0044 \u0072\u0065\u0071ui\u0072\u0065\u0073\u0020\u0064\u0069s\u0063\u006f\u0075\u006e\u0074\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006db\u0065\u0072\u0020\u0061\u0072\u0067\u0075\u006de\u006e\u0074");};_ggbg :=args [3].ValueNumber ;if _ggbg <=0{return MakeErrorResultType (ErrorTypeNum ,"\u0052\u0045\u0043\u0045I\u0056\u0045\u0044\u0020\u0072\u0065\u0071\u0075\u0069r\u0065\u0073\u0020\u0064\u0069\u0073\u0063\u006f\u0075\u006e\u0074\u0020\u0074\u006f\u0020\u0062\u0065\u0020p\u006f\u0073\u0069\u0074\u0069v\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};_ebcb :=0;if _febe ==5&&args [4].Type !=ResultTypeEmpty {if args [4].Type !=ResultTypeNumber {return MakeErrorResult ("\u0052E\u0043\u0045I\u0056\u0045\u0044 \u0072\u0065\u0071\u0075\u0069\u0072\u0065s\u0020\u0062\u0061\u0073\u0069\u0073 \u0074\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006d\u0062\u0065r\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};_ebcb =int (args [4].ValueNumber );if !_facb (_ebcb ){return MakeErrorResultType (ErrorTypeNum ,"\u0049\u006ec\u006f\u0072\u0072\u0065c\u0074\u0020b\u0061\u0073\u0069\u0073\u0020\u0061\u0072\u0067u\u006d\u0065\u006e\u0074\u0020\u0066\u006f\u0072\u0020\u0052\u0045\u0043E\u0049\u0056\u0045\u0044");};};_edcfb ,_bcgf :=_gacb (_egab ,_cdga ,_ebcb );if _bcgf .Type ==ResultTypeError {return _bcgf ;};return MakeNumberResult (_cggc /(1-_ggbg *_edcfb ));};

// If is an implementation of the Excel IF() function. It takes one, two or
// three arguments.
func If (args []Result )Result {if len (args )< 2{return MakeErrorResult ("\u0049\u0046\u0020re\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0061\u0074 \u006ce\u0061s\u0074 \u0074\u0077\u006f\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0073");};if len (args )> 3{return MakeErrorResult ("\u0049\u0046\u0020ac\u0063\u0065\u0070\u0074\u0073\u0020\u0061\u0074\u0020m\u006fs\u0074 \u0074h\u0072\u0065\u0065\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0073");};_dgfca :=args [0];switch _dgfca .Type {case ResultTypeError :return _dgfca ;case ResultTypeNumber :if len (args )==1{return MakeBoolResult (_dgfca .ValueNumber !=0);};if _dgfca .ValueNumber !=0{return args [1];};if len (args )==3{return args [2];}else {return MakeBoolResult (false );};case ResultTypeList :return _dafb (args );case ResultTypeArray :return _fbef (args );default:return MakeErrorResult ("\u0049F\u0020\u0069n\u0069\u0074\u0069\u0061l\u0020\u0061\u0072g\u0075\u006d\u0065\u006e\u0074\u0020\u006d\u0075\u0073t \u0062\u0065\u0020n\u0075\u006de\u0072\u0069\u0063\u0020\u006f\u0072 \u0061\u0072r\u0061\u0079");};};

// Decimal is an implementation of the Excel function DECIMAL() that parses a string
// in a given base and returns the numeric result.
func Decimal (args []Result )Result {if len (args )!=2{return MakeErrorResult ("\u0044\u0045\u0043\u0049\u004d\u0041\u004c\u0028\u0029\u0020\u0072\u0065\u0071\u0075\u0069r\u0065s\u0020\u0074\u0077\u006f\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0073");};_dcecg :=args [0].AsString ();if _dcecg .Type !=ResultTypeString {return MakeErrorResult ("D\u0045\u0043\u0049\u004d\u0041\u004c\u0028\u0029\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020s\u0074\u0072\u0069\u006e\u0067\u0020\u0066\u0069\u0072\u0073t \u0061\u0072\u0067u\u006de\u006e\u0074");};_dafbg :=args [1].AsNumber ();if _dafbg .Type !=ResultTypeNumber {return MakeErrorResult ("\u0044\u0045\u0043\u0049\u004dA\u004c\u0028\u0029\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020n\u0075\u006d\u0062\u0065\u0072\u0020\u0073\u0065\u0063\u006f\u006e\u0064\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};_facga :=_dcecg .ValueString ;if len (_facga )> 2&&(_bf .HasPrefix (_facga ,"\u0030\u0078")||_bf .HasPrefix (_facga ,"\u0030\u0058")){_facga =_facga [2:];};_cffa ,_adge :=_d .ParseInt (_facga ,int (_dafbg .ValueNumber ),64);if _adge !=nil {return MakeErrorResult ("\u0044\u0045C\u0049\u004d\u0041\u004c\u0028\u0029\u0020\u0065\u0072\u0072\u006f\u0072\u0020\u0069\u006e\u0020\u0063\u006f\u006e\u0076\u0065\u0072si\u006f\u006e");};return MakeNumberResult (float64 (_cffa ));};func _da (_ba string ,_daf uint32 )string {_adf :=_de .ColumnToIndex (_ba );if _adf ==_daf {return "\u0023\u0052\u0045F\u0021";}else if _adf > _daf {return _de .IndexToColumn (_adf -1);}else {return _ba ;};};

// String returns an empty string for Error.
func (_ceg Error )String ()string {return ""};func _ffee (_gbe float64 )float64 {return float64 (int (_gbe +0.5))};

// Average implements the AVERAGE function. It differs slightly from Excel (and
// agrees with LibreOffice) in that boolean values are counted. As an example,
// AVERAGE of two cells containing TRUE & FALSE is 0.5 in LibreOffice and
// #DIV/0! in Excel. unioffice will return 0.5 in this case.
func Average (args []Result )Result {_edgce ,_eeaa :=_gcdg (args ,false );if _eeaa ==0{return MakeErrorResultType (ErrorTypeDivideByZero ,"\u0041\u0056\u0045\u0052AG\u0045\u0020\u0064\u0069\u0076\u0069\u0064\u0065\u0020\u0062\u0079\u0020\u007a\u0065r\u006f");};return MakeNumberResult (_edgce /_eeaa );};func _dbfd (_aaeg Result ,_egbae ,_cgaa int )[][]Result {_bedd :=[][]Result {};switch _aaeg .Type {case ResultTypeArray :for _eccf ,_cafeg :=range _aaeg .ValueArray {if _eccf < _egbae {_bedd =append (_bedd ,_badgg (MakeListResult (_cafeg ),_cgaa ));}else {_bedd =append (_bedd ,_badgg (MakeErrorResultType (ErrorTypeNA ,""),_cgaa ));};};case ResultTypeList :_gdcfd :=_badgg (_aaeg ,_cgaa );for _acfe :=0;_acfe < _egbae ;_acfe ++{_bedd =append (_bedd ,_gdcfd );};case ResultTypeNumber ,ResultTypeString ,ResultTypeError ,ResultTypeEmpty :for _agce :=0;_agce < _egbae ;_agce ++{_dddc :=_badgg (_aaeg ,_cgaa );_bedd =append (_bedd ,_dddc );};};return _bedd ;};var _gcdba _cb .Mutex ;func _ddbg (_cedg ,_ffg []float64 ,_deae float64 )float64 {_bfcd :=_deae +1;_fggc :=_cedg [0];_agcf :=len (_cedg );_fce :=_ffg [0];for _fbcb :=1;_fbcb < _agcf ;_fbcb ++{_fggc +=_cedg [_fbcb ]/_aca .Pow (_bfcd ,(_ffg [_fbcb ]-_fce )/365);};return _fggc ;};

// MinA is an implementation of the Excel MINA() function.
func MinA (args []Result )Result {return _dfgga (args ,true )};

// Update makes a reference to point to one of the neighboring cells after removing a row/column with respect to the update type.
func (_decg CellRef )Update (q *_fe .UpdateQuery )Expression {if q .UpdateCurrentSheet {_decg ._acbc =_bbc (_decg ._acbc ,q );};return _decg ;};func _ecfg (_dgfad ,_gdcf float64 )bool {return _aca .Abs (_dgfad -_gdcf )< 1.0e-6};

// Rows implements the Excel ROWS function.
func Rows (args []Result )Result {if len (args )< 1{return MakeErrorResult ("\u0052\u004f\u0057\u0053\u0020\u0072\u0065\u0071\u0075\u0069\u0072e\u0073\u0020\u006f\u006e\u0065\u0020\u0061\u0072\u0067\u0075m\u0065\u006e\u0074");};_gffb :=args [0];if _gffb .Type !=ResultTypeArray &&_gffb .Type !=ResultTypeList {return MakeErrorResult ("\u0052\u004f\u0057S\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0066\u0069\u0072\u0073\u0074\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0020\u006f\u0066\u0020\u0074y\u0070\u0065\u0020\u0061\u0072\u0072\u0061\u0079");};_fbdbd :=_gffb .ValueArray ;if len (_fbdbd )==0{return MakeErrorResult ("\u0052O\u0057\u0053 \u0072\u0065\u0071u\u0069\u0072\u0065\u0073\u0020\u0061\u0072r\u0061\u0079\u0020\u0074\u006f\u0020c\u006f\u006e\u0074\u0061\u0069\u006e\u0020\u0061\u0074\u0020\u006ce\u0061\u0073\u0074\u0020\u0031\u0020\u0072\u006f\u0077");};return MakeNumberResult (float64 (len (_fbdbd )));};

// LastEvalIsRef returns if last evaluation with the evaluator was a reference.
func (_bgdg *defEval )LastEvalIsRef ()bool {return _bgdg ._bcaa };

// MakeEmptyResult is ued when parsing an empty argument.
func MakeEmptyResult ()Result {return Result {Type :ResultTypeEmpty }};

// String returns a string representation of ConstArrayExpr.
func (_bdd ConstArrayExpr )String ()string {return ""};

// Negate is a negate expression like -A1.
type Negate struct{_feaegg Expression };

// Int is an implementation of the Excel INT() function that rounds a number
// down to an integer.
func Int (args []Result )Result {if len (args )!=1{return MakeErrorResult ("I\u004e\u0054\u0028\u0029\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0061\u0020\u0073\u0069n\u0067\u006c\u0065\u0020\u006e\u0075\u006d\u0065\u0072\u0069c \u0061\u0072\u0067u\u006de\u006e\u0074");};_bfaee :=args [0].AsNumber ();if _bfaee .Type !=ResultTypeNumber {return MakeErrorResult ("I\u004e\u0054\u0028\u0029\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0061\u0020\u0073\u0069n\u0067\u006c\u0065\u0020\u006e\u0075\u006d\u0065\u0072\u0069c \u0061\u0072\u0067u\u006de\u006e\u0074");};_fffef ,_bfgg :=_aca .Modf (_bfaee .ValueNumber );if _bfgg < 0{_fffef --;};return MakeNumberResult (_fffef );};

// Lower is an implementation of the Excel LOWER function that returns a lower
// case version of a string.
func Lower (args []Result )Result {if len (args )!=1{return MakeErrorResult ("\u004c\u004f\u0057\u0045\u0052\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065s\u0020\u0061\u0020\u0073\u0069\u006eg\u006c\u0065\u0020\u0073\u0074\u0072\u0069\u006e\u0067\u0020\u0061\u0072\u0067u\u006d\u0065\u006e\u0074");};_abgb :=args [0];switch _abgb .Type {case ResultTypeError :return _abgb ;case ResultTypeNumber ,ResultTypeString :return _afdcg (args [0]);case ResultTypeList :_dfba :=_abgb .ValueList ;_ebee :=[]Result {};for _ ,_fddc :=range _dfba {_ebgf :=_afdcg (_fddc );if _ebgf .Type ==ResultTypeError {return _ebgf ;};_ebee =append (_ebee ,_ebgf );};return MakeListResult (_ebee );case ResultTypeArray :_bcff :=_abgb .ValueArray ;_beddf :=[][]Result {};for _ ,_fdaa :=range _bcff {_bdde :=[]Result {};for _ ,_fagb :=range _fdaa {_caeac :=_afdcg (_fagb );if _caeac .Type ==ResultTypeError {return _caeac ;};_bdde =append (_bdde ,_caeac );};_beddf =append (_beddf ,_bdde );};return MakeArrayResult (_beddf );default:return MakeErrorResult ("\u0049\u006e\u0063\u006fr\u0072\u0065\u0063\u0074\u0020\u0061\u0072\u0067\u0075\u006de\u006et\u0020\u0066\u006f\u0072\u0020\u004c\u004fW\u0045\u0052");};};var _egcf *_gb .Rand ;func _adgac (_addd Result ,_egbb ,_gfgbb string )(float64 ,Result ){switch _addd .Type {case ResultTypeEmpty :return 0,_ebega ;case ResultTypeNumber :return _addd .ValueNumber ,_ebega ;case ResultTypeString :_dcea ,_fffda :=_d .ParseFloat (_addd .ValueString ,64);if _fffda !=nil {return 0,MakeErrorResult (_gfgbb +"\u0020s\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0061\u0020n\u0075\u006d\u0062\u0065\u0072\u0020\u0066\u006f\u0072\u0020"+_egbb );};return _dcea ,_ebega ;default:return 0,MakeErrorResult (_egbb +"\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020"+_gfgbb +"\u0020t\u006f\u0020\u0062\u0065\u0020\u0061\u0020\u006e\u0075\u006d\u0062e\u0072\u0020\u006f\u0072\u0020\u0065\u006d\u0070\u0074\u0079");};};

// ISBLANK is an implementation of the Excel ISBLANK() function.
func IsBlank (args []Result )Result {if len (args )!=1{return MakeErrorResult ("I\u0053\u0042\u004c\u0041\u004e\u004b(\u0029\u0020\u0061\u0063\u0063\u0065p\u0074\u0073\u0020\u0061\u0020\u0073\u0069n\u0067\u006c\u0065\u0020\u0061\u0072\u0067\u0075\u006d\u0065n\u0074");};return MakeBoolResult (args [0].Type ==ResultTypeEmpty );};const _dccd =57354;

// FloorMath implements _xlfn.FLOOR.MATH which rounds numbers down to the
// nearest multiple of the second argument, toward or away from zero as
// specified by the third argument.
func FloorMath (args []Result )Result {if len (args )==0{return MakeErrorResult ("\u0046\u004c\u004f\u004f\u0052\u002e\u004dA\u0054\u0048\u0028)\u0020\u0072\u0065\u0071u\u0069\u0072\u0065\u0073\u0020\u0061\u0074\u0020\u006c\u0065\u0061\u0073\u0074\u0020\u006f\u006e\u0065\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};if len (args )> 3{return MakeErrorResult ("\u0046\u004c\u004f\u004f\u0052\u002e\u004dA\u0054\u0048\u0028)\u0020\u0061\u006c\u006co\u0077\u0073\u0020\u0061\u0074\u0020\u006d\u006f\u0073\u0074\u0020\u0074\u0068\u0072\u0065\u0065\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0073");};_ffbd :=args [0].AsNumber ();if _ffbd .Type !=ResultTypeNumber {return MakeErrorResult ("f\u0069\u0072\u0073\u0074\u0020\u0061\u0072\u0067\u0075m\u0065\u006e\u0074\u0020\u0074\u006f\u0020FL\u004f\u004f\u0052\u002eM\u0041\u0054\u0048\u0028\u0029\u0020\u006d\u0075\u0073t \u0062\u0065 \u0061\u0020\u006e\u0075\u006d\u0062\u0065\u0072");};_ffec :=float64 (1);if _ffbd .ValueNumber < 0{_ffec =-1;};if len (args )> 1{_fbdbf :=args [1].AsNumber ();if _fbdbf .Type !=ResultTypeNumber {return MakeErrorResult ("\u0073\u0065\u0063\u006f\u006e\u0064\u0020\u0061r\u0067\u0075\u006den\u0074\u0020\u0074\u006f\u0020\u0046L\u004f\u004f\u0052\u002e\u004d\u0041\u0054\u0048\u0028\u0029\u0020\u006d\u0075\u0073\u0074 \u0062\u0065\u0020\u0061\u0020\u006e\u0075\u006db\u0065\u0072");};_ffec =_fbdbf .ValueNumber ;};_dcff :=float64 (1);if len (args )> 2{_cabce :=args [2].AsNumber ();if _cabce .Type !=ResultTypeNumber {return MakeErrorResult ("t\u0068\u0069\u0072\u0064\u0020\u0061\u0072\u0067\u0075m\u0065\u006e\u0074\u0020\u0074\u006f\u0020FL\u004f\u004f\u0052\u002eM\u0041\u0054\u0048\u0028\u0029\u0020\u006d\u0075\u0073t \u0062\u0065 \u0061\u0020\u006e\u0075\u006d\u0062\u0065\u0072");};_dcff =_cabce .ValueNumber ;};if len (args )==1{return MakeNumberResult (_aca .Floor (_ffbd .ValueNumber ));};_bgcg :=_ffbd .ValueNumber ;_bgcg ,_degd :=_aca .Modf (_bgcg /_ffec );if _degd !=0&&_ffbd .ValueNumber < 0&&_dcff > 0{_bgcg ++;};return MakeNumberResult (_bgcg *_ffec );};func (_gbcaf *noCache )SetCache (key string ,value Result ){};var _ga =[...]uint8 {0,16,29,43,56,68,80,91,102,113,125,137,148,163};

// LastRow returns 0 for the invalid reference context.
func (_cbggb *ivr )LastRow (colFrom string )int {return 0};

// Columns implements the Excel COLUMNS function.
func Columns (args []Result )Result {if len (args )< 1{return MakeErrorResult ("\u0043\u004fL\u0055\u004d\u004e\u0053\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u006f\u006e\u0065\u0020\u0061\u0072\u0067\u0075me\u006e\u0074");};_dadga :=args [0];if _dadga .Type !=ResultTypeArray &&_dadga .Type !=ResultTypeList {return MakeErrorResult ("\u0043O\u004c\u0055M\u004e\u0053\u0020r\u0065\u0071\u0075\u0069\u0072\u0065\u0073 \u0066\u0069\u0072\u0073\u0074\u0020a\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0020\u006f\u0066\u0020t\u0079\u0070\u0065\u0020\u0061\u0072\u0072\u0061\u0079");};_aecc :=_dadga .ValueArray ;if len (_aecc )==0{return MakeErrorResult ("\u0043\u004f\u004c\u0055\u004d\u004e\u0053\u0020r\u0065\u0071\u0075ir\u0065\u0073\u0020\u0061\u0072\u0072a\u0079\u0020\u0074\u006f\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0020\u0061\u0074 \u006c\u0065\u0061\u0073\u0074\u0020\u0031\u0020r\u006f\u0077");};return MakeNumberResult (float64 (len (_aecc [0])));};

// Arabic implements the Excel ARABIC function which parses roman numerals.  It
// accepts one numeric argument.
func Arabic (args []Result )Result {if len (args )!=1{return MakeErrorResult ("\u0041\u0052\u0041\u0042I\u0043\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073 \u006fn\u0065\u0020\u0061\u0072\u0067\u0075\u006de\u006e\u0074");};_fefcg :=args [0];switch _fefcg .Type {case ResultTypeNumber ,ResultTypeList ,ResultTypeEmpty :return MakeErrorResult ("\u0041\u0052\u0041B\u0049\u0043\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0061\u0020\u0073\u0074\u0072\u0069\u006e\u0067\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074 \u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");case ResultTypeString :_bebgd :=0.0;_gge :=0.0;for _ ,_gcad :=range _fefcg .ValueString {_afddf :=0.0;switch _gcad {case 'I':_afddf =1;case 'V':_afddf =5;case 'X':_afddf =10;case 'L':_afddf =50;case 'C':_afddf =100;case 'D':_afddf =500;case 'M':_afddf =1000;};_bebgd +=_afddf ;switch {case _gge ==_afddf &&(_gge ==5||_gge ==50||_gge ==500):return MakeErrorResult ("i\u006e\u0076\u0061\u006cid\u0020A\u0052\u0041\u0042\u0049\u0043 \u0066\u006f\u0072\u006d\u0061\u0074");case 2*_gge ==_afddf :return MakeErrorResult ("i\u006e\u0076\u0061\u006cid\u0020A\u0052\u0041\u0042\u0049\u0043 \u0066\u006f\u0072\u006d\u0061\u0074");};if _gge < _afddf {_bebgd -=2*_gge ;};_gge =_afddf ;};return MakeNumberResult (_bebgd );case ResultTypeError :return _fefcg ;default:return MakeErrorResult (_a .Sprintf ("\u0075\u006e\u0068an\u0064\u006c\u0065\u0064\u0020\u0041\u0043\u004f\u0053H\u0028)\u0020a\u0072g\u0075\u006d\u0065\u006e\u0074\u0020\u0074\u0079\u0070\u0065\u0020\u0025\u0073",_fefcg .Type ));};};

// MakeErrorResultType makes an error result of a given type with a specified
// debug message
func MakeErrorResultType (t ErrorType ,msg string )Result {switch t {case ErrorTypeNull :return Result {Type :ResultTypeError ,ValueString :"\u0023\u004e\u0055\u004c\u004c\u0021",ErrorMessage :msg };case ErrorTypeValue :return Result {Type :ResultTypeError ,ValueString :"\u0023V\u0041\u004c\u0055\u0045\u0021",ErrorMessage :msg };case ErrorTypeRef :return Result {Type :ResultTypeError ,ValueString :"\u0023\u0052\u0045F\u0021",ErrorMessage :msg };case ErrorTypeName :return Result {Type :ResultTypeError ,ValueString :"\u0023\u004e\u0041\u004d\u0045\u003f",ErrorMessage :msg };case ErrorTypeNum :return Result {Type :ResultTypeError ,ValueString :"\u0023\u004e\u0055M\u0021",ErrorMessage :msg };case ErrorTypeSpill :return Result {Type :ResultTypeError ,ValueString :"\u0023S\u0050\u0049\u004c\u004c\u0021",ErrorMessage :msg };case ErrorTypeNA :return Result {Type :ResultTypeError ,ValueString :"\u0023\u004e\u002f\u0041",ErrorMessage :msg };case ErrorTypeDivideByZero :return Result {Type :ResultTypeError ,ValueString :"\u0023D\u0049\u0056\u002f\u0030\u0021",ErrorMessage :msg };default:return Result {Type :ResultTypeError ,ValueString :"\u0023V\u0041\u004c\u0055\u0045\u0021",ErrorMessage :msg };};};

// Offset is an implementation of the Excel OFFSET function.
func Offset (ctx Context ,ev Evaluator ,args []Result )Result {if len (args )!=3&&len (args )!=5{return MakeErrorResult ("\u004f\u0046\u0046\u0053\u0045\u0054\u0020\u0072\u0065\u0071\u0075\u0069\u0072e\u0073\u0020\u0074\u0068\u0072\u0065e\u0020\u006f\u0072\u0020\u0066\u0069\u0076\u0065\u0020\u0061\u0072\u0067\u0075m\u0065\u006e\u0074\u0073");};_afcg :=args [0].Ref ;for _afcg .Type ==ReferenceTypeNamedRange {_afcg =ctx .NamedRange (_afcg .Value );};_cdgf :="";switch _afcg .Type {case ReferenceTypeCell :_cdgf =_afcg .Value ;case ReferenceTypeRange :_caafb :=_bf .Split (_afcg .Value ,"\u003a");if len (_caafb )==2{_cdgf =_caafb [0];};default:return MakeErrorResult (_a .Sprintf ("\u0049\u006ev\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u0069\u006e\u0020\u004f\u0046\u0046\u0053\u0045\u0054\u0028\u0029: \u0025\u0073",_afcg .Type ));};_cdcb ,_ebfb :=_de .ParseCellReference (_cdgf );if _ebfb !=nil {return MakeErrorResult (_a .Sprintf ("\u0070\u0061\u0072s\u0065\u0020\u006f\u0072i\u0067\u0069\u006e\u0020\u0065\u0072\u0072o\u0072\u0020\u004f\u0046\u0046\u0053\u0045\u0054\u0028\u0029\u003a\u0020\u0025\u0073",_ebfb .Error ()));};_gdeac ,_gbbde ,_decf :=_cdcb .Column ,_cdcb .RowIdx ,_cdcb .SheetName ;_edfab :=args [1].AsNumber ();if _edfab .Type !=ResultTypeNumber {return MakeErrorResult ("\u004f\u0046\u0046SE\u0054\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065s\u0020n\u0075m\u0065r\u0069\u0063\u0020\u0072\u006f\u0077\u0020\u006f\u0066\u0066\u0073\u0065\u0074");};_gggfg :=args [2].AsNumber ();if _gggfg .Type !=ResultTypeNumber {return MakeErrorResult ("\u004f\u0046\u0046SE\u0054\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065s\u0020n\u0075m\u0065r\u0069\u0063\u0020\u0063\u006f\u006c\u0020\u006f\u0066\u0066\u0073\u0065\u0074");};var _fggd ,_fdcf Result ;if len (args )==3{_fggd =MakeNumberResult (1);_fdcf =MakeNumberResult (1);}else {_fggd =args [3].AsNumber ();if _fggd .Type !=ResultTypeNumber {return MakeErrorResult ("\u004f\u0046\u0046\u0053\u0045\u0054\u0020\u0072\u0065\u0071u\u0069\u0072\u0065\u0073\u0020\u006e\u0075m\u0065\u0072\u0069\u0063\u0020\u0068\u0065\u0069\u0067\u0068\u0074");};if _fggd .ValueNumber ==0{return MakeErrorResultType (ErrorTypeRef ,"");};_fdcf =args [4].AsNumber ();if _fdcf .Type !=ResultTypeNumber {return MakeErrorResult ("\u004f\u0046F\u0053\u0045\u0054\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u006e\u0075\u006d\u0065\u0072\u0069\u0063\u0020\u0077id\u0074\u0068");};if _fdcf .ValueNumber ==0{return MakeErrorResultType (ErrorTypeRef ,"");};};_afaf :=_de .ColumnToIndex (_gdeac );_ecaf :=_gbbde +uint32 (_edfab .ValueNumber );_degb :=_afaf +uint32 (_gggfg .ValueNumber );_abab :=_ecaf +uint32 (_fggd .ValueNumber );_cbfda :=_degb +uint32 (_fdcf .ValueNumber );if _fggd .ValueNumber > 0{_abab --;}else {_abab ++;_ecaf ,_abab =_abab ,_ecaf ;};if _fdcf .ValueNumber > 0{_cbfda --;}else {_cbfda ++;_degb ,_cbfda =_cbfda ,_degb ;};_aefe :=_a .Sprintf ("\u0025\u0073\u0025\u0064",_de .IndexToColumn (_degb ),_ecaf );_caea :=_a .Sprintf ("\u0025\u0073\u0025\u0064",_de .IndexToColumn (_cbfda ),_abab );if _decf ==""{return _dbcgg (ctx ,ev ,_aefe ,_caea );}else {return _dbcgg (ctx .Sheet (_decf ),ev ,_aefe ,_caea );};};var _edbfa []byte =[]byte {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0};

// Reference returns an invalid reference for String.
func (_cccfb String )Reference (ctx Context ,ev Evaluator )Reference {return ReferenceInvalid };

// String returns a string representation of a vertical range with prefix.
func (_bbcdf PrefixVerticalRange )String ()string {return _a .Sprintf ("\u0025\u0073\u0021\u0025\u0073\u003a\u0025\u0073",_bbcdf ._geaee .String (),_bbcdf ._adebd ,_bbcdf ._bgdac );};

// Eval evaluates and returns the result of the cell reference.
func (_bgd CellRef )Eval (ctx Context ,ev Evaluator )Result {return ctx .Cell (_bgd ._acbc ,ev )};func _bbcd (_gadb []Result ,_fcgcb bool )Result {var _bgeeg string ;if _fcgcb {_bgeeg ="\u004c\u0041\u0052G\u0045";}else {_bgeeg ="\u0053\u004d\u0041L\u004c";};if len (_gadb )!=2{return MakeErrorResult (_bgeeg +"\u0020\u0072\u0065qu\u0069\u0072\u0065\u0073\u0020\u0074\u0077\u006f\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0073");};_adbb :=_gadb [0];var _fefc [][]Result ;switch _adbb .Type {case ResultTypeArray :_fefc =_adbb .ValueArray ;case ResultTypeList :_fefc =[][]Result {_adbb .ValueList };default:return MakeErrorResult (_bgeeg +"\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0066\u0069\u0072\u0073\u0074\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074 \u006f\u0066\u0020\u0074\u0079p\u0065\u0020a\u0072\u0072\u0061\u0079");};if len (_fefc )==0{return MakeErrorResult (_bgeeg +"\u0020\u0072\u0065\u0071\u0075i\u0072\u0065\u0073\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u0074\u006f\u0020c\u006f\u006e\u0074\u0061\u0069\u006e\u0020\u0061\u0074\u0020\u006c\u0065\u0061\u0073\u0074\u0020\u0031\u0020\u0072\u006f\u0077");};if _gadb [1].Type !=ResultTypeNumber {return MakeErrorResult (_bgeeg +" \u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0073\u0065\u0063\u006f\u006e\u0064\u0020\u0061\u0072g\u0075\u006d\u0065\u006e\u0074\u0020\u006f\u0066\u0020\u0074yp\u0065\u0020\u006eu\u006db\u0065\u0072");};_dede :=_gadb [1].ValueNumber ;if _dede < 1{return MakeErrorResultType (ErrorTypeNum ,_bgeeg +"\u0020\u0072e\u0071\u0075\u0069\u0072\u0065s\u0020\u0073\u0065\u0063\u006fn\u0064\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0020\u006f\u0066\u0020\u0074\u0079\u0070\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u006d\u006f\u0072\u0065\u0020\u0074\u0068\u0061\u006e\u0020\u0030");};_cfcca :=int (_dede );if float64 (_cfcca )!=_dede {return MakeErrorResultType (ErrorTypeNum ,_bgeeg +"\u0020\u0072e\u0071\u0075\u0069\u0072\u0065s\u0020\u0073\u0065\u0063\u006fn\u0064\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0020\u006f\u0066\u0020\u0074\u0079\u0070\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u006d\u006f\u0072\u0065\u0020\u0074\u0068\u0061\u006e\u0020\u0030");};_cabdb :=[]float64 {};for _ ,_bdfdb :=range _fefc {for _ ,_ggfgg :=range _bdfdb {if _ggfgg .Type ==ResultTypeNumber {_cabdb =append (_cabdb ,_ggfgg .ValueNumber );};};};if _cfcca > len (_cabdb ){return MakeErrorResultType (ErrorTypeNum ,_bgeeg +" \u0072\u0065\u0071u\u0069\u0072\u0065\u0073\u0020\u0073\u0065\u0063\u006f\u006e\u0064\u0020\u0061\u0072\u0067u\u006d\u0065\u006e\u0074\u0020\u006f\u0066\u0020\u0074\u0079\u0070\u0065\u0020n\u0075\u006d\u0062\u0065\u0072\u0020\u006c\u0065s\u0073\u0020\u006f\u0072\u0020\u0065\u0071\u0075\u0061\u006c\u0020\u0074\u0068\u0061\u006e\u0020t\u0068\u0065\u0020\u006e\u0075m\u0062\u0065\u0072\u0020\u006f\u0066\u0020\u006e\u0075\u006d\u0062\u0065\u0072s\u0020\u0069\u006e\u0020t\u0068\u0065\u0020\u0061\u0072\u0072\u0061\u0079");};_cfca :=_bg .MergeSort (_cabdb );if _fcgcb {return MakeNumberResult (_cfca [len (_cfca )-_cfcca ]);}else {return MakeNumberResult (_cfca [_cfcca -1]);};};

// Function is a standard function whose result only depends on its arguments.
type Function func (_ecdcb []Result )Result ;

// False is an implementation of the Excel FALSE() function. It takes no
// arguments.
func False (args []Result )Result {if len (args )!=0{return MakeErrorResult ("\u0046A\u004c\u0053\u0045\u0020\u0074\u0061\u006b\u0065\u0073\u0020\u006eo\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0073");};return MakeBoolResult (false );};

// Update updates references in the VerticalRange after removing a row/column.
func (_cfeca VerticalRange )Update (q *_fe .UpdateQuery )Expression {if q .UpdateType ==_fe .UpdateActionRemoveColumn {_bgdfb :=_cfeca ;if q .UpdateCurrentSheet {_edecf :=q .ColumnIdx ;_bgdfb ._bbcff =_da (_cfeca ._bbcff ,_edecf );_bgdfb ._gebgf =_da (_cfeca ._gebgf ,_edecf );};return _bgdfb ;};return _cfeca ;};func _beg ()evCache {_dbd :=evCache {};_dbd ._fa =make (map[string ]Result );_dbd ._eagc =&_cb .Mutex {};return _dbd ;};func _bdgb (_caba ,_gdcd int )string {const TOKSTART =4;if !_aegea {return "\u0073\u0079\u006et\u0061\u0078\u0020\u0065\u0072\u0072\u006f\u0072";};for _ ,_edca :=range _cgff {if _edca ._aaaa ==_caba &&_edca ._debd ==_gdcd {return "\u0073\u0079\u006e\u0074\u0061\u0078\u0020\u0065\u0072r\u006f\u0072\u003a\u0020"+_edca ._bbggc ;};};_cgcac :="\u0073y\u006e\u0074\u0061\u0078 \u0065\u0072\u0072\u006f\u0072:\u0020u\u006ee\u0078\u0070\u0065\u0063\u0074\u0065\u0064 "+_bbdb (_gdcd );_bgag :=make ([]int ,0,4);_dfed :=_fggcg [_caba ];for _dfbd :=TOKSTART ;_dfbd -1< len (_egdbd );_dfbd ++{if _beae :=_dfed +_dfbd ;_beae >=0&&_beae < _fffb &&_aaee [_ccee [_beae ]]==_dfbd {if len (_bgag )==cap (_bgag ){return _cgcac ;};_bgag =append (_bgag ,_dfbd );};};if _bdfb [_caba ]==-2{_bcdb :=0;for _ccaa [_bcdb ]!=-1||_ccaa [_bcdb +1]!=_caba {_bcdb +=2;};for _bcdb +=2;_ccaa [_bcdb ]>=0;_bcdb +=2{_bddc :=_ccaa [_bcdb ];if _bddc < TOKSTART ||_ccaa [_bcdb +1]==0{continue ;};if len (_bgag )==cap (_bgag ){return _cgcac ;};_bgag =append (_bgag ,_bddc );};if _ccaa [_bcdb +1]!=0{return _cgcac ;};};for _cfbc ,_fbec :=range _bgag {if _cfbc ==0{_cgcac +="\u002c\u0020\u0065x\u0070\u0065\u0063\u0074\u0069\u006e\u0067\u0020";}else {_cgcac +="\u0020\u006f\u0072\u0020";};_cgcac +=_bbdb (_fbec );};return _cgcac ;};const _fdda =57378;

// Munit is an implementation of the Excel MUNIT function that returns an
// identity matrix.
func Munit (args []Result )Result {if len (args )!=1{return MakeErrorResult ("\u004d\u0055\u004eIT\u0028\u0029\u0020\u0072\u0065\u0071\u0075\u0069\u0072e\u0073 \u006fn\u0065 \u006e\u0075\u006d\u0065\u0072\u0069\u0063\u0020\u0069\u006e\u0070\u0075\u0074");};_bffdc :=args [0].AsNumber ();if _bffdc .Type !=ResultTypeNumber {return MakeErrorResult ("\u004d\u0055\u004eIT\u0028\u0029\u0020\u0072\u0065\u0071\u0075\u0069\u0072e\u0073 \u006fn\u0065 \u006e\u0075\u006d\u0065\u0072\u0069\u0063\u0020\u0069\u006e\u0070\u0075\u0074");};_gcgac :=int (_bffdc .ValueNumber );_cega :=make ([][]Result ,0,_gcgac );for _deegb :=0;_deegb < _gcgac ;_deegb ++{_bgdea :=make ([]Result ,_gcgac );for _bfdd :=0;_bfdd < _gcgac ;_bfdd ++{if _deegb ==_bfdd {_bgdea [_bfdd ]=MakeNumberResult (1.0);}else {_bgdea [_bfdd ]=MakeNumberResult (0.0);};};_cega =append (_cega ,_bgdea );};return MakeArrayResult (_cega );};

// Search is an implementation of the Excel SEARCH().
func Search (args []Result )Result {_eada ,_fgdd :=_eade ("\u0046\u0049\u004e\u0044",args );if _fgdd .Type !=ResultTypeEmpty {return _fgdd ;};_bbda :=_bf .ToLower (_eada ._fbdf );if _bbda ==""{return MakeNumberResult (1.0);};_fadb :=_bf .ToLower (_eada ._bdec );_beecb :=_eada ._dcbg ;_ebbd :=1;for _gdge :=range _fadb {if _ebbd < _beecb {_ebbd ++;continue ;};_baea :=_gf .Index (_bbda ,_fadb [_gdge :]);if _baea ==0{return MakeNumberResult (float64 (_ebbd ));};_ebbd ++;};return MakeErrorResultType (ErrorTypeValue ,"\u004eo\u0074\u0020\u0066\u006f\u0075\u006ed");};func _dbda (_edad ,_ggcd Result ,_bce string )(float64 ,float64 ,Result ){_gfe ,_dcbb :=_ged (_edad ,"\u0073e\u0074t\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u0064\u0061\u0074\u0065",_bce );if _dcbb .Type ==ResultTypeError {return 0,0,_dcbb ;};_ccbb ,_dcbb :=_ged (_ggcd ,"\u006d\u0061\u0074\u0075\u0072\u0069\u0074\u0079\u0020\u0064\u0061\u0074\u0065",_bce );if _dcbb .Type ==ResultTypeError {return 0,0,_dcbb ;};if _gfe >=_ccbb {return 0,0,MakeErrorResultType (ErrorTypeNum ,_bce +"\u0020\u0072\u0065\u0071\u0075\u0069r\u0065\u0073\u0020m\u0061\u0074\u0075r\u0069\u0074\u0079\u0020\u0064\u0061\u0074\u0065\u0020\u0074o\u0020\u0062\u0065\u0020\u006cat\u0065\u0072\u0020\u0074\u0068\u0061\u006e\u0020\u0073\u0065\u0074\u0074\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u0064\u0061\u0074\u0065");};return _gfe ,_ccbb ,_ebega ;};

// MDeterm is an implementation of the Excel MDETERM which finds the determinant
// of a matrix.
func MDeterm (args []Result )Result {if len (args )!=1{return MakeErrorResult ("\u004d\u0044\u0045T\u0045\u0052\u004d\u0028\u0029\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0061\u0020\u0073\u0069\u006e\u0067\u006c\u0065\u0020\u0061\u0072\u0072\u0061\u0079 \u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};_ffed :=args [0];if _ffed .Type !=ResultTypeArray {return MakeErrorResult ("\u004d\u0044\u0045T\u0045\u0052\u004d\u0028\u0029\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0061\u0020\u0073\u0069\u006e\u0067\u006c\u0065\u0020\u0061\u0072\u0072\u0061\u0079 \u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};_becb :=len (_ffed .ValueArray );for _ ,_ddgg :=range _ffed .ValueArray {if len (_ddgg )!=_becb {return MakeErrorResult ("\u004d\u0044\u0045TE\u0052\u004d\u0028\u0029\u0020\u0072\u0065\u0071\u0075i\u0072e\u0073 \u0061 \u0073\u0071\u0075\u0061\u0072\u0065\u0020\u006d\u0061\u0074\u0072\u0069\u0078");};};return MakeNumberResult (_faaab (_ffed .ValueArray ));};var _aaee =[...]int {-1000,-7,-3,-1,27,18,22,23,-2,-8,-4,-9,20,-14,10,11,12,13,-5,-13,-6,-12,17,16,15,9,4,5,22,23,24,25,26,28,29,30,31,27,32,35,-1,18,27,-15,-17,-1,-1,-1,-1,33,-5,4,5,21,-16,-11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,19,36,34,21,-5,33,21,34,19,-17,-1,-5,-10,-1};

// Radians is an implementation of the Excel function RADIANS() that converts
// degrees to radians.
func Radians (args []Result )Result {if len (args )!=1{return MakeErrorResult ("\u0052\u0041\u0044I\u0041\u004e\u0053\u0028)\u0020\u0072\u0065\u0071\u0075\u0069\u0072e\u0073\u0020\u006f\u006e\u0065\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};_fdbc :=args [0].AsNumber ();if _fdbc .Type !=ResultTypeNumber {return MakeErrorResult ("\u0052\u0041\u0044IA\u004e\u0053\u0028\u0029\u0020\u0072\u0065\u0071\u0075i\u0072e\u0073 \u006eu\u006d\u0062\u0065\u0072\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};return MakeNumberResult (_aca .Pi /180.0*_fdbc .ValueNumber );};

// Effect implements the Excel EFFECT function.
func Effect (args []Result )Result {if len (args )!=2{return MakeErrorResult ("\u0045\u0046F\u0045\u0043\u0054\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0074\u0077\u006f\u0020\u0061\u0072\u0067\u0075\u006den\u0074\u0073");};if args [0].Type !=ResultTypeNumber {return MakeErrorResult ("\u0045\u0046\u0046\u0045\u0043\u0054\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u006e\u006f\u006d\u0069n\u0061\u006c\u0020\u0069\u006e\u0074\u0065\u0072\u0065\u0073\u0074\u0020\u0072\u0061\u0074\u0065\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020a\u0072\u0067\u0075\u006d\u0065n\u0074");};_deef :=args [0].ValueNumber ;if _deef <=0{return MakeErrorResultType (ErrorTypeNum ,"\u0045\u0046\u0046\u0045\u0043\u0054\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u006e\u006f\u006d\u0069n\u0061\u006c\u0020\u0069\u006e\u0074\u0065\u0072\u0065\u0073\u0074\u0020\u0072\u0061\u0074\u0065\u0020\u0074\u006f\u0020\u0062e\u0020\u0070\u006f\u0073\u0069\u0074\u0069\u0076\u0065\u0020\u006e\u0075\u006d\u0062e\u0072\u0020\u0061r\u0067\u0075\u006d\u0065\u006e\u0074");};if args [1].Type !=ResultTypeNumber {return MakeErrorResult ("\u0045\u0046\u0046\u0045\u0043\u0054 \u0072\u0065\u0071\u0075\u0069r\u0065\u0073\u0020\u006e\u0075\u006db\u0065\u0072\u0020\u006f\u0066 \u0063\u006f\u006d\u0070\u006f\u0075\u006e\u0064\u0069\u006e\u0067\u0020p\u0065\u0072\u0069\u006f\u0064\u0073\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u006e\u0075m\u0062\u0065\u0072\u0020\u0061\u0072\u0067\u0075m\u0065\u006e\u0074");};_ecff :=float64 (int (args [1].ValueNumber ));if _ecff < 1{return MakeErrorResultType (ErrorTypeNum ,"E\u0046\u0046\u0045\u0043\u0054\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u006f\u0066\u0020\u0063o\u006dp\u006f\u0075\u006e\u0064i\u006e\u0067 \u0070\u0065\u0072\u0069\u006f\u0064\u0073\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u0031\u0020\u006f\u0072\u0020\u006d\u006f\u0072\u0065");};return MakeNumberResult (_aca .Pow ((1+_deef /_ecff ),_ecff )-1);};

// Cumprinc implements the Excel CUMPRINC function.
func Cumprinc (args []Result )Result {_efcd ,_efbe :=_bcc (args ,"\u0043\u0055\u004d\u0050\u0052\u0049\u004e\u0043");if _efbe .Type ==ResultTypeError {return _efbe ;};_eeb :=_efcd ._cbdfc ;_afdg :=_efcd ._acg ;_bbeec :=_efcd ._fbc ;_fccb :=_efcd ._cefb ;_eebe :=_efcd ._cfae ;_bdfc :=_efcd ._gabc ;_bgce :=_agee (_eeb ,_afdg ,_bbeec ,0,_bdfc );_eaegc :=0.0;if _fccb ==1{if _bdfc ==0{_eaegc =_bgce +_bbeec *_eeb ;}else {_eaegc =_bgce ;};_fccb ++;};for _dfeg :=_fccb ;_dfeg <=_eebe ;_dfeg ++{if _bdfc ==1{_eaegc +=_bgce -(_cacd (_eeb ,_dfeg -2,_bgce ,_bbeec ,1)-_bgce )*_eeb ;}else {_eaegc +=_bgce -_cacd (_eeb ,_dfeg -1,_bgce ,_bbeec ,0)*_eeb ;};};return MakeNumberResult (_eaegc );};

// Counta implements the COUNTA function.
func Counta (args []Result )Result {return MakeNumberResult (_bccb (args ,_eede ))};type evCache struct{_fa map[string ]Result ;_eagc *_cb .Mutex ;};

// RandBetween is an implementation of the Excel RANDBETWEEN() function that returns a random
// integer in the range specified.
func RandBetween (args []Result )Result {if len (args )!=2{return MakeErrorResult ("\u0052A\u004e\u0044B\u0045\u0054\u0057\u0045E\u004e\u0028\u0029 \u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020tw\u006f\u0020\u006eu\u006d\u0065r\u0069\u0063\u0020\u0061\u0072\u0067u\u006d\u0065n\u0074\u0073");};_acagf :=args [0].AsNumber ();_egabg :=args [1].AsNumber ();if _acagf .Type !=ResultTypeNumber ||_egabg .Type !=ResultTypeNumber {return MakeErrorResult ("\u0052A\u004e\u0044B\u0045\u0054\u0057\u0045E\u004e\u0028\u0029 \u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020tw\u006f\u0020\u006eu\u006d\u0065r\u0069\u0063\u0020\u0061\u0072\u0067u\u006d\u0065n\u0074\u0073");};if _egabg .ValueNumber < _acagf .ValueNumber {return MakeErrorResult ("\u0052\u0041\u004e\u0044\u0042E\u0054\u0057\u0045\u0045\u004e\u0028\u0029\u0020\u0072\u0065\u0071\u0075\u0069r\u0065\u0073\u0020\u0073\u0065\u0063\u006f\u006e\u0064\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u006c\u0061\u0072\u0067\u0065r");};_beabb :=int64 (_acagf .ValueNumber );_gda :=int64 (_egabg .ValueNumber );return MakeNumberResult (float64 (_egcf .Int63n (_gda -_beabb +1)+_beabb ));};func _bbf (_gff BinOpType ,_efa [][]Result ,_af Result )Result {_abf :=[][]Result {};for _eg :=range _efa {_bba :=_bea (_gff ,_efa [_eg ],_af );if _bba .Type ==ResultTypeError {return _bba ;};_abf =append (_abf ,_bba .ValueList );};return MakeArrayResult (_abf );};

// Coupnum implements the Excel COUPNUM function.
func Coupnum (args []Result )Result {_faeg ,_dac :=_fcdg (args ,"\u0043O\u0055\u0050\u004e\u0055\u004d");if _dac .Type ==ResultTypeError {return _dac ;};_dcdf :=_faeg ._eccb ;_fadc :=_faeg ._bgf ;_bgeb ,_dac :=_fba (_faeg ._cgfd ,_faeg ._fccg ,_dcdf ,_fadc );if _dac .Type ==ResultTypeError {return _dac ;};return MakeNumberResult (_bgeb );};func _afdcg (_bbae Result )Result {if _bbae .Type ==ResultTypeEmpty {return _bbae ;};_acee :=_bbae .AsString ();if _acee .Type !=ResultTypeString {return MakeErrorResult ("\u004c\u004f\u0057\u0045\u0052\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065s\u0020\u0061\u0020\u0073\u0069\u006eg\u006c\u0065\u0020\u0073\u0074\u0072\u0069\u006e\u0067\u0020\u0061\u0072\u0067u\u006d\u0065\u006e\u0074");};if _bbae .IsBoolean {if _acee .ValueString =="\u0031"{return MakeStringResult ("\u0074\u0072\u0075\u0065");}else if _acee .ValueString =="\u0030"{return MakeStringResult ("\u0066\u0061\u006cs\u0065");}else {return MakeErrorResult ("\u0049\u006e\u0063\u006fr\u0072\u0065\u0063\u0074\u0020\u0061\u0072\u0067\u0075\u006de\u006et\u0020\u0066\u006f\u0072\u0020\u004c\u004fW\u0045\u0052");};}else {return MakeStringResult (_bf .ToLower (_acee .ValueString ));};};const _cddb =57344;

// Median implements the MEDIAN function that returns the median of a range of
// values.
func Median (args []Result )Result {if len (args )==0{return MakeErrorResult ("\u004d\u0045D\u0049\u0041\u004e\u0020r\u0065\u0071u\u0069\u0072\u0065\u0073\u0020\u0061\u0074\u0020l\u0065\u0061\u0073\u0074\u0020\u006f\u006e\u0065\u0020\u0061\u0072\u0067u\u006d\u0065\u006e\u0074");};_fefg :=_dgaef (args );_ac .Float64s (_fefg );var _feda float64 ;if len (_fefg )%2==0{_feda =(_fefg [len (_fefg )/2-1]+_fefg [len (_fefg )/2])/2;}else {_feda =_fefg [len (_fefg )/2];};return MakeNumberResult (_feda );};

// ReferenceType is a type of reference
//go:generate stringer -type=ReferenceType
type ReferenceType byte ;

// Update returns the same object as updating sheet references does not affect Error.
func (_abfce Error )Update (q *_fe .UpdateQuery )Expression {return _abfce };func _ecde (_fcgf ,_bede float64 )float64 {_fcgf =_aca .Trunc (_fcgf );_bede =_aca .Trunc (_bede );if _fcgf ==0{return _bede ;};if _bede ==0{return _fcgf ;};for _fcgf !=_bede {if _fcgf > _bede {_fcgf =_fcgf -_bede ;}else {_bede =_bede -_fcgf ;};};return _fcgf ;};

// HorizontalRange is a range expression that when evaluated returns a list of Results from references like 1:4 (all cells from rows 1 to 4).
type HorizontalRange struct{_dfga ,_fgbbc int };func LexReader (r _g .Reader )chan *node {_addfd :=NewLexer ();go _addfd .lex (r );return _addfd ._ggdfc };func _bee (){_afe ["\u006d\u006d\u002f\u0064\u0064\u002f\u0079\u0079"]=_bd .MustCompile ("\u005e"+_fff +_cee );_afe ["\u006dm\u0020\u0064\u0064\u002c\u0020\u0079y"]=_bd .MustCompile ("\u005e"+_aee +_cee );_afe ["\u0079\u0079\u002d\u006d\u006d\u002d\u0064\u0064"]=_bd .MustCompile ("\u005e"+_beag +_cee );_afe ["y\u0079\u002d\u006d\u006d\u0053\u0074\u0072\u002d\u0064\u0064"]=_bd .MustCompile ("\u005e"+_ebd +_cee );_eef ["\u0068\u0068"]=_bd .MustCompile (_efb +_bda +"\u0024");_eef ["\u0068\u0068\u003am\u006d"]=_bd .MustCompile (_efb +_efc +"\u0024");_eef ["\u006d\u006d\u003as\u0073"]=_bd .MustCompile (_efb +_gcd +"\u0024");_eef ["\u0068\u0068\u003a\u006d\u006d\u003a\u0073\u0073"]=_bd .MustCompile (_efb +_bcbg +"\u0024");_fdd =[]*_bd .Regexp {_bd .MustCompile ("\u005e"+_fff +"\u0024"),_bd .MustCompile ("\u005e"+_aee +"\u0024"),_bd .MustCompile ("\u005e"+_beag +"\u0024"),_bd .MustCompile ("\u005e"+_ebd +"\u0024")};_ecg =[]*_bd .Regexp {_bd .MustCompile ("\u005e"+_bda +"\u0024"),_bd .MustCompile ("\u005e"+_efc +"\u0024"),_bd .MustCompile ("\u005e"+_gcd +"\u0024"),_bd .MustCompile ("\u005e"+_bcbg +"\u0024")};};

// Yield implements the Excel YIELD function.
func Yield (args []Result )Result {_ggfd :=len (args );if _ggfd !=6&&_ggfd !=7{return MakeErrorResult ("\u0059\u0049E\u004c\u0044\u0020\u0072e\u0071\u0075i\u0072\u0065\u0073\u0020\u0073\u0069\u0078\u0020o\u0072\u0020\u0073\u0065\u0076\u0065\u006e\u0020\u0061\u0072\u0067\u0075m\u0065\u006e\u0074\u0073");};_dgfc ,_gdca ,_eecb :=_dbda (args [0],args [1],"\u0059\u0049\u0045L\u0044");if _eecb .Type ==ResultTypeError {return _eecb ;};_ggba :=args [2];if _ggba .Type !=ResultTypeNumber {return MakeErrorResult ("\u0059\u0049\u0045LD\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073 \u0072a\u0074e\u0020o\u0066\u0020\u0074\u0079\u0070\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072");};_gage :=_ggba .ValueNumber ;if _gage < 0{return MakeErrorResultType (ErrorTypeNum ,"R\u0061\u0074\u0065\u0020\u0073\u0068o\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u006e\u006fn\u0020\u006e\u0065g\u0061t\u0069\u0076\u0065");};_agbf :=args [3];if _agbf .Type !=ResultTypeNumber {return MakeErrorResult ("\u0059\u0049\u0045\u004c\u0044\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020p\u0072 \u006f\u0066\u0020\u0074\u0079\u0070\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072");};_dadd :=_agbf .ValueNumber ;if _dadd <=0{return MakeErrorResultType (ErrorTypeNum ,"p\u0072\u0020\u0073\u0068ou\u006cd\u0020\u0062\u0065\u0020\u0070o\u0073\u0069\u0074\u0069\u0076\u0065");};_baad :=args [4];if _baad .Type !=ResultTypeNumber {return MakeErrorResult ("Y\u0049\u0045\u004c\u0044\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0072\u0065\u0064\u0065m\u0070\u0074\u0069\u006f\u006e\u0020\u006f\u0066\u0020\u0074yp\u0065\u0020\u006eu\u006db\u0065\u0072");};_fgdfa :=_baad .ValueNumber ;if _fgdfa < 0{return MakeErrorResultType (ErrorTypeNum ,"\u0059\u0069\u0065\u006cd\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065 \u006eo\u006e\u0020\u006e\u0065\u0067\u0061\u0074i\u0076\u0065");};_degae :=args [5];if _degae .Type !=ResultTypeNumber {return MakeErrorResult ("\u0059\u0049\u0045\u004c\u0044\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065s\u0020\u0066\u0072\u0065\u0071\u0075e\u006e\u0063\u0079\u0020\u006f\u0066\u0020\u0074\u0079\u0070\u0065\u0020\u006eu\u006d\u0062\u0065\u0072");};_edga :=float64 (int (_degae .ValueNumber ));if !_baeg (_edga ){return MakeErrorResultType (ErrorTypeNum ,"\u0049n\u0063\u006f\u0072\u0072e\u0063\u0074\u0020\u0066\u0072e\u0071u\u0065n\u0063\u0065\u0020\u0076\u0061\u006c\u0075e");};_bceg :=0;if _ggfd ==7&&args [6].Type !=ResultTypeEmpty {_gdfa :=args [6];if _gdfa .Type !=ResultTypeNumber {return MakeErrorResult ("Y\u0049\u0045\u004c\u0044\u0020\u0072e\u0071\u0075\u0069\u0072\u0065\u0073 \u0062\u0061\u0073\u0069\u0073\u0020\u006ff\u0020\u0074\u0079\u0070\u0065\u0020\u006e\u0075\u006d\u0062e\u0072");};_bceg =int (_gdfa .ValueNumber );if !_facb (_bceg ){return MakeErrorResultType (ErrorTypeNum ,"\u0049\u006e\u0063o\u0072\u0072\u0065\u0063t\u0020\u0062\u0061\u0073\u0069\u0073\u0020v\u0061\u006c\u0075\u0065\u0020\u0066\u006f\u0072\u0020\u0059\u0049\u0045\u004c\u0044");};};_bcegf :=0.0;_adae :=0.0;_ccegb :=1.0;_bceb ,_eecb :=_ffd (_dgfc ,_gdca ,_gage ,_adae ,_fgdfa ,_edga ,_bceg );if _eecb .Type ==ResultTypeError {return _eecb ;};_ceaa ,_eecb :=_ffd (_dgfc ,_gdca ,_gage ,_ccegb ,_fgdfa ,_edga ,_bceg );if _eecb .Type ==ResultTypeError {return _eecb ;};_bgef :=(_ccegb -_adae )*0.5;for _fgfcb :=0;_fgfcb < 100&&_bcegf !=_dadd ;_fgfcb ++{_bcegf ,_eecb =_ffd (_dgfc ,_gdca ,_gage ,_bgef ,_fgdfa ,_edga ,_bceg );if _eecb .Type ==ResultTypeError {return _eecb ;};if _dadd ==_bceb {return MakeNumberResult (_adae );}else if _dadd ==_ceaa {return MakeNumberResult (_ccegb );}else if _dadd ==_bcegf {return MakeNumberResult (_bgef );}else if _dadd < _ceaa {_ccegb *=2.0;_ceaa ,_eecb =_ffd (_dgfc ,_gdca ,_gage ,_ccegb ,_fgdfa ,_edga ,_bceg );if _eecb .Type ==ResultTypeError {return _eecb ;};_bgef =(_ccegb -_adae )*0.5;}else {if _dadd < _bcegf {_adae =_bgef ;_bceb =_bcegf ;}else {_ccegb =_bgef ;_ceaa =_bcegf ;};_bgef =_ccegb -(_ccegb -_adae )*((_dadd -_ceaa )/(_bceb -_ceaa ));};};return MakeNumberResult (_bgef );};func init (){RegisterFunction ("\u0043\u0048\u004f\u004f\u0053\u0045",Choose );RegisterFunction ("\u0043\u004f\u004c\u0055\u004d\u004e",Column );RegisterFunction ("\u0043O\u004c\u0055\u004d\u004e\u0053",Columns );RegisterFunction ("\u0049\u004e\u0044E\u0058",Index );RegisterFunctionComplex ("\u0049\u004e\u0044\u0049\u0052\u0045\u0043\u0054",Indirect );RegisterFunctionComplex ("\u004f\u0046\u0046\u0053\u0045\u0054",Offset );RegisterFunction ("\u004d\u0041\u0054C\u0048",Match );RegisterFunction ("\u0048L\u004f\u004f\u004b\u0055\u0050",HLookup );RegisterFunction ("\u004c\u0041\u0052G\u0045",Large );RegisterFunction ("\u004c\u004f\u004f\u004b\u0055\u0050",Lookup );RegisterFunction ("\u0052\u004f\u0057",Row );RegisterFunction ("\u0052\u004f\u0057\u0053",Rows );RegisterFunction ("\u0053\u004d\u0041L\u004c",Small );RegisterFunction ("\u0056L\u004f\u004f\u004b\u0055\u0050",VLookup );RegisterFunction ("\u0054R\u0041\u004e\u0053\u0050\u004f\u0053E",Transpose );};

// Update updates the FunctionCall references after removing a row/column.
func (_fggaf FunctionCall )Update (q *_fe .UpdateQuery )Expression {_addgf :=[]Expression {};for _ ,_bdbf :=range _fggaf ._agdag {_ffcf :=_bdbf .Update (q );_addgf =append (_addgf ,_ffcf );};return FunctionCall {_fcgae :_fggaf ._fcgae ,_agdag :_addgf };};

// CeilingMath implements _xlfn.CEILING.MATH which rounds numbers to the nearest
// multiple of the second argument, toward or away from zero as specified by the
// third argument.
func CeilingMath (args []Result )Result {if len (args )==0{return MakeErrorResult ("\u0043E\u0049\u004cI\u004e\u0047\u002eM\u0041\u0054\u0048\u0028\u0029\u0020\u0072e\u0071\u0075\u0069\u0072\u0065\u0073 \u0061\u0074\u0020\u006c\u0065\u0061\u0073\u0074\u0020\u006f\u006ee\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};if len (args )> 3{return MakeErrorResult ("\u0043E\u0049\u004cI\u004e\u0047\u002eM\u0041\u0054\u0048\u0028\u0029\u0020\u0061l\u006c\u006f\u0077\u0073\u0020\u0061t\u0020\u006d\u006f\u0073\u0074\u0020\u0074\u0068\u0072\u0065\u0065 \u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0073");};_ggd :=args [0].AsNumber ();if _ggd .Type !=ResultTypeNumber {return MakeErrorResult ("\u0066\u0069\u0072\u0073\u0074\u0020a\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0020\u0074\u006f\u0020\u0043\u0045\u0049\u004c\u0049\u004e\u0047\u002e\u004dA\u0054\u0048\u0028\u0029\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020\u0061 \u006eu\u006d\u0062\u0065\u0072");};_geae :=float64 (1);if _ggd .ValueNumber < 0{_geae =-1;};if len (args )> 1{_fbgd :=args [1].AsNumber ();if _fbgd .Type !=ResultTypeNumber {return MakeErrorResult ("\u0073\u0065\u0063\u006f\u006e\u0064\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0020\u0074\u006f \u0043\u0045\u0049\u004c\u0049\u004e\u0047.\u004d\u0041\u0054\u0048\u0028\u0029\u0020\u006d\u0075\u0073\u0074 \u0062\u0065\u0020\u0061\u0020\u006e\u0075\u006d\u0062\u0065\u0072");};_geae =_fbgd .ValueNumber ;};_fdabe :=float64 (1);if len (args )> 2{_agbc :=args [2].AsNumber ();if _agbc .Type !=ResultTypeNumber {return MakeErrorResult ("\u0074\u0068\u0069\u0072\u0064\u0020a\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0020\u0074\u006f\u0020\u0043\u0045\u0049\u004c\u0049\u004e\u0047\u002e\u004dA\u0054\u0048\u0028\u0029\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020\u0061 \u006eu\u006d\u0062\u0065\u0072");};_fdabe =_agbc .ValueNumber ;};if len (args )==1{return MakeNumberResult (_aca .Ceil (_ggd .ValueNumber ));};_bfe :=_ggd .ValueNumber ;_bfe ,_fbbge :=_aca .Modf (_bfe /_geae );if _fbbge !=0{if _ggd .ValueNumber > 0{_bfe ++;}else if _fdabe < 0{_bfe --;};};return MakeNumberResult (_bfe *_geae );};

// MakeErrorResult constructs a #VALUE! error with a given extra error message.
// The error message is for debugging formula evaluation only and is not stored
// in the sheet.
func MakeErrorResult (msg string )Result {return MakeErrorResultType (ErrorTypeValue ,msg )};

// MaxA is an implementation of the Excel MAXA() function.
func MaxA (args []Result )Result {return _ggaf (args ,true )};const _cege ="\u0049\u006e\u0063\u006f\u0072\u0072\u0065\u0063\u0074\u0020\u0061\u0072\u0067\u0075\u006de\u006et\u0020\u0066\u006f\u0072\u0020\u0054\u0049\u004d\u0045\u0056\u0041\u004c\u0055\u0045";const _ddbb =2;type criteriaRegex struct{_eaedc byte ;_fbaad string ;};

// Eval evaluates and returns a number.
func (_cbef Number )Eval (ctx Context ,ev Evaluator )Result {return MakeNumberResult (_cbef ._dadgc )};func _bgdf (_affcf Result )[]Result {_eaaa :=_affcf .ValueList ;if _affcf .Type ==ResultTypeArray {_eaaa =nil ;for _ ,_aebf :=range _affcf .ValueArray {if len (_aebf )> 0{_eaaa =append (_eaaa ,_aebf [0]);}else {_eaaa =append (_eaaa ,_ebega );};};};return _eaaa ;};

// NewConstArrayExpr constructs a new constant array expression with a given data.
func NewConstArrayExpr (data [][]Expression )Expression {return &ConstArrayExpr {_fee :data }};

// Multinomial implements the excel MULTINOMIAL function.
func Multinomial (args []Result )Result {if len (args )< 1{return MakeErrorResult ("\u004d\u0055\u004c\u0054\u0049\u004eO\u004d\u0049\u0041\u004c\u0028\u0029\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0061\u0074\u0020\u006ce\u0061\u0073\u0074\u0020\u006f\u006e\u0065\u0020\u006e\u0075\u006d\u0065\u0072\u0069c\u0020i\u006e\u0070\u0075\u0074");};_gcgc ,_efeg ,_fcbc :=_efbf (args );if _fcbc .Type ==ResultTypeError {return _fcbc ;};return MakeNumberResult (_gfgg (_gcgc )/_efeg );};var _dgf int64 =_gega (1900,_ad .January ,1);var _ccaa =[...]int {-1,1,1,-1,-2,0};

// PrefixExpr is an expression containing reference to another sheet like Sheet1!A1 (the value of the cell A1 from sheet 'Sheet1').
type PrefixExpr struct{_dbfebd Expression ;_afed Expression ;};var _agcd =[]ri {{1000,"\u004d"},{900,"\u0043\u004d"},{500,"\u0044"},{400,"\u0043\u0044"},{100,"\u0043"},{90,"\u0058\u0043"},{50,"\u004c"},{40,"\u0058\u004c"},{10,"\u0058"},{9,"\u0049\u0058"},{5,"\u0056"},{4,"\u0049\u0056"},{1,"\u0049"}};

// Atan2 implements the Excel ATAN2 function.  It accepts two numeric arguments,
// and the arguments are (x,y), reversed from normal to match Excel's behaviour.
func Atan2 (args []Result )Result {if len (args )!=2{return MakeErrorResult ("\u0041\u0054\u0041\u004e2\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020t\u0077o\u0020\u0061\u0072\u0067\u0075\u006d\u0065n\u0074\u0073");};_bfge :=args [0].AsNumber ();_eaee :=args [1].AsNumber ();if _bfge .Type ==ResultTypeNumber &&_eaee .Type ==ResultTypeNumber {_bded :=_aca .Atan2 (_eaee .ValueNumber ,_bfge .ValueNumber );if _bded !=_bded {return MakeErrorResult ("\u0041T\u0041N\u0032\u0020\u0072\u0065\u0074u\u0072\u006ee\u0064\u0020\u004e\u0061\u004e");};return MakeNumberResult (_bded );};for _ ,_bgda :=range []ResultType {_bfge .Type ,_eaee .Type }{switch _bgda {case ResultTypeList ,ResultTypeString :return MakeErrorResult ("\u0041\u0054\u0041\u004e\u0032\u0020r\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0061\u0020\u006e\u0075\u006de\u0072\u0069\u0063\u0020\u0061\u0072\u0067u\u006d\u0065\u006e\u0074");case ResultTypeError :return _bfge ;default:return MakeErrorResult (_a .Sprintf ("\u0075\u006e\u0068an\u0064\u006c\u0065\u0064\u0020\u0041\u0054\u0041\u004e2\u0028)\u0020a\u0072g\u0075\u006d\u0065\u006e\u0074\u0020\u0074\u0079\u0070\u0065\u0020\u0025\u0073",_bgda ));};};return MakeErrorResult ("u\u006e\u0068\u0061\u006e\u0064\u006ce\u0064\u0020\u0065\u0072\u0072\u006f\u0072\u0020\u0066o\u0072\u0020\u0041T\u0041N\u0032\u0028\u0029");};

// MinIfs implements the MINIFS function.
func MinIfs (args []Result )Result {_aecba :=_aaea (args ,true ,"\u004d\u0049\u004e\u0049\u0046\u0053");if _aecba .Type !=ResultTypeEmpty {return _aecba ;};_agcg :=_cdgb (args [1:]);_fgeab :=_aca .MaxFloat64 ;_daee :=_gbddgb (args [0]);for _ ,_dfae :=range _agcg {_gdde :=_daee [_dfae ._daffc ][_dfae ._gbebc ].ValueNumber ;if _fgeab > _gdde {_fgeab =_gdde ;};};if _fgeab ==_aca .MaxFloat64 {_fgeab =0;};return MakeNumberResult (float64 (_fgeab ));};

// Match implements the MATCH function.
func Match (args []Result )Result {_cdda :=len (args );if _cdda !=2&&_cdda !=3{return MakeErrorResult ("\u004d\u0041T\u0043\u0048\u0020\u0072e\u0071\u0075i\u0072\u0065\u0073\u0020\u0074\u0077\u006f\u0020o\u0072\u0020\u0074\u0068\u0072\u0065\u0065\u0020\u0061\u0072\u0067\u0075m\u0065\u006e\u0074\u0073");};_baee :=1;if _cdda ==3&&args [2].Type !=ResultTypeEmpty {if args [2].Type !=ResultTypeNumber {return MakeErrorResult ("\u004d\u0041\u0054\u0043\u0048\u0020\u0072\u0065q\u0075\u0069\u0072es\u0020\u0074\u0068\u0065\u0020\u0074h\u0069\u0072\u0064\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0020\u0074\u006f \u0062\u0065\u0020\u0061\u0020\u006e\u0075\u006db\u0065\u0072");};_gacfb :=args [2].ValueNumber ;if _gacfb ==-1||_gacfb ==0{_baee =int (_gacfb );};};_gbdge :=args [1];var _afda []Result ;switch _gbdge .Type {case ResultTypeList :_afda =_gbdge .ValueList ;case ResultTypeArray :_aceg :=_gbdge .ValueArray ;for _ ,_fded :=range _aceg {if len (_fded )!=1{return MakeErrorResult ("\u004d\u0041\u0054\u0043\u0048\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0074\u0068e\u0020\u0073\u0065\u0063\u006f\u006e\u0064\u0020\u0061\u0072g\u0075\u006d\u0065\u006e\u0074\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u0061\u0020\u006f\u006e\u0065\u002dd\u0069\u006d\u0065\u006e\u0073\u0069o\u006e\u0061l\u0020\u0072a\u006eg\u0065");};_afda =append (_afda ,_fded [0]);};default:return MakeErrorResult ("\u004d\u0041\u0054\u0043\u0048\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0074\u0068e\u0020\u0073\u0065\u0063\u006f\u006e\u0064\u0020\u0061\u0072g\u0075\u006d\u0065\u006e\u0074\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u0061\u0020\u006f\u006e\u0065\u002dd\u0069\u006d\u0065\u006e\u0073\u0069o\u006e\u0061l\u0020\u0072a\u006eg\u0065");};_bgde :=_cebfd (args [0]);switch _baee {case 0:for _bbec ,_gdcbc :=range _afda {if _abceg (_gdcbc ,_bgde ){return MakeNumberResult (float64 (_bbec +1));};};case -1:for _bdga :=0;_bdga < len (_afda );_bdga ++{if _abceg (_afda [_bdga ],_bgde ){return MakeNumberResult (float64 (_bdga +1));};if _bgde ._ddefc &&(_afda [_bdga ].ValueNumber < _bgde ._geab ){if _bdga ==0{return MakeErrorResultType (ErrorTypeNA ,"");};return MakeNumberResult (float64 (_bdga ));};};case 1:for _dgfg :=0;_dgfg < len (_afda );_dgfg ++{if _abceg (_afda [_dgfg ],_bgde ){return MakeNumberResult (float64 (_dgfg +1));};if _bgde ._ddefc &&(_afda [_dgfg ].ValueNumber > _bgde ._geab ){if _dgfg ==0{return MakeErrorResultType (ErrorTypeNA ,"");};return MakeNumberResult (float64 (_dgfg ));};};};return MakeErrorResultType (ErrorTypeNA ,"");};

// Even is an implementation of the Excel EVEN() that rounds a number to the
// nearest even integer.
func Even (args []Result )Result {if len (args )!=1{return MakeErrorResult ("\u0045\u0056\u0045\u004e(\u0029\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073 \u006fn\u0065\u0020\u0061\u0072\u0067\u0075\u006de\u006e\u0074");};_eabg :=args [0].AsNumber ();if _eabg .Type !=ResultTypeNumber {return MakeErrorResult ("\u0045\u0056\u0045N\u0028\u0029\u0020\u0072e\u0071\u0075\u0069\u0072\u0065\u0073\u0020n\u0075\u006d\u0062\u0065\u0072\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};_dace :=_aca .Signbit (_eabg .ValueNumber );_dagf ,_bgddgf :=_aca .Modf (_eabg .ValueNumber /2);_eefaf :=_dagf *2;if _bgddgf !=0{if !_dace {_eefaf +=2;}else {_eefaf -=2;};};return MakeNumberResult (_eefaf );};func (_dfc *evCache )GetFromCache (key string )(Result ,bool ){_dfc ._eagc .Lock ();_aa ,_gfb :=_dfc ._fa [key ];_dfc ._eagc .Unlock ();return _aa ,_gfb ;};

// RoundDown is an implementation of the Excel ROUNDDOWN function that rounds a number
// down to a specified number of digits.
func RoundDown (args []Result )Result {return _dafdc (args ,_ggdc )};func init (){_degbc ();RegisterFunction ("\u004e\u0041",NA );RegisterFunction ("\u0049S\u0042\u004c\u0041\u004e\u004b",IsBlank );RegisterFunction ("\u0049\u0053\u0045R\u0052",IsErr );RegisterFunction ("\u0049S\u0045\u0052\u0052\u004f\u0052",IsError );RegisterFunction ("\u0049\u0053\u0045\u0056\u0045\u004e",IsEven );RegisterFunctionComplex ("\u005fx\u006cf\u006e\u002e\u0049\u0053\u0046\u004f\u0052\u004d\u0055\u004c\u0041",IsFormula );RegisterFunctionComplex ("\u004fR\u0047\u002e\u004f\u0050E\u004e\u004f\u0046\u0046\u0049C\u0045.\u0049S\u004c\u0045\u0041\u0050\u0059\u0045\u0041R",IsLeapYear );RegisterFunctionComplex ("\u0049S\u004c\u004f\u0047\u0049\u0043\u0041L",IsLogical );RegisterFunction ("\u0049\u0053\u004e\u0041",IsNA );RegisterFunction ("\u0049S\u004e\u004f\u004e\u0054\u0045\u0058T",IsNonText );RegisterFunction ("\u0049\u0053\u004e\u0055\u004d\u0042\u0045\u0052",IsNumber );RegisterFunction ("\u0049\u0053\u004fD\u0044",IsOdd );RegisterFunctionComplex ("\u0049\u0053\u0052E\u0046",IsRef );RegisterFunction ("\u0049\u0053\u0054\u0045\u0058\u0054",IsText );RegisterFunctionComplex ("\u0043\u0045\u004c\u004c",Cell );};

// RegisterFunctionComplex registers a standard function.
func RegisterFunctionComplex (name string ,fn FunctionComplex ){_gcdba .Lock ();defer _gcdba .Unlock ();if _ ,_bbfag :=_ffadf [name ];_bbfag {_cc .Log .Debug ("\u0064\u0075p\u006c\u0069\u0063\u0061t\u0065\u0020r\u0065\u0067\u0069\u0073\u0074\u0072\u0061\u0074i\u006f\u006e\u0020\u006f\u0066\u0020\u0066\u0075\u006e\u0063\u0074\u0069o\u006e\u0020\u0025\u0073",name );};_ffadf [name ]=fn ;};const _fabbg =57346;

// MakeStringResult constructs a string result.
func MakeStringResult (s string )Result {return Result {Type :ResultTypeString ,ValueString :s }};

// Cumipmt implements the Excel CUMIPMT function.
func Cumipmt (args []Result )Result {_ggad ,_eggb :=_bcc (args ,"\u0043U\u004d\u0049\u0050\u004d\u0054");if _eggb .Type ==ResultTypeError {return _eggb ;};_bffd :=_ggad ._cbdfc ;_acdg :=_ggad ._acg ;_gacf :=_ggad ._fbc ;_begf :=_ggad ._cefb ;_aaab :=_ggad ._cfae ;_gef :=_ggad ._gabc ;_bbd :=_agee (_bffd ,_acdg ,_gacf ,0,_gef );_bef :=0.0;if _begf ==1{if _gef ==0{_bef =-_gacf ;_begf ++;};};for _abe :=_begf ;_abe <=_aaab ;_abe ++{if _gef ==1{_bef +=_cacd (_bffd ,_abe -2,_bbd ,_gacf ,1)-_bbd ;}else {_bef +=_cacd (_bffd ,_abe -1,_bbd ,_gacf ,0);};};_bef *=_bffd ;return MakeNumberResult (_bef );};const _bcfa =57375;

// GCD implements the Excel GCD() function which returns the greatest common
// divisor of a range of numbers.
func GCD (args []Result )Result {if len (args )==0{return MakeErrorResult ("\u0047\u0043D(\u0029\u0020\u0072e\u0071\u0075\u0069\u0072es \u0061t \u006c\u0065\u0061\u0073\u0074\u0020\u006fne\u0020\u0061\u0072\u0067\u0075\u006d\u0065n\u0074");};_efac :=[]float64 {};for _ ,_eaef :=range args {switch _eaef .Type {case ResultTypeString :_adecc :=_eaef .AsNumber ();if _adecc .Type !=ResultTypeNumber {return MakeErrorResult ("\u0047\u0043D(\u0029\u0020\u006fn\u006c\u0079\u0020\u0061cce\u0070ts\u0020\u006e\u0075\u006d\u0065\u0072\u0069c \u0061\u0072\u0067\u0075\u006d\u0065\u006et\u0073");};_efac =append (_efac ,_adecc .ValueNumber );case ResultTypeList ,ResultTypeArray :_dfeebf :=GCD (_eaef .ListValues ());if _dfeebf .Type !=ResultTypeNumber {return _dfeebf ;};_efac =append (_efac ,_dfeebf .ValueNumber );case ResultTypeNumber :_efac =append (_efac ,_eaef .ValueNumber );case ResultTypeError :return _eaef ;default:return MakeErrorResult (_a .Sprintf ("\u0047\u0043\u0044()\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072t\u0065d\u0020a\u0072g\u0075\u006d\u0065\u006e\u0074\u0020\u0074\u0079\u0070\u0065\u0020\u0025\u0073",_eaef .Type ));};};if _efac [0]< 0{return MakeErrorResult ("\u0047\u0043D\u0028\u0029\u0020\u006fn\u006c\u0079 \u0061\u0063\u0063\u0065\u0070\u0074\u0073\u0020p\u006f\u0073\u0069\u0074\u0069\u0076\u0065\u0020\u0061\u0072\u0067\u0075m\u0065\u006e\u0074\u0073");};if len (_efac )==1{return MakeNumberResult (_efac [0]);};_dadc :=_efac [0];for _eggba :=1;_eggba < len (_efac );_eggba ++{if _efac [_eggba ]< 0{return MakeErrorResult ("\u0047\u0043D\u0028\u0029\u0020\u006fn\u006c\u0079 \u0061\u0063\u0063\u0065\u0070\u0074\u0073\u0020p\u006f\u0073\u0069\u0074\u0069\u0076\u0065\u0020\u0061\u0072\u0067\u0075m\u0065\u006e\u0074\u0073");};_dadc =_ecde (_dadc ,_efac [_eggba ]);};return MakeNumberResult (_dadc );};

// Max is an implementation of the Excel MAX() function.
func Max (args []Result )Result {return _ggaf (args ,false )};

// Row implements the Excel ROW function.
func Row (args []Result )Result {if len (args )< 1{return MakeErrorResult ("\u0052O\u0057\u0020\u0072\u0065q\u0075\u0069\u0072\u0065\u0073 \u006fn\u0065 \u0061\u0072\u0067\u0075\u006d\u0065\u006et");};_geade :=args [0].Ref ;if _geade .Type !=ReferenceTypeCell {return MakeErrorResult ("\u0052\u004f\u0057\u0020\u0072\u0065\u0071\u0075i\u0072\u0065\u0073 a\u006e\u0020\u0061\u0072\u0067\u0075m\u0065\u006e\u0074\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u006f\u0066\u0020\u0074\u0079p\u0065\u0020\u0072\u0065\u0066\u0065\u0072\u0065n\u0063\u0065");};_caegf ,_efcfb :=_de .ParseCellReference (_geade .Value );if _efcfb !=nil {return MakeErrorResult ("I\u006e\u0063\u006f\u0072re\u0063t\u0020\u0072\u0065\u0066\u0065r\u0065\u006e\u0063\u0065\u003a\u0020"+_geade .Value );};return MakeNumberResult (float64 (_caegf .RowIdx ));};

// MakeNumberResult constructs a number result.
func MakeNumberResult (v float64 )Result {if v ==_aca .Copysign (0,-1){v =0;};return Result {Type :ResultTypeNumber ,ValueNumber :v };};

// LCM implements the Excel LCM() function which returns the least common
// multiple of a range of numbers.
func LCM (args []Result )Result {if len (args )==0{return MakeErrorResult ("\u004c\u0043M(\u0029\u0020\u0072e\u0071\u0075\u0069\u0072es \u0061t \u006c\u0065\u0061\u0073\u0074\u0020\u006fne\u0020\u0061\u0072\u0067\u0075\u006d\u0065n\u0074");};_dbaa :=[]float64 {};for _ ,_dedeg :=range args {switch _dedeg .Type {case ResultTypeString :_daade :=_dedeg .AsNumber ();if _daade .Type !=ResultTypeNumber {return MakeErrorResult ("\u004c\u0043M(\u0029\u0020\u006fn\u006c\u0079\u0020\u0061cce\u0070ts\u0020\u006e\u0075\u006d\u0065\u0072\u0069c \u0061\u0072\u0067\u0075\u006d\u0065\u006et\u0073");};_dbaa =append (_dbaa ,_daade .ValueNumber );case ResultTypeList :_gaffa :=LCM (_dedeg .ValueList );if _gaffa .Type !=ResultTypeNumber {return _gaffa ;};_dbaa =append (_dbaa ,_gaffa .ValueNumber );case ResultTypeNumber :_dbaa =append (_dbaa ,_dedeg .ValueNumber );case ResultTypeEmpty :case ResultTypeError :return _dedeg ;};};if len (_dbaa )==0{return MakeErrorResult ("\u004cC\u004d\u0020r\u0065\u0071\u0075\u0069r\u0065\u0073\u0020a\u0074\u0020\u006c\u0065\u0061\u0073\u0074\u0020\u006fne\u0020\u006e\u006fn\u002d\u0065m\u0070\u0074\u0079\u0020\u0061\u0072g\u0075\u006de\u006e\u0074");};if _dbaa [0]< 0{return MakeErrorResult ("\u004c\u0043M\u0028\u0029\u0020\u006fn\u006c\u0079 \u0061\u0063\u0063\u0065\u0070\u0074\u0073\u0020p\u006f\u0073\u0069\u0074\u0069\u0076\u0065\u0020\u0061\u0072\u0067\u0075m\u0065\u006e\u0074\u0073");};if len (_dbaa )==1{return MakeNumberResult (_dbaa [0]);};_aadg :=_dbaa [0];for _bdgg :=1;_bdgg < len (_dbaa );_bdgg ++{if _dbaa [_bdgg ]< 0{return MakeErrorResult ("\u004c\u0043M\u0028\u0029\u0020\u006fn\u006c\u0079 \u0061\u0063\u0063\u0065\u0070\u0074\u0073\u0020p\u006f\u0073\u0069\u0074\u0069\u0076\u0065\u0020\u0061\u0072\u0067\u0075m\u0065\u006e\u0074\u0073");};_aadg =_ddea (_aadg ,_dbaa [_bdgg ]);};return MakeNumberResult (_aadg );};

// Eval evaluates a vertical range returning a list of results or an error.
func (_gcgdc VerticalRange )Eval (ctx Context ,ev Evaluator )Result {_fcef :=_gcgdc .verticalRangeReference ();if _ccegc ,_dgdf :=ev .GetFromCache (_fcef );_dgdf {return _ccegc ;};_gged ,_eecdf :=_eceg (ctx ,_gcgdc ._bbcff ,_gcgdc ._gebgf );_caaae :=_dbcgg (ctx ,ev ,_gged ,_eecdf );ev .SetCache (_fcef ,_caaae );return _caaae ;};func (_afebb *Lexer )nextRaw ()*node {for len (_afebb ._gefef )!=0{_dcbfef :=<-_afebb ._gefef [len (_afebb ._gefef )-1];if _dcbfef !=nil {return _dcbfef ;};_afebb ._gefef =_afebb ._gefef [0:len (_afebb ._gefef )-1];};return <-_afebb ._ggdfc ;};

// ISREF is an implementation of the Excel ISREF() function.
func IsRef (ctx Context ,ev Evaluator ,args []Result )Result {if len (args )!=1{return MakeErrorResult ("\u0049\u0053\u0052\u0045\u0046\u0028)\u0020\u0061\u0063\u0063\u0065\u0070\u0074\u0073\u0020\u0061\u0020\u0073\u0069n\u0067\u006c\u0065\u0020\u0061\u0072\u0067u\u006d\u0065\u006e\u0074");};return MakeBoolResult (ev .LastEvalIsRef ());};

// Update updates references in the Range after removing a row/column.
func (_dadff Range )Update (q *_fe .UpdateQuery )Expression {_feaef :=_dadff ;if q .UpdateCurrentSheet {_feaef ._gdefe =_dadff ._gdefe .Update (q );_feaef ._daea =_dadff ._daea .Update (q );};return _feaef ;};const _gade =57353;func _fbef (_cbac []Result )Result {_bbeef :=_cbac [0].ValueArray ;if len (_cbac )==1{_cbcca :=[][]Result {};for _ ,_bddd :=range _bbeef {_cbcca =append (_cbcca ,_dafb ([]Result {MakeListResult (_bddd )}).ValueList );};return MakeArrayResult (_cbcca );}else if len (_cbac )==2{_cada :=len (_bbeef );_aagdc :=len (_bbeef [0]);_bcca :=_dbfd (_cbac [1],_cada ,_aagdc );_dbdbf :=len (_bcca );_bgfd :=[][]Result {};var _ffcce []Result ;for _cdcec ,_egga :=range _bbeef {if _cdcec < _dbdbf {_ffcce =_bcca [_cdcec ];}else {_ffcce =_badgg (MakeErrorResultType (ErrorTypeNA ,""),_aagdc );};_bgfd =append (_bgfd ,_dafb ([]Result {MakeListResult (_egga ),MakeListResult (_ffcce )}).ValueList );};return MakeArrayResult (_bgfd );}else if len (_cbac )==3{_debe :=len (_bbeef );_ddge :=len (_bbeef [0]);_gaead :=_dbfd (_cbac [1],_debe ,_ddge );_bccf :=_dbfd (_cbac [2],_debe ,_ddge );_gggd :=len (_gaead );_eceab :=len (_bccf );_dgfb :=[][]Result {};var _cabfb ,_fcce []Result ;for _gefa ,_cggca :=range _bbeef {if _gefa < _gggd {_cabfb =_gaead [_gefa ];}else {_cabfb =_badgg (MakeErrorResultType (ErrorTypeNA ,""),_ddge );};if _gefa < _eceab {_fcce =_bccf [_gefa ];}else {_fcce =_badgg (MakeErrorResultType (ErrorTypeNA ,""),_ddge );};_dgfb =append (_dgfb ,_dafb ([]Result {MakeListResult (_cggca ),MakeListResult (_cabfb ),MakeListResult (_fcce )}).ValueList );};return MakeArrayResult (_dgfb );};return MakeErrorResultType (ErrorTypeValue ,"");};

// DateDif is an implementation of the Excel DATEDIF() function.
func DateDif (args []Result )Result {if len (args )!=3||args [0].Type !=ResultTypeNumber ||args [1].Type !=ResultTypeNumber ||args [2].Type !=ResultTypeString {return MakeErrorResult ("\u0044\u0041\u0054\u0045\u0044I\u0046\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0074\u0077o\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0061\u006e\u0064\u0020\u006f\u006e\u0065\u0020\u0073\u0074\u0072\u0069\u006e\u0067\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006et");};_ceb :=args [0].ValueNumber ;_gce :=args [1].ValueNumber ;if _gce < _ceb {return MakeErrorResultType (ErrorTypeNum ,"\u0054\u0068\u0065\u0020\u0073\u0074\u0061r\u0074\u0020\u0064a\u0074\u0065\u0020\u0069s\u0020\u0067\u0072\u0065\u0061\u0074\u0065\u0072\u0020\u0074\u0068\u0061\u006e\u0020\u0074\u0068\u0065\u0020\u0065\u006e\u0064\u0020\u0064\u0061\u0074\u0065");};if _gce ==_ceb {return MakeNumberResult (0);};_cea :=_bf .ToLower (args [2].ValueString );if _cea =="\u0064"{return MakeNumberResult (_gce -_ceb );};_efg :=_cgf (_ceb );_gga :=_cgf (_gce );_aab ,_abc ,_fgc :=_efg .Date ();_gaed ,_ggf ,_fcb :=_gga .Date ();_bdb :=int (_abc );_bcf :=int (_ggf );var _faf float64 ;switch _cea {case "\u0079":_faf =float64 (_gaed -_aab );if _bcf < _bdb ||(_bcf ==_bdb &&_fcb < _fgc ){_faf --;};case "\u006d":_ffbg :=_gaed -_aab ;_cbc :=_bcf -_bdb ;if _fcb < _fgc {_cbc --;};if _cbc < 0{_ffbg --;_cbc +=12;};_faf =float64 (_ffbg *12+_cbc );case "\u006d\u0064":_cec :=_bcf ;if _fcb < _fgc {_cec --;};_faf =float64 (int (_gce -_dbeg (_gaed ,_cec ,_fgc )));case "\u0079\u006d":_faf =float64 (_bcf -_bdb );if _fcb < _fgc {_faf --;};if _faf < 0{_faf +=12;};case "\u0079\u0064":_fcg :=_gaed ;if _bcf < _bdb ||(_bcf ==_bdb &&_fcb < _fgc ){_fcg --;};_faf =float64 (int (_gce -_dbeg (_fcg ,_bdb ,_fgc )));default:return MakeErrorResultType (ErrorTypeNum ,"\u0049n\u0063\u006f\u0072\u0072\u0065\u0063\u0074\u0020\u0069\u006e\u0074e\u0072\u0076\u0061\u006c\u0020\u0076\u0061\u006c\u0075\u0065");};return MakeNumberResult (_faf );};var _aebe =[...]uint8 {0,20,37,60,78,96};func (_gggbb *Lexer )Next ()*node {_gggbb ._fffg .Lock ();defer _gggbb ._fffg .Unlock ();if len (_gggbb ._bacc )> 0{_faae :=_gggbb ._bacc [0];_gggbb ._bacc =_gggbb ._bacc [1:];return _faae ;};return _gggbb .nextRaw ();};

// Price implements the Excel PRICE function.
func Price (args []Result )Result {_gaeg :=len (args );if _gaeg !=6&&_gaeg !=7{return MakeErrorResult ("\u0050\u0052I\u0043\u0045\u0020\u0072e\u0071\u0075i\u0072\u0065\u0073\u0020\u0073\u0069\u0078\u0020o\u0072\u0020\u0073\u0065\u0076\u0065\u006e\u0020\u0061\u0072\u0067\u0075m\u0065\u006e\u0074\u0073");};_aaebd ,_gafd ,_adef :=_dbda (args [0],args [1],"\u0050\u0052\u0049C\u0045");if _adef .Type ==ResultTypeError {return _adef ;};if args [2].Type !=ResultTypeNumber {return MakeErrorResult ("\u0050\u0052\u0049CE\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073 \u0072a\u0074e\u0020o\u0066\u0020\u0074\u0079\u0070\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072");};_fabd :=args [2].ValueNumber ;if _fabd < 0{return MakeErrorResultType (ErrorTypeNum ,"\u0050\u0052\u0049\u0043\u0045\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0072\u0061\u0074\u0065\u0020\u0074\u006f\u0020\u006eo\u0074\u0020\u0062\u0065\u0020n\u0065\u0067a\u0074\u0069\u0076\u0065");};if args [3].Type !=ResultTypeNumber {return MakeErrorResult ("P\u0052\u0049\u0043\u0045\u0020\u0072e\u0071\u0075\u0069\u0072\u0065\u0073 \u0079\u0069\u0065\u006c\u0064\u0020\u006ff\u0020\u0074\u0079\u0070\u0065\u0020\u006e\u0075\u006d\u0062e\u0072");};_bcgd :=args [3].ValueNumber ;if _bcgd < 0{return MakeErrorResultType (ErrorTypeNum ,"\u0050\u0052\u0049\u0043\u0045\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065s\u0020\u0079\u0069\u0065\u006c\u0064 \u0074\u006f\u0020\u006e\u006f\u0074\u0020\u0062\u0065\u0020\u006e\u0065\u0067a\u0074\u0069\u0076\u0065");};if args [4].Type !=ResultTypeNumber {return MakeErrorResult ("P\u0052\u0049\u0043\u0045\u0020\u0072\u0065\u0071\u0075i\u0072\u0065\u0073\u0020\u0072\u0065\u0064em\u0070\u0074\u0069\u006fn\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u006e\u0075mb\u0065\u0072 \u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};_bcbd :=args [4].ValueNumber ;if _bcbd <=0{return MakeErrorResultType (ErrorTypeNum ,"\u0050\u0052\u0049\u0043\u0045\u0020r\u0065\u0071\u0075i\u0072\u0065\u0073 \u0072\u0065\u0064\u0065\u006d\u0070\u0074\u0069\u006f\u006e \u0074\u006f\u0020\u0062\u0065 p\u006f\u0073\u0069\u0074\u0069\u0076\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};_ebaa :=args [5];if _ebaa .Type !=ResultTypeNumber {return MakeErrorResult ("\u0050\u0052\u0049\u0043\u0045\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065s\u0020\u0066\u0072\u0065\u0071\u0075e\u006e\u0063\u0079\u0020\u006f\u0066\u0020\u0074\u0079\u0070\u0065\u0020\u006eu\u006d\u0062\u0065\u0072");};_gcafb :=_ebaa .ValueNumber ;if !_baeg (_gcafb ){return MakeErrorResultType (ErrorTypeNum ,"\u0049n\u0063\u006f\u0072\u0072e\u0063\u0074\u0020\u0066\u0072e\u0071u\u0065n\u0063\u0065\u0020\u0076\u0061\u006c\u0075e");};_bbgc :=0;if _gaeg ==7&&args [6].Type !=ResultTypeEmpty {if args [6].Type !=ResultTypeNumber {return MakeErrorResult ("\u0050\u0052\u0049C\u0045\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0062\u0061\u0073\u0069\u0073\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072 \u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};_bbgc =int (args [6].ValueNumber );if !_facb (_bbgc ){return MakeErrorResultType (ErrorTypeNum ,"\u0049\u006e\u0063or\u0072\u0065\u0063\u0074\u0020\u0062\u0061\u0073\u0069s\u0020a\u0072g\u0075m\u0065\u006e\u0074\u0020\u0066\u006f\u0072\u0020\u0050\u0052\u0049\u0043\u0045");};};_eegd ,_adef :=_ffd (_aaebd ,_gafd ,_fabd ,_bcgd ,_bcbd ,_gcafb ,_bbgc );if _adef .Type ==ResultTypeError {return _adef ;};return MakeNumberResult (_eegd );};var _caabd =[...]int {2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36};func init (){RegisterFunction ("\u0041\u004e\u0044",And );RegisterFunction ("\u0046\u0041\u004cS\u0045",False );RegisterFunction ("\u0049\u0046",If );RegisterFunction ("\u0049F\u0045\u0052\u0052\u004f\u0052",IfError );RegisterFunction ("\u005f\u0078\u006c\u0066\u006e\u002e\u0049\u0046\u004e\u0041",IfNA );RegisterFunction ("\u0049\u0046\u0053",Ifs );RegisterFunction ("\u005fx\u006c\u0066\u006e\u002e\u0049\u0046S",Ifs );RegisterFunction ("\u004e\u004f\u0054",Not );RegisterFunction ("\u004f\u0052",Or );RegisterFunction ("\u0054\u0052\u0055\u0045",True );RegisterFunction ("\u005fx\u006c\u0066\u006e\u002e\u0058\u004fR",Xor );};const _aee =_fgb +"\u0020\u0028\u0028[0\u002d\u0039\u005d\u0029\u002b\u0029\u002c\u0020\u0028\u0028\u005b\u0030\u002d\u0039\u005d\u0029\u002b\u0029";

// SumIfs implements the SUMIFS function.
func SumIfs (args []Result )Result {_gecd :=_aaea (args ,true ,"\u0053\u0055\u004d\u0049\u0046\u0053");if _gecd .Type !=ResultTypeEmpty {return _gecd ;};_dacf :=_cdgb (args [1:]);_cagb :=0.0;_dfegg :=_gbddgb (args [0]);for _ ,_gfag :=range _dacf {_cagb +=_dfegg [_gfag ._daffc ][_gfag ._gbebc ].ValueNumber ;};return MakeNumberResult (float64 (_cagb ));};

// IsNA is an implementation of the Excel ISNA() function.
func IsNA (args []Result )Result {if len (args )!=1{return MakeErrorResult ("\u0049\u0053\u004e\u0041\u0020\u0072\u0065\u0071\u0075\u0069\u0072e\u0073\u0020\u006f\u006e\u0065\u0020\u0061\u0072\u0067\u0075m\u0065\u006e\u0074");};return MakeBoolResult (args [0].Type ==ResultTypeError &&args [0].ValueString =="\u0023\u004e\u002f\u0041");};

// Dollarfr implements the Excel DOLLARFR function.
func Dollarfr (args []Result )Result {_bfbf ,_ggae ,_abdf :=_dbad (args ,"\u0044\u004f\u004c\u004c\u0041\u0052\u0046\u0052");if _abdf .Type ==ResultTypeError {return _abdf ;};if _ggae ==0{return MakeErrorResultType (ErrorTypeDivideByZero ,"\u0044\u004f\u004c\u004c\u0041R\u0046\u0052\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0066r\u0061\u0063\u0074\u0069\u006f\u006e\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u0070\u006f\u0073\u0069\u0074\u0069\u0076\u0065");};if _bfbf ==0{return MakeNumberResult (0);};_ebagg :=_bfbf < 0;if _ebagg {_bfbf =-_bfbf ;};_afaa :=float64 (int (_bfbf ));_dfee :=args [0].Value ();_bffdb :=_bf .Split (_dfee ,"\u002e");_cdfc :=0.0;if len (_bffdb )> 1{var _fagg error ;_cdbca :=_bffdb [1];_cdfc ,_fagg =_d .ParseFloat (_cdbca ,64);if _fagg !=nil {return MakeErrorResult ("I\u006e\u0063\u006f\u0072\u0072\u0065\u0063\u0074\u0020\u0066\u0072\u0061\u0063\u0074\u0069\u006f\u006e\u0020a\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0020\u0066\u006fr \u0044\u004f\u004cL\u0041R\u0046\u0052");};_dfgg :=float64 (len (_cdbca ));_cdfc /=_aca .Pow (10,_dfgg );};_fgff :=_cdfc *_ggae /_aca .Pow (10,float64 (int (_aca .Log10 (_ggae )))+1)+_afaa ;if _ebagg {_fgff =-_fgff ;};return MakeNumberResult (_fgff );};

// ListValues converts an array to a list or returns a lists values. This is used
// for functions that can accept an array, but don't care about ordering to
// reuse the list function logic.
func (_geef Result )ListValues ()[]Result {if _geef .Type ==ResultTypeArray {_dadef :=[]Result {};for _ ,_cbec :=range _geef .ValueArray {for _ ,_gbffd :=range _cbec {_dadef =append (_dadef ,_gbffd );};};return _dadef ;};if _geef .Type ==ResultTypeList {return _geef .ValueList ;};return nil ;};func _egdc (_eae ,_eea int )int {if _eea ==2&&_cgec (_eae ){return 29;}else {return _bcg [_eea -1];};};func _dbcgg (_eeffg Context ,_fdgbbb Evaluator ,_cgaaf ,_dadeg string )Result {_ffeee ,_abggg :=_de .ParseCellReference (_cgaaf );if _abggg !=nil {return MakeErrorResult (_a .Sprintf ("\u0075\u006e\u0061bl\u0065\u0020\u0074\u006f\u0020\u0070\u0061\u0072\u0073e\u0020r\u0061n\u0067e\u0020\u0025\u0073\u003a\u0020\u0065\u0072\u0072\u006f\u0072\u0020\u0025\u0073",_cgaaf ,_abggg .Error ()));};_abaeb ,_edceb :=_ffeee .ColumnIdx ,_ffeee .RowIdx ;_bcdfa ,_bbfeb :=_de .ParseCellReference (_dadeg );if _bbfeb !=nil {return MakeErrorResult (_a .Sprintf ("\u0075\u006e\u0061bl\u0065\u0020\u0074\u006f\u0020\u0070\u0061\u0072\u0073e\u0020r\u0061n\u0067e\u0020\u0025\u0073\u003a\u0020\u0065\u0072\u0072\u006f\u0072\u0020\u0025\u0073",_dadeg ,_bbfeb .Error ()));};_eabd ,_acgd :=_bcdfa .ColumnIdx ,_bcdfa .RowIdx ;_ccdfe :=[][]Result {};for _gggfbf :=_edceb ;_gggfbf <=_acgd ;_gggfbf ++{_fggdd :=[]Result {};for _eeda :=_abaeb ;_eeda <=_eabd ;_eeda ++{_dfcdf :=_eeffg .Cell (_a .Sprintf ("\u0025\u0073\u0025\u0064",_de .IndexToColumn (_eeda ),_gggfbf ),_fdgbbb );_fggdd =append (_fggdd ,_dfcdf );};_ccdfe =append (_ccdfe ,_fggdd );};if len (_ccdfe )==1{if len (_ccdfe [0])==1{return _ccdfe [0][0];};return MakeListResult (_ccdfe [0]);};return MakeArrayResult (_ccdfe );};

// Cell is an implementation of the Excel CELL function that returns information
// about the formatting, location, or contents of a cell.
func Cell (ctx Context ,ev Evaluator ,args []Result )Result {if len (args )!=1&&len (args )!=2{return MakeErrorResult ("\u0043\u0045\u004cL \u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020o\u006ee\u0020o\u0072 \u0074\u0077\u006f\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0073");};_fadcg :=args [0].AsString ();if _fadcg .Type !=ResultTypeString {return MakeErrorResult ("\u0043\u0045\u004c\u004c\u0020\u0072e\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0066\u0069\u0072\u0073\u0074\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006et\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u006f\u0066\u0020\u0074\u0079\u0070\u0065 \u0073t\u0072\u0069\u006e\u0067");};_afag :="\u0041\u0031";if len (args )==2{_adcb :=args [1].Ref ;if _adcb .Type !=ReferenceTypeCell {return MakeErrorResult ("\u0043\u0045\u004c\u004c\u0020\u0072\u0065\u0071\u0075\u0069\u0072e\u0073\u0020\u0073\u0065\u0063\u006f\u006e\u0064 \u0061r\u0067\u0075\u006d\u0065\u006e\u0074\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u006f\u0066\u0020\u0074\u0079p\u0065\u0020\u0072\u0065\u0066\u0065\u0072\u0065\u006e\u0063\u0065");};_afag =_adcb .Value ;};switch _fadcg .ValueString {case "\u0061d\u0064\u0072\u0065\u0073\u0073":_dddbg ,_cbaf :=_de .ParseCellReference (_afag );if _cbaf !=nil {return MakeErrorResult ("I\u006e\u0063\u006f\u0072re\u0063t\u0020\u0072\u0065\u0066\u0065r\u0065\u006e\u0063\u0065\u003a\u0020"+_afag );};_ebbe :="\u0024"+_dddbg .Column +"\u0024"+_d .Itoa (int (_dddbg .RowIdx ));if _dddbg .SheetName !=""{_ebbe =_dddbg .SheetName +"\u0021"+_ebbe ;};return MakeStringResult (_ebbe );case "\u0063\u006f\u006c":_dbbee ,_ebaccb :=_de .ParseCellReference (_afag );if _ebaccb !=nil {return MakeErrorResult ("I\u006e\u0063\u006f\u0072re\u0063t\u0020\u0072\u0065\u0066\u0065r\u0065\u006e\u0063\u0065\u003a\u0020"+_afag );};return MakeNumberResult (float64 (_dbbee .ColumnIdx +1));case "\u0063\u006f\u006co\u0072":_fbbg :=_bf .Contains (ctx .GetFormat (_afag ),"\u005b\u0052\u0045D\u005d");return MakeBoolResult (_fbbg );case "\u0063\u006f\u006e\u0074\u0065\u006e\u0074\u0073":return args [1];case "\u0066\u0069\u006c\u0065\u006e\u0061\u006d\u0065":return MakeStringResult (ctx .GetFilename ());case "\u0066\u006f\u0072\u006d\u0061\u0074":_ddfde :="\u0047";_bbdf :=ctx .GetFormat (_afag );if _bbdf =="\u0047e\u006e\u0065\u0072\u0061\u006c"||_bdbb .MatchString (_bbdf ){_ddfde ="\u0046\u0030";}else if _bbdf =="\u0030\u0025"{_ddfde ="\u0050\u0030";}else if _bbdf =="\u004d\u004d\u004d\u0020\u0044\u0044"{_ddfde ="\u0044\u0032";}else if _bbdf =="\u004d\u004d\u002fY\u0059"{_ddfde ="\u0044\u0033";}else if _bbdf =="\u004d\u004d\u002f\u0044D/\u0059\u0059\u005c\u0020\u0048\u0048\u003a\u004d\u004d\u005c\u0020\u0041\u004d\u002fP\u004d"||_bbdf =="M\u004d/\u0044\u0044\u002f\u0059\u0059\u0059\u0059\u005c \u0048\u0048\u003a\u004dM:\u0053\u0053"{_ddfde ="\u0044\u0034";}else if _bbdf =="\u004d\u004d\u005c\u002d\u0044\u0044"{_ddfde ="\u0044\u0035";}else if _bbdf =="\u0048H\u003aM\u004d\u003a\u0053\u0053\u005c\u0020\u0041\u004d\u002f\u0050\u004d"{_ddfde ="\u0044\u0036";}else if _bbdf =="\u0048\u0048\u003aM\u004d\u005c\u0020\u0041\u004d\u002f\u0050\u004d"{_ddfde ="\u0044\u0037";}else if _bbdf =="\u0048\u0048\u003a\u004d\u004d\u003a\u0053\u0053"{_ddfde ="\u0044\u0038";}else if _bbdf =="\u0048\u0048\u003aM\u004d"{_ddfde ="\u0044\u0039";}else if _cagfe .MatchString (_bbdf ){_ddfde ="\u002e\u0030";}else if _gecf .MatchString (_bbdf ){_ddfde ="\u002e\u0030\u0028\u0029";}else if _bdba .MatchString (_bbdf ){_ddfde ="\u0043\u0030";}else if _gecg .MatchString (_bbdf )||_bcgfa .MatchString (_bbdf ){_ddfde ="\u0044\u0031";}else if _abebf :=_cbea .FindStringSubmatch (_bbdf );len (_abebf )> 1{_ddfde ="\u0046"+_d .Itoa (len (_abebf [1]));}else if _fega :=_egdgg .FindStringSubmatch (_bbdf );len (_fega )> 1{_ddfde ="\u002e"+_d .Itoa (len (_fega [2]));}else if _fdee :=_ddgd .FindStringSubmatch (_bbdf );len (_fdee )> 1{_ddfde ="\u0050"+_d .Itoa (len (_fdee [2]));}else if _bgga :=_beac .FindStringSubmatch (_bbdf );len (_bgga )> 1{_ddfde ="\u0043"+_cgba (_bgga ,1);}else if _dece :=_eaed .FindStringSubmatch (_bbdf );len (_dece )> 1{_ddfde ="\u0043"+_cgba (_dece ,1);}else if _dgcd :=_adeb .FindStringSubmatch (_bbdf );len (_dgcd )> 1{_ddfde ="\u002e"+_cgba (_dgcd ,1)+"\u0028\u0029";}else if _bdeb :=_dgfge .FindStringSubmatch (_bbdf );len (_bdeb )> 1{_ddfde ="\u002e"+_cgba (_bdeb ,1);}else if _bbed :=_cfdb .FindStringSubmatch (_bbdf );len (_bbed )> 1{_ddfde ="\u0053"+_cgba (_bbed ,3);};if _ddfde !="\u0047"&&_bf .Contains (_bbdf ,"\u005b\u0052\u0045D\u005d"){_ddfde +="\u002d";};return MakeStringResult (_ddfde );case "p\u0061\u0072\u0065\u006e\u0074\u0068\u0065\u0073\u0065\u0073":_cddf :=ctx .GetFormat (_afag );if _ebed .MatchString (_cddf ){return MakeNumberResult (1);}else {return MakeNumberResult (0);};case "\u0070\u0072\u0065\u0066\u0069\u0078":return MakeStringResult (ctx .GetLabelPrefix (_afag ));case "\u0070r\u006f\u0074\u0065\u0063\u0074":_beef :=0.0;if ctx .GetLocked (_afag ){_beef =1.0;};return MakeNumberResult (_beef );case "\u0072\u006f\u0077":_dbadc ,_dfge :=_de .ParseCellReference (_afag );if _dfge !=nil {return MakeErrorResult ("I\u006e\u0063\u006f\u0072re\u0063t\u0020\u0072\u0065\u0066\u0065r\u0065\u006e\u0063\u0065\u003a\u0020"+_afag );};return MakeNumberResult (float64 (_dbadc .RowIdx ));case "\u0074\u0079\u0070\u0065":switch args [1].Type {case ResultTypeEmpty :return MakeStringResult ("\u0062");case ResultTypeString :return MakeStringResult ("\u006c");default:return MakeStringResult ("\u0076");};case "\u0077\u0069\u0064t\u0068":_abac ,_degbb :=_de .ParseCellReference (_afag );if _degbb !=nil {return MakeErrorResult ("I\u006e\u0063\u006f\u0072re\u0063t\u0020\u0072\u0065\u0066\u0065r\u0065\u006e\u0063\u0065\u003a\u0020"+_afag );};if _abac .SheetName ==""{return MakeNumberResult (ctx .GetWidth (int (_abac .ColumnIdx )));}else {return MakeNumberResult (ctx .Sheet (_abac .SheetName ).GetWidth (int (_abac .ColumnIdx )));};};return MakeErrorResult ("\u0049\u006e\u0063or\u0072\u0065\u0063\u0074\u0020\u0066\u0069\u0072\u0073t\u0020a\u0072g\u0075m\u0065\u006e\u0074\u0020\u006f\u0066\u0020\u0043\u0045\u004c\u004c\u003a\u0020"+_fadcg .ValueString );};

// NewBinaryExpr constructs a new binary expression with a given operator.
func NewBinaryExpr (lhs Expression ,op BinOpType ,rhs Expression )Expression {return BinaryExpr {_db :lhs ,_cg :rhs ,_df :op };};type durationArgs struct{_cdbc float64 ;_fef float64 ;_bgec float64 ;_cgeb float64 ;_fcgc float64 ;_dfcb int ;};

// Eval evaluates a horizontal range with prefix returning a list of results or an error.
func (_bdgc PrefixHorizontalRange )Eval (ctx Context ,ev Evaluator )Result {_fbfd :=_bdgc ._aaaeb .Reference (ctx ,ev );switch _fbfd .Type {case ReferenceTypeSheet :if _bedge (_fbfd ,ctx ){return MakeErrorResultType (ErrorTypeName ,_a .Sprintf ("\u0053h\u0065e\u0074\u0020\u0025\u0073\u0020n\u006f\u0074 \u0066\u006f\u0075\u006e\u0064",_fbfd .Value ));};_afacf :=_bdgc .horizontalRangeReference (_fbfd .Value );if _ggggg ,_bcgbc :=ev .GetFromCache (_afacf );_bcgbc {return _ggggg ;};_geed :=ctx .Sheet (_fbfd .Value );_aeda ,_efea :=_daeef (_geed ,_bdgc ._bfcaf ,_bdgc ._geec );_ggea :=_dbcgg (_geed ,ev ,_aeda ,_efea );ev .SetCache (_afacf ,_ggea );return _ggea ;default:return MakeErrorResult (_a .Sprintf ("\u006e\u006f\u0020\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0020\u0066\u006f\u0072\u0020r\u0065f\u0065\u0072\u0065\u006e\u0063\u0065\u0020\u0074\u0079\u0070\u0065\u0020\u0025\u0073",_fbfd .Type ));};};func _ab (_ef ,_bfc [][]Result )bool {if len (_ef )!=len (_bfc ){return false ;};for _ca :=range _ef {if len (_ef [_ca ])!=len (_bfc [_ca ]){return false ;};};return true ;};

// Substitute is an implementation of the Excel SUBSTITUTE function.
func Substitute (args []Result )Result {_egabf :=len (args );if _egabf !=3&&_egabf !=4{return MakeErrorResult ("\u0053\u0055\u0042\u0053\u0054\u0049\u0054U\u0054\u0045\u0020r\u0065\u0071\u0075\u0069r\u0065\u0073\u0020\u0074\u0068\u0072\u0065\u0065\u0020\u006f\u0072\u0020\u0066\u006f\u0075\u0072\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0073");};_geadd ,_afeeg :=_fgcd (args [0],"\u0053\u0055\u0042\u0053\u0054\u0049\u0054\u0055\u0054\u0045","\u0074\u0065\u0078\u0074");if _afeeg .Type ==ResultTypeError {return _afeeg ;};_ececg ,_afeeg :=_fgcd (args [1],"\u0053\u0055\u0042\u0053\u0054\u0049\u0054\u0055\u0054\u0045","\u006f\u006c\u0064\u0020\u0074\u0065\u0078\u0074");if _afeeg .Type ==ResultTypeError {return _afeeg ;};_eggad ,_afeeg :=_fgcd (args [2],"\u0053\u0055\u0042\u0053\u0054\u0049\u0054\u0055\u0054\u0045","\u006e\u0065\u0077\u0020\u0074\u0065\u0078\u0074");if _afeeg .Type ==ResultTypeError {return _afeeg ;};_dafdda :=0;if _egabf ==3{return MakeStringResult (_bf .Replace (_geadd ,_ececg ,_eggad ,-1));}else {_ecfad ,_ecgfg :=_adgac (args [3],"\u0053\u0055\u0042\u0053\u0054\u0049\u0054\u0055\u0054\u0045","\u0069\u006e\u0073t\u0061\u006e\u0063\u0065\u005f\u006e\u0075\u006d");if _ecgfg .Type ==ResultTypeError {return _ecgfg ;};_dafdda =int (_ecfad );if _dafdda < 1{return MakeErrorResult ("\u0069\u006es\u0074\u0061\u006e\u0063e\u005f\u006eu\u006d\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u006d\u006f\u0072\u0065\u0020\u0074\u0068\u0061\u006e \u007a\u0065\u0072\u006f");};_egae :=_geadd ;_fgbd :=_dafdda ;_cccg :=-1;_cbdad :=len (_ececg );_fedf :=0;for {_fgbd --;_agfce :=_bf .Index (_egae ,_ececg );if _agfce ==-1{_cccg =-1;break ;}else {_cccg =_agfce +_fedf ;if _fgbd ==0{break ;};_acfa :=_cbdad +_agfce ;_fedf +=_acfa ;_egae =_egae [_acfa :];};};if _cccg ==-1{return MakeStringResult (_geadd );}else {_edgad :=_geadd [:_cccg ];_dagc :=_geadd [_cccg +_cbdad :];return MakeStringResult (_edgad +_eggad +_dagc );};};};

// Yieldmat implements the Excel YIELDMAT function.
func Yieldmat (args []Result )Result {_gegg :=len (args );if _gegg !=5&&_gegg !=6{return MakeErrorResult ("\u0059\u0049\u0045\u004c\u0044\u004d\u0041\u0054\u0020\u0072\u0065\u0071\u0075i\u0072\u0065\u0073\u0020\u0066\u0069v\u0065\u0020\u006f\u0072\u0020\u0073\u0069\u0078\u0020\u0061\u0072\u0067\u0075m\u0065\u006e\u0074\u0073");};_dacc ,_fcgda ,_afcc :=_dbda (args [0],args [1],"\u0059\u0049\u0045\u004c\u0044\u004d\u0041\u0054");if _afcc .Type ==ResultTypeError {return _afcc ;};_fggg ,_afcc :=_ged (args [2],"\u0069\u0073\u0073\u0075\u0065\u0020\u0064\u0061\u0074\u0065","\u0059\u0049\u0045\u004c\u0044\u004d\u0041\u0054");if _afcc .Type ==ResultTypeError {return _afcc ;};if _fggg >=_dacc {return MakeErrorResult ("\u0059\u0049\u0045\u004cD\u004d\u0041\u0054\u0020\u0072\u0065\u0071\u0075\u0069r\u0065\u0073\u0020\u0069\u0073\u0073\u0075\u0065\u0020\u0064\u0061\u0074\u0065\u0020\u0074\u006f\u0020\u0062e\u0020\u0062\u0065\u0066\u006fr\u0065\u0020\u0073\u0065\u0074\u0074\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u0064\u0061\u0074\u0065");};if args [3].Type !=ResultTypeNumber {return MakeErrorResult ("\u0059\u0049E\u004c\u0044\u004d\u0041T\u0020\u0072e\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0072a\u0074\u0065\u0020\u006f\u0066\u0020\u0074\u0079\u0070\u0065\u0020\u006eu\u006d\u0062\u0065\u0072");};_ffba :=args [3].ValueNumber ;if _ffba < 0{return MakeErrorResultType (ErrorTypeNum ,"\u0059\u0049\u0045\u004c\u0044M\u0041\u0054\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0072a\u0074\u0065\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u006e\u006f\u006e\u0020\u006e\u0065\u0067\u0061\u0074\u0069\u0076\u0065");};if args [4].Type !=ResultTypeNumber {return MakeErrorResult ("\u0059\u0049\u0045\u004c\u0044\u004d\u0041\u0054\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0079\u0069\u0065\u006c\u0064\u0020o\u0066\u0020\u0074\u0079\u0070e\u0020\u006eu\u006d\u0062\u0065\u0072");};_ffea :=args [4].ValueNumber ;if _ffea <=0{return MakeErrorResultType (ErrorTypeNum ,"Y\u0049\u0045\u004c\u0044\u004d\u0041T\u0020\u0072\u0065\u0071\u0075\u0069r\u0065\u0073\u0020\u0070\u0072\u0020\u0074o\u0020\u0062\u0065\u0020\u0070\u006f\u0073\u0069\u0074\u0069v\u0065");};_caaf :=0;if _gegg ==6&&args [5].Type !=ResultTypeEmpty {if args [5].Type !=ResultTypeNumber {return MakeErrorResult ("\u0059I\u0045\u004cD\u004d\u0041\u0054 \u0072\u0065\u0071\u0075\u0069\u0072\u0065s\u0020\u0062\u0061\u0073\u0069\u0073 \u0074\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006d\u0062\u0065r\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};_caaf =int (args [5].ValueNumber );if !_facb (_caaf ){return MakeErrorResultType (ErrorTypeNum ,"\u0049\u006ec\u006f\u0072\u0072\u0065c\u0074\u0020b\u0061\u0073\u0069\u0073\u0020\u0061\u0072\u0067u\u006d\u0065\u006e\u0074\u0020\u0066\u006f\u0072\u0020\u0059\u0049\u0045L\u0044\u004d\u0041\u0054");};};_ebbc ,_afcc :=_gacb (_fggg ,_fcgda ,_caaf );if _afcc .Type ==ResultTypeError {return _afcc ;};_dgcf ,_afcc :=_gacb (_fggg ,_dacc ,_caaf );if _afcc .Type ==ResultTypeError {return _afcc ;};_fbdd ,_afcc :=_gacb (_dacc ,_fcgda ,_caaf );if _afcc .Type ==ResultTypeError {return _afcc ;};_aabf :=1+_ebbc *_ffba ;_aabf /=_ffea /100+_dgcf *_ffba ;_aabf --;_aabf /=_fbdd ;return MakeNumberResult (_aabf );};

// Large implements the Excel LARGE function.
func Large (args []Result )Result {return _bbcd (args ,true )};

// NewPrefixHorizontalRange constructs a new full rows range with prefix.
func NewPrefixHorizontalRange (pfx Expression ,v string )Expression {_dabdg :=_bf .Split (v ,"\u003a");if len (_dabdg )!=2{return nil ;};_aceb ,_ :=_d .Atoi (_dabdg [0]);_bdfeg ,_ :=_d .Atoi (_dabdg [1]);if _aceb > _bdfeg {_aceb ,_bdfeg =_bdfeg ,_aceb ;};return PrefixHorizontalRange {_aaaeb :pfx ,_bfcaf :_aceb ,_geec :_bdfeg };};func init (){_egcf =_gb .New (_gb .NewSource (_ad .Now ().UnixNano ()));RegisterFunction ("\u0041\u0042\u0053",_aabc ("\u0041\u0053\u0049\u004e",_aca .Abs ));RegisterFunction ("\u0041\u0043\u004f\u0053",_aabc ("\u0041\u0053\u0049\u004e",_aca .Acos ));RegisterFunction ("\u0041\u0043\u004fS\u0048",_aabc ("\u0041\u0053\u0049\u004e",_aca .Acosh ));RegisterFunction ("\u005f\u0078\u006c\u0066\u006e\u002e\u0041\u0043\u004f\u0054",_aabc ("\u0041\u0043\u004f\u0054",func (_eccg float64 )float64 {return _aca .Pi /2-_aca .Atan (_eccg )}));RegisterFunction ("_\u0078\u006c\u0066\u006e\u002e\u0041\u0043\u004f\u0054\u0048",_aabc ("\u0041\u0043\u004fT\u0048",func (_geff float64 )float64 {return _aca .Atanh (1/_geff )}));RegisterFunction ("\u005f\u0078\u006cf\u006e\u002e\u0041\u0052\u0041\u0042\u0049\u0043",Arabic );RegisterFunction ("\u0041\u0053\u0049\u004e",_aabc ("\u0041\u0053\u0049\u004e",_aca .Asin ));RegisterFunction ("\u0041\u0053\u0049N\u0048",_aabc ("\u0041\u0053\u0049N\u0048",_aca .Asinh ));RegisterFunction ("\u0041\u0054\u0041\u004e",_aabc ("\u0041\u0054\u0041\u004e",_aca .Atan ));RegisterFunction ("\u0041\u0054\u0041N\u0048",_aabc ("\u0041\u0054\u0041N\u0048",_aca .Atanh ));RegisterFunction ("\u0041\u0054\u0041N\u0032",Atan2 );RegisterFunction ("\u005f\u0078\u006c\u0066\u006e\u002e\u0042\u0041\u0053\u0045",Base );RegisterFunction ("\u0043E\u0049\u004c\u0049\u004e\u0047",Ceiling );RegisterFunction ("\u005fx\u006cf\u006e\u002e\u0043\u0045\u0049L\u0049\u004eG\u002e\u004d\u0041\u0054\u0048",CeilingMath );RegisterFunction ("_\u0078\u006c\u0066\u006e.C\u0045I\u004c\u0049\u004e\u0047\u002eP\u0052\u0045\u0043\u0049\u0053\u0045",CeilingPrecise );RegisterFunction ("\u0043\u004f\u004d\u0042\u0049\u004e",Combin );RegisterFunction ("\u005f\u0078\u006c\u0066\u006e\u002e\u0043\u004f\u004d\u0042\u0049\u004e\u0041",Combina );RegisterFunction ("\u0043\u004f\u0053",_aabc ("\u0043\u004f\u0053",_aca .Cos ));RegisterFunction ("\u0043\u004f\u0053\u0048",_aabc ("\u0043\u004f\u0053\u0048",_aca .Cosh ));RegisterFunction ("\u005fx\u006c\u0066\u006e\u002e\u0043\u004fT",_dgcg ("\u0043\u004f\u0054",_aca .Tan ));RegisterFunction ("\u005f\u0078\u006c\u0066\u006e\u002e\u0043\u004f\u0054\u0048",_dgcg ("\u0043\u004f\u0054\u0048",_aca .Tanh ));RegisterFunction ("\u005fx\u006c\u0066\u006e\u002e\u0043\u0053C",_dgcg ("\u0043\u0053\u0043",_aca .Sin ));RegisterFunction ("\u005f\u0078\u006c\u0066\u006e\u002e\u0043\u0053\u0043\u0048",_dgcg ("\u0043\u0053\u0043",_aca .Sinh ));RegisterFunction ("\u005f\u0078\u006c\u0066\u006e\u002e\u0044\u0045\u0043\u0049\u004d\u0041\u004c",Decimal );RegisterFunction ("\u0044E\u0047\u0052\u0045\u0045\u0053",Degrees );RegisterFunction ("\u0045\u0056\u0045\u004e",Even );RegisterFunction ("\u0045\u0058\u0050",_aabc ("\u0045\u0058\u0050",_aca .Exp ));RegisterFunction ("\u0046\u0041\u0043\u0054",Fact );RegisterFunction ("\u0046\u0041\u0043\u0054\u0044\u004f\u0055\u0042\u004c\u0045",FactDouble );RegisterFunction ("\u0046\u004c\u004fO\u0052",Floor );RegisterFunction ("\u005f\u0078l\u0066\u006e\u002eF\u004c\u004f\u004f\u0052\u002e\u004d\u0041\u0054\u0048",FloorMath );RegisterFunction ("\u005f\u0078\u006c\u0066n.\u0046\u004c\u004f\u004f\u0052\u002e\u0050\u0052\u0045\u0043\u0049\u0053\u0045",FloorPrecise );RegisterFunction ("\u0047\u0043\u0044",GCD );RegisterFunction ("\u0049\u004e\u0054",Int );RegisterFunction ("I\u0053\u004f\u002e\u0043\u0045\u0049\u004c\u0049\u004e\u0047",CeilingPrecise );RegisterFunction ("\u004c\u0043\u004d",LCM );RegisterFunction ("\u004c\u004e",_aabc ("\u004c\u004e",_aca .Log ));RegisterFunction ("\u004c\u004f\u0047",Log );RegisterFunction ("\u004c\u004f\u00471\u0030",_aabc ("\u004c\u004f\u00471\u0030",_aca .Log10 ));RegisterFunction ("\u004dD\u0045\u0054\u0045\u0052\u004d",MDeterm );RegisterFunction ("\u004d\u004f\u0044",Mod );RegisterFunction ("\u004d\u0052\u004f\u0055\u004e\u0044",Mround );RegisterFunction ("M\u0055\u004c\u0054\u0049\u004e\u004f\u004d\u0049\u0041\u004c",Multinomial );RegisterFunction ("_\u0078\u006c\u0066\u006e\u002e\u004d\u0055\u004e\u0049\u0054",Munit );RegisterFunction ("\u004f\u0044\u0044",Odd );RegisterFunction ("\u0050\u0049",Pi );RegisterFunction ("\u0050\u004f\u0057E\u0052",Power );RegisterFunction ("\u0050R\u004f\u0044\u0055\u0043\u0054",Product );RegisterFunction ("\u0051\u0055\u004f\u0054\u0049\u0045\u004e\u0054",Quotient );RegisterFunction ("\u0052A\u0044\u0049\u0041\u004e\u0053",Radians );RegisterFunction ("\u0052\u0041\u004e\u0044",Rand );RegisterFunction ("R\u0041\u004e\u0044\u0042\u0045\u0054\u0057\u0045\u0045\u004e",RandBetween );RegisterFunction ("\u0052\u004f\u004dA\u004e",Roman );RegisterFunction ("\u0052\u004f\u0055N\u0044",Round );RegisterFunction ("\u0052O\u0055\u004e\u0044\u0044\u004f\u0057N",RoundDown );RegisterFunction ("\u0052O\u0055\u004e\u0044\u0055\u0050",RoundUp );RegisterFunction ("\u005fx\u006c\u0066\u006e\u002e\u0053\u0045C",_dgcg ("\u0053\u0045\u0043",_aca .Cos ));RegisterFunction ("\u005f\u0078\u006c\u0066\u006e\u002e\u0053\u0045\u0043\u0048",_dgcg ("\u0053\u0045\u0043\u0048",_aca .Cosh ));RegisterFunction ("\u0053E\u0052\u0049\u0045\u0053\u0053\u0055M",SeriesSum );RegisterFunction ("\u0053\u0049\u0047\u004e",Sign );RegisterFunction ("\u0053\u0049\u004e",_aabc ("\u0053\u0049\u004e",_aca .Sin ));RegisterFunction ("\u0053\u0049\u004e\u0048",_aabc ("\u0053\u0049\u004e\u0048",_aca .Sinh ));RegisterFunction ("\u0053\u0051\u0052\u0054",_aabc ("\u0053\u0051\u0052\u0054",_aca .Sqrt ));RegisterFunction ("\u0053\u0051\u0052\u0054\u0050\u0049",_aabc ("\u0053\u0051\u0052\u0054\u0050\u0049",func (_ccegd float64 )float64 {return _aca .Sqrt (_ccegd *_aca .Pi )}));RegisterFunction ("\u0053\u0055\u004d",Sum );RegisterFunction ("\u0053\u0055\u004dI\u0046",SumIf );RegisterFunction ("\u0053\u0055\u004d\u0049\u0046\u0053",SumIfs );RegisterFunction ("\u0053\u0055\u004d\u0050\u0052\u004f\u0044\u0055\u0043\u0054",SumProduct );RegisterFunction ("\u0053\u0055\u004dS\u0051",SumSquares );RegisterFunction ("\u0054\u0041\u004e",_aabc ("\u0054\u0041\u004e",_aca .Tan ));RegisterFunction ("\u0054\u0041\u004e\u0048",_aabc ("\u0054\u0041\u004e\u0048",_aca .Tanh ));RegisterFunction ("\u0054\u0052\u0055N\u0043",Trunc );};

// NewEvaluator constructs a new defEval object which is the default formula evaluator.
func NewEvaluator ()Evaluator {_ecfa :=&defEval {};_ecfa .evCache =_beg ();return _ecfa };

// Year is an implementation of the Excel YEAR() function.
func Year (ctx Context ,ev Evaluator ,args []Result )Result {if len (args )!=1||args [0].Type !=ResultTypeNumber {return MakeErrorResult ("\u0059\u0045\u0041\u0052\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0061\u0020\u0073\u0069\u006e\u0067\u006c\u0065\u0020\u006eu\u006d\u0062\u0065\u0072\u0020a\u0072\u0067u\u006d\u0065\u006e\u0074");};_cabc :=ctx .GetEpoch ();_cgef ,_gdgd :=_fdga (args [0].Value (),_cabc );if _gdgd !=nil {return MakeErrorResult ("\u0059\u0045AR\u0020\u0072\u0065q\u0075\u0069\u0072\u0065s a\u0020si\u006e\u0067\u006c\u0065\u0020\u0064\u0061te\u0020\u0061\u0072\u0067\u0075\u006d\u0065n\u0074");};return MakeNumberResult (float64 (_cgef .Year ()));};func Unicode (args []Result )Result {if len (args )!=1{return MakeErrorResult ("\u0055\u004e\u0049\u0043\u004fD\u0045\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0061\u0020s\u0069\u006e\u0067\u006c\u0065\u0020\u0073\u0074\u0072\u0069\u006e\u0067\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};_ceaca :=args [0].AsString ();if _ceaca .Type !=ResultTypeString {return MakeErrorResult ("\u0055\u004e\u0049\u0043\u004fD\u0045\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0061\u0020s\u0069\u006e\u0067\u006c\u0065\u0020\u0073\u0074\u0072\u0069\u006e\u0067\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};if len (_ceaca .ValueString )==0{return MakeErrorResult ("\u0055\u004e\u0049\u0043\u004f\u0044\u0045 \u0072\u0065\u0071u\u0069\u0072\u0065\u0073 \u0061\u0020\u006e\u006f\u006e\u002d\u007a\u0065\u0072\u006f\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};return MakeNumberResult (float64 (_ceaca .ValueString [0]));};

// IfNA is an implementation of the Excel IFNA() function. It takes two arguments.
func IfNA (args []Result )Result {if len (args )!=2{return MakeErrorResult ("I\u0046\u004e\u0041\u0020\u0072\u0065q\u0075\u0069\u0072\u0065\u0073\u0020\u0074\u0077\u006f \u0061\u0072\u0067u\u006de\u006e\u0074\u0073");};if args [0].Type ==ResultTypeError &&args [0].ValueString =="\u0023\u004e\u002f\u0041"{return args [1];};return args [0];};func _cacc (_gcdff ,_aeddg Result ,_fabc ,_fabde bool )cmpResult {_gcdff =_gcdff .AsNumber ();_aeddg =_aeddg .AsNumber ();if _gcdff .Type !=_aeddg .Type {return _bfbfg ;};if _gcdff .Type ==ResultTypeNumber {if _gcdff .ValueNumber ==_aeddg .ValueNumber {return _ageeb ;};if _gcdff .ValueNumber < _aeddg .ValueNumber {return _bgaeg ;};return _dbfc ;};if _gcdff .Type ==ResultTypeString {_ecfe :=_gcdff .ValueString ;_fcfd :=_aeddg .ValueString ;if !_fabc {_ecfe =_bf .ToLower (_ecfe );_fcfd =_bf .ToLower (_fcfd );};if _fabde {_fddd :=_gf .Match (_fcfd ,_ecfe );if _fddd {return _ageeb ;}else {return _dbfc ;};};return cmpResult (_bf .Compare (_ecfe ,_fcfd ));};if _gcdff .Type ==ResultTypeEmpty {return _ageeb ;};if _gcdff .Type ==ResultTypeList {if len (_gcdff .ValueList )< len (_aeddg .ValueList ){return _bgaeg ;};if len (_gcdff .ValueList )> len (_aeddg .ValueList ){return _dbfc ;};for _fbffc :=range _gcdff .ValueList {_ebce :=_cacc (_gcdff .ValueList [_fbffc ],_aeddg .ValueList [_fbffc ],_fabc ,_fabde );if _ebce !=_ageeb {return _ebce ;};};return _ageeb ;};if _gcdff .Type ==ResultTypeList {if len (_gcdff .ValueArray )< len (_aeddg .ValueArray ){return _bgaeg ;};if len (_gcdff .ValueArray )> len (_aeddg .ValueArray ){return _dbfc ;};for _egad :=range _gcdff .ValueArray {_cfgf :=_gcdff .ValueArray [_egad ];_adfa :=_gcdff .ValueArray [_egad ];if len (_cfgf )< len (_adfa ){return _bgaeg ;};if len (_cfgf )> len (_adfa ){return _dbfc ;};for _bgfg :=range _cfgf {_edce :=_cacc (_cfgf [_bgfg ],_adfa [_bgfg ],_fabc ,_fabde );if _edce !=_ageeb {return _edce ;};};};return _ageeb ;};return _bfbfg ;};type parsedSearchObject struct{_fbdf string ;_bdec string ;_dcbg int ;};var _eef =map[string ]*_bd .Regexp {};func (_decb *evCache )SetCache (key string ,value Result ){_decb ._eagc .Lock ();_decb ._fa [key ]=value ;_decb ._eagc .Unlock ();};func _agee (_dfgd ,_dbdf ,_fecg ,_efcbc float64 ,_eefe int )float64 {var _bcba float64 ;if _dfgd ==0{_bcba =(_fecg +_efcbc )/_dbdf ;}else {_eagfa :=_aca .Pow (1+_dfgd ,_dbdf );if _eefe ==1{_bcba =(_efcbc *_dfgd /(_eagfa -1)+_fecg *_dfgd /(1-1/_eagfa ))/(1+_dfgd );}else {_bcba =_efcbc *_dfgd /(_eagfa -1)+_fecg *_dfgd /(1-1/_eagfa );};};return -_bcba ;};const _geaad =57367;type node struct{_eaacdb tokenType ;_bddce string ;};const (BinOpTypeUnknown BinOpType =iota ;BinOpTypePlus ;BinOpTypeMinus ;BinOpTypeMult ;BinOpTypeDiv ;BinOpTypeExp ;BinOpTypeLT ;BinOpTypeGT ;BinOpTypeEQ ;BinOpTypeLEQ ;BinOpTypeGEQ ;BinOpTypeNE ;BinOpTypeConcat ;);const _cggfc =1;const _ccfgd ="\u0052\u0065\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0054\u0079\u0070\u0065\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0052\u0065\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0054\u0079\u0070\u0065\u0043\u0065\u006c\u006c\u0052\u0065\u0066\u0065r\u0065\u006ec\u0065\u0054\u0079\u0070e\u004e\u0061\u006d\u0065\u0064\u0052\u0061\u006e\u0067\u0065R\u0065\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0054y\u0070\u0065\u0052\u0061\u006e\u0067\u0065\u0052\u0065\u0066e\u0072\u0065\u006ec\u0065\u0054\u0079\u0070\u0065\u0053\u0068e\u0065\u0074";type rmode byte ;func _dgaef (_fagdg []Result )[]float64 {_gcee :=make ([]float64 ,0);for _ ,_babd :=range _fagdg {if _babd .Type ==ResultTypeEmpty {continue ;};_babd =_babd .AsNumber ();switch _babd .Type {case ResultTypeNumber :if !_babd .IsBoolean {_gcee =append (_gcee ,_babd .ValueNumber );};case ResultTypeList ,ResultTypeArray :_gcee =append (_gcee ,_dgaef (_babd .ListValues ())...);case ResultTypeString :default:_cc .Log .Debug ("\u0075\u006e\u0068\u0061\u006ed\u006c\u0065\u0064\u0020\u0065\u0078\u0074\u0072\u0061\u0063\u0074\u004e\u0075m\u0062\u0065\u0072\u0073\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0020\u0074\u0079\u0070\u0065\u0020\u0025\u0073",_babd .Type );};};return _gcee ;};

// IsBool returns false for the invalid reference context.
func (_dbaag *ivr )IsBool (cellRef string )bool {return false };

// Not is an implementation of the Excel NOT() function and takes a single
// argument.
func Not (args []Result )Result {if len (args )!=1{return MakeErrorResult ("\u004eO\u0054\u0020\u0072\u0065q\u0075\u0069\u0072\u0065\u0073 \u006fn\u0065 \u0061\u0072\u0067\u0075\u006d\u0065\u006et");};switch args [0].Type {case ResultTypeError :return args [0];case ResultTypeString ,ResultTypeList :return MakeErrorResult ("\u004e\u004f\u0054\u0020\u0065\u0078\u0070\u0065\u0063\u0074s\u0020\u0061\u0020\u006e\u0075\u006d\u0065r\u0069\u0063\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");case ResultTypeNumber :return MakeBoolResult (!(args [0].ValueNumber !=0));default:return MakeErrorResult ("u\u006e\u0068\u0061\u006e\u0064\u006ce\u0064\u0020\u004e\u004f\u0054\u0020\u0061\u0072\u0067u\u006d\u0065\u006et\u0020t\u0079\u0070\u0065");};};

// Db implements the Excel DB function.
func Db (args []Result )Result {_ceef :=len (args );if _ceef !=4&&_ceef !=5{return MakeErrorResult ("\u0044\u0042\u0020\u0072\u0065q\u0075\u0069\u0072\u0065\u0073\u0020\u0066\u006f\u0075\u0072\u0020\u006f\u0072 \u0066\u0069\u0076\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0073");};if args [0].Type !=ResultTypeNumber {return MakeErrorResult ("\u0044\u0042\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0063\u006f\u0073\u0074\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u006eu\u006d\u0062\u0065\u0072\u0020a\u0072\u0067u\u006d\u0065\u006e\u0074");};_daaf :=args [0].ValueNumber ;if _daaf < 0{return MakeErrorResultType (ErrorTypeNum ,"D\u0042\u0020\u0072\u0065\u0071\u0075i\u0072\u0065\u0073\u0020\u0063\u006fs\u0074\u0020\u0074\u006f\u0020\u0062\u0065 \u006e\u006f\u006e\u0020\u006e\u0065\u0067\u0061\u0074\u0069v\u0065");};if args [1].Type !=ResultTypeNumber {return MakeErrorResult ("\u0044\u0042\u0020\u0072\u0065q\u0075\u0069\u0072\u0065\u0073\u0020\u0073\u0061\u006c\u0076\u0061\u0067\u0065 \u0074\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};_cfac :=args [1].ValueNumber ;if _cfac < 0{return MakeErrorResultType (ErrorTypeNum ,"\u0044\u0042\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0073\u0061\u006c\u0076\u0061\u0067\u0065\u0020\u0074\u006f\u0020\u0062e\u0020\u006e\u006f\u006e\u0020n\u0065\u0067a\u0074\u0069\u0076\u0065");};if args [2].Type !=ResultTypeNumber {return MakeErrorResult ("\u0044\u0042\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u006c\u0069\u0066\u0065\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u006eu\u006d\u0062\u0065\u0072\u0020a\u0072\u0067u\u006d\u0065\u006e\u0074");};_eagg :=args [2].ValueNumber ;if _eagg <=0{return MakeErrorResultType (ErrorTypeNum ,"\u0044\u0042\u0020r\u0065\u0071\u0075\u0069r\u0065\u0073\u0020\u006c\u0069\u0066\u0065 \u0074\u006f\u0020\u0062\u0065\u0020\u0070\u006f\u0073\u0069\u0074\u0069\u0076\u0065");};if args [3].Type !=ResultTypeNumber {return MakeErrorResult ("D\u0042\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0070\u0065\u0072\u0069\u006f\u0064\u0020t\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006d\u0062\u0065r \u0061\u0072\u0067u\u006de\u006e\u0074");};_fge :=args [3].ValueNumber ;if _fge <=0{return MakeErrorResultType (ErrorTypeNum ,"\u0044\u0042\u0020\u0072\u0065\u0071u\u0069\u0072\u0065\u0073\u0020\u0070\u0065\u0072\u0069\u006f\u0064\u0020\u0074o\u0020\u0062\u0065\u0020\u0070\u006f\u0073i\u0074\u0069\u0076\u0065");};if _fge -_eagg > 1{return MakeErrorResultType (ErrorTypeNum ,"\u0049\u006e\u0063or\u0072\u0065\u0063\u0074\u0020\u0070\u0065\u0072\u0069\u006f\u0064\u0020\u0066\u006f\u0072\u0020\u0044\u0042");};_feca :=12.0;if _ceef ==5&&args [4].Type !=ResultTypeEmpty {if args [4].Type !=ResultTypeNumber {return MakeErrorResult ("\u0044\u0042\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u006do\u006e\u0074\u0068\u0020\u0074\u006f \u0062\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0061\u0072\u0067u\u006d\u0065\u006e\u0074");};_feca =args [4].ValueNumber ;if _feca < 1||_feca > 12{return MakeErrorResultType (ErrorTypeNum ,"\u0044B\u0020\u0072e\u0071\u0075\u0069\u0072e\u0073\u0020\u006do\u006e\u0074\u0068\u0020\u0074\u006f\u0020\u0062\u0065 i\u006e\u0020\u0072a\u006e\u0067e\u0020\u006f\u0066\u0020\u0031\u0020a\u006e\u0064 \u0031\u0032");};};if _feca ==12&&_fge > _eagg {return MakeErrorResultType (ErrorTypeNum ,"\u0049\u006e\u0063or\u0072\u0065\u0063\u0074\u0020\u0070\u0065\u0072\u0069\u006f\u0064\u0020\u0066\u006f\u0072\u0020\u0044\u0042");};if _cfac >=_daaf {return MakeNumberResult (0);};_acaed :=1-_aca .Pow (_cfac /_daaf ,1/_eagg );_acaed =float64 (int (_acaed *1000+0.5))/1000;_aad :=_daaf *_acaed *_feca /12;if _fge ==1{return MakeNumberResult (_aad );};_bagc :=_aad ;_aaff :=0.0;_caac :=_eagg ;if _caac > _fge {_caac =_fge ;};for _afgf :=2.0;_afgf <=_caac ;_afgf ++{_aaff =(_daaf -_bagc )*_acaed ;_bagc +=_aaff ;};if _fge > _eagg {return MakeNumberResult ((_daaf -_bagc )*_acaed *(12-_feca )/12);};return MakeNumberResult (_aaff );};func _badgg (_acgc Result ,_bbaaf int )[]Result {_afef :=[]Result {};switch _acgc .Type {case ResultTypeList :_bgeeb :=_acgc .ValueList ;_faca :=len (_bgeeb );for _gebbeb :=0;_gebbeb < _bbaaf ;_gebbeb ++{if _gebbeb < _faca {_afef =append (_afef ,_bgeeb [_gebbeb ]);}else {_afef =append (_afef ,MakeErrorResultType (ErrorTypeNA ,""));};};case ResultTypeNumber ,ResultTypeString ,ResultTypeError ,ResultTypeEmpty :for _aebfa :=0;_aebfa < _bbaaf ;_aebfa ++{_afef =append (_afef ,_acgc );};};return _afef ;};

// Eval evaluates and returns a string.
func (_dcbdc String )Eval (ctx Context ,ev Evaluator )Result {return MakeStringResult (_dcbdc ._edag )};func _cce (_ebag string )bool {for _ ,_aabb :=range _fdd {_fbd :=_aabb .FindStringSubmatch (_ebag );if len (_fbd )> 1{return true ;};};return false ;};

// EmptyExpr is an empty expression.
type EmptyExpr struct{};

// VerticalRange is a range expression that when evaluated returns a list of Results from references like AA:IJ (all cells from columns AA to IJ).
type VerticalRange struct{_bbcff ,_gebgf string };func _aaea (_bdabd []Result ,_fgcf bool ,_daca string )Result {var _ddbdf ,_deaaf string ;if _fgcf {_ddbdf ="\u0074\u0068\u0072e\u0065";_deaaf ="\u006f\u0064\u0064";}else {_ddbdf ="\u0074\u0077\u006f";_deaaf ="\u0065\u0076\u0065\u006e";};_beage :=len (_bdabd );if (_fgcf &&_beage < 3)||(!_fgcf &&_beage < 2){return MakeErrorResult (_daca +"\u0020\u0072\u0065\u0071ui\u0072\u0065\u0073\u0020\u0061\u0074\u0020\u006c\u0065\u0061\u0073\u0074\u0020"+_ddbdf +" \u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0073\u0073");};if (_beage /2*2==_beage )==_fgcf {return MakeErrorResult (_daca +"\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020"+_deaaf +" \u006eu\u006d\u0062\u0065\u0072\u0020\u006f\u0066\u0020a\u0072\u0067\u0075\u006den\u0074\u0073");};_ecee :=-1;_edef :=-1;for _deea :=0;_deea < _beage ;_deea +=2{_ebcag :=_bdabd [_deea ];if _ebcag .Type !=ResultTypeArray &&_ebcag .Type !=ResultTypeList {return MakeErrorResult (_daca +"\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0072\u0061\u006e\u0067\u0065\u0073\u0020\u006f\u0066\u0020\u0074\u0079\u0070\u0065 \u006c\u0069\u0073\u0074\u0020o\u0072\u0020a\u0072\u0072\u0061\u0079");};_cfbe :=_gbddgb (_ebcag );if _edef ==-1{_edef =len (_cfbe );_ecee =len (_cfbe [0]);}else if len (_cfbe )!=_edef ||len (_cfbe [0])!=_ecee {return MakeErrorResult (_daca +"\u0020\u0072\u0065\u0071\u0075\u0069\u0072e\u0073\u0020\u0061l\u006c\u0020\u0072\u0061n\u0067\u0065\u0073\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u006f\u0066\u0020\u0074\u0068\u0065\u0020\u0073\u0061\u006d\u0065\u0020\u0073\u0069\u007a\u0065");};if _fgcf &&_deea ==0{_deea --;};};return _ebega ;};func _ddea (_cefa ,_gdfg float64 )float64 {_cefa =_aca .Trunc (_cefa );_gdfg =_aca .Trunc (_gdfg );if _cefa ==0&&_gdfg ==0{return 0;};return _cefa *_gdfg /_ecde (_cefa ,_gdfg );};type yyParser interface{Parse (yyLexer )int ;Lookahead ()int ;};

// Product is an implementation of the Excel PRODUCT() function.
func Product (args []Result )Result {_fbffe :=1.0;for _ ,_bdcd :=range args {_bdcd =_bdcd .AsNumber ();switch _bdcd .Type {case ResultTypeNumber :_fbffe *=_bdcd .ValueNumber ;case ResultTypeList ,ResultTypeArray :_gdef :=Product (_bdcd .ListValues ());if _gdef .Type !=ResultTypeNumber {return _gdef ;};_fbffe *=_gdef .ValueNumber ;case ResultTypeString :case ResultTypeError :return _bdcd ;case ResultTypeEmpty :default:return MakeErrorResult (_a .Sprintf ("\u0075\u006eha\u006e\u0064\u006ce\u0064\u0020\u0050\u0052ODU\u0043T(\u0029\u0020\u0061\u0072\u0067\u0075\u006den\u0074\u0020\u0074\u0079\u0070\u0065\u0020%\u0073",_bdcd .Type ));};};return MakeNumberResult (_fbffe );};

// Rate implements the Excel RATE function.
func Rate (args []Result )Result {_bbac :=len (args );if _bbac < 3||_bbac > 6{return MakeErrorResult ("\u0052\u0041\u0054\u0045\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u006e\u0075\u006d\u0062\u0065\u0072 \u006f\u0066\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0073\u0020\u0069\u006e\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u006f\u0066\u0020\u0074\u0068\u0072\u0065\u0065 \u0061\u006e\u0064\u0020\u0073i\u0078");};if args [0].Type !=ResultTypeNumber {return MakeErrorResult ("\u0052\u0041\u0054\u0045\u0020\u0072\u0065\u0071\u0075\u0069\u0072e\u0073\u0020\u006e\u0075\u006d\u0062\u0065\u0072 \u006ff\u0020\u0070\u0065\u0072\u0069\u006f\u0064\u0073\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006db\u0065\u0072\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};_fgfc :=args [0].ValueNumber ;if _fgfc !=float64 (int (_fgfc )){return MakeErrorResultType (ErrorTypeNum ,"R\u0041\u0054\u0045\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u006f\u0066\u0020\u0070\u0065\u0072i\u006fd\u0073\u0020\u0074\u006f \u0062\u0065 \u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};if args [1].Type !=ResultTypeNumber {return MakeErrorResult ("\u0052\u0041\u0054\u0045\u0020\u0072\u0065q\u0075\u0069\u0072e\u0073\u0020\u0070\u0061y\u006d\u0065\u006e\u0074\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};_gbfc :=args [1].ValueNumber ;if args [2].Type !=ResultTypeNumber {return MakeErrorResult ("\u0052\u0041\u0054\u0045\u0020\u0072e\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0020\u0076\u0061\u006c\u0075\u0065 \u0074\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0061r\u0067u\u006d\u0065\u006e\u0074");};_ggcb :=args [2].ValueNumber ;_gagb :=0.0;if _bbac >=4&&args [3].Type !=ResultTypeEmpty {if args [3].Type !=ResultTypeNumber {return MakeErrorResult ("\u0052\u0041\u0054\u0045\u0020\u0072\u0065\u0071u\u0069\u0072\u0065s \u0066\u0075\u0074\u0075\u0072\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006db\u0065\u0072\u0020\u0061\u0072\u0067\u0075\u006de\u006e\u0074");};_gagb =args [3].ValueNumber ;};_adcdb :=0.0;if _bbac >=5&&args [4].Type !=ResultTypeEmpty {if args [4].Type !=ResultTypeNumber {return MakeErrorResult ("R\u0041\u0054\u0045\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0074\u0079\u0070\u0065\u0020t\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006d\u0062\u0065r \u0061\u0072\u0067u\u006de\u006e\u0074");};_adcdb =args [4].ValueNumber ;if _adcdb !=0{_adcdb =1;};};_gdcb :=0.1;if _bbac >=6&&args [5].Type !=ResultTypeEmpty {if args [5].Type !=ResultTypeNumber {return MakeErrorResult ("\u0052\u0041\u0054\u0045\u0020r\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0067\u0075\u0065\u0073\u0073 \u0074\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};_gdcb =args [5].ValueNumber ;};_bffdd :=100;_dcgg :=0;_fcea :=false ;_bde :=1e-6;_caeg :=_gdcb ;for _dcgg < _bffdd &&!_fcea {_gfgb :=_aca .Pow (_caeg +1,_fgfc );_cccc :=_aca .Pow (_caeg +1,_fgfc -1);_baab :=_caeg *_adcdb +1;_bcae :=_gbfc *(_gfgb -1);_aaae :=_gagb +_gfgb *_ggcb +_bcae *_baab /_caeg ;_eded :=_fgfc *_cccc *_ggcb -_bcae *_baab /_aca .Pow (_caeg ,2);_eed :=(_fgfc *_gbfc *_cccc *_baab +_bcae *_adcdb )/_caeg ;_dfbge :=_aaae /(_eded +_eed );if _aca .Abs (_dfbge )< _bde {_fcea =true ;};_dcgg ++;_caeg -=_dfbge ;};return MakeNumberResult (_caeg );};const _aggg =57376;

// CountBlank implements the COUNTBLANK function.
func CountBlank (args []Result )Result {if len (args )==0{return MakeErrorResult ("\u0043\u004f\u0055N\u0054\u0042\u004c\u0041N\u004b\u0020\u0072\u0065\u0071\u0075\u0069r\u0065\u0073\u0020\u0061\u006e\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};return MakeNumberResult (_bccb (args ,_efeff ));};var _gcde =false ;const _gae =_ad .Second *1;func _dca (_edda ,_eaeg int64 )float64 {return float64 (int (0.5+float64 ((_eaeg -_edda )/86400)))};

// MaxIfs implements the MAXIFS function.
func MaxIfs (args []Result )Result {_acedb :=_aaea (args ,true ,"\u004d\u0041\u0058\u0049\u0046\u0053");if _acedb .Type !=ResultTypeEmpty {return _acedb ;};_gbdde :=_cdgb (args [1:]);_ffbgd :=-_aca .MaxFloat64 ;_bada :=_gbddgb (args [0]);for _ ,_ggef :=range _gbdde {_bcegfd :=_bada [_ggef ._daffc ][_ggef ._gbebc ].ValueNumber ;if _ffbgd < _bcegfd {_ffbgd =_bcegfd ;};};if _ffbgd ==-_aca .MaxFloat64 {_ffbgd =0;};return MakeNumberResult (float64 (_ffbgd ));};

// Update updates references in the PrefixRangeExpr after removing a row/column.
func (_bfefb PrefixRangeExpr )Update (q *_fe .UpdateQuery )Expression {_egcfed :=_bfefb ;_eaabge :=_bfefb ._fgead .String ();if _eaabge ==q .SheetToUpdate {_acad :=*q ;_acad .UpdateCurrentSheet =true ;_egcfed ._fbade =_bfefb ._fbade .Update (&_acad );_egcfed ._gdegd =_bfefb ._gdegd .Update (&_acad );};return _egcfed ;};

// Reference returns an invalid reference for Negate.
func (_ecefd Negate )Reference (ctx Context ,ev Evaluator )Reference {return ReferenceInvalid };func _egea (_bgebb ,_fbbf Reference )string {return _a .Sprintf ("\u0025\u0073\u003a%\u0073",_bgebb .Value ,_fbbf .Value );};

// PrefixVerticalRange is a range expression that when evaluated returns a list of Results from references like Sheet1!AA:IJ (all cells from columns AA to IJ of sheet 'Sheet1').
type PrefixVerticalRange struct{_geaee Expression ;_adebd ,_bgdac string ;};func _cgba (_cgdg []string ,_gacc int )string {return _d .Itoa (len (_cgdg [len (_cgdg )-1-_gacc ]))};func (_dbb BinOpType )String ()string {if _dbb >=BinOpType (len (_ga )-1){return _a .Sprintf ("\u0042\u0069\u006e\u004f\u0070\u0054\u0079\u0070\u0065\u0028\u0025\u0064\u0029",_dbb );};return _bca [_ga [_dbb ]:_ga [_dbb +1]];};

// ISODD is an implementation of the Excel ISODD() function.
func IsOdd (args []Result )Result {if len (args )!=1{return MakeErrorResult ("\u0049\u0053\u004f\u0044\u0044\u0028)\u0020\u0061\u0063\u0063\u0065\u0070\u0074\u0073\u0020\u0061\u0020\u0073\u0069n\u0067\u006c\u0065\u0020\u0061\u0072\u0067u\u006d\u0065\u006e\u0074");};if args [0].Type !=ResultTypeNumber {return MakeErrorResult ("\u0049\u0053\u004f\u0044\u0044\u0020\u0061\u0063\u0063\u0065\u0070\u0074\u0073\u0020\u0061 \u006eu\u006d\u0065\u0072\u0069\u0063\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};_ceff :=int (args [0].ValueNumber );return MakeBoolResult (_ceff !=_ceff /2*2);};const (_ddgb rmode =iota ;_ggdc ;_dcfec ;);type cmpResult int8 ;

// Reference returns a string reference value to a horizontal range.
func (_ebcc HorizontalRange )Reference (ctx Context ,ev Evaluator )Reference {return Reference {Type :ReferenceTypeHorizontalRange ,Value :_ebcc .horizontalRangeReference ()};};func (_aefed node )String ()string {return _a .Sprintf ("\u007b%\u0073\u0020\u0025\u0073\u007d",_aefed ._eaacdb ,_faba (string (_aefed ._bddce )));};func _acbgc (_bbab _ad .Time )_ad .Time {_bbab =_bbab .UTC ();return _ad .Date (_bbab .Year (),_bbab .Month (),_bbab .Day (),_bbab .Hour (),_bbab .Minute (),_bbab .Second (),_bbab .Nanosecond (),_ad .Local );};

// Combin is an implementation of the Excel COMBINA function whic returns the
// number of combinations.
func Combin (args []Result )Result {if len (args )!=2{return MakeErrorResult ("\u0043\u004f\u004d\u0042\u0049\u004e\u0028\u0029\u0020\u0072e\u0071\u0075\u0069\u0072\u0065\u0073\u0020t\u0077\u006f\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};_ceaaa :=args [0].AsNumber ();_bfagd :=args [1].AsNumber ();if _ceaaa .Type !=ResultTypeNumber ||_bfagd .Type !=ResultTypeNumber {return MakeErrorResult ("C\u004f\u004d\u0042\u0049\u004e\u0028)\u0020\u0072\u0065\u0071\u0075\u0069r\u0065\u0073\u0020\u006e\u0075\u006d\u0065r\u0069\u0063\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006et\u0073");};_abgd :=_aca .Trunc (_ceaaa .ValueNumber );_dddbb :=_aca .Trunc (_bfagd .ValueNumber );if _dddbb > _abgd {return MakeErrorResult ("\u0043O\u004d\u0042\u0049\u004e\u0028\u0029\u0020\u0072\u0065\u0071\u0075i\u0072\u0065\u0073\u0020\u006b\u0020\u003c\u003d\u0020\u006e");};if _dddbb ==_abgd ||_dddbb ==0{return MakeNumberResult (1);};_eaea :=float64 (1);for _edgc :=float64 (1);_edgc <=_dddbb ;_edgc ++{_eaea *=(_abgd +1-_edgc )/_edgc ;};return MakeNumberResult (_eaea );};var InvalidReferenceContext =&ivr {};

// Reference returns a string reference value to a named range.
func (_eebd NamedRangeRef )Reference (ctx Context ,ev Evaluator )Reference {return Reference {Type :ReferenceTypeNamedRange ,Value :_eebd ._ggbf };};const _fgcbc =57352;type tokenType int ;func _ged (_gggf Result ,_dcgf ,_gcdf string )(float64 ,Result ){var _agb float64 ;switch _gggf .Type {case ResultTypeNumber :_agb =float64 (int (_gggf .ValueNumber ));case ResultTypeString :_bgdd :=DateValue ([]Result {_gggf });if _bgdd .Type ==ResultTypeError {return 0,MakeErrorResult ("\u0049\u006e\u0063\u006f\u0072\u0072\u0065\u0063\u0074\u0020"+_dcgf +"\u0020\u0064\u0061\u0074\u0065\u0020\u0066\u006f\u0072\u0020"+_gcdf );};_agb =_bgdd .ValueNumber ;default:return 0,MakeErrorResult ("\u0049\u006e\u0063or\u0072\u0065\u0063\u0074\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0020\u0066\u006f\u0072\u0020"+_gcdf );};if _agb < 0{return 0,MakeErrorResultType (ErrorTypeNum ,_dcgf +"\u0020\u0073\u0068ou\u006c\u0064\u0020\u0062\u0065\u0020\u006e\u006f\u006e\u0020\u006e\u0065\u0067\u0061\u0074\u0069\u0076\u0065");};return _agb ,_ebega ;};const _beefb =57360;

// Npv implements the Excel NPV function.
func Npv (args []Result )Result {_baaa :=len (args );if _baaa < 2{return MakeErrorResult ("\u004e\u0050\u0056 r\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0074w\u006f \u006fr\u0020m\u006f\u0072\u0065\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0073");};if args [0].Type !=ResultTypeNumber {return MakeErrorResult ("\u004e\u0050\u0056\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020r\u0061\u0074\u0065\u0020\u0074\u006f \u0062\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0061\u0072\u0067u\u006d\u0065\u006e\u0074");};_gabb :=args [0].ValueNumber ;if _gabb ==-1{return MakeErrorResultType (ErrorTypeDivideByZero ,"");};_dgegf :=[]float64 {};for _ ,_bbbbf :=range args [1:]{switch _bbbbf .Type {case ResultTypeNumber :_dgegf =append (_dgegf ,_bbbbf .ValueNumber );case ResultTypeArray ,ResultTypeList :_befd :=_gbddgb (_bbbbf );for _ ,_acgb :=range _befd {for _ ,_agfd :=range _acgb {if _agfd .Type ==ResultTypeNumber &&!_agfd .IsBoolean {_dgegf =append (_dgegf ,_agfd .ValueNumber );};};};};};_ccbg :=0.0;for _babbf ,_fgae :=range _dgegf {_ccbg +=_fgae /_aca .Pow (1+_gabb ,float64 (_babbf )+1);};return MakeNumberResult (_ccbg );};func (_ecba *ivr )Cell (ref string ,ev Evaluator )Result {return MakeErrorResult ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0065\u0066\u0065r\u0065\u006e\u0063\u0065");};

// Coupdays implements the Excel COUPDAYS function.
func Coupdays (args []Result )Result {_accc ,_bege :=_fcdg (args ,"\u0043\u004f\u0055\u0050\u0044\u0041\u0059\u0053");if _bege .Type ==ResultTypeError {return _bege ;};return MakeNumberResult (_gfbe (_accc ._cgfd ,_accc ._fccg ,_accc ._eccb ,_accc ._bgf ));};func _ebdf (_dadgd ,_fecc ,_gggc ,_daggd ,_gccc ,_ceec float64 )float64 {var _cfbd ,_abbg float64 ;_gefd :=0.0;_bdad :=_aca .Ceil (_gccc );_daed :=_dadgd -_fecc ;_fbcg :=false ;_cgddg :=0.0;for _affa :=1.0;_affa <=_bdad ;_affa ++{if !_fbcg {_cfbd =_fgbbb (_dadgd ,_fecc ,_gggc ,_affa ,_ceec );_cgddg =_daed /(_gggc -_affa +1);if _cgddg > _cfbd {_abbg =_cgddg ;_fbcg =true ;}else {_abbg =_cfbd ;_daed -=_cfbd ;};}else {_abbg =_cgddg ;};if _affa ==_bdad {_abbg *=_gccc +1-_bdad ;};_gefd +=_abbg ;};return _gefd ;};

// Searchb is an implementation of the Excel SEARCHB().
func Searchb (ctx Context ,ev Evaluator ,args []Result )Result {if !ctx .IsDBCS (){return Search (args );};_ecdaa ,_bgbf :=_eade ("\u0046\u0049\u004e\u0044",args );if _bgbf .Type !=ResultTypeEmpty {return _bgbf ;};_fbgaf :=_bf .ToLower (_ecdaa ._fbdf );_dgafe :=_bf .ToLower (_ecdaa ._bdec );if _fbgaf ==""{return MakeNumberResult (1.0);};_ffad :=_ecdaa ._dcbg -1;_ddae :=1;_ffbef :=0;for _caggc :=range _dgafe {if _caggc !=0{_eabf :=1;if _caggc -_ffbef > 1{_eabf =2;};_ddae +=_eabf ;};if _ddae > _ffad {_ceacg :=_gf .Index (_fbgaf ,_dgafe [_caggc :]);if _ceacg ==0{return MakeNumberResult (float64 (_ddae ));};};_ffbef =_caggc ;};return MakeErrorResultType (ErrorTypeValue ,"\u004eo\u0074\u0020\u0066\u006f\u0075\u006ed");};func _cgcb (_ebdc string ,_agcbc []Result )(*parsedReplaceObject ,Result ){if len (_agcbc )!=4{return nil ,MakeErrorResult (_ebdc +"\u0020r\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0066\u006f\u0075r\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0073");};if _agcbc [0].Type !=ResultTypeString {return nil ,MakeErrorResult (_ebdc +"\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0066\u0069\u0072s\u0074\u0020\u0061\u0072\u0067\u0075m\u0065\u006e\u0074\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u0061\u0020\u0073t\u0072\u0069\u006e\u0067");};_cabcc :=_agcbc [0].ValueString ;if _agcbc [1].Type !=ResultTypeNumber {return nil ,MakeErrorResult (_ebdc +" \u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0073\u0065\u0063\u006f\u006e\u0064\u0020\u0061\u0072g\u0075\u006d\u0065\u006e\u0074\u0020\u0074\u006f\u0020\u0062e \u0061\u0020\u006eu\u006db\u0065\u0072");};_gfede :=int (_agcbc [1].ValueNumber )-1;if _agcbc [2].Type !=ResultTypeNumber {return nil ,MakeErrorResult (_ebdc +"\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0074\u0068\u0069r\u0064\u0020\u0061\u0072\u0067\u0075m\u0065\u006e\u0074\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u0061\u0020\u006eu\u006d\u0062\u0065\u0072");};_fbbed :=int (_agcbc [2].ValueNumber );if _agcbc [3].Type !=ResultTypeString {return nil ,MakeErrorResult (_ebdc +" \u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0066\u006f\u0075\u0072\u0074\u0068\u0020\u0061\u0072g\u0075\u006d\u0065\u006e\u0074\u0020\u0074\u006f\u0020\u0062e \u0061\u0020\u0073t\u0072i\u006e\u0067");};_ggdf :=_agcbc [3].ValueString ;return &parsedReplaceObject {_cabcc ,_gfede ,_fbbed ,_ggdf },_ebega ;};

// Accrintm implements the Excel ACCRINTM function.
func Accrintm (args []Result )Result {_edccd :=len (args );if _edccd !=4&&_edccd !=5{return MakeErrorResult ("A\u0043\u0043\u0052\u0049\u004e\u0054\u004d\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0066o\u0075\u0072\u0020\u006f\u0072\u0020\u0066\u0069\u0076\u0065 a\u0072\u0067\u0075m\u0065n\u0074\u0073");};_eeac ,_dgeg :=_ged (args [0],"\u0069\u0073\u0073\u0075\u0065\u0020\u0064\u0061\u0074\u0065","\u0041\u0043\u0043\u0052\u0049\u004e\u0054\u004d");if _dgeg .Type ==ResultTypeError {return _dgeg ;};_ffa ,_dgeg :=_ged (args [1],"\u0073e\u0074t\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u0064\u0061\u0074\u0065","\u0041\u0043\u0043\u0052\u0049\u004e\u0054\u004d");if _dgeg .Type ==ResultTypeError {return _dgeg ;};if _eeac >=_ffa {return MakeErrorResultType (ErrorTypeNum ,"\u0049\u0073\u0073\u0075\u0065\u0020d\u0061\u0074\u0065\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0065\u0061\u0072\u006c\u0069\u0065r\u0020\u0074\u0068\u0061\u006e\u0020\u0073\u0065\u0074\u0074\u006c\u0065\u006d\u0065n\u0074 \u0064\u0061\u0074\u0065");};if args [2].Type !=ResultTypeNumber {return MakeErrorResult ("\u0041C\u0043\u0052I\u004e\u0054\u004d\u0020r\u0065\u0071\u0075i\u0072\u0065\u0073\u0020\u0072\u0061\u0074\u0065\u0020to\u0020\u0062\u0065 \u006e\u0075m\u0062\u0065\u0072\u0020\u0061\u0072g\u0075\u006de\u006e\u0074");};_acag :=args [2].ValueNumber ;if _acag <=0{return MakeErrorResultType (ErrorTypeNum ,"\u0041\u0043\u0043\u0052\u0049\u004e\u0054\u004d\u0020\u0072\u0065q\u0075\u0069\u0072\u0065\u0073\u0020\u0072\u0061t\u0065 \u0074\u006f\u0020\u0062\u0065\u0020\u0070\u006f\u0073\u0069\u0074\u0069\u0076\u0065\u0020\u006e\u0075\u006db\u0065\u0072\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};if args [3].Type !=ResultTypeNumber {return MakeErrorResult ("\u0041\u0043\u0043\u0052\u0049\u004e\u0054M\u0020\u0072\u0065q\u0075\u0069\u0072\u0065s\u0020\u0070\u0061\u0072\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};_dacd :=args [3].ValueNumber ;if _dacd <=0{return MakeErrorResultType (ErrorTypeNum ,"\u0041\u0043C\u0052\u0049\u004e\u0054\u004d \u0072\u0065\u0071\u0075\u0069r\u0065\u0073\u0020\u0070\u0061\u0072\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u0070\u006f\u0073\u0069\u0074\u0069\u0076\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};_aaaf :=0;if _edccd ==5&&args [4].Type !=ResultTypeEmpty {if args [4].Type !=ResultTypeNumber {return MakeErrorResult ("\u0041C\u0043\u0052I\u004e\u0054\u004d \u0072\u0065\u0071\u0075\u0069\u0072\u0065s\u0020\u0062\u0061\u0073\u0069\u0073 \u0074\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006d\u0062\u0065r\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};_aaaf =int (args [4].ValueNumber );if !_facb (_aaaf ){return MakeErrorResultType (ErrorTypeNum ,"\u0049\u006ec\u006f\u0072\u0072\u0065c\u0074\u0020b\u0061\u0073\u0069\u0073\u0020\u0061\u0072\u0067u\u006d\u0065\u006e\u0074\u0020\u0066\u006f\u0072\u0020\u0041\u0043\u0043R\u0049\u004e\u0054\u004d");};};_fab ,_dgeg :=_gacb (_eeac ,_ffa ,_aaaf );if _dgeg .Type ==ResultTypeError {return _dgeg ;};return MakeNumberResult (_dacd *_acag *_fab );};

// Clean is an implementation of the Excel CLEAN function that removes
// unprintable characters.
func Clean (args []Result )Result {if len (args )!=1{return MakeErrorResult ("\u0043\u004c\u0045\u0041\u004e\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065s\u0020\u0061\u0020\u0073\u0069\u006eg\u006c\u0065\u0020\u0073\u0074\u0072\u0069\u006e\u0067\u0020\u0061\u0072\u0067u\u006d\u0065\u006e\u0074");};_gfgbg :=args [0].AsString ();if _gfgbg .Type !=ResultTypeString {return MakeErrorResult ("\u0043\u0048\u0041\u0052\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0061\u0020\u0073\u0069\u006e\u0067\u006c\u0065\u0020\u0073t\u0072\u0069\u006e\u0067\u0020a\u0072\u0067u\u006d\u0065\u006e\u0074");};_beecf :=_eb .Buffer {};for _ ,_afeea :=range _gfgbg .ValueString {if _c .IsPrint (_afeea ){_beecf .WriteRune (_afeea );};};return MakeStringResult (_beecf .String ());};func init (){_fgad ();RegisterFunction ("\u0041V\u0045\u0052\u0041\u0047\u0045",Average );RegisterFunction ("\u0041\u0056\u0045\u0052\u0041\u0047\u0045\u0041",Averagea );RegisterFunction ("\u0043\u004f\u0055N\u0054",Count );RegisterFunction ("\u0043\u004f\u0055\u004e\u0054\u0041",Counta );RegisterFunction ("\u0043O\u0055\u004e\u0054\u0049\u0046",CountIf );RegisterFunction ("\u0043\u004f\u0055\u004e\u0054\u0049\u0046\u0053",CountIfs );RegisterFunction ("\u0043\u004f\u0055\u004e\u0054\u0042\u004c\u0041\u004e\u004b",CountBlank );RegisterFunction ("\u004d\u0041\u0058",Max );RegisterFunction ("\u004d\u0041\u0058\u0041",MaxA );RegisterFunction ("\u004d\u0041\u0058\u0049\u0046\u0053",MaxIfs );RegisterFunction ("\u005f\u0078\u006cf\u006e\u002e\u004d\u0041\u0058\u0049\u0046\u0053",MaxIfs );RegisterFunction ("\u004d\u0045\u0044\u0049\u0041\u004e",Median );RegisterFunction ("\u004d\u0049\u004e",Min );RegisterFunction ("\u004d\u0049\u004e\u0041",MinA );RegisterFunction ("\u004d\u0049\u004e\u0049\u0046\u0053",MinIfs );RegisterFunction ("\u005f\u0078\u006cf\u006e\u002e\u004d\u0049\u004e\u0049\u0046\u0053",MinIfs );};

// Amordegrc implements the Excel AMORDEGRC function.
func Amordegrc (args []Result )Result {_fcgg ,_bbgg :=_cdfe (args ,"\u0041M\u004f\u0052\u0044\u0045\u0047\u0052C");if _bbgg .Type ==ResultTypeError {return _bbgg ;};_gfff :=_fcgg ._dba ;_agdg :=_fcgg ._dbfge ;_gdd :=_fcgg ._faea ;_bgbc :=_fcgg ._aeca ;_gabf :=_fcgg ._bbfbe ;_aae :=_fcgg ._dbbc ;if _aae >=0.5{return MakeErrorResultType (ErrorTypeNum ,"\u0041\u004d\u004f\u0052\u0044\u0045\u0047R\u0043\u0020\u0072e\u0071\u0075\u0069\u0072e\u0073\u0020\u0072\u0061\u0074\u0065\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u006c\u0065\u0073\u0073\u0020\u0074\u0068\u0061\u006e\u0020\u0030\u002e\u0035");};_geag :=_fcgg ._gebb ;_dcagg :=1.0/_aae ;_dgfa :=2.5;if _dcagg < 3{_dgfa =1;}else if _dcagg < 5{_dgfa =1.5;}else if _dcagg <=6{_dgfa =2;};_aae *=_dgfa ;_feg ,_accg :=_gacb (_agdg ,_gdd ,_geag );if _accg .Type ==ResultTypeError {return MakeErrorResult ("\u0069\u006ec\u006f\u0072\u0072\u0065\u0063\u0074\u0020\u0064\u0061\u0074\u0065\u0073\u0020\u0066\u006f\u0072\u0020\u0041\u004d\u004f\u0052\u0044EG\u0052\u0043");};_ebfcd :=_ffee (_feg *_aae *_gfff );_gfff -=_ebfcd ;_degf :=_gfff -_bgbc ;for _dafd :=0;_dafd < _gabf ;_dafd ++{_ebfcd =_ffee (_aae *_gfff );_degf -=_ebfcd ;if _degf < 0{switch _gabf -_dafd {case 0:case 1:return MakeNumberResult (_ffee (_gfff *0.5));default:return MakeNumberResult (0);};};_gfff -=_ebfcd ;};return MakeNumberResult (_ebfcd );};

// FunctionComplex is a function whose result  depends on its arguments and the
// context that it's in.  As an example, INDIRECT is a complex function so that
// INDIRECT("A1") which returns the value of the "A1" cell in a sheet can use
// the context to reach into the sheet and pull out required values.
type FunctionComplex func (_feecgb Context ,_aeed Evaluator ,_cebaf []Result )Result ;var _ccee =[...]int {45,3,44,32,18,40,72,46,47,30,31,32,39,48,28,29,30,31,32,75,39,49,32,56,50,70,23,39,76,57,58,59,60,61,62,63,64,65,66,67,68,77,71,69,54,43,13,19,21,55,82,11,78,9,74,28,29,30,31,32,37,33,34,35,36,38,1,20,39,10,2,8,0,80,79,0,0,0,83,0,81,73,28,29,30,31,32,37,33,34,35,36,38,0,0,39,28,29,30,31,32,37,33,34,35,36,38,26,27,39,51,52,25,14,15,16,17,0,24,23,22,41,23,12,0,6,7,26,27,0,42,0,25,14,15,16,17,0,24,23,22,5,0,12,0,6,7,26,27,0,4,0,25,14,15,16,17,0,24,23,22,41,0,12,53,6,7,26,27,0,0,0,25,14,15,16,17,0,24,23,22,41,0,12,0,6,7};

// GetFormat returns an empty string for the invalid reference context.
func (_faaca *ivr )GetFormat (cellRef string )string {return ""};

// NewError constructs a new error expression from a string.
func NewError (v string )Expression {return Error {_dbga :v }};

// String returns a string representation of CellRef.
func (_dff CellRef )String ()string {return _dff ._acbc };

// NewNegate constructs a new negate expression.
func NewNegate (e Expression )Expression {return Negate {_feaegg :e }};

// Update returns the same object as updating sheet references does not affect named ranges.
func (_fbedd NamedRangeRef )Update (q *_fe .UpdateQuery )Expression {return _fbedd };func _fcdg (_efcb []Result ,_aeea string )(*couponArgs ,Result ){_fgaa :=len (_efcb );if _fgaa !=3&&_fgaa !=4{return nil ,MakeErrorResult (_aeea +"\u0020\u0072\u0065\u0071\u0075\u0069r\u0065\u0073\u0020\u0074\u0068\u0072\u0065\u0065\u0020\u006f\u0072\u0020\u0066o\u0075\u0072\u0020\u0061\u0072\u0067\u0075m\u0065\u006e\u0074\u0073");};_bcda ,_eec ,_babb :=_dbda (_efcb [0],_efcb [1],_aeea );if _babb .Type ==ResultTypeError {return nil ,_babb ;};if _efcb [2].Type !=ResultTypeNumber {return nil ,MakeErrorResult (_aeea +"\u0020\u0072\u0065\u0071\u0075i\u0072\u0065\u0073\u0020\u0066\u0072\u0065\u0071\u0075\u0065\u006e\u0063\u0079 \u0074\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};_gbff :=_efcb [2].ValueNumber ;if !_baeg (_gbff ){return nil ,MakeErrorResult ("\u0049n\u0063\u006f\u0072\u0072\u0065\u0063\u0074\u0020\u0066\u0072\u0065q\u0075\u0065\u006e\u0063\u0079\u0020\u0066\u006f\u0072\u0020"+_aeea );};_bgc :=0;if _fgaa ==4&&_efcb [3].Type !=ResultTypeEmpty {if _efcb [3].Type !=ResultTypeNumber {return nil ,MakeErrorResult (_aeea +"\u0020\u0072e\u0071\u0075\u0069\u0072e\u0073\u0020b\u0061\u0073\u0069\u0073\u0020\u0074\u006f\u0020b\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0061\u0072\u0067u\u006d\u0065\u006e\u0074");};_bgc =int (_efcb [3].ValueNumber );if !_facb (_bgc ){return nil ,MakeErrorResultType (ErrorTypeNum ,"\u0049\u006ec\u006f\u0072\u0072\u0065\u0063\u0074\u0020\u0062\u0061\u0073\u0069\u0073\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0020fo\u0072\u0020"+_aeea );};};return &couponArgs {_bcda ,_eec ,int (_gbff ),_bgc },_ebega ;};func _gega (_gaac int ,_gaea _ad .Month ,_fbb int )int64 {if _gaac ==1900&&int (_gaea )<=2{_fbb --;};_fae :=_ad .Date (_gaac ,_gaea ,_fbb ,0,0,0,0,_ad .UTC );return _fae .Unix ();};var _gdggf ,_gaefc ,_cgaag ,_cdefe ,_gfgef ,_bbabf *_bd .Regexp ;

// Indirect is an implementation of the Excel INDIRECT function that returns the
// contents of a cell.
func Indirect (ctx Context ,ev Evaluator ,args []Result )Result {if len (args )!=1&&len (args )!=2{return MakeErrorResult ("\u0049\u004e\u0044\u0049\u0052\u0045\u0043\u0054\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u006f\u006e\u0065\u0020\u006f\u0072 \u0074\u0077\u006f\u0020\u0061r\u0067\u0075m\u0065\u006e\u0074\u0073");};_facbf :=args [0].AsString ();if _facbf .Type !=ResultTypeString {return MakeErrorResult ("\u0049\u004e\u0044\u0049\u0052\u0045\u0043\u0054\u0020\u0072\u0065q\u0075\u0069\u0072\u0065\u0073\u0020\u0066\u0069r\u0073t\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u006f\u0066 \u0074\u0079\u0070\u0065\u0020\u0073\u0074\u0072\u0069\u006e\u0067");};return ctx .Cell (_facbf .ValueString ,ev );};

// Transpose implements the TRANSPOSE function that transposes a cell range.
func Transpose (args []Result )Result {if len (args )!=1{return MakeErrorResult ("\u0054\u0052AN\u0053\u0050\u004fS\u0045\u0020\u0072\u0065qui\u0072es\u0020\u0061\u0020\u0073\u0069\u006e\u0067le\u0020\u0061\u0072\u0067\u0075\u006d\u0065n\u0074");};if args [0].Type !=ResultTypeArray &&args [0].Type !=ResultTypeList {return MakeErrorResult ("T\u0052\u0041\u004e\u0053\u0050\u004fS\u0045\u0020\u0072\u0065\u0071\u0075i\u0072\u0065\u0073\u0020\u0061\u0020\u0072a\u006e\u0067\u0065\u0020\u0061\u0072\u0067\u0075\u006d\u0065n\u0074");};_cadc :=args [0];if _cadc .Type ==ResultTypeList {_acda :=[][]Result {};for _ ,_fbaac :=range _cadc .ValueList {_acda =append (_acda ,[]Result {_fbaac });};return MakeArrayResult (_acda );};_bcgdf :=make ([][]Result ,len (_cadc .ValueArray [0]));for _ ,_cfcc :=range _cadc .ValueArray {for _gfa ,_ebacc :=range _cfcc {_bcgdf [_gfa ]=append (_bcgdf [_gfa ],_ebacc );};};return MakeArrayResult (_bcgdf );};

// TextJoin is an implementation of the Excel TEXTJOIN function.
func TextJoin (args []Result )Result {if len (args )< 3{return MakeErrorResult ("\u0054\u0045\u0058\u0054\u004aO\u0049\u004e\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0074h\u0072\u0065\u0065\u0020\u006f\u0072\u0020\u006d\u006f\u0072\u0065\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0073");};if args [0].Type !=ResultTypeString {return MakeErrorResult ("\u0054\u0045\u0058T\u004a\u004f\u0049\u004e\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0064\u0065\u006c\u0069\u006d\u0069\u0074\u0065\u0072\u0020\u0074\u006f\u0020\u0062\u0065 \u0061\u0020\u0073\u0074\u0072\u0069\u006e\u0067");};_ebcaf :=args [0].ValueString ;if args [1].Type !=ResultTypeNumber {return MakeErrorResult ("\u0054\u0045\u0058\u0054\u004a\u004f\u0049\u004e\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0073\u0065c\u006f\u006e\u0064\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u0061\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u006f\u0072 \u0062\u006f\u006f\u006c\u0065a\u006e");};_cdeb :=args [1].ValueNumber !=0;_gacg :=_effe (args [2:],[]string {},_cdeb );return MakeStringResult (_bf .Join (_gacg ,_ebcaf ));};func _fba (_gfbd ,_dcba float64 ,_dbge ,_gcbg int )(float64 ,Result ){_agabd ,_aaf :=_cgf (_gfbd ),_cgf (_dcba );if _aaf .After (_agabd ){_agfc :=_dda (_agabd ,_aaf ,_dbge ,_gcbg );_afec :=(_aaf .Year ()-_agfc .Year ())*12+int (_aaf .Month ())-int (_agfc .Month ());return float64 (_afec *_dbge )/12.0,_ebega ;};return 0,MakeErrorResultType (ErrorTypeNum ,"\u0053\u0065t\u0074\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u0064\u0061\u0074\u0065\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0062\u0065\u0066\u006f\u0072\u0065\u0020\u006d\u0061\u0074\u0075\u0072\u0069\u0074\u0079\u0020\u0064\u0061\u0074\u0065");};func (_edc *defEval )checkLastEvalIsRef (_bed Context ,_fdb Expression ){switch _fdb .(type ){case FunctionCall :switch _fdb .(FunctionCall )._fcgae {case "\u0049\u0053\u0052E\u0046":for _ ,_fgg :=range _fdb .(FunctionCall )._agdag {switch _fgg .(type ){case CellRef ,Range ,HorizontalRange ,VerticalRange ,NamedRangeRef ,PrefixExpr ,PrefixRangeExpr ,PrefixHorizontalRange ,PrefixVerticalRange :_ebeg :=_fgg .Eval (_bed ,_edc );_edc ._bcaa =!(_ebeg .Type ==ResultTypeError &&_ebeg .ValueString =="\u0023\u004e\u0041\u004d\u0045\u003f");default:_edc ._bcaa =false ;};};};};};

// Ceiling is an implementation of the CEILING function which
// returns the ceiling of a number.
func Ceiling (args []Result )Result {if len (args )==0{return MakeErrorResult ("C\u0045\u0049\u004c\u0049\u004e\u0047\u0028\u0029\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020a\u0074\u0020\u006c\u0065\u0061\u0073\u0074\u0020\u006f\u006ee \u0061\u0072\u0067u\u006de\u006e\u0074");};if len (args )> 2{return MakeErrorResult ("\u0043\u0045\u0049\u004c\u0049\u004e\u0047\u0028\u0029\u0020\u0061\u006c\u006c\u006f\u0077\u0073\u0020\u0061\u0074\u0020\u006d\u006f\u0073\u0074 \u0074\u0077\u006f\u0020\u0061r\u0067\u0075m\u0065\u006e\u0074\u0073");};_eefg :=args [0].AsNumber ();if _eefg .Type !=ResultTypeNumber {return MakeErrorResult ("\u0066i\u0072\u0073t\u0020\u0061\u0072\u0067u\u006d\u0065\u006et\u0020\u0074\u006f\u0020\u0043\u0045\u0049\u004c\u0049NG\u0028\u0029\u0020m\u0075\u0073t\u0020\u0062\u0065\u0020\u0061\u0020n\u0075\u006db\u0065\u0072");};_cagg :=float64 (1);if _eefg .ValueNumber < 0{_cagg =-1;};if len (args )> 1{_cfdf :=args [1].AsNumber ();if _cfdf .Type !=ResultTypeNumber {return MakeErrorResult ("\u0073e\u0063\u006fn\u0064\u0020\u0061r\u0067\u0075\u006d\u0065\u006e\u0074\u0020t\u006f\u0020\u0043\u0045\u0049\u004cI\u004e\u0047\u0028\u0029\u0020\u006d\u0075\u0073\u0074\u0020\u0062e\u0020\u0061\u0020\u006e\u0075\u006d\u0062\u0065\u0072");};_cagg =_cfdf .ValueNumber ;};if _cagg < 0&&_eefg .ValueNumber > 0{return MakeErrorResultType (ErrorTypeNum ,"\u006e\u0065\u0067\u0061\u0074\u0069v\u0065\u0020\u0073\u0069\u0067\u0020\u0074\u006f\u0020\u0043\u0045\u0049\u004cI\u004e\u0047\u0028\u0029\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};if len (args )==1{return MakeNumberResult (_aca .Ceil (_eefg .ValueNumber ));};_fbda :=_eefg .ValueNumber ;_fbda ,_daafd :=_aca .Modf (_fbda /_cagg );if _daafd > 0{_fbda ++;};return MakeNumberResult (_fbda *_cagg );};

// PrefixHorizontalRange is a range expression that when evaluated returns a list of Results from references like Sheet1!1:4 (all cells from rows 1 to 4 of sheet 'Sheet1').
type PrefixHorizontalRange struct{_aaaeb Expression ;_bfcaf ,_geec int ;};var (_egdec =0;_aegea =false ;);

// ISEVEN is an implementation of the Excel ISEVEN() function.
func IsEven (args []Result )Result {if len (args )!=1{return MakeErrorResult ("\u0049\u0053\u0045VE\u004e\u0028\u0029\u0020\u0061\u0063\u0063\u0065\u0070t\u0073 \u0061 \u0073i\u006e\u0067\u006c\u0065\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};if args [0].Type !=ResultTypeNumber {return MakeErrorResult ("\u0049\u0053\u0045\u0056\u0045\u004e \u0061\u0063\u0063\u0065\u0070\u0074\u0073\u0020\u0061\u0020\u006e\u0075\u006de\u0072\u0069\u0063\u0020\u0061\u0072\u0067u\u006d\u0065\u006e\u0074");};_bgded :=int (args [0].ValueNumber );return MakeBoolResult (_bgded ==_bgded /2*2);};const _fbfee int =30;func _bbc (_ag string ,_gbg *_fe .UpdateQuery )string {_fg ,_gd :=_de .ParseCellReference (_ag );if _gd !=nil {return "\u0023\u0052\u0045F\u0021";};if _gbg .UpdateType ==_fe .UpdateActionRemoveColumn {_ecd :=_gbg .ColumnIdx ;_gad :=_fg .ColumnIdx ;if _gad < _ecd {return _ag ;}else if _gad ==_ecd {return "\u0023\u0052\u0045F\u0021";}else {return _fg .Update (_fe .UpdateActionRemoveColumn ).String ();};};return _ag ;};

// TimeValue is an implementation of the Excel TIMEVALUE() function.
func TimeValue (args []Result )Result {if len (args )!=1||args [0].Type !=ResultTypeString {return MakeErrorResult ("\u0054I\u004d\u0045V\u0041\u004c\u0055\u0045 \u0072\u0065\u0071u\u0069\u0072\u0065\u0073\u0020\u0061\u0020\u0073\u0069ng\u006c\u0065\u0020s\u0074\u0072i\u006e\u0067\u0020\u0061\u0072\u0067u\u006d\u0065n\u0074\u0073");};_bbcf :=_bf .ToLower (args [0].ValueString );if !_fgbb (_bbcf ){_ ,_ ,_ ,_bddg ,_abge :=_egg (_bbcf );if _abge .Type ==ResultTypeError {_abge .ErrorMessage ="\u0049\u006e\u0063\u006f\u0072\u0072e\u0063\u0074\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0073\u0020f\u006f\u0072\u0020\u0054\u0049\u004d\u0045V\u0041\u004c\u0055\u0045";return _abge ;};if _bddg {return MakeNumberResult (0);};};_fgac ,_gcb ,_dad ,_bggf ,_ ,_fgf :=_fgfe (_bbcf );if _fgf .Type ==ResultTypeError {return _fgf ;};_dcfe :=_dcbd (float64 (_fgac ),float64 (_gcb ),_dad );if _bggf {_dcfe +=0.5;}else if _dcfe >=1{_dcfe -=float64 (int (_dcfe ));};return MakeNumberResult (_dcfe );};const _efb ="\u005e\u0028\u0028"+_fff +"\u007c"+_aee +"\u007c"+_beag +"\u007c"+_ebd +"\u0029\u0020\u0029\u003f";

// ISERR is an implementation of the Excel ISERR() function.
func IsErr (args []Result )Result {if len (args )!=1{return MakeErrorResult ("\u0049\u0053\u0045\u0052\u0052\u0028)\u0020\u0061\u0063\u0063\u0065\u0070\u0074\u0073\u0020\u0061\u0020\u0073\u0069n\u0067\u006c\u0065\u0020\u0061\u0072\u0067u\u006d\u0065\u006e\u0074");};return MakeBoolResult (args [0].Type ==ResultTypeError &&args [0].ValueString !="\u0023\u004e\u002f\u0041");};func _cca (_ccb ,_fde _ad .Time )bool {_cggaa :=_ccb .Unix ();_fcfg :=_fde .Unix ();_aff :=_ccb .Year ();_gec :=_gega (_aff ,_ad .March ,1);if _cgec (_aff )&&_cggaa < _gec &&_fcfg >=_gec {return true ;};var _gdb =_fde .Year ();var _ggcg =_gega (_gdb ,_ad .March ,1);return (_cgec (_gdb )&&_fcfg >=_ggcg &&_cggaa < _ggcg );};

// IsLeapYear is an implementation of the Excel ISLEAPYEAR() function.
func IsLeapYear (ctx Context ,ev Evaluator ,args []Result )Result {if len (args )!=1||args [0].Type !=ResultTypeNumber {return MakeErrorResult ("\u0049S\u004c\u0045A\u0050\u0059\u0045\u0041R\u0020\u0072\u0065q\u0075\u0069\u0072\u0065\u0073\u0020\u0061\u0020\u0073in\u0067\u006c\u0065 \u006e\u0075m\u0062\u0065\u0072\u0020\u0061\u0072g\u0075\u006de\u006e\u0074");};_gfdb :=ctx .GetEpoch ();_cfbg ,_cegg :=_fdga (args [0].Value (),_gfdb );if _cegg !=nil {return MakeErrorResult ("\u0049S\u004c\u0045A\u0050\u0059\u0045\u0041R\u0020\u0072\u0065q\u0075\u0069\u0072\u0065\u0073\u0020\u0061\u0020\u0073in\u0067\u006c\u0065 \u006e\u0075m\u0062\u0065\u0072\u0020\u0061\u0072g\u0075\u006de\u006e\u0074");};_aefef :=_cfbg .Year ();return MakeBoolResult (_cgec (_aefef ));};

// SumIf implements the SUMIF function.
func SumIf (args []Result )Result {if len (args )< 3{return MakeErrorResult ("\u0053\u0055\u004d\u0049\u0046\u0020\u0072\u0065\u0071\u0075i\u0072\u0065\u0073\u0020\u0074\u0068\u0072e\u0065\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0073");};_gfgda :=args [0];if _gfgda .Type !=ResultTypeArray &&_gfgda .Type !=ResultTypeList {return MakeErrorResult ("\u0053\u0055\u004d\u0049\u0046\u0020\u0072e\u0071\u0075\u0069r\u0065\u0073\u0020\u0066i\u0072\u0073\u0074\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0020\u006f\u0066\u0020\u0074\u0079\u0070\u0065\u0020\u0061\u0072\u0072\u0061\u0079");};_gffba :=_gbddgb (_gfgda );_eeaga :=args [2];if _eeaga .Type !=ResultTypeArray &&_eeaga .Type !=ResultTypeList {return MakeErrorResult ("\u0053\u0055\u004dI\u0046\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u006c\u0061\u0073\u0074\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0020\u006f\u0066\u0020\u0074y\u0070\u0065\u0020\u0061\u0072\u0072\u0061\u0079");};_abebb :=_gbddgb (_eeaga );_dgaf :=_cebfd (args [1]);_bdac :=0.0;for _ggeg ,_ddgag :=range _gffba {for _ebec ,_ddad :=range _ddgag {if _gfddg (_ddad ,_dgaf ){_bdac +=_abebb [_ggeg ][_ebec ].ValueNumber ;};};};return MakeNumberResult (_bdac );};func _fgad (){_gdggf =_bd .MustCompile ("\u005e\u0028\u005b\u0030\u002d\u0039\u005d\u002b\u0029\u0024");_gaefc =_bd .MustCompile ("\u005e=\u0028\u002e\u002a\u0029\u0024");_cdefe =_bd .MustCompile ("\u005e<\u0028\u002e\u002a\u0029\u0024");_cgaag =_bd .MustCompile ("\u005e>\u0028\u002e\u002a\u0029\u0024");_bbabf =_bd .MustCompile ("\u005e\u003c\u003d\u0028\u002e\u002a\u0029\u0024");_gfgef =_bd .MustCompile ("\u005e\u003e\u003d\u0028\u002e\u002a\u0029\u0024");};

// SumProduct is an implementation of the Excel SUMPRODUCT() function.
func SumProduct (args []Result )Result {if len (args )==0{return MakeErrorResult ("\u0053\u0055\u004d\u0050\u0052\u004f\u0044U\u0043\u0054\u0028)\u0020\u0072\u0065\u0071u\u0069\u0072\u0065\u0073\u0020\u0061\u0074\u0020\u006c\u0065\u0061\u0073\u0074\u0020\u006f\u006e\u0065\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};_degaf :=args [0].Type ;for _ ,_gfgdc :=range args {if _gfgdc .Type !=_degaf {return MakeErrorResult ("\u0053\u0055M\u0050\u0052\u004f\u0044\u0055C\u0054\u0028\u0029\u0020\u0072e\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0061\u006c\u006c\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0073\u0020\u006f\u0066\u0020\u0074\u0068\u0065\u0020\u0073\u0061\u006d\u0065\u0020\u0074\u0079\u0070\u0065");};};switch _degaf {case ResultTypeNumber :return Product (args );case ResultTypeList ,ResultTypeArray :_gfda :=len (args [0].ListValues ());_ddcd :=make ([]float64 ,_gfda );for _fgfg :=range _ddcd {_ddcd [_fgfg ]=1.0;};for _ ,_eeacc :=range args {if len (_eeacc .ListValues ())!=_gfda {return MakeErrorResult ("\u0053\u0055\u004d\u0050\u0052\u004f\u0044\u0055\u0043\u0054\u0028\u0029\u0020\u0072\u0065\u0071\u0075\u0069re\u0073 \u0061\u006c\u006c\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074s\u0020\u0074\u006f\u0020\u0068\u0061\u0076\u0065\u0020\u0074\u0068\u0065\u0020\u0073\u0061\u006d\u0065 \u0064\u0069\u006d\u0065\u006e\u0073\u0069\u006f\u006e");};for _gafca ,_cfcad :=range _eeacc .ListValues (){_cfcad =_cfcad .AsNumber ();if _cfcad .Type !=ResultTypeNumber {return MakeErrorResult ("\u0053\u0055\u004d\u0050\u0052\u004fD\u0055\u0043\u0054\u0028\u0029\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0061\u006c\u006c\u0020\u0061r\u0067\u0075\u006d\u0065\u006e\u0074\u0073\u0020\u0074\u006f\u0020\u0062\u0065\u0020n\u0075m\u0065\u0072\u0069\u0063");};_ddcd [_gafca ]=_ddcd [_gafca ]*_cfcad .ValueNumber ;};};_edcbf :=0.0;for _ ,_ffga :=range _ddcd {_edcbf +=_ffga ;};return MakeNumberResult (_edcbf );};return MakeNumberResult (1.0);};

// DateValue is an implementation of the Excel DATEVALUE() function.
func DateValue (args []Result )Result {if len (args )!=1||args [0].Type !=ResultTypeString {return MakeErrorResult ("\u0044A\u0054\u0045V\u0041\u004c\u0055\u0045 \u0072\u0065\u0071u\u0069\u0072\u0065\u0073\u0020\u0061\u0020\u0073\u0069ng\u006c\u0065\u0020s\u0074\u0072i\u006e\u0067\u0020\u0061\u0072\u0067u\u006d\u0065n\u0074\u0073");};_age :=_bf .ToLower (args [0].ValueString );if !_cce (_age ){_ ,_ ,_ ,_ ,_cfe ,_dfg :=_fgfe (_age );if _dfg .Type ==ResultTypeError {_dfg .ErrorMessage ="\u0049\u006e\u0063\u006f\u0072\u0072e\u0063\u0074\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0073\u0020f\u006f\u0072\u0020\u0044\u0041\u0054\u0045V\u0041\u004c\u0055\u0045";return _dfg ;};if _cfe {return MakeNumberResult (0);};};_gbd ,_cfec ,_cccf ,_ ,_gbc :=_egg (_age );if _gbc .Type ==ResultTypeError {return _gbc ;};return MakeNumberResult (_dbeg (_gbd ,_cfec ,_cccf ));};

// Rri implements the Excel RRI function.
func Rri (args []Result )Result {if len (args )!=3{return MakeErrorResult ("\u0052\u0052\u0049\u0020r\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0074\u0068r\u0065e\u0020\u0061\u0072\u0067\u0075\u006d\u0065n\u0074\u0073");};if args [0].Type !=ResultTypeNumber {return MakeErrorResult ("\u0052\u0052I\u0020\u0072\u0065\u0071\u0075i\u0072\u0065\u0073\u0020\u006eu\u006d\u0062\u0065\u0072\u0020\u006f\u0066\u0020\u0070\u0065\u0072\u0069\u006f\u0064\u0073\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};_dege :=args [0].ValueNumber ;if _dege <=0{return MakeErrorResultType (ErrorTypeNum ,"\u0052R\u0049\u0020r\u0065\u0071\u0075i\u0072\u0065\u0073\u0020\u006e\u0075\u006db\u0065\u0072\u0020\u006f\u0066\u0020p\u0065\u0072\u0069\u006f\u0064\u0073\u0020\u0074\u006f\u0020\u0062e\u0020\u0070\u006f\u0073\u0069\u0074\u0069\u0076\u0065");};if args [1].Type !=ResultTypeNumber {return MakeErrorResult ("\u0052\u0052\u0049\u0020\u0072\u0065\u0071\u0075i\u0072\u0065\u0073 p\u0072\u0065\u0073\u0065\u006e\u0074 \u0076\u0061\u006c\u0075\u0065\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006db\u0065\u0072\u0020\u0061\u0072\u0067\u0075\u006de\u006e\u0074");};_afac :=args [1].ValueNumber ;if _afac <=0{return MakeErrorResultType (ErrorTypeNum ,"\u0052\u0052\u0049\u0020\u0072e\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0070\u0072\u0065\u0073\u0065\u006et\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u0070\u006f\u0073\u0069\u0074\u0069\u0076\u0065");};if args [2].Type !=ResultTypeNumber {return MakeErrorResult ("R\u0052\u0049\u0020\u0072\u0065\u0071\u0075\u0069\u0072e\u0073\u0020\u0066\u0075\u0074\u0075\u0072e \u0076\u0061\u006c\u0075e\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u006e\u0075mb\u0065\u0072 \u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};_gbfd :=args [2].ValueNumber ;if _gbfd < 0{return MakeErrorResultType (ErrorTypeNum ,"\u0052R\u0049\u0020r\u0065\u0071\u0075\u0069r\u0065\u0073\u0020f\u0075\u0074\u0075\u0072\u0065\u0020\u0076\u0061\u006cue\u0020\u0074\u006f \u0062\u0065 \u006e\u006f\u006e\u0020\u006e\u0065g\u0061\u0074i\u0076\u0065");};return MakeNumberResult (_aca .Pow (_gbfd /_afac ,1/_dege )-1);};

// Code is an implementation of the Excel CODE function that returns the first
// character of the string as a number.
func Code (args []Result )Result {if len (args )!=1{return MakeErrorResult ("\u0043\u004f\u0044\u0045\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0061\u0020\u0073\u0069\u006e\u0067\u006c\u0065\u0020\u0073t\u0072\u0069\u006e\u0067\u0020a\u0072\u0067u\u006d\u0065\u006e\u0074");};_adafe :=args [0].AsString ();if _adafe .Type !=ResultTypeString {return MakeErrorResult ("\u0043\u004f\u0044\u0045\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0061\u0020\u0073\u0069\u006e\u0067\u006c\u0065\u0020\u0073t\u0072\u0069\u006e\u0067\u0020a\u0072\u0067u\u006d\u0065\u006e\u0074");};if len (_adafe .ValueString )==0{return MakeNumberResult (0);};return MakeNumberResult (float64 (_adafe .ValueString [0]));};func _dgc (_egc ,_gece ,_cbg ,_edbg ,_badd float64 ,_cgad int )float64 {_baaca :=_agee (_egc ,_cbg ,_edbg ,_badd ,_cgad );var _fdc float64 ;if _gece ==1{if _cgad ==1{_fdc =0;}else {_fdc =-_edbg ;};}else {if _cgad ==1{_fdc =_cacd (_egc ,_gece -2,_baaca ,_edbg ,1)-_baaca ;}else {_fdc =_cacd (_egc ,_gece -1,_baaca ,_edbg ,0);};};return _fdc *_egc ;};

// ErrorType is a formula evaluation error type.
type ErrorType byte ;func init (){RegisterFunction ("\u0043\u0048\u0041\u0052",Char );RegisterFunction ("\u0043\u004c\u0045A\u004e",Clean );RegisterFunction ("\u0043\u004f\u0044\u0045",Code );RegisterFunction ("C\u004f\u004e\u0043\u0041\u0054\u0045\u004e\u0041\u0054\u0045",Concat );RegisterFunction ("\u0043\u004f\u004e\u0043\u0041\u0054",Concat );RegisterFunction ("\u005f\u0078\u006cf\u006e\u002e\u0043\u004f\u004e\u0043\u0041\u0054",Concat );RegisterFunction ("\u0045\u0058\u0041C\u0054",Exact );RegisterFunction ("\u0046\u0049\u004e\u0044",Find );RegisterFunctionComplex ("\u0046\u0049\u004eD\u0042",Findb );RegisterFunction ("\u004c\u0045\u0046\u0054",Left );RegisterFunction ("\u004c\u0045\u0046T\u0042",Left );RegisterFunction ("\u004c\u0045\u004e",Len );RegisterFunction ("\u004c\u0045\u004e\u0042",Len );RegisterFunction ("\u004c\u004f\u0057E\u0052",Lower );RegisterFunction ("\u004d\u0049\u0044",Mid );RegisterFunction ("\u0050\u0052\u004f\u0050\u0045\u0052",Proper );RegisterFunction ("\u0052E\u0050\u004c\u0041\u0043\u0045",Replace );RegisterFunction ("\u0052\u0045\u0050\u0054",Rept );RegisterFunction ("\u0052\u0049\u0047H\u0054",Right );RegisterFunction ("\u0052\u0049\u0047\u0048\u0054\u0042",Right );RegisterFunction ("\u0053\u0045\u0041\u0052\u0043\u0048",Search );RegisterFunctionComplex ("\u0053E\u0041\u0052\u0043\u0048\u0042",Searchb );RegisterFunction ("\u0053\u0055\u0042\u0053\u0054\u0049\u0054\u0055\u0054\u0045",Substitute );RegisterFunction ("\u0054",T );RegisterFunction ("\u0054\u0045\u0058\u0054",Text );RegisterFunction ("\u0054\u0045\u0058\u0054\u004a\u004f\u0049\u004e",TextJoin );RegisterFunction ("\u005f\u0078\u006c\u0066\u006e\u002e\u0054\u0045\u0058T\u004a\u004f\u0049\u004e",TextJoin );RegisterFunction ("\u0054\u0052\u0049\u004d",Trim );RegisterFunction ("\u005f\u0078\u006c\u0066\u006e\u002e\u0055\u004e\u0049\u0043\u0048\u0041\u0052",Char );RegisterFunction ("\u005f\u0078\u006c\u0066\u006e\u002e\u0055\u004e\u0049\u0043\u004f\u0044\u0045",Unicode );RegisterFunction ("\u0055\u0050\u0050E\u0052",Upper );RegisterFunction ("\u0056\u0041\u004cU\u0045",Value );};

// Power is an implementation of the Excel POWER function that raises a number
// to a power. It requires two numeric arguments.
func Power (args []Result )Result {if len (args )!=2{return MakeErrorResult ("\u0050\u004f\u0057\u0045\u0052\u0028\u0029\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0074\u0077\u006f\u0020\u006e\u0075\u006de\u0072\u0069\u0063\u0020\u0061r\u0067\u0075m\u0065\u006e\u0074\u0073");};_befc :=args [0].AsNumber ();if _befc .Type !=ResultTypeNumber {return MakeErrorResult ("\u0066\u0069\u0072s\u0074\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0020\u0074\u006f\u0020\u0050\u004f\u0057\u0045\u0052\u0028\u0029\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065 \u0061\u0020\u006e\u0075\u006d\u0062\u0065\u0072");};_bebb :=args [1].AsNumber ();if _bebb .Type !=ResultTypeNumber {return MakeErrorResult ("\u0073\u0065\u0063\u006f\u006e\u0064\u0020a\u0072\u0067\u0075m\u0065\u006e\u0074\u0020t\u006f\u0020\u0050\u004f\u0057\u0045\u0052\u0028\u0029\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020\u0061\u0020\u006e\u0075\u006d\u0062\u0065\u0072");};return MakeNumberResult (_aca .Pow (_befc .ValueNumber ,_bebb .ValueNumber ));};

// GetLocked returns FALSE for the invalid reference context.
func (_begb *ivr )GetLocked (cellRef string )bool {return false };

// NewCellRef constructs a new cell reference.
func NewCellRef (v string )Expression {return CellRef {_acbc :v }};

// String returns a string representation of a vertical range.
func (_dbde VerticalRange )String ()string {return _dbde .verticalRangeReference ()};var _fggcg =[...]int {123,-1000,-1000,74,163,103,163,163,-1000,-1000,-1000,-1000,163,-1000,-1000,-1000,-1000,-1000,-12,106,-1000,-1000,143,-1000,-1000,-1000,-1000,-1000,163,163,163,163,163,163,163,163,163,163,163,163,74,163,163,6,-28,74,-15,-15,60,10,-14,-1000,-1000,-1000,7,-1000,74,-15,-15,-23,-23,-1000,-8,-8,-8,-8,-8,-8,-4,33,-1000,163,163,-1000,-1000,10,-1000,163,-1000,-28,74,-1000,-1000,74};

// Eval evaluates and returns the result of a function call.
func (_abee FunctionCall )Eval (ctx Context ,ev Evaluator )Result {_fbce :=LookupFunction (_abee ._fcgae );if _fbce !=nil {_fggbf :=make ([]Result ,len (_abee ._agdag ));for _faaga ,_aded :=range _abee ._agdag {_fggbf [_faaga ]=_aded .Eval (ctx ,ev );_fggbf [_faaga ].Ref =_aded .Reference (ctx ,ev );};if _ ,_faeff :=_fadbc [_abee ._fcgae ];!_faeff {if _cafgb ,_cccd :=_cdbcab (_fggbf );_cafgb {return _cccd ;};};return _fbce (_fggbf );};_cbeg :=LookupFunctionComplex (_abee ._fcgae );if _cbeg !=nil {_cbbe :=make ([]Result ,len (_abee ._agdag ));for _cbceb ,_begeg :=range _abee ._agdag {_cbbe [_cbceb ]=_begeg .Eval (ctx ,ev );_cbbe [_cbceb ].Ref =_begeg .Reference (ctx ,ev );};if _ ,_geee :=_fadbc [_abee ._fcgae ];!_geee {if _fcfdb ,_fgddb :=_cdbcab (_cbbe );_fcfdb {return _fgddb ;};};return _cbeg (ctx ,ev ,_cbbe );};return MakeErrorResult ("\u0075\u006e\u006b\u006e\u006f\u0077\u006e\u0020\u0066\u0075\u006e\u0063t\u0069\u006f\u006e\u0020"+_abee ._fcgae );};const _ecad =57349;

// Proper is an implementation of the Excel PROPER function that returns a copy
// of the string with each word capitalized.
func Proper (args []Result )Result {if len (args )!=1{return MakeErrorResult ("P\u0052\u004f\u0050\u0045\u0052\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0061\u0020\u0073i\u006e\u0067\u006c\u0065\u0020\u0073\u0074\u0072\u0069\u006eg \u0061\u0072\u0067u\u006de\u006e\u0074");};_eeeg :=args [0].AsString ();if _eeeg .Type !=ResultTypeString {return MakeErrorResult ("P\u0052\u004f\u0050\u0045\u0052\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0061\u0020\u0073i\u006e\u0067\u006c\u0065\u0020\u0073\u0074\u0072\u0069\u006eg \u0061\u0072\u0067u\u006de\u006e\u0074");};_edefg :=_eb .Buffer {};_dfdf :=false ;for _ ,_aedga :=range _eeeg .ValueString {if !_dfdf &&_c .IsLetter (_aedga ){_edefg .WriteRune (_c .ToUpper (_aedga ));}else {_edefg .WriteRune (_c .ToLower (_aedga ));};_dfdf =_c .IsLetter (_aedga );};return MakeStringResult (_edefg .String ());};func _fgbb (_acbg string )bool {for _ ,_ecgf :=range _ecg {_fagd :=_ecgf .FindStringSubmatch (_acbg );if len (_fagd )> 1{return true ;};};return false ;};func _aaad (_fccc ,_deege []float64 ,_efd float64 )float64 {_gege :=_efd +1;_dedg :=0.0;_ddef :=len (_fccc );_abda :=_deege [0];for _adaf :=1;_adaf < _ddef ;_adaf ++{_deaf :=(_deege [_adaf ]-_abda )/365;_dedg -=_deaf *_fccc [_adaf ]/_aca .Pow (_gege ,_deaf +1);};return _dedg ;};

// PrefixRangeExpr is a range expression that when evaluated returns a list of Results from a given sheet like Sheet1!A1:B4 (all cells from A1 to B4 from a sheet 'Sheet1').
type PrefixRangeExpr struct{_fgead ,_fbade ,_gdegd Expression };func _cdfe (_gdgc []Result ,_affg string )(*amorArgs ,Result ){_bbcb :=len (_gdgc );if _bbcb !=6&&_bbcb !=7{return nil ,MakeErrorResult (_affg +"\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0073\u0069\u0078\u0020\u006fr\u0020s\u0065\u0076\u0065\u006e\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0073");};if _gdgc [0].Type !=ResultTypeNumber {return nil ,MakeErrorResult (_affg +"\u0020\u0072eq\u0075\u0069\u0072e\u0073\u0020\u0063\u006fst \u0074o \u0062\u0065\u0020\u006e\u0075\u006d\u0062er\u0020\u0061\u0072\u0067\u0075\u006d\u0065n\u0074");};_dee :=_gdgc [0].ValueNumber ;if _dee < 0{return nil ,MakeErrorResultType (ErrorTypeNum ,_affg +"\u0020\u0072\u0065\u0071\u0075\u0069r\u0065\u0073\u0020\u0063\u006f\u0073\u0074\u0020\u0074\u006f\u0020\u0062\u0065 \u006e\u006f\u006e\u0020\u006e\u0065\u0067a\u0074\u0069\u0076\u0065");};_dagga ,_agdb :=_ged (_gdgc [1],"\u0064\u0061\u0074\u0065\u0020\u0070\u0075\u0072\u0063h\u0061\u0073\u0065\u0064",_affg );if _agdb .Type ==ResultTypeError {return nil ,_agdb ;};_aedf ,_agdb :=_ged (_gdgc [2],"\u0066\u0069\u0072s\u0074\u0020\u0070\u0065\u0072\u0069\u006f\u0064",_affg );if _agdb .Type ==ResultTypeError {return nil ,_agdb ;};if _aedf < _dagga {return nil ,MakeErrorResultType (ErrorTypeNum ,_affg +"\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0066\u0069\u0072\u0073\u0074 \u0070\u0065\u0072\u0069\u006f\u0064\u0020\u0074\u006f\u0020\u0062\u0065\u0020l\u0061\u0074\u0065\u0072\u0020\u0074\u0068\u0061\u006e\u0020\u0064\u0061te\u0020\u0070\u0075\u0072\u0063\u0068\u0061\u0073\u0065\u0064");};if _gdgc [3].Type !=ResultTypeNumber {return nil ,MakeErrorResult (_affg +"\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0073\u0061\u006cv\u0061\u0067\u0065\u0020\u0074\u006f \u0062\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0061\u0072\u0067u\u006d\u0065\u006e\u0074");};_eggfg :=_gdgc [3].ValueNumber ;if _eggfg < 0||_eggfg > _dee {return nil ,MakeErrorResultType (ErrorTypeNum ,_affg +"\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0073\u0061\u006c\u0076\u0061g\u0065\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u0062\u0065\u0074\u0077\u0065e\u006e\u0020\u0030\u0020\u0061\u006e\u0064\u0020\u0074\u0068\u0065\u0020in\u0069\u0074\u0069\u0061\u006c\u0020\u0063\u006f\u0073\u0074");};if _gdgc [4].Type !=ResultTypeNumber {return nil ,MakeErrorResult (_affg +"\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0070\u0065\u0072\u0069\u006f\u0064\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u006eu\u006d\u0062\u0065\u0072\u0020a\u0072\u0067u\u006d\u0065\u006e\u0074");};_cdbg :=int (_gdgc [4].ValueNumber );if _cdbg < 0{return nil ,MakeErrorResultType (ErrorTypeNum ,_affg +" \u0072\u0065\u0071\u0075\u0069\u0072e\u0073\u0020\u0070\u0065\u0072\u0069o\u0064\u0020\u0074\u006f\u0020\u0062\u0065 \u006e\u006f\u006e\u002d\u006e\u0065\u0067\u0061\u0074\u0069v\u0065");};if _gdgc [5].Type !=ResultTypeNumber {return nil ,MakeErrorResult (_affg +"\u0020\u0072\u0065\u0071\u0075\u0069r\u0065\u0073\u0020\u0064\u0065\u0070\u0072\u0065\u0063\u0069\u0061\u0074\u0069\u006f\u006e\u0020\u0072\u0061\u0074\u0065 \u0074\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0061r\u0067u\u006d\u0065\u006e\u0074");};_fgfb :=_gdgc [5].ValueNumber ;if _fgfb < 0{return nil ,MakeErrorResultType (ErrorTypeNum ,_affg +"\u0020r\u0065\u0071\u0075\u0069\u0072\u0065\u0073 d\u0065\u0070\u0072\u0065\u0063\u0069\u0061\u0074\u0069\u006f\u006e\u0020\u0072\u0061t\u0065\u0020t\u006f\u0020\u0062e\u0020\u006d\u006f\u0072\u0065\u0020\u0074\u0068\u0061\u006e\u0020\u0030\u0020\u0061\u006e\u0064 \u006c\u0065ss\u0020\u0074\u0068a\u006e\u0020\u0030\u002e\u0035");};_abae :=0;if _bbcb ==7&&_gdgc [6].Type !=ResultTypeEmpty {if _gdgc [6].Type !=ResultTypeNumber {return nil ,MakeErrorResult (_affg +"\u0020\u0072e\u0071\u0075\u0069\u0072e\u0073\u0020b\u0061\u0073\u0069\u0073\u0020\u0074\u006f\u0020b\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0061\u0072\u0067u\u006d\u0065\u006e\u0074");};_abae =int (_gdgc [6].ValueNumber );if !_facb (_abae )||_abae ==2{return nil ,MakeErrorResultType (ErrorTypeNum ,"\u0049\u006ec\u006f\u0072\u0072\u0065\u0063\u0074\u0020\u0062\u0061\u0073\u0069\u0073\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0020fo\u0072\u0020"+_affg );};};return &amorArgs {_dee ,_dagga ,_aedf ,_eggfg ,_cdbg ,_fgfb ,_abae },_ebega ;};func (_gfffe tokenType )String ()string {return _bbdb (int (_gfffe ))};var _afcbe string =string ([]byte {92});var _accbf []byte =[]byte {0,1,2,1,11,1,12,1,13,1,14,1,15,1,16,1,17,1,18,1,19,1,20,1,21,1,22,1,23,1,24,1,25,1,26,1,27,1,28,1,29,1,30,1,31,1,32,1,33,1,34,1,35,1,36,1,37,1,38,1,39,1,40,1,41,1,42,1,43,2,0,1,2,3,4,2,3,5,2,3,6,2,3,7,2,3,8,2,3,9,2,3,10};func _dbad (_ccdd []Result ,_cdeg string )(float64 ,float64 ,Result ){if len (_ccdd )!=2{return 0,0,MakeErrorResult (_cdeg +"\u0020\u0072\u0065qu\u0069\u0072\u0065\u0073\u0020\u0074\u0077\u006f\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0073");};if _ccdd [0].Type !=ResultTypeNumber {return 0,0,MakeErrorResult (_cdeg +"\u0020\u0072\u0065\u0071\u0075\u0069r\u0065\u0073\u0020\u0066\u0072\u0061\u0063\u0074\u0069\u006f\u006e\u0061\u006c\u0020\u0064\u006f\u006c\u006c\u0061\u0072 \u0074\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0061r\u0067u\u006d\u0065\u006e\u0074");};_ecdg :=_ccdd [0].ValueNumber ;if _ccdd [1].Type !=ResultTypeNumber {return 0,0,MakeErrorResult (_cdeg +" \u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0066\u0072\u0061\u0063\u0074\u0069\u006f\u006e\u0020t\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006d\u0062\u0065r \u0061\u0072\u0067u\u006de\u006e\u0074");};_dbdfa :=float64 (int (_ccdd [1].ValueNumber ));if _dbdfa < 0{return 0,0,MakeErrorResultType (ErrorTypeNum ,_cdeg +"\u0020r\u0065\u0071u\u0069\u0072\u0065\u0073 \u0066\u0072\u0061c\u0074\u0069\u006f\u006e\u0020\u0074\u006f\u0020\u0062e \u006e\u006f\u006e \u006e\u0065g\u0061\u0074\u0069\u0076\u0065\u0020n\u0075\u006db\u0065\u0072");};return _ecdg ,_dbdfa ,_ebega ;};

// Update updates references in the BinaryExpr after removing a row/column.
func (_fcf BinaryExpr )Update (q *_fe .UpdateQuery )Expression {_ebe :=_fcf ;_ebe ._db =_fcf ._db .Update (q );_ebe ._cg =_fcf ._cg .Update (q );return _ebe ;};func (_ccbee PrefixVerticalRange )verticalRangeReference (_egadd string )string {return _a .Sprintf ("\u0025\u0073\u0021\u0025\u0073\u003a\u0025\u0073",_egadd ,_ccbee ._adebd ,_ccbee ._bgdac );};

// Duration implements the Excel DURATION function.
func Duration (args []Result )Result {_daac ,_gba :=_aedg (args ,"\u0044\u0055\u0052\u0041\u0054\u0049\u004f\u004e");if _gba .Type ==ResultTypeError {return _gba ;};_cbfd :=_daac ._cdbc ;_cebe :=_daac ._fef ;_afgc :=_daac ._bgec ;_bafe :=_daac ._cgeb ;_agffg :=_daac ._fcgc ;_fffc :=_daac ._dfcb ;return _gfge (_cbfd ,_cebe ,_afgc ,_bafe ,_agffg ,_fffc );};func _baeed (_babf yyLexer ,_fbgg *yySymType )(_edace ,_baeb int ){_baeb =0;_edace =_babf .Lex (_fbgg );if _edace <=0{_baeb =_acddb [0];goto _afggb ;};if _edace < len (_acddb ){_baeb =_acddb [_edace ];goto _afggb ;};if _edace >=_cddb {if _edace < _cddb +len (_caabd ){_baeb =_caabd [_edace -_cddb ];goto _afggb ;};};for _baba :=0;_baba < len (_efaed );_baba +=2{_baeb =_efaed [_baba +0];if _baeb ==_edace {_baeb =_efaed [_baba +1];goto _afggb ;};};_afggb :if _baeb ==0{_baeb =_caabd [1];};if _egdec >=3{_a .Printf ("l\u0065\u0078\u0020\u0025\u0073\u0028\u0025\u0064\u0029\u000a",_bbdb (_baeb ),uint (_edace ));};return _edace ,_baeb ;};

// HasFormula returns FALSE for the invalid reference context.
func (_agaa *ivr )HasFormula (cellRef string )bool {return false };

// Reference returns an invalid reference for ConstArrayExpr.
func (_acab ConstArrayExpr )Reference (ctx Context ,ev Evaluator )Reference {return ReferenceInvalid };

// Odd is an implementation of the Excel ODD() that rounds a number to the
// nearest odd integer.
func Odd (args []Result )Result {if len (args )!=1{return MakeErrorResult ("O\u0044\u0044\u0028\u0029\u0020\u0072e\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u006f\u006ee\u0020\u0061\u0072g\u0075m\u0065\u006e\u0074");};_bfbfb :=args [0].AsNumber ();if _bfbfb .Type !=ResultTypeNumber {return MakeErrorResult ("\u004f\u0044\u0044\u0028\u0029\u0020\u0072\u0065\u0071\u0075i\u0072\u0065\u0073\u0020\u006e\u0075\u006db\u0065\u0072\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};_dcfd :=_aca .Signbit (_bfbfb .ValueNumber );_acgbf ,_cgdcd :=_aca .Modf ((_bfbfb .ValueNumber -1)/2);_eccgd :=_acgbf *2+1;if _cgdcd !=0{if !_dcfd {_eccgd +=2;}else {_eccgd -=2;};};return MakeNumberResult (_eccgd );};var _bdbb ,_cbea ,_cagfe ,_gecf ,_dgfge ,_egdgg ,_adeb ,_ebed ,_ddgd ,_bdba ,_beac ,_eaed ,_gecg ,_bcgfa ,_cfdb *_bd .Regexp ;const _gdfae =57361;

// ConstArrayExpr is a constant array expression.
type ConstArrayExpr struct{_fee [][]Expression };const _bda ="\u0028(\u005b0\u002d\u0039\u005d\u0029\u002b)\u0020\u0028a\u006d\u007c\u0070\u006d\u0029";const (_ byte =iota ;_bfacb ;_gdba ;_ecfgb ;_cdfee ;_fcag ;);

// NewString constructs a new string expression.
func NewString (v string )Expression {v =_bf .Replace (v ,"\u0022\u0022","\u0022",-1);return String {_edag :v };};

// Ddb implements the Excel DDB function.
func Ddb (args []Result )Result {_edfd :=len (args );if _edfd !=4&&_edfd !=5{return MakeErrorResult ("\u0044\u0044\u0042 \u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0066\u006f\u0075\u0072\u0020\u006f\u0072\u0020\u0066\u0069\u0076\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020a\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0073");};if args [0].Type !=ResultTypeNumber {return MakeErrorResult ("\u0044\u0044\u0042\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020c\u006f\u0073\u0074\u0020\u0074\u006f \u0062\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0061\u0072\u0067u\u006d\u0065\u006e\u0074");};_gdea :=args [0].ValueNumber ;if _gdea < 0{return MakeErrorResultType (ErrorTypeNum ,"\u0044\u0044B \u0072\u0065\u0071u\u0069\u0072\u0065\u0073 co\u0073t \u0074\u006f\u0020\u0062\u0065\u0020\u006eon\u0020\u006e\u0065\u0067\u0061\u0074\u0069v\u0065");};if args [1].Type !=ResultTypeNumber {return MakeErrorResult ("\u0044\u0044\u0042 \u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0073\u0061\u006c\u0076\u0061\u0067\u0065\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072 \u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};_def :=args [1].ValueNumber ;if _def < 0{return MakeErrorResultType (ErrorTypeNum ,"\u0044\u0044\u0042\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020s\u0061\u006c\u0076\u0061\u0067\u0065 \u0074\u006f\u0020\u0062\u0065\u0020\u006e\u006f\u006e\u0020\u006e\u0065\u0067a\u0074\u0069\u0076\u0065");};if args [2].Type !=ResultTypeNumber {return MakeErrorResult ("\u0044\u0044\u0042\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020l\u0069\u0066\u0065\u0020\u0074\u006f \u0062\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0061\u0072\u0067u\u006d\u0065\u006e\u0074");};_gggfe :=args [2].ValueNumber ;if _gggfe <=0{return MakeErrorResultType (ErrorTypeNum ,"\u0044\u0044\u0042\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u006c\u0069f\u0065 \u0074\u006f\u0020\u0062\u0065\u0020\u0070\u006f\u0073\u0069\u0074\u0069\u0076\u0065");};if args [3].Type !=ResultTypeNumber {return MakeErrorResult ("\u0044\u0044\u0042\u0020\u0072e\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0070\u0065\u0072\u0069\u006f\u0064 \u0074\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};_bfd :=args [3].ValueNumber ;if _bfd < 1{return MakeErrorResultType (ErrorTypeNum ,"\u0044\u0044\u0042\u0020\u0072\u0065\u0071u\u0069\u0072\u0065s\u0020\u0070\u0065\u0072i\u006f\u0064\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u006e\u006f\u0074\u0020\u006c\u0065\u0073\u0073\u0020\u0074\u0068\u0061\u006e\u0020\u006f\u006e\u0065");};if _bfd > _gggfe {return MakeErrorResultType (ErrorTypeNum ,"\u0049n\u0063\u006f\u0072\u0072\u0065\u0063\u0074\u0020\u0070\u0065\u0072i\u006f\u0064\u0020\u0066\u006f\u0072\u0020\u0044\u0044\u0042");};_gefc :=2.0;if _edfd ==5&&args [4].Type !=ResultTypeEmpty {if args [4].Type !=ResultTypeNumber {return MakeErrorResult ("\u0044\u0044\u0042\u0020\u0072e\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0066\u0061\u0063\u0074\u006f\u0072 \u0074\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};_gefc =args [4].ValueNumber ;if _gefc < 0{return MakeErrorResultType (ErrorTypeNum ,"\u0044\u0044\u0042\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0066\u0061\u0063\u0074\u006f\u0072\u0020\u0074\u006f\u0020\u0062e\u0020\u006e\u006f\u006e\u0020n\u0065\u0067a\u0074\u0069\u0076\u0065");};};return MakeNumberResult (_fgbbb (_gdea ,_def ,_gggfe ,_bfd ,_gefc ));};

// Findb is an implementation of the Excel FINDB().
func Findb (ctx Context ,ev Evaluator ,args []Result )Result {if !ctx .IsDBCS (){return Find (args );};_aecbd ,_abca :=_eade ("\u0046\u0049\u004e\u0044",args );if _abca .Type !=ResultTypeEmpty {return _abca ;};_aecg :=_aecbd ._fbdf ;if _aecg ==""{return MakeNumberResult (1.0);};_ebdec :=_aecbd ._bdec ;_bbde :=_aecbd ._dcbg -1;_abfg :=1;_fdgaa :=0;for _dafdd :=range _ebdec {if _dafdd !=0{_edee :=1;if _dafdd -_fdgaa > 1{_edee =2;};_abfg +=_edee ;};if _abfg > _bbde {_afce :=_bf .Index (_ebdec [_dafdd :],_aecg );if _afce ==0{return MakeNumberResult (float64 (_abfg ));};};_fdgaa =_dafdd ;};return MakeErrorResultType (ErrorTypeValue ,"\u004eo\u0074\u0020\u0066\u006f\u0075\u006ed");};

// Or is an implementation of the Excel OR() function and takes a variable
// number of arguments.
func Or (args []Result )Result {if len (args )==0{return MakeErrorResult ("\u004f\u0052\u0020\u0072\u0065\u0071u\u0069\u0072\u0065\u0073\u0020\u0061\u0074\u0020\u006c\u0065\u0061\u0073\u0074 \u006f\u006e\u0065\u0020\u0061\u0072\u0067u\u006d\u0065\u006e\u0074");};_eecf :=false ;for _ ,_ccbe :=range args {switch _ccbe .Type {case ResultTypeList ,ResultTypeArray :_cbfc :=Or (_ccbe .ListValues ());if _cbfc .Type ==ResultTypeError {return _cbfc ;};if _cbfc .ValueNumber !=0{_eecf =true ;};case ResultTypeNumber :if _ccbe .ValueNumber !=0{_eecf =true ;};case ResultTypeString :return MakeErrorResult ("\u004f\u0052 \u0064\u006f\u0065\u0073\u006e\u0027\u0074\u0020\u006f\u0070\u0065\u0072\u0061\u0074\u0065\u0020\u006f\u006e\u0020\u0073\u0074\u0072in\u0067\u0073");case ResultTypeError :return _ccbe ;default:return MakeErrorResult ("\u0075\u006e\u0073u\u0070\u0070\u006f\u0072t\u0065\u0064\u0020\u0061\u0072\u0067\u0075m\u0065\u006e\u0074\u0020\u0074\u0079\u0070\u0065\u0020\u0069\u006e\u0020\u004f\u0052");};};return MakeBoolResult (_eecf );};

// NewNamedRangeRef constructs a new named range reference.
func NewNamedRangeRef (v string )Expression {return NamedRangeRef {_ggbf :v }};func _gcdbg (_bfgec yyLexer )int {return _ebcfa ().Parse (_bfgec )};func _gfbe (_dcga ,_fbf float64 ,_bgee ,_gcge int )float64 {_fcfa :=_cgf (_dcga );_cacg :=_cgf (_fbf );if _gcge ==1{_fedca :=_dda (_fcfa ,_cacg ,_bgee ,1);_faa :=_fedca .AddDate (0,12/_bgee ,0);return _becc (_fedca ,_faa ,_gcge );};return float64 (_ebfc (0,_gcge ))/float64 (_bgee );};

// NA is an implementation of the Excel NA() function that just returns the #N/A! error.
func NA (args []Result )Result {if len (args )!=0{return MakeErrorResult ("\u004eA\u0028\u0029\u0020\u0061c\u0063\u0065\u0070\u0074\u0073 \u006eo\u0020a\u0072\u0067\u0075\u006d\u0065\u006e\u0074s");};return MakeErrorResultType (ErrorTypeNA ,"");};

// NewNumber constructs a new number expression.
func NewNumber (v string )Expression {_gagab ,_fdbg :=_d .ParseFloat (v ,64);if _fdbg !=nil {_cc .Log .Debug ("e\u0072\u0072\u006f\u0072\u0020\u0070a\u0072\u0073\u0069\u006e\u0067\u0020f\u006f\u0072\u006d\u0075\u006c\u0061\u0020n\u0075\u006d\u0062\u0065\u0072\u0020\u0025\u0073\u003a\u0020%\u0076",v ,_fdbg );};return Number {_dadgc :_gagab };};

// ISERROR is an implementation of the Excel ISERROR() function.
func IsError (args []Result )Result {if len (args )!=1{return MakeErrorResult ("I\u0053\u0045\u0052\u0052\u004f\u0052(\u0029\u0020\u0061\u0063\u0063\u0065p\u0074\u0073\u0020\u0061\u0020\u0073\u0069n\u0067\u006c\u0065\u0020\u0061\u0072\u0067\u0075\u006d\u0065n\u0074");};return MakeBoolResult (args [0].Type ==ResultTypeError );};func (_gcea HorizontalRange )horizontalRangeReference ()string {return _a .Sprintf ("\u0025\u0064\u003a%\u0064",_gcea ._dfga ,_gcea ._fgbbc );};type amorArgs struct{_dba float64 ;_dbfge float64 ;_faea float64 ;_aeca float64 ;_bbfbe int ;_dbbc float64 ;_gebb int ;};const _dbc =57369;var _cggd =[...]string {};func MakeRangeReference (ref string )Reference {return Reference {Type :ReferenceTypeRange ,Value :ref }};const _fff ="\u0028\u0028\u005b\u0030\u002d\u0039\u005d\u0029\u002b\u0029\u002f\u0028\u0028\u005b\u0030-\u0039]\u0029\u002b\u0029\u002f\u0028\u0028\u005b\u0030\u002d\u0039\u005d\u0029\u002b\u0029";const _daddb =57355;func Sign (args []Result )Result {if len (args )!=1{return MakeErrorResult ("\u0053\u0049\u0047\u004e(\u0029\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073 \u006fn\u0065\u0020\u0061\u0072\u0067\u0075\u006de\u006e\u0074");};_gbaa :=args [0].AsNumber ();if _gbaa .Type !=ResultTypeNumber {return MakeErrorResult ("\u0053\u0049\u0047N(\u0029\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065s\u0020a\u0020n\u0075m\u0065\u0072\u0069\u0063\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};if _gbaa .ValueNumber < 0{return MakeNumberResult (-1);}else if _gbaa .ValueNumber > 0{return MakeNumberResult (1);};return MakeNumberResult (0);};func _efbf (_gbca []Result )(float64 ,float64 ,Result ){_fgec :=0.0;_dgge :=1.0;for _ ,_dfcf :=range _gbca {switch _dfcf .Type {case ResultTypeNumber :_fgec +=_dfcf .ValueNumber ;_dgge *=_gfgg (_dfcf .ValueNumber );case ResultTypeList ,ResultTypeArray :_ffede ,_ffdg ,_ceaf :=_efbf (_dfcf .ListValues ());_fgec +=_ffede ;_dgge *=_gfgg (_ffdg );if _ceaf .Type ==ResultTypeError {return 0,0,_ceaf ;};case ResultTypeString :return 0,0,MakeErrorResult ("M\u0055\u004c\u0054\u0049\u004e\u004f\u004d\u0049\u0041\u004c\u0028\u0029\u0020\u0072\u0065\u0071\u0075\u0069r\u0065\u0073\u0020\u006e\u0075\u006d\u0065\u0072\u0069\u0063 a\u0072\u0067\u0075m\u0065n\u0074\u0073");case ResultTypeError :return 0,0,_dfcf ;};};return _fgec ,_dgge ,_ebega ;};

// Update updates references in the PrefixVerticalRange after removing a row/column.
func (_gdfaed PrefixVerticalRange )Update (q *_fe .UpdateQuery )Expression {if q .UpdateType ==_fe .UpdateActionRemoveColumn {_fddde :=_gdfaed ;_debg :=_gdfaed ._geaee .String ();if _debg ==q .SheetToUpdate {_gefea :=q .ColumnIdx ;_fddde ._adebd =_da (_gdfaed ._adebd ,_gefea );_fddde ._bgdac =_da (_gdfaed ._bgdac ,_gefea );};return _fddde ;};return _gdfaed ;};

// Base is an implementation of the Excel BASE function that returns a string
// form of an integer in a specified base and of a minimum length with padded
// zeros.
func Base (args []Result )Result {if len (args )< 2{return MakeErrorResult ("\u0042\u0041\u0053\u0045\u0028\u0029\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0061\u0074\u0020\u006c\u0065\u0061\u0073\u0074 \u0074\u0077\u006f\u0020\u0061r\u0067\u0075m\u0065\u006e\u0074\u0073");};if len (args )> 3{return MakeErrorResult ("\u0042\u0041S\u0045\u0028\u0029\u0020a\u006c\u006co\u0077\u0073\u0020\u0061\u0074\u0020\u006d\u006fs\u0074\u0020\u0074\u0068\u0072\u0065\u0065\u0020\u0061\u0072\u0067\u0075m\u0065\u006e\u0074\u0073");};_ceea :=args [0].AsNumber ();if _ceea .Type !=ResultTypeNumber {return MakeErrorResult ("\u0066\u0069\u0072\u0073\u0074 \u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0020\u0074\u006f\u0020\u0042A\u0053\u0045\u0028\u0029\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020\u0061\u0020\u006e\u0075\u006d\u0062\u0065\u0072");};_dbbcb :=args [1].AsNumber ();if _dbbcb .Type !=ResultTypeNumber {return MakeErrorResult ("\u0073\u0065\u0063o\u006e\u0064\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0020\u0074\u006f\u0020\u0042\u0041\u0053\u0045\u0028\u0029\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065 \u0061\u0020\u006e\u0075\u006d\u0062\u0065\u0072");};_bbdc :=int (_dbbcb .ValueNumber );if _bbdc < 0||_bbdc > 36{return MakeErrorResult ("\u0072\u0061\u0064\u0069\u0078\u0020m\u0075\u0073\u0074\u0020\u0062\u0065\u0020\u0069\u006e\u0020\u0074\u0068\u0065 \u0072\u0061\u006e\u0067\u0065\u0020\u005b0\u002c\u0033\u0036\u005d");};_acdb :=0;if len (args )> 2{_dbdc :=args [2].AsNumber ();if _dbdc .Type !=ResultTypeNumber {return MakeErrorResult ("\u0074\u0068\u0069\u0072\u0064 \u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0020\u0074\u006f\u0020\u0042A\u0053\u0045\u0028\u0029\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020\u0061\u0020\u006e\u0075\u006d\u0062\u0065\u0072");};_acdb =int (_dbdc .ValueNumber );};_gbbf :=_d .FormatInt (int64 (_ceea .ValueNumber ),_bbdc );if len (_gbbf )< _acdb {_gbbf =_bf .Repeat ("\u0030",_acdb -len (_gbbf ))+_gbbf ;};return MakeStringResult (_gbbf );};func (_cacb *noCache )GetFromCache (key string )(Result ,bool ){return _ebega ,false };

// Month is an implementation of the Excel MONTH() function.
func Month (args []Result )Result {if len (args )!=1{return MakeErrorResult ("M\u004f\u004e\u0054\u0048\u0020\u0072e\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u006f\u006ee\u0020\u0061\u0072g\u0075m\u0065\u006e\u0074");};_ggb :=args [0];switch _ggb .Type {case ResultTypeEmpty :return MakeNumberResult (1);case ResultTypeNumber :_dffb :=_cgf (_ggb .ValueNumber );return MakeNumberResult (float64 (_dffb .Month ()));case ResultTypeString :_cgga :=_bf .ToLower (_ggb .ValueString );if !_cce (_cgga ){_ ,_ ,_ ,_ ,_afb ,_gbdb :=_fgfe (_cgga );if _gbdb .Type ==ResultTypeError {_gbdb .ErrorMessage ="\u0049\u006ec\u006f\u0072\u0072\u0065\u0063\u0074\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0073\u0020\u0066\u006f\u0072\u0020\u004dON\u0054\u0048";return _gbdb ;};if _afb {return MakeNumberResult (1);};};_ ,_afd ,_ ,_ ,_ebf :=_egg (_cgga );if _ebf .Type ==ResultTypeError {return _ebf ;};return MakeNumberResult (float64 (_afd ));default:return MakeErrorResult ("\u0049\u006e\u0063\u006fr\u0072\u0065\u0063\u0074\u0020\u0061\u0072\u0067\u0075\u006de\u006et\u0020\u0066\u006f\u0072\u0020\u004d\u004fN\u0054\u0048");};};

// Pricemat implements the Excel PRICEMAT function.
func Pricemat (args []Result )Result {_afee :=len (args );if _afee !=5&&_afee !=6{return MakeErrorResult ("\u0050\u0052\u0049\u0043\u0045\u004d\u0041\u0054\u0020\u0072\u0065\u0071\u0075i\u0072\u0065\u0073\u0020\u0066\u0069v\u0065\u0020\u006f\u0072\u0020\u0073\u0069\u0078\u0020\u0061\u0072\u0067\u0075m\u0065\u006e\u0074\u0073");};_dged ,_feeg ,_eaag :=_dbda (args [0],args [1],"\u0050\u0052\u0049\u0043\u0045\u004d\u0041\u0054");if _eaag .Type ==ResultTypeError {return _eaag ;};_cafge ,_eaag :=_ged (args [2],"\u0069\u0073\u0073\u0075\u0065\u0020\u0064\u0061\u0074\u0065","\u0050\u0052\u0049\u0043\u0045\u004d\u0041\u0054");if _eaag .Type ==ResultTypeError {return _eaag ;};if _cafge >=_dged {return MakeErrorResult ("\u0050\u0052\u0049\u0043E\u004d\u0041\u0054\u0020\u0072\u0065\u0071\u0075\u0069r\u0065\u0073\u0020\u0069\u0073\u0073\u0075\u0065\u0020\u0064\u0061\u0074\u0065\u0020\u0074\u006f\u0020\u0062e\u0020\u0062\u0065\u0066\u006fr\u0065\u0020\u0073\u0065\u0074\u0074\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u0064\u0061\u0074\u0065");};if args [3].Type !=ResultTypeNumber {return MakeErrorResult ("\u0050\u0052I\u0043\u0045\u004d\u0041T\u0020\u0072e\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0072a\u0074\u0065\u0020\u006f\u0066\u0020\u0074\u0079\u0070\u0065\u0020\u006eu\u006d\u0062\u0065\u0072");};_afcb :=args [3].ValueNumber ;if _afcb < 0{return MakeErrorResultType (ErrorTypeNum ,"\u0050\u0052\u0049\u0043\u0045M\u0041\u0054\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0072a\u0074\u0065\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u006e\u006f\u006e\u0020\u006e\u0065\u0067\u0061\u0074\u0069\u0076\u0065");};if args [4].Type !=ResultTypeNumber {return MakeErrorResult ("\u0050\u0052\u0049\u0043\u0045\u004d\u0041\u0054\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0079\u0069\u0065\u006c\u0064\u0020o\u0066\u0020\u0074\u0079\u0070e\u0020\u006eu\u006d\u0062\u0065\u0072");};_cbdg :=args [4].ValueNumber ;if _cbdg < 0{return MakeErrorResultType (ErrorTypeNum ,"\u0050\u0052\u0049C\u0045\u004d\u0041\u0054\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0079\u0069\u0065\u006c\u0064\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u006e\u006f\u006e \u006e\u0065\u0067\u0061\u0074\u0069\u0076\u0065");};_cabcde :=0;if _afee ==6&&args [5].Type !=ResultTypeEmpty {if args [5].Type !=ResultTypeNumber {return MakeErrorResult ("\u0050R\u0049\u0043E\u004d\u0041\u0054 \u0072\u0065\u0071\u0075\u0069\u0072\u0065s\u0020\u0062\u0061\u0073\u0069\u0073 \u0074\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006d\u0062\u0065r\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};_cabcde =int (args [5].ValueNumber );if !_facb (_cabcde ){return MakeErrorResultType (ErrorTypeNum ,"\u0049\u006ec\u006f\u0072\u0072\u0065c\u0074\u0020b\u0061\u0073\u0069\u0073\u0020\u0061\u0072\u0067u\u006d\u0065\u006e\u0074\u0020\u0066\u006f\u0072\u0020\u0050\u0052\u0049C\u0045\u004d\u0041\u0054");};};_ecac ,_eaag :=_gacb (_dged ,_feeg ,_cabcde );if _eaag .Type ==ResultTypeError {return _eaag ;};_efgg ,_eaag :=_gacb (_cafge ,_feeg ,_cabcde );if _eaag .Type ==ResultTypeError {return _eaag ;};_gdcc ,_eaag :=_gacb (_cafge ,_dged ,_cabcde );if _eaag .Type ==ResultTypeError {return _eaag ;};_cgb :=1+_efgg *_afcb ;_cbfg :=1+_ecac *_cbdg ;return MakeNumberResult ((_cgb /_cbfg -_gdcc *_afcb )*100);};

// Update returns the same object as updating sheet references does not affect String.
func (_ebfcda String )Update (q *_fe .UpdateQuery )Expression {return _ebfcda };func (_bdedg ResultType )String ()string {if _bdedg >=ResultType (len (_dcdff )-1){return _a .Sprintf ("\u0052\u0065\u0073\u0075\u006c\u0074\u0054\u0079\u0070e\u0028\u0025\u0064\u0029",_bdedg );};return _aeae [_dcdff [_bdedg ]:_dcdff [_bdedg +1]];};func _eade (_gded string ,_bfce []Result )(*parsedSearchObject ,Result ){_fgef :=len (_bfce );if _fgef !=2&&_fgef !=3{return nil ,MakeErrorResult (_gded +"\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0074\u0077\u006f\u0020\u006fr\u0020t\u0068\u0072\u0065\u0065\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0073");};_ddgbg :=_bfce [0];if _ddgbg .Type ==ResultTypeError {return nil ,_ddgbg ;};if _ddgbg .Type !=ResultTypeString &&_ddgbg .Type !=ResultTypeNumber {return nil ,MakeErrorResult ("\u0054\u0068e\u0020\u0066\u0069\u0072s\u0074\u0020a\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0020s\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0061\u0020\u0073t\u0072\u0069\u006e\u0067");};_dedf :=_bfce [1];if _dedf .Type ==ResultTypeError {return nil ,_dedf ;};if _dedf .Type !=ResultTypeString &&_dedf .Type !=ResultTypeNumber {return nil ,MakeErrorResult ("\u0054\u0068\u0065\u0020\u0073\u0065\u0063\u006f\u006e\u0064\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0020\u0073\u0068\u006f\u0075l\u0064\u0020\u0062\u0065\u0020a\u0020\u0073t\u0072\u0069\u006e\u0067");};_efab :=_dedf .Value ();_fgcac :=_ddgbg .Value ();_feegg :=1;if _fgef ==3&&_bfce [2].Type !=ResultTypeEmpty {_aebd :=_bfce [2];if _aebd .Type !=ResultTypeNumber {return nil ,MakeErrorResult ("P\u006f\u0073\u0069\u0074\u0069\u006fn\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062e\u0020\u0061\u0020n\u0075m\u0062\u0065\u0072");};_feegg =int (_aebd .ValueNumber );if _feegg < 1{return nil ,MakeErrorResultType (ErrorTypeValue ,"\u0050\u006f\u0073\u0069\u0074\u0069\u006f\u006e\u0020\u0073\u0068\u006f\u0075l\u0064\u0020\u0062\u0065\u0020\u0061 \u006e\u0075\u006d\u0062\u0065\u0072\u0020\u006d\u006f\u0072\u0065\u0020\u0074h\u0061\u006e\u0020\u0030");};if _feegg > len (_efab ){return nil ,MakeErrorResultType (ErrorTypeValue ,"\u0050\u006f\u0073\u0069\u0074\u0069\u006f\u006e\u0020\u0073\u0068\u006f\u0075l\u0064\u0020\u0062\u0065\u0020\u0061 \u006e\u0075\u006d\u0062\u0065\u0072\u0020\u006d\u006f\u0072\u0065\u0020\u0074h\u0061\u006e\u0020\u0030");};};return &parsedSearchObject {_fgcac ,_efab ,_feegg },_ebega ;};

// NewVerticalRange constructs a new full columns range.
func NewVerticalRange (v string )Expression {_bgdag :=_bf .Split (v ,"\u003a");if len (_bgdag )!=2{return nil ;};if _bgdag [0]> _bgdag [1]{_bgdag [0],_bgdag [1]=_bgdag [1],_bgdag [0];};return VerticalRange {_bbcff :_bgdag [0],_gebgf :_bgdag [1]};};func _fgfe (_aef string )(int ,int ,float64 ,bool ,bool ,Result ){_gaedd :="";_fdad :=[]string {};for _fedc ,_bad :=range _eef {_fdad =_bad .FindStringSubmatch (_aef );if len (_fdad )> 1{_gaedd =_fedc ;break ;};};if _gaedd ==""{return 0,0,0,false ,false ,MakeErrorResultType (ErrorTypeValue ,_cege );};_fad :=_fdad [1]=="";_fdad =_fdad [49:];_eaa :=len (_fdad );_afeg :=_fdad [_eaa -1];_caaa :=_afeg =="\u0061\u006d";_ffcc :=_afeg =="\u0070\u006d";var _dfcee ,_fbdb int ;var _abcd float64 ;var _fca error ;switch _gaedd {case "\u0068\u0068":_dfcee ,_fca =_d .Atoi (_fdad [0]);if _fca !=nil {return 0,0,0,false ,false ,MakeErrorResultType (ErrorTypeValue ,_cege );};_fbdb =0;_abcd =0;case "\u0068\u0068\u003am\u006d":_dfcee ,_fca =_d .Atoi (_fdad [0]);if _fca !=nil {return 0,0,0,false ,false ,MakeErrorResultType (ErrorTypeValue ,_cege );};_fbdb ,_fca =_d .Atoi (_fdad [2]);if _fca !=nil {return 0,0,0,false ,false ,MakeErrorResultType (ErrorTypeValue ,_cege );};_abcd =0;case "\u006d\u006d\u003as\u0073":_dfcee =0;_fbdb ,_fca =_d .Atoi (_fdad [0]);if _fca !=nil {return 0,0,0,false ,false ,MakeErrorResultType (ErrorTypeValue ,_cege );};_abcd ,_fca =_d .ParseFloat (_fdad [2],64);if _fca !=nil {return 0,0,0,false ,false ,MakeErrorResultType (ErrorTypeValue ,_cege );};case "\u0068\u0068\u003a\u006d\u006d\u003a\u0073\u0073":_dfcee ,_fca =_d .Atoi (_fdad [0]);if _fca !=nil {return 0,0,0,false ,false ,MakeErrorResultType (ErrorTypeValue ,_cege );};_fbdb ,_fca =_d .Atoi (_fdad [2]);if _fca !=nil {return 0,0,0,false ,false ,MakeErrorResultType (ErrorTypeValue ,_cege );};_abcd ,_fca =_d .ParseFloat (_fdad [4],64);if _fca !=nil {return 0,0,0,false ,false ,MakeErrorResultType (ErrorTypeValue ,_cege );};};if _fbdb >=60{return 0,0,0,false ,false ,MakeErrorResultType (ErrorTypeValue ,_cege );};if _caaa ||_ffcc {if _dfcee > 12||_abcd >=60{return 0,0,0,false ,false ,MakeErrorResultType (ErrorTypeValue ,_cege );}else if _dfcee ==12{_dfcee =0;};}else if _dfcee >=24||_abcd >=10000{return 0,0,0,false ,false ,MakeErrorResultType (ErrorTypeValue ,_cege );};return _dfcee ,_fbdb ,_abcd ,_ffcc ,_fad ,_ebega ;};

// Range is a range expression that when evaluated returns a list of Results.
type Range struct{_gdefe ,_daea Expression };var _ebega Result =MakeEmptyResult ();func _feba (_fdde ,_bfcb float64 ,_cfb ,_bcge int )float64 {_gaef :=_cgf (_fdde );_afdd :=_cgf (_bfcb );_deaa :=_dda (_gaef ,_afdd ,_cfb ,_bcge );return _becc (_deaa ,_gaef ,_bcge );};type ivr struct{};func _faaab (_dgfgg [][]Result )float64 {if len (_dgfgg )==2{_gbeb :=_dgfgg [0][0].AsNumber ();_fgfaf :=_dgfgg [0][1].AsNumber ();_eaacd :=_dgfgg [1][0].AsNumber ();_dbbcf :=_dgfgg [1][1].AsNumber ();if _gbeb .Type !=ResultTypeNumber ||_fgfaf .Type !=ResultTypeNumber ||_eaacd .Type !=ResultTypeNumber ||_dbbcf .Type !=ResultTypeNumber {return _aca .NaN ();};return _gbeb .ValueNumber *_dbbcf .ValueNumber -_eaacd .ValueNumber *_fgfaf .ValueNumber ;};_deddb :=float64 (0);_gdgdc :=float64 (1);for _ababb :=range _dgfgg {_deddb +=_gdgdc *_dgfgg [0][_ababb ].ValueNumber *_faaab (_gcf (_dgfgg ,_ababb ));_gdgdc *=-1;};return _deddb ;};const _eecg =57373;

// Reference returns an invalid reference for BinaryExpr.
func (_geb BinaryExpr )Reference (ctx Context ,ev Evaluator )Reference {return ReferenceInvalid };

// NewRange constructs a new range.
func NewRange (from ,to Expression )Expression {_dgcc ,_ebbdg ,_bbggb :=_adcg (from ,to );if _bbggb !=nil {_cc .Log .Debug (_bbggb .Error ());return NewError (_bbggb .Error ());};return Range {_gdefe :_dgcc ,_daea :_ebbdg };};func _becc (_fcac ,_eead _ad .Time ,_ggg int )float64 {if _fcac .After (_eead ){_fcac ,_eead =_eead ,_fcac ;};_abbe :=0;_cabd ,_cac ,_eggf :=_fcac .Date ();_afbf ,_feb ,_agcc :=_eead .Date ();_cegeb ,_eaeb :=int (_cac ),int (_feb );_affe ,_bac :=_ege (_cabd ,_cegeb ,_eggf ,_ggg ),_ege (_afbf ,_eaeb ,_agcc ,_ggg );if !_agfb (_ggg ){return _dbeg (_afbf ,_eaeb ,_bac )-_dbeg (_cabd ,_cegeb ,_affe );};if _ggg ==0{if (_cegeb ==2||_affe < 30)&&_agcc ==31{_bac =31;}else if _eaeb ==2&&_bac ==_egdc (_afbf ,_eaeb ){_bac =_egdc (_afbf ,2);};}else {if _cegeb ==2&&_affe ==30{_affe =_egdc (_cabd ,2);};if _eaeb ==2&&_bac ==30{_bac =_egdc (_afbf ,2);};};if _cabd < _afbf ||(_cabd ==_afbf &&_cegeb < _eaeb ){_abbe =30-_affe +1;_eggf =1;_affe =1;_baa :=_ad .Date (_cabd ,_ad .Month (_cegeb ),_eggf ,0,0,0,0,_ad .UTC ).AddDate (0,1,0);if _baa .Year ()< _afbf {_abbe +=_cdea (_baa .Year (),int (_baa .Month ()),12,_ggg );_baa =_baa .AddDate (0,13-int (_baa .Month ()),0);_abbe +=_gbbc (_baa .Year (),_afbf -1,_ggg );};_abbe +=_cdea (_afbf ,int (_baa .Month ()),_eaeb -1,_ggg );_baa =_baa .AddDate (0,_eaeb -int (_baa .Month ()),0);_cegeb =_baa .Day ();};_abbe +=_bac -_affe ;if _abbe > 0{return float64 (_abbe );}else {return 0;};};

// Xor is an implementation of the Excel XOR() function and takes a variable
// number of arguments. It's odd to say the least.  If any argument is numeric,
// it returns true if the number of non-zero numeric arguments is odd and false
// otherwise.  If no argument is numeric, it returns an error.
func Xor (args []Result )Result {if len (args )< 1{return MakeErrorResult ("\u0058\u004f\u0052 r\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0061t\u0020l\u0065a\u0073t\u0020\u006f\u006e\u0065\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};_cdegd :=0;_dadgda :=false ;for _ ,_ggbcf :=range args {switch _ggbcf .Type {case ResultTypeList ,ResultTypeArray :_gceg :=Xor (_ggbcf .ListValues ());if _gceg .Type ==ResultTypeError {return _gceg ;};if _gceg .ValueNumber !=0{_cdegd ++;};_dadgda =true ;case ResultTypeNumber :if _ggbcf .ValueNumber !=0{_cdegd ++;};_dadgda =true ;case ResultTypeString :case ResultTypeError :return _ggbcf ;default:return MakeErrorResult ("\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0061\u0072\u0067u\u006de\u006e\u0074\u0020\u0074\u0079\u0070\u0065\u0020\u0069\u006e\u0020\u0058\u004f\u0052");};};if !_dadgda {return MakeErrorResult ("\u0058\u004f\u0052\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065s\u0020\u006e\u0075\u006d\u0065\u0072\u0069\u0063\u0020\u0069n\u0070\u0075\u0074");};return MakeBoolResult (_cdegd %2!=0);};

// Count implements the COUNT function.
func Count (args []Result )Result {return MakeNumberResult (_bccb (args ,_bcaf ))};

// Reference returns a string reference value to an expression with prefix.
func (_geafe PrefixExpr )Reference (ctx Context ,ev Evaluator )Reference {_ddcb :=_geafe ._dbfebd .Reference (ctx ,ev );_gefee :=_geafe ._afed .Reference (ctx ,ev );if _ddcb .Type ==ReferenceTypeSheet &&_gefee .Type ==ReferenceTypeCell {return Reference {Type :ReferenceTypeCell ,Value :_ddcb .Value +"\u0021"+_gefee .Value };};return ReferenceInvalid ;};

// Tbillyield implements the Excel TBILLYIELD function.
func Tbillyield (args []Result )Result {if len (args )!=3{return MakeErrorResult ("T\u0042\u0049\u004c\u004c\u0059\u0049E\u004c\u0044\u0020\u0072\u0065\u0071u\u0069\u0072\u0065\u0073\u0020\u0074\u0068r\u0065\u0065\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006et\u0073");};_cdcg ,_fcbd ,_eccd :=_dbda (args [0],args [1],"\u0054\u0042\u0049\u004c\u004c\u0059\u0049\u0045\u004c\u0044");if _eccd .Type ==ResultTypeError {return _eccd ;};if args [2].Type !=ResultTypeNumber {return MakeErrorResult ("\u0054\u0042\u0049\u004c\u004c\u0059\u0049\u0045\u004c\u0044\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065s\u0020\u0064\u0069\u0073\u0063\u006f\u0075n\u0074\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006db\u0065\u0072\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};_becdg :=_fcbd -_cdcg ;if _becdg > 365{return MakeErrorResultType (ErrorTypeNum ,"\u0054\u0042\u0049\u004c\u004cY\u0049\u0045\u004c\u0044\u0020\u0072e\u0071\u0075\u0069\u0072\u0065\u0073\u0020m\u0061\u0074\u0075r\u0069\u0074\u0079\u0020t\u006f\u0020\u0062\u0065\u0020\u006eo\u0074\u0020\u006d\u006f\u0072\u0065\u0020\u0074\u0068\u0061\u006e\u0020\u006f\u006e\u0065\u0020\u0079e\u0061\u0072\u0020\u0061\u0066\u0074\u0065\u0072\u0020\u0073\u0065\u0074\u0074\u006c\u0065\u006d\u0065\u006e\u0074");};_dbgf :=args [2].ValueNumber ;if _dbgf <=0{return MakeErrorResultType (ErrorTypeNum ,"\u0054\u0042\u0049\u004c\u004c\u0059\u0049\u0045\u004c\u0044\u0020r\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020p\u0072 \u0074\u006f\u0020\u0062\u0065\u0020\u0070\u006f\u0073\u0069\u0074\u0069\u0076\u0065\u0020\u006e\u0075\u006db\u0065\u0072\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};_babc :=(100-_dbgf )/_dbgf ;_acabg :=360/_becdg ;return MakeNumberResult (_babc *_acabg );};

// Eval evaluates and returns the result of a formula.
func (_dcf *defEval )Eval (ctx Context ,formula string )Result {_beada :=ParseString (formula );_eeee :=make (chan Result );go func (){if _beada ==nil {_eeee <-MakeErrorResult (_a .Sprintf ("\u0075\u006e\u0061\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0070a\u0072\u0073\u0065\u0020\u0066\u006f\u0072\u006d\u0075\u006ca\u0020\u0025\u0073",formula ));}else {_dcf .checkLastEvalIsRef (ctx ,_beada );_eeee <-_beada .Eval (ctx ,_dcf );};}();select{case _fcc :=<-_eeee :return _fcc ;case <-_ad .After (_gae ):_cc .Log .Debug ("\u0055\u006e\u0069\u004ff\u0066\u0069\u0063\u0065\u0020\u0065\u0076\u0061\u006c\u0075a\u0074i\u006f\u006e\u0020\u0074\u0069\u006d\u0065o\u0075\u0074");return MakeNumberResult (0);};};type ri struct{_bffddc float64 ;_abcf string ;};

// Eval evaluates and returns the result of a Negate expression.
func (_badbc Negate )Eval (ctx Context ,ev Evaluator )Result {_ecbd :=_badbc ._feaegg .Eval (ctx ,ev );if _ecbd .Type ==ResultTypeNumber {return MakeNumberResult (-_ecbd .ValueNumber );};return MakeErrorResult ("\u004e\u0045\u0047A\u0054\u0045\u0020\u0065x\u0070\u0065\u0063\u0074\u0065\u0064\u0020n\u0075\u006d\u0062\u0065\u0072\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};

// String returns a string representation of a horizontal range.
func (_cffg HorizontalRange )String ()string {return _cffg .horizontalRangeReference ()};

// NamedRangeRef is a reference to a named range.
type NamedRangeRef struct{_ggbf string };func _cdgb (_ecbe []Result )[]rangeIndex {_gaeda :=[]rangeIndex {};_gfea :=len (_ecbe );for _ccga :=0;_ccga < _gfea -1;_ccga +=2{_dedec :=[]rangeIndex {};_efbef :=_gbddgb (_ecbe [_ccga ]);_cbbc :=_cebfd (_ecbe [_ccga +1]);if _ccga ==0{for _efbfb ,_egdca :=range _efbef {for _fcaf ,_ffeg :=range _egdca {if _gfddg (_ffeg ,_cbbc ){_dedec =append (_dedec ,rangeIndex {_efbfb ,_fcaf });};};};}else {for _ ,_eggc :=range _gaeda {_fdgf :=_efbef [_eggc ._daffc ][_eggc ._gbebc ];if _gfddg (_fdgf ,_cbbc ){_dedec =append (_dedec ,_eggc );};};};if len (_dedec )==0{return []rangeIndex {};};_gaeda =_dedec [:];};return _gaeda ;};func _fgcd (_fggbc Result ,_eafd ,_bdff string )(string ,Result ){switch _fggbc .Type {case ResultTypeString ,ResultTypeNumber ,ResultTypeEmpty :return _fggbc .Value (),_ebega ;default:return "",MakeErrorResult (_eafd +"\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020"+_bdff +"\u0020t\u006f\u0020\u0062\u0065 \u0061\u0020\u006e\u0075\u006db\u0065r\u0020o\u0072\u0020\u0073\u0074\u0072\u0069\u006eg");};};var _cgff =[...]struct{_aaaa int ;_debd int ;_bbggc string ;}{};

// String returns a string representation of FunctionCall expression.
func (_dccf FunctionCall )String ()string {_daacb :=_eb .Buffer {};_daacb .WriteString (_dccf ._fcgae );_daacb .WriteString ("\u0028");_feac :=len (_dccf ._agdag )-1;for _dfgea ,_dgacg :=range _dccf ._agdag {_daacb .WriteString (_dgacg .String ());if _dfgea !=_feac {_daacb .WriteString ("\u002c");};};_daacb .WriteString ("\u0029");return _daacb .String ();};

// Edate is an implementation of the Excel EDATE() function.
func Edate (args []Result )Result {if len (args )!=2{return MakeErrorResult ("\u0045\u0044\u0041\u0054E\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020t\u0077o\u0020\u0061\u0072\u0067\u0075\u006d\u0065n\u0074\u0073");};if args [1].Type !=ResultTypeNumber {return MakeErrorResult ("\u0049\u006e\u0063\u006fr\u0072\u0065\u0063\u0074\u0020\u0061\u0072\u0067\u0075\u006de\u006et\u0020\u0066\u006f\u0072\u0020\u0045\u0044A\u0054\u0045");};_cgcae :=args [1].ValueNumber ;_gfca :=args [0];var _gea float64 ;switch _gfca .Type {case ResultTypeEmpty :return MakeErrorResultType (ErrorTypeNum ,"\u0049\u006e\u0063\u006fr\u0072\u0065\u0063\u0074\u0020\u0061\u0072\u0067\u0075\u006de\u006et\u0020\u0066\u006f\u0072\u0020\u0045\u0044A\u0054\u0045");case ResultTypeNumber :_gea =_gfca .ValueNumber ;case ResultTypeString :_efec :=DateValue ([]Result {args [0]});if _efec .Type ==ResultTypeError {return MakeErrorResult ("\u0049\u006e\u0063\u006fr\u0072\u0065\u0063\u0074\u0020\u0061\u0072\u0067\u0075\u006de\u006et\u0020\u0066\u006f\u0072\u0020\u0045\u0044A\u0054\u0045");};_gea =_efec .ValueNumber ;default:return MakeErrorResult ("\u0049\u006e\u0063\u006fr\u0072\u0065\u0063\u0074\u0020\u0061\u0072\u0067\u0075\u006de\u006et\u0020\u0066\u006f\u0072\u0020\u0045\u0044A\u0054\u0045");};_fcgd :=_cgf (_gea );_abfb :=_fcgd .AddDate (0,int (_cgcae ),0);_ebcd ,_ced ,_gac :=_abfb .Date ();_dafc :=_dbeg (_ebcd ,int (_ced ),_gac );if _dafc < 1{return MakeErrorResultType (ErrorTypeNum ,"\u0049\u006e\u0063\u006fr\u0072\u0065\u0063\u0074\u0020\u0061\u0072\u0067\u0075\u006de\u006et\u0020\u0066\u006f\u0072\u0020\u0045\u0044A\u0054\u0045");};return MakeNumberResult (_dafc );};

// Small implements the Excel SMALL function.
func Small (args []Result )Result {return _bbcd (args ,false )};const _bafeb =57350;type rangeIndex struct{_daffc int ;_gbebc int ;};

// FloorPrecise is an implementation of the FlOOR.PRECISE function.
func FloorPrecise (args []Result )Result {if len (args )==0{return MakeErrorResult ("\u0046\u004cO\u004f\u0052\u002e\u0050\u0052\u0045\u0043\u0049\u0053\u0045\u0028\u0029\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0061\u0074\u0020\u006c\u0065\u0061\u0073\u0074\u0020\u006f\u006e\u0065\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};if len (args )> 2{return MakeErrorResult ("\u0046L\u004f\u004fR\u002e\u0050\u0052\u0045C\u0049\u0053\u0045(\u0029\u0020\u0061\u006c\u006c\u006f\u0077\u0073\u0020at\u0020\u006d\u006fs\u0074\u0020t\u0077\u006f\u0020\u0061\u0072\u0067u\u006d\u0065n\u0074\u0073");};_begg :=args [0].AsNumber ();if _begg .Type !=ResultTypeNumber {return MakeErrorResult ("\u0066\u0069\u0072\u0073\u0074\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0020\u0074\u006f\u0020F\u004c\u004f\u004f\u0052\u002e\u0050\u0052E\u0043\u0049\u0053\u0045\u0028\u0029\u0020\u006d\u0075\u0073\u0074 \u0062\u0065\u0020\u0061\u0020\u006e\u0075\u006d\u0062\u0065\u0072");};_afcf :=float64 (1);if _begg .ValueNumber < 0{_afcf =-1;};if len (args )> 1{_fgce :=args [1].AsNumber ();if _fgce .Type !=ResultTypeNumber {return MakeErrorResult ("\u0073\u0065\u0063\u006f\u006ed\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0020\u0074\u006f\u0020F\u004c\u004f\u004f\u0052\u002e\u0050\u0052\u0045\u0043\u0049\u0053\u0045\u0028\u0029\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020\u0061\u0020\u006e\u0075\u006d\u0062\u0065r");};_afcf =_aca .Abs (_fgce .ValueNumber );};if len (args )==1{return MakeNumberResult (_aca .Floor (_begg .ValueNumber ));};_aggd :=_begg .ValueNumber ;_aggd ,_dbaf :=_aca .Modf (_aggd /_afcf );if _dbaf !=0{if _begg .ValueNumber < 0{_aggd --;};};return MakeNumberResult (_aggd *_afcf );};

// SheetPrefixExpr is a reference to a sheet like Sheet1! (reference to sheet 'Sheet1').
type SheetPrefixExpr struct{_dcae string };

// Date is an implementation of the Excel DATE() function.
func Date (args []Result )Result {if len (args )!=3||args [0].Type !=ResultTypeNumber ||args [1].Type !=ResultTypeNumber ||args [2].Type !=ResultTypeNumber {return MakeErrorResult ("\u0044\u0041TE\u0020\u0072\u0065q\u0075\u0069\u0072\u0065s t\u0068re\u0065\u0020\u006e\u0075\u006d\u0062\u0065r \u0061\u0072\u0067\u0075\u006d\u0065\u006et\u0073");};_gca :=int (args [0].ValueNumber );if _gca < 0||_gca >=10000{return MakeErrorResultType (ErrorTypeNum ,"\u0049\u006e\u0063\u006f\u0072\u0072\u0065\u0063\u0074 \u0064\u0061\u0074\u0065");}else if _gca <=1899{_gca +=1900;};_ddc :=_ad .Month (args [1].ValueNumber );_fbe :=int (args [2].ValueNumber );_dcd :=_gega (_gca ,_ddc ,_fbe );_acae :=_dca (_dgf ,_dcd )+1;if _acae < 0{return MakeErrorResultType (ErrorTypeNum ,"\u0049\u006e\u0063\u006f\u0072\u0072\u0065\u0063\u0074 \u0064\u0061\u0074\u0065");};return MakeNumberResult (_acae );};

// Reference returns a string reference value to a range with prefix.
func (_afefb PrefixRangeExpr )Reference (ctx Context ,ev Evaluator )Reference {_ddgaa :=_afefb ._fgead .Reference (ctx ,ev );_abcea :=_afefb ._fbade .Reference (ctx ,ev );_bbea :=_afefb ._gdegd .Reference (ctx ,ev );if _ddgaa .Type ==ReferenceTypeSheet &&_abcea .Type ==ReferenceTypeCell &&_bbea .Type ==ReferenceTypeCell {return MakeRangeReference (_gegdg (_ddgaa ,_abcea ,_bbea ));};return ReferenceInvalid ;};

// Quotient is an implementation of the Excel QUOTIENT function that returns the
// integer portion of division.
func Quotient (args []Result )Result {if len (args )!=2{return MakeErrorResult ("\u0051\u0055\u004f\u0054\u0049E\u004e\u0054\u0028\u0029\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073 \u0074\u0077\u006f\u0020\u006e\u0075\u006d\u0065\u0072\u0069\u0063\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0073");};_bdca :=args [0].AsNumber ();_beee :=args [1].AsNumber ();if _bdca .Type !=ResultTypeNumber ||_beee .Type !=ResultTypeNumber {return MakeErrorResult ("\u0051\u0055\u004f\u0054\u0049E\u004e\u0054\u0028\u0029\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073 \u0074\u0077\u006f\u0020\u006e\u0075\u006d\u0065\u0072\u0069\u0063\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0073");};if _beee .ValueNumber ==0{return MakeErrorResultType (ErrorTypeDivideByZero ,"\u0051U\u004f\u0054\u0049\u0045N\u0054\u0028\u0029\u0020\u0064i\u0076i\u0064e\u0020\u0062\u0079\u0020\u007a\u0065\u0072o");};return MakeNumberResult (_aca .Trunc (_bdca .ValueNumber /_beee .ValueNumber ));};

// Combina is an implementation of the Excel COMBINA function whic returns the
// number of combinations with repetitions.
func Combina (args []Result )Result {if len (args )!=2{return MakeErrorResult ("\u0043\u004f\u004dB\u0049\u004e\u0041\u0028)\u0020\u0072\u0065\u0071\u0075\u0069\u0072e\u0073\u0020\u0074\u0077\u006f\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};_dcfcb :=args [0].AsNumber ();_gaff :=args [1].AsNumber ();if _dcfcb .Type !=ResultTypeNumber ||_gaff .Type !=ResultTypeNumber {return MakeErrorResult ("\u0043\u004fMB\u0049\u004e\u0041(\u0029\u0020\u0072\u0065qui\u0072es\u0020\u006e\u0075\u006d\u0065\u0072\u0069c \u0061\u0072\u0067\u0075\u006d\u0065\u006et\u0073");};_edgcc :=_aca .Trunc (_dcfcb .ValueNumber );_cead :=_aca .Trunc (_gaff .ValueNumber );if _edgcc < _cead {return MakeErrorResult ("\u0043O\u004d\u0042\u0049\u004e\u0041\u0028\u0029\u0020\u0072\u0065\u0071u\u0069\u0072\u0065\u0073\u0020\u006e\u0020\u003e\u0020\u006b");};if _edgcc ==0{return MakeNumberResult (0);};args [0]=MakeNumberResult (_edgcc +_cead -1);args [1]=MakeNumberResult (_edgcc -1);return Combin (args );};const _bdaca =57364;func (_degad *ivr )SetOffset (col ,row uint32 ){};func _ebcfa ()yyParser {return &yyParserImpl {}};

// Update returns the same object as updating sheet references does not affect Bool.
func (_add Bool )Update (q *_fe .UpdateQuery )Expression {return _add };func (_agge *yyParserImpl )Parse (yylex yyLexer )int {_bccbb :=_ad .Now ();var _fbge int ;var _eddaa yySymType ;var _fbgcf []yySymType ;_ =_fbgcf ;_aedda :=_agge ._fbefd [:];Nerrs :=0;Errflag :=0;_ageb :=0;_agge ._gebc =-1;_fdaf :=-1;defer func (){_ageb =-1;_agge ._gebc =-1;_fdaf =-1}();_bbaab :=-1;goto _ffdeb ;_gcab :return 0;_feebg :return 1;_ffdeb :if _eedb (_bccbb ){_cc .Log .Error ("\u0050\u0061\u0072\u0073\u0065\u0020\u0074\u0069\u006d\u0065\u006f\u0075\u0074");goto _feebg ;};if _egdec >=4{_a .Printf ("\u0063\u0068\u0061\u0072\u0020\u0025\u0076\u0020\u0069n\u0020\u0025\u0076\u000a",_bbdb (_fdaf ),_faac (_ageb ));};_bbaab ++;if _bbaab >=len (_aedda ){_cfbcg :=make ([]yySymType ,len (_aedda )*2);copy (_cfbcg ,_aedda );_aedda =_cfbcg ;};_aedda [_bbaab ]=_eddaa ;_aedda [_bbaab ]._gfgbbe =_ageb ;_dffa :if _eedb (_bccbb ){_cc .Log .Error ("\u0050\u0061\u0072\u0073\u0065\u0020\u0074\u0069\u006d\u0065\u006f\u0075\u0074");goto _feebg ;};_fbge =_fggcg [_ageb ];if _fbge <=_cgge {goto _edgd ;};if _agge ._gebc < 0{_agge ._gebc ,_fdaf =_baeed (yylex ,&_agge ._feaeg );};_fbge +=_fdaf ;if _fbge < 0||_fbge >=_fffb {goto _edgd ;};_fbge =_ccee [_fbge ];if _aaee [_fbge ]==_fdaf {_agge ._gebc =-1;_fdaf =-1;_eddaa =_agge ._feaeg ;_ageb =_fbge ;if Errflag > 0{Errflag --;};goto _ffdeb ;};_edgd :if _eedb (_bccbb ){_cc .Log .Error ("\u0050\u0061\u0072\u0073\u0065\u0020\u0074\u0069\u006d\u0065\u006f\u0075\u0074");goto _feebg ;};_fbge =_bdfb [_ageb ];if _fbge ==-2{if _agge ._gebc < 0{_agge ._gebc ,_fdaf =_baeed (yylex ,&_agge ._feaeg );};_fbabc :=0;for {if _ccaa [_fbabc +0]==-1&&_ccaa [_fbabc +1]==_ageb {break ;};_fbabc +=2;};for _fbabc +=2;;_fbabc +=2{_fbge =_ccaa [_fbabc +0];if _fbge < 0||_fbge ==_fdaf {break ;};};_fbge =_ccaa [_fbabc +1];if _fbge < 0{goto _gcab ;};};if _fbge ==0{switch Errflag {case 0:yylex .Error (_bdgb (_ageb ,_fdaf ));Nerrs ++;if _egdec >=1{_a .Printf ("\u0025\u0073",_faac (_ageb ));_a .Printf ("\u0020\u0073\u0061\u0077\u0020\u0025\u0073\u000a",_bbdb (_fdaf ));};fallthrough;case 1,2:Errflag =3;for _bbaab >=0{_fbge =_fggcg [_aedda [_bbaab ]._gfgbbe ]+_ddbb ;if _fbge >=0&&_fbge < _fffb {_ageb =_ccee [_fbge ];if _aaee [_ageb ]==_ddbb {goto _ffdeb ;};};if _egdec >=2{_a .Printf ("\u0065\u0072r\u006f\u0072\u0020\u0072\u0065\u0063\u006f\u0076\u0065\u0072\u0079\u0020\u0070\u006f\u0070\u0073\u0020\u0073\u0074\u0061\u0074\u0065 %\u0064\u000a",_aedda [_bbaab ]._gfgbbe );};_bbaab --;};goto _feebg ;case 3:if _egdec >=2{_a .Printf ("e\u0072\u0072\u006f\u0072\u0020\u0072e\u0063\u006f\u0076\u0065\u0072\u0079\u0020\u0064\u0069s\u0063\u0061\u0072d\u0073 \u0025\u0073\u000a",_bbdb (_fdaf ));};if _fdaf ==_cggfc {goto _feebg ;};_agge ._gebc =-1;_fdaf =-1;goto _dffa ;};};if _egdec >=2{_a .Printf ("\u0072e\u0064u\u0063\u0065\u0020\u0025\u0076 \u0069\u006e:\u000a\u0009\u0025\u0076\u000a",_fbge ,_faac (_ageb ));};_ecebd :=_fbge ;_gecdg :=_bbaab ;_ =_gecdg ;_bbaab -=_ddeb [_fbge ];if _bbaab +1>=len (_aedda ){_geabg :=make ([]yySymType ,len (_aedda )*2);copy (_geabg ,_aedda );_aedda =_geabg ;};_eddaa =_aedda [_bbaab +1];_fbge =_gaffe [_fbge ];_fbag :=_dgca [_fbge ];_dfeggd :=_fbag +_aedda [_bbaab ]._gfgbbe +1;if _dfeggd >=_fffb {_ageb =_ccee [_fbag ];}else {_ageb =_ccee [_dfeggd ];if _aaee [_ageb ]!=-_fbge {_ageb =_ccee [_fbag ];};};switch _ecebd {case 1:_fbgcf =_aedda [_gecdg -1:_gecdg +1];{yylex .(*plex )._cbcbd =_eddaa ._dbade ;};case 3:_fbgcf =_aedda [_gecdg -2:_gecdg +1];{_eddaa ._dbade =_fbgcf [2]._dbade ;};case 4:_fbgcf =_aedda [_gecdg -4:_gecdg +1];{};case 5:_fbgcf =_aedda [_gecdg -1:_gecdg +1];{_eddaa ._dbade =NewBool (_fbgcf [1]._ffef ._bddce );};case 6:_fbgcf =_aedda [_gecdg -1:_gecdg +1];{_eddaa ._dbade =NewNumber (_fbgcf [1]._ffef ._bddce );};case 7:_fbgcf =_aedda [_gecdg -1:_gecdg +1];{_eddaa ._dbade =NewString (_fbgcf [1]._ffef ._bddce );};case 8:_fbgcf =_aedda [_gecdg -1:_gecdg +1];{_eddaa ._dbade =NewError (_fbgcf [1]._ffef ._bddce );};case 9:_fbgcf =_aedda [_gecdg -2:_gecdg +1];{_eddaa ._dbade =_fbgcf [2]._dbade ;};case 10:_fbgcf =_aedda [_gecdg -2:_gecdg +1];{_eddaa ._dbade =NewNegate (_fbgcf [2]._dbade );};case 15:_fbgcf =_aedda [_gecdg -3:_gecdg +1];{_eddaa ._dbade =_fbgcf [2]._dbade ;};case 17:_fbgcf =_aedda [_gecdg -3:_gecdg +1];{_eddaa ._dbade =NewConstArrayExpr (_fbgcf [2]._fdeb );};case 18:_fbgcf =_aedda [_gecdg -1:_gecdg +1];{_eddaa ._fdeb =append (_eddaa ._fdeb ,_fbgcf [1]._adaa );};case 19:_fbgcf =_aedda [_gecdg -3:_gecdg +1];{_eddaa ._fdeb =append (_fbgcf [1]._fdeb ,_fbgcf [3]._adaa );};case 20:_fbgcf =_aedda [_gecdg -1:_gecdg +1];{_eddaa ._adaa =append (_eddaa ._adaa ,_fbgcf [1]._dbade );};case 21:_fbgcf =_aedda [_gecdg -3:_gecdg +1];{_eddaa ._adaa =append (_fbgcf [1]._adaa ,_fbgcf [3]._dbade );};case 23:_fbgcf =_aedda [_gecdg -2:_gecdg +1];{_eddaa ._dbade =NewPrefixExpr (_fbgcf [1]._dbade ,_fbgcf [2]._dbade );};case 25:_fbgcf =_aedda [_gecdg -1:_gecdg +1];{_eddaa ._dbade =NewSheetPrefixExpr (_fbgcf [1]._ffef ._bddce );};case 26:_fbgcf =_aedda [_gecdg -1:_gecdg +1];{_eddaa ._dbade =NewCellRef (_fbgcf [1]._ffef ._bddce );};case 27:_fbgcf =_aedda [_gecdg -3:_gecdg +1];{_eddaa ._dbade =NewRange (_fbgcf [1]._dbade ,_fbgcf [3]._dbade );};case 28:_fbgcf =_aedda [_gecdg -4:_gecdg +1];{_eddaa ._dbade =NewPrefixRangeExpr (_fbgcf [1]._dbade ,_fbgcf [2]._dbade ,_fbgcf [4]._dbade );};case 29:_fbgcf =_aedda [_gecdg -1:_gecdg +1];{_eddaa ._dbade =NewNamedRangeRef (_fbgcf [1]._ffef ._bddce );};case 30:_fbgcf =_aedda [_gecdg -1:_gecdg +1];{_eddaa ._dbade =NewHorizontalRange (_fbgcf [1]._ffef ._bddce );};case 31:_fbgcf =_aedda [_gecdg -1:_gecdg +1];{_eddaa ._dbade =NewVerticalRange (_fbgcf [1]._ffef ._bddce );};case 32:_fbgcf =_aedda [_gecdg -2:_gecdg +1];{_eddaa ._dbade =NewPrefixHorizontalRange (_fbgcf [1]._dbade ,_fbgcf [2]._ffef ._bddce );};case 33:_fbgcf =_aedda [_gecdg -2:_gecdg +1];{_eddaa ._dbade =NewPrefixVerticalRange (_fbgcf [1]._dbade ,_fbgcf [2]._ffef ._bddce );};case 34:_fbgcf =_aedda [_gecdg -3:_gecdg +1];{_eddaa ._dbade =NewBinaryExpr (_fbgcf [1]._dbade ,BinOpTypePlus ,_fbgcf [3]._dbade );};case 35:_fbgcf =_aedda [_gecdg -3:_gecdg +1];{_eddaa ._dbade =NewBinaryExpr (_fbgcf [1]._dbade ,BinOpTypeMinus ,_fbgcf [3]._dbade );};case 36:_fbgcf =_aedda [_gecdg -3:_gecdg +1];{_eddaa ._dbade =NewBinaryExpr (_fbgcf [1]._dbade ,BinOpTypeMult ,_fbgcf [3]._dbade );};case 37:_fbgcf =_aedda [_gecdg -3:_gecdg +1];{_eddaa ._dbade =NewBinaryExpr (_fbgcf [1]._dbade ,BinOpTypeDiv ,_fbgcf [3]._dbade );};case 38:_fbgcf =_aedda [_gecdg -3:_gecdg +1];{_eddaa ._dbade =NewBinaryExpr (_fbgcf [1]._dbade ,BinOpTypeExp ,_fbgcf [3]._dbade );};case 39:_fbgcf =_aedda [_gecdg -3:_gecdg +1];{_eddaa ._dbade =NewBinaryExpr (_fbgcf [1]._dbade ,BinOpTypeLT ,_fbgcf [3]._dbade );};case 40:_fbgcf =_aedda [_gecdg -3:_gecdg +1];{_eddaa ._dbade =NewBinaryExpr (_fbgcf [1]._dbade ,BinOpTypeGT ,_fbgcf [3]._dbade );};case 41:_fbgcf =_aedda [_gecdg -3:_gecdg +1];{_eddaa ._dbade =NewBinaryExpr (_fbgcf [1]._dbade ,BinOpTypeLEQ ,_fbgcf [3]._dbade );};case 42:_fbgcf =_aedda [_gecdg -3:_gecdg +1];{_eddaa ._dbade =NewBinaryExpr (_fbgcf [1]._dbade ,BinOpTypeGEQ ,_fbgcf [3]._dbade );};case 43:_fbgcf =_aedda [_gecdg -3:_gecdg +1];{_eddaa ._dbade =NewBinaryExpr (_fbgcf [1]._dbade ,BinOpTypeEQ ,_fbgcf [3]._dbade );};case 44:_fbgcf =_aedda [_gecdg -3:_gecdg +1];{_eddaa ._dbade =NewBinaryExpr (_fbgcf [1]._dbade ,BinOpTypeNE ,_fbgcf [3]._dbade );};case 45:_fbgcf =_aedda [_gecdg -3:_gecdg +1];{_eddaa ._dbade =NewBinaryExpr (_fbgcf [1]._dbade ,BinOpTypeConcat ,_fbgcf [3]._dbade );};case 47:_fbgcf =_aedda [_gecdg -2:_gecdg +1];{_eddaa ._dbade =NewFunction (_fbgcf [1]._ffef ._bddce ,nil );};case 48:_fbgcf =_aedda [_gecdg -3:_gecdg +1];{_eddaa ._dbade =NewFunction (_fbgcf [1]._ffef ._bddce ,_fbgcf [2]._adaa );};case 49:_fbgcf =_aedda [_gecdg -1:_gecdg +1];{_eddaa ._adaa =append (_eddaa ._adaa ,_fbgcf [1]._dbade );};case 50:_fbgcf =_aedda [_gecdg -3:_gecdg +1];{_eddaa ._adaa =append (_fbgcf [1]._adaa ,_fbgcf [3]._dbade );};case 53:_fbgcf =_aedda [_gecdg -0:_gecdg +1];{_eddaa ._dbade =NewEmptyExpr ();};};goto _ffdeb ;};

// LookupFunction looks up and returns a standard function or nil.
func LookupFunction (name string )Function {_gcdba .Lock ();defer _gcdba .Unlock ();if _decad ,_ccdfeg :=_cggb [name ];_ccdfeg {return _decad ;};return nil ;};

// Vdb implements the Excel VDB function.
func Vdb (args []Result )Result {_ccea :=len (args );if _ccea < 5||_ccea > 7{return MakeErrorResult ("\u0056\u0044\u0042\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u006e\u0075\u006d\u0062\u0065\u0072 \u006f\u0066\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0073\u0020\u0074\u006f\u0020b\u0065\u0020\u0069\u006e\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u0062\u0065\u0074\u0077\u0065\u0065\u006e\u0020\u0066\u0069\u0076\u0065\u0020a\u006e\u0064\u0020\u0073\u0065v\u0065\u006e");};if args [0].Type !=ResultTypeNumber {return MakeErrorResult ("\u0056\u0044\u0042\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020c\u006f\u0073\u0074\u0020\u0074\u006f \u0062\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0061\u0072\u0067u\u006d\u0065\u006e\u0074");};_fbff :=args [0].ValueNumber ;if _fbff < 0{return MakeErrorResultType (ErrorTypeNum ,"\u0056\u0044B \u0072\u0065\u0071u\u0069\u0072\u0065\u0073 co\u0073t \u0074\u006f\u0020\u0062\u0065\u0020\u006eon\u0020\u006e\u0065\u0067\u0061\u0074\u0069v\u0065");};if args [1].Type !=ResultTypeNumber {return MakeErrorResult ("\u0056\u0044\u0042 \u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0073\u0061\u006c\u0076\u0061\u0067\u0065\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072 \u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};_fagc :=args [1].ValueNumber ;if _fagc < 0{return MakeErrorResultType (ErrorTypeNum ,"\u0056\u0044\u0042\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020s\u0061\u006c\u0076\u0061\u0067\u0065 \u0074\u006f\u0020\u0062\u0065\u0020\u006e\u006f\u006e\u0020\u006e\u0065\u0067a\u0074\u0069\u0076\u0065");};if args [2].Type !=ResultTypeNumber {return MakeErrorResult ("\u0056\u0044\u0042\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020l\u0069\u0066\u0065\u0020\u0074\u006f \u0062\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0061\u0072\u0067u\u006d\u0065\u006e\u0074");};_edfe :=args [2].ValueNumber ;if _edfe ==0{return MakeErrorResultType (ErrorTypeDivideByZero ,"\u0056\u0044\u0042\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u006c\u0069f\u0065 \u0074\u006f\u0020\u0062\u0065\u0020\u0070\u006f\u0073\u0069\u0074\u0069\u0076\u0065");};if _edfe < 0{return MakeErrorResultType (ErrorTypeNum ,"\u0056\u0044\u0042\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u006c\u0069f\u0065 \u0074\u006f\u0020\u0062\u0065\u0020\u0070\u006f\u0073\u0069\u0074\u0069\u0076\u0065");};if args [3].Type !=ResultTypeNumber {return MakeErrorResult ("V\u0044\u0042\u0020\u0072\u0065\u0071\u0075\u0069\u0072e\u0073\u0020\u0073\u0074\u0061\u0072\u0074 p\u0065\u0072\u0069\u006fd\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u006e\u0075mb\u0065\u0072 \u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};_dgae :=args [3].ValueNumber ;if _dgae < 0{return MakeErrorResultType (ErrorTypeNum ,"\u0056\u0044\u0042\u0020\u0072\u0065q\u0075\u0069\u0072\u0065\u0073\u0020\u0073\u0074\u0061\u0072\u0074\u0020\u0070\u0065\u0072\u0069\u006f\u0064\u0020\u0074o\u0020\u0062\u0065\u0020\u006e\u006f\u0074\u0020\u006c\u0065\u0073\u0073\u0020\u0074h\u0061n\u0020\u006f\u006e\u0065");};if args [4].Type !=ResultTypeNumber {return MakeErrorResult ("\u0056D\u0042\u0020r\u0065\u0071\u0075i\u0072\u0065\u0073\u0020\u0065\u006e\u0064 \u0070\u0065\u0072\u0069\u006f\u0064 \u0074\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006d\u0062\u0065r\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};_efge :=args [4].ValueNumber ;if _dgae > _efge {return MakeErrorResultType (ErrorTypeNum ,"\u0049\u006e\u0063\u006f\u0072\u0072\u0065\u0063\u0074\u0020s\u0074\u0061\u0072\u0074\u0020\u0070\u0065r\u0069\u006f\u0064\u0020\u0066\u006f\u0072\u0020\u0056\u0044\u0042");};if _efge > _edfe {return MakeErrorResultType (ErrorTypeNum ,"\u0049\u006e\u0063\u006fr\u0072\u0065\u0063\u0074\u0020\u0065\u006e\u0064\u0020\u0070e\u0072i\u006f\u0064\u0020\u0066\u006f\u0072\u0020V\u0044\u0042");};_defb :=2.0;if _ccea > 5{if args [5].Type ==ResultTypeEmpty {_defb =0.0;}else {if args [5].Type !=ResultTypeNumber {return MakeErrorResult ("\u0056\u0044\u0042\u0020\u0072e\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0066\u0061\u0063\u0074\u006f\u0072 \u0074\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};_defb =args [5].ValueNumber ;if _defb < 0{return MakeErrorResultType (ErrorTypeNum ,"\u0056\u0044\u0042\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0066\u0061\u0063\u0074\u006f\u0072\u0020\u0074\u006f\u0020\u0062e\u0020\u006e\u006f\u006e\u0020n\u0065\u0067a\u0074\u0069\u0076\u0065");};};};_gfbcc :=false ;if _ccea > 6&&args [6].Type !=ResultTypeEmpty {if args [6].Type !=ResultTypeNumber {return MakeErrorResult ("\u0056D\u0042\u0020r\u0065\u0071\u0075\u0069r\u0065\u0073\u0020n\u006f\u005f\u0073\u0077\u0069\u0074\u0063\u0068\u0020to\u0020\u0062\u0065 \u006e\u0075m\u0062\u0065\u0072\u0020\u0061\u0072g\u0075\u006de\u006e\u0074");};_gfbcc =args [6].ValueNumber !=0;};_ggfg :=0.0;_cggf :=_aca .Floor (_dgae );_caag :=_aca .Ceil (_efge );if _gfbcc {for _ffdb :=_cggf +1;_ffdb <=_caag ;_ffdb ++{_dcbfe :=_fgbbb (_fbff ,_fagc ,_edfe ,_ffdb ,_defb );if _ffdb ==_cggf +1{_dcbfe *=_aca .Min (_efge ,_cggf +1)-_dgae ;}else if _ffdb ==_caag {_dcbfe *=_efge +1-_caag ;};_ggfg +=_dcbfe ;};}else {_cfbb :=_edfe ;var _dabde float64 ;if !_ecfg (_dgae ,_aca .Floor (_dgae )){if _defb ==1{_deag :=_edfe /2;if _dgae > _deag ||_ecfg (_dgae ,_deag ){_dabde =_dgae -_deag ;_dgae =_deag ;_efge -=_dabde ;_cfbb ++;};};};if _defb !=0{_fbff -=_ebdf (_fbff ,_fagc ,_edfe ,_cfbb ,_dgae ,_defb );};_ggfg =_ebdf (_fbff ,_fagc ,_edfe ,_edfe -_dgae ,_efge -_dgae ,_defb );};return MakeNumberResult (_ggfg );};

// Minute is an implementation of the Excel MINUTE() function.
func Minute (args []Result )Result {if len (args )!=1{return MakeErrorResult ("\u004d\u0049\u004e\u0055T\u0045\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073 \u006fn\u0065\u0020\u0061\u0072\u0067\u0075\u006de\u006e\u0074");};_adea :=args [0];switch _adea .Type {case ResultTypeEmpty :return MakeNumberResult (0);case ResultTypeNumber :_fbg :=_cgf (_adea .ValueNumber );return MakeNumberResult (float64 (_fbg .Minute ()));case ResultTypeString :_bfb :=_bf .ToLower (_adea .ValueString );if !_fgbb (_bfb ){_ ,_ ,_ ,_dfce ,_ebae :=_egg (_bfb );if _ebae .Type ==ResultTypeError {_ebae .ErrorMessage ="\u0049\u006e\u0063\u006f\u0072\u0072\u0065\u0063\u0074\u0020a\u0072\u0067\u0075\u006d\u0065\u006e\u0074s\u0020\u0066\u006f\u0072\u0020\u004d\u0049\u004e\u0055\u0054\u0045";return _ebae ;};if _dfce {return MakeNumberResult (0);};};_ ,_cfgd ,_ ,_ ,_ ,_efbg :=_fgfe (_bfb );if _efbg .Type ==ResultTypeError {return _efbg ;};return MakeNumberResult (float64 (_cfgd ));default:return MakeErrorResult ("\u0049\u006ec\u006f\u0072\u0072\u0065\u0063\u0074\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0020\u0066\u006f\u0072\u0020\u004d\u0049NU\u0054\u0045");};};func _eeag (_abfa ,_bdab float64 ,_bbfe ,_eab int )float64 {_efcf :=_cgf (_abfa );_dcdb :=_cgf (_bdab );_bdbg :=_adece (_efcf ,_dcdb ,_bbfe );return _becc (_efcf ,_bdbg ,_eab );};func _cdea (_egba ,_caf ,_dea ,_cfd int )int {if _caf > _dea {return 0;};if _agfb (_cfd ){return (_dea -_caf +1)*30;};_baac :=0;for _dcag :=_caf ;_dcag <=_dea ;_dcag ++{_baac +=_egdc (_egba ,_dcag );};return _baac ;};

// Dollarde implements the Excel DOLLARDE function.
func Dollarde (args []Result )Result {_faag ,_egag ,_deca :=_dbad (args ,"\u0044\u004f\u004c\u004c\u0041\u0052\u0044\u0045");if _deca .Type ==ResultTypeError {return _deca ;};if _egag < 1{return MakeErrorResultType (ErrorTypeDivideByZero ,"\u0044\u004f\u004c\u004c\u0041\u0052\u0044\u0045\u0020\u0072\u0065q\u0075\u0069\u0072\u0065\u0073\u0020\u0066\u0072a\u0063t\u0069\u006f\u006e\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u0065\u0071\u0075\u0061\u006c\u0020\u006f\u0072 \u006d\u006f\u0072\u0065\u0020\u0074\u0068\u0061\u006e\u0020\u0031");};if _faag ==0{return MakeNumberResult (0);};_ffab :=_faag < 0;if _ffab {_faag =-_faag ;};_gedb :=args [0].Value ();_deb :=_bf .Split (_gedb ,"\u002e");_geada :=float64 (int (_faag ));_gbgc :=_deb [1];_bgecf :=len (_gbgc );_gbcc :=int (_aca .Log10 (_egag ))+1;_cafg :=float64 (_gbcc -_bgecf );_bedb ,_bbcfc :=_d .ParseFloat (_gbgc ,64);if _bbcfc !=nil {return MakeErrorResult ("I\u006e\u0063\u006f\u0072\u0072\u0065\u0063\u0074\u0020\u0066\u0072\u0061\u0063\u0074\u0069\u006f\u006e\u0020a\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0020\u0066\u006fr \u0044\u004f\u004cL\u0041R\u0044\u0045");};_bedb *=_aca .Pow (10,_cafg );_dcad :=_geada +_bedb /_egag ;if _ffab {_dcad =-_dcad ;};return MakeNumberResult (_dcad );};var _ffadf =map[string ]FunctionComplex {};const _fbad =57363;func (_fddae ReferenceType )String ()string {if _fddae >=ReferenceType (len (_aebe )-1){return _a .Sprintf ("\u0052\u0065\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0054\u0079\u0070e\u0028\u0025\u0064\u0029",_fddae );};return _ccfgd [_aebe [_fddae ]:_aebe [_fddae +1]];};const _gedd =57366;var _agegg []byte =[]byte {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,69,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0};

// Eval evaluates a vertical range with prefix returning a list of results or an error.
func (_ffac PrefixVerticalRange )Eval (ctx Context ,ev Evaluator )Result {_dbcg :=_ffac ._geaee .Reference (ctx ,ev );switch _dbcg .Type {case ReferenceTypeSheet :if _bedge (_dbcg ,ctx ){return MakeErrorResultType (ErrorTypeName ,_a .Sprintf ("\u0053h\u0065e\u0074\u0020\u0025\u0073\u0020n\u006f\u0074 \u0066\u006f\u0075\u006e\u0064",_dbcg .Value ));};_fdefe :=_ffac .verticalRangeReference (_dbcg .Value );if _facgc ,_ccedg :=ev .GetFromCache (_fdefe );_ccedg {return _facgc ;};_abdaf :=ctx .Sheet (_dbcg .Value );_fafda ,_dgdb :=_eceg (_abdaf ,_ffac ._adebd ,_ffac ._bgdac );_aaedf :=_dbcgg (_abdaf ,ev ,_fafda ,_dgdb );ev .SetCache (_fdefe ,_aaedf );return _aaedf ;default:return MakeErrorResult (_a .Sprintf ("\u006e\u006f\u0020\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0020\u0066\u006f\u0072\u0020r\u0065f\u0065\u0072\u0065\u006e\u0063\u0065\u0020\u0074\u0079\u0070\u0065\u0020\u0025\u0073",_dbcg .Type ));};};

// Len is an implementation of the Excel LEN function that returns length of a string
func Len (args []Result )Result {if len (args )!=1{return MakeErrorResult ("\u004c\u0045N\u0020\u0072\u0065\u0071u\u0069\u0072e\u0073\u0020\u0061\u0020\u0073\u0069\u006e\u0067l\u0065\u0020\u0073\u0074\u0072\u0069\u006e\u0067\u0020\u0061\u0072\u0067u\u006d\u0065\u006e\u0074");};_efcdf :=args [0].AsString ();if _efcdf .Type !=ResultTypeString {return MakeErrorResult ("\u004c\u0045N\u0020\u0072\u0065\u0071u\u0069\u0072e\u0073\u0020\u0061\u0020\u0073\u0069\u006e\u0067l\u0065\u0020\u0073\u0074\u0072\u0069\u006e\u0067\u0020\u0061\u0072\u0067u\u006d\u0065\u006e\u0074");};return MakeNumberResult (float64 (len (_efcdf .ValueString )));};

// Ispmt implements the Excel ISPMT function.
func Ispmt (args []Result )Result {if len (args )!=4{return MakeErrorResult ("\u0049\u0053P\u004d\u0054\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0066\u006f\u0075\u0072\u0020\u0061\u0072\u0067\u0075\u006den\u0074\u0073");};if args [0].Type !=ResultTypeNumber {return MakeErrorResult ("\u0049\u0053\u0050\u004d\u0054 \u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0072\u0061\u0074\u0065 \u0074\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};_acccd :=args [0].ValueNumber ;if args [1].Type !=ResultTypeNumber {return MakeErrorResult ("\u0049\u0053\u0050\u004d\u0054\u0020\u0072e\u0071\u0075\u0069r\u0065\u0073\u0020\u0070e\u0072\u0069\u006f\u0064\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};_bdfe :=args [1].ValueNumber ;if args [2].Type !=ResultTypeNumber {return MakeErrorResult ("\u0049\u0053\u0050\u004d\u0054\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020n\u0075\u006d\u0062\u0065\u0072\u0020\u006f\u0066\u0020\u0070\u0065\u0072\u0069o\u0064\u0073\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006dbe\u0072\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};_gaga :=args [2].ValueNumber ;if _gaga <=0{return MakeErrorResultType (ErrorTypeNum ,"\u0049S\u0050\u004d\u0054\u0020\u0072\u0065\u0071ui\u0072\u0065\u0073\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u006f\u0066\u0020p\u0065\u0072i\u006f\u0064\u0073 \u0074\u006f\u0020\u0062\u0065\u0020\u0070\u006f\u0073\u0069\u0074\u0069\u0076\u0065\u0020\u006eu\u006d\u0062er\u0020\u0061\u0072g\u0075\u006d\u0065\u006e\u0074");};if args [3].Type !=ResultTypeNumber {return MakeErrorResult ("\u0049\u0053\u0050\u004d\u0054\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0070\u0072\u0065s\u0065\u006e\u0074\u0020\u0076\u0061\u006cu\u0065\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006db\u0065\u0072\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};_fcfgf :=args [3].ValueNumber ;return MakeNumberResult (_fcfgf *_acccd *(_bdfe /_gaga -1));};

// Fact is an implementation of the excel FACT function which returns the
// factorial of a positive numeric input.
func Fact (args []Result )Result {if len (args )!=1{return MakeErrorResult ("F\u0041\u0043\u0054\u0028\u0029\u0020\u0061\u0063\u0063\u0065\u0070\u0074\u0073\u0020\u0061\u0020\u0073\u0069n\u0067\u006c\u0065\u0020\u006e\u0075\u006d\u0065\u0072\u0069c \u0061\u0072\u0067u\u006de\u006e\u0074");};_eafb :=args [0].AsNumber ();if _eafb .Type !=ResultTypeNumber {return MakeErrorResult ("F\u0041\u0043\u0054\u0028\u0029\u0020\u0061\u0063\u0063\u0065\u0070\u0074\u0073\u0020\u0061\u0020\u0073\u0069n\u0067\u006c\u0065\u0020\u006e\u0075\u006d\u0065\u0072\u0069c \u0061\u0072\u0067u\u006de\u006e\u0074");};if _eafb .ValueNumber < 0{return MakeErrorResult ("\u0046\u0041\u0043\u0054\u0028\u0029\u0020\u0061\u0063\u0063\u0065\u0070\u0074\u0073\u0020\u006f\u006e\u006c\u0079\u0020\u0070\u006f\u0073\u0069t\u0069\u0076\u0065\u0020\u0061r\u0067\u0075m\u0065\u006e\u0074\u0073");};return MakeNumberResult (_gfgg (_eafb .ValueNumber ));};func _gfddg (_ggdg Result ,_abdfb *criteriaParsed )bool {if _ggdg .IsBoolean {return false ;};_ggbd :=_ggdg .Type ;if _abdfb ._ddefc {return _ggbd ==ResultTypeNumber &&_ggdg .ValueNumber ==_abdfb ._geab ;}else if _ggbd ==ResultTypeNumber {return _bccc (_ggdg .ValueNumber ,_abdfb ._gggb );};return _adcf (_ggdg ,_abdfb );};

// Roman is an implementation of the Excel ROMAN function that convers numbers
// to roman numerals in one of 5 formats.
func Roman (args []Result )Result {if len (args )==0{return MakeErrorResult ("\u0052\u004fM\u0041\u004e\u0028\u0029\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0061\u0074\u0020\u006c\u0065\u0061\u0073\u0074\u0020\u006f\u006e\u0065\u0020\u006e\u0075\u006d\u0065\u0072\u0069\u0063\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};if len (args )> 2{return MakeErrorResult ("\u0052\u004fM\u0041\u004e\u0028\u0029\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0061\u0074\u0020\u006d\u006f\u0073\u0074\u0020\u0074\u0077\u006f\u0020\u006e\u0075\u006d\u0065\u0072\u0069\u0063\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0073");};_edcg :=args [0].AsNumber ();if _edcg .Type !=ResultTypeNumber {return MakeErrorResult ("\u0052\u004fM\u0041\u004e\u0028\u0029\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0061\u0074\u0020\u006c\u0065\u0061\u0073\u0074\u0020\u006f\u006e\u0065\u0020\u006e\u0075\u006d\u0065\u0072\u0069\u0063\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};_dgaae :=0;if len (args )> 1{_ccef :=args [1];if _ccef .Type !=ResultTypeNumber {return MakeErrorResult ("\u0052\u004fM\u0041\u004e\u0028\u0029\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0073\u0065\u0063\u006f\u006e\u0064\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006d\u0065\u0072\u0069\u0063");};_dgaae =int (_ccef .ValueNumber );if _dgaae < 0{_dgaae =0;}else if _dgaae > 4{_dgaae =4;};};_geeb :=_agcd ;switch _dgaae {case 1:_geeb =_fffd ;case 2:_geeb =_dfdb ;case 3:_geeb =_fcgb ;case 4:_geeb =_ecacg ;};_agba :=_aca .Trunc (_edcg .ValueNumber );_bcce :=_eb .Buffer {};for _ ,_fbac :=range _geeb {for _agba >=_fbac ._bffddc {_bcce .WriteString (_fbac ._abcf );_agba -=_fbac ._bffddc ;};};return MakeStringResult (_bcce .String ());};const _aegde =57347;

// Update returns the same object as updating sheet references does not affect Number.
func (_ffdc Number )Update (q *_fe .UpdateQuery )Expression {return _ffdc };

// Update updates references in the PrefixExpr after removing a row/column.
func (_cda PrefixExpr )Update (q *_fe .UpdateQuery )Expression {_cbcd :=_cda ;_eggada :=_cda ._dbfebd .String ();if _eggada ==q .SheetToUpdate {_cdec :=*q ;_cdec .UpdateCurrentSheet =true ;_cbcd ._afed =_cda ._afed .Update (&_cdec );};return _cbcd ;};const _fbbga =57356;

// GetWidth returns 0 for the invalid reference context.
func (_ccbd *ivr )GetWidth (colIdx int )float64 {return float64 (0)};var _egdbd =[...]string {"\u0024\u0065\u006e\u0064","\u0065\u0072\u0072o\u0072","\u0024\u0075\u006e\u006b","t\u006fk\u0065\u006e\u0048\u006f\u0072\u0069\u007a\u006fn\u0074\u0061\u006c\u0052an\u0067\u0065","\u0074o\u006be\u006e\u0056\u0065\u0072\u0074i\u0063\u0061l\u0052\u0061\u006e\u0067\u0065","\u0074\u006f\u006b\u0065\u006e\u0052\u0065\u0073\u0065\u0072\u0076\u0065d\u004e\u0061\u006d\u0065","\u0074\u006f\u006be\u006e\u0044\u0044\u0045\u0043\u0061\u006c\u006c","\u0074\u006f\u006b\u0065\u006e\u004c\u0065\u0078\u0045\u0072\u0072\u006f\u0072","\u0074o\u006be\u006e\u004e\u0061\u006d\u0065\u0064\u0052\u0061\u006e\u0067\u0065","\u0074o\u006b\u0065\u006e\u0042\u006f\u006fl","t\u006f\u006b\u0065\u006e\u004e\u0075\u006d\u0062\u0065\u0072","t\u006f\u006b\u0065\u006e\u0053\u0074\u0072\u0069\u006e\u0067","\u0074\u006f\u006b\u0065\u006e\u0045\u0072\u0072\u006f\u0072","\u0074\u006f\u006b\u0065\u006e\u0045\u0072\u0072\u006f\u0072\u0052\u0065\u0066","\u0074\u006f\u006b\u0065\u006e\u0053\u0068\u0065\u0065\u0074","\u0074o\u006b\u0065\u006e\u0043\u0065\u006cl","t\u006fk\u0065\u006e\u0046\u0075\u006e\u0063\u0074\u0069o\u006e\u0042\u0075\u0069lt\u0069\u006e","t\u006f\u006b\u0065\u006e\u004c\u0042\u0072\u0061\u0063\u0065","t\u006f\u006b\u0065\u006e\u0052\u0042\u0072\u0061\u0063\u0065","t\u006f\u006b\u0065\u006e\u004c\u0050\u0061\u0072\u0065\u006e","t\u006f\u006b\u0065\u006e\u0052\u0050\u0061\u0072\u0065\u006e","\u0074o\u006b\u0065\u006e\u0050\u006c\u0075s","\u0074\u006f\u006b\u0065\u006e\u004d\u0069\u006e\u0075\u0073","\u0074o\u006b\u0065\u006e\u004d\u0075\u006ct","\u0074\u006f\u006b\u0065\u006e\u0044\u0069\u0076","\u0074\u006f\u006b\u0065\u006e\u0045\u0078\u0070","\u0074o\u006b\u0065\u006e\u0045\u0051","\u0074o\u006b\u0065\u006e\u004c\u0054","\u0074o\u006b\u0065\u006e\u0047\u0054","\u0074\u006f\u006b\u0065\u006e\u004c\u0045\u0051","\u0074\u006f\u006b\u0065\u006e\u0047\u0045\u0051","\u0074o\u006b\u0065\u006e\u004e\u0045","\u0074\u006f\u006b\u0065\u006e\u0043\u006f\u006c\u006f\u006e","\u0074\u006f\u006b\u0065\u006e\u0043\u006f\u006d\u006d\u0061","\u0074\u006f\u006b\u0065\u006e\u0041\u006d\u0070\u0065r\u0073\u0061\u006e\u0064","\u0074o\u006b\u0065\u006e\u0053\u0065\u006di"};func (_dgfgb *yyParserImpl )Lookahead ()int {return _dgfgb ._gebc };

// And is an implementation of the Excel AND() function.
func And (args []Result )Result {if len (args )==0{return MakeErrorResult ("\u0041\u004e\u0044 r\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0061t\u0020l\u0065a\u0073t\u0020\u006f\u006e\u0065\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};_edbf :=true ;for _ ,_eaga :=range args {_eaga =_eaga .AsNumber ();switch _eaga .Type {case ResultTypeList ,ResultTypeArray :_eggd :=And (_eaga .ListValues ());if _eggd .Type ==ResultTypeError {return _eggd ;};if _eggd .ValueNumber ==0{_edbf =false ;};case ResultTypeNumber :if _eaga .ValueNumber ==0{_edbf =false ;};case ResultTypeString :return MakeErrorResult ("\u0041\u004e\u0044\u0020\u0064\u006f\u0065\u0073\u006e\u0027t\u0020\u006f\u0070\u0065\u0072\u0061\u0074e\u0020\u006f\u006e\u0020\u0073\u0074\u0072\u0069\u006e\u0067\u0073");case ResultTypeError :return _eaga ;default:return MakeErrorResult ("\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0061\u0072\u0067u\u006de\u006e\u0074\u0020\u0074\u0079\u0070\u0065\u0020\u0069\u006e\u0020\u0041\u004e\u0044");};};return MakeBoolResult (_edbf );};const _acabf =57357;

// Time is an implementation of the Excel TIME() function.
func Time (args []Result )Result {if len (args )!=3||args [0].Type !=ResultTypeNumber ||args [1].Type !=ResultTypeNumber ||args [2].Type !=ResultTypeNumber {return MakeErrorResult ("\u0054\u0049ME\u0020\u0072\u0065q\u0075\u0069\u0072\u0065s t\u0068re\u0065\u0020\u006e\u0075\u006d\u0062\u0065r \u0061\u0072\u0067\u0075\u006d\u0065\u006et\u0073");};_egdg :=args [0].ValueNumber ;_fedd :=args [1].ValueNumber ;_gaf :=args [2].ValueNumber ;_cgde :=_dcbd (_egdg ,_fedd ,_gaf );if _cgde >=0{return MakeNumberResult (_cgde );}else {return MakeErrorResultType (ErrorTypeNum ,"");};};

// Intrate implements the Excel INTRATE function.
func Intrate (args []Result )Result {_dbbg :=len (args );if _dbbg !=4&&_dbbg !=5{return MakeErrorResult ("\u0049\u004e\u0054\u0052\u0041\u0054\u0045\u0020\u0072\u0065\u0071\u0075\u0069r\u0065\u0073\u0020\u0066\u006f\u0075r\u0020\u006f\u0072\u0020\u0066\u0069\u0076\u0065\u0020\u0061\u0072\u0067\u0075m\u0065\u006e\u0074\u0073");};_ddbd ,_cafga ,_bbbg :=_dbda (args [0],args [1],"\u0049N\u0054\u0052\u0041\u0054\u0045");if _bbbg .Type ==ResultTypeError {return _bbbg ;};if args [2].Type !=ResultTypeNumber {return MakeErrorResult ("\u0049\u004e\u0054\u0052\u0041\u0054E\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0069\u006e\u0076\u0065\u0073\u0074\u006d\u0065\u006e\u0074 \u0074\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0061r\u0067u\u006d\u0065\u006e\u0074");};_bgac :=args [2].ValueNumber ;if _bgac <=0{return MakeErrorResultType (ErrorTypeNum ,"\u0049\u004e\u0054\u0052\u0041\u0054\u0045\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0069\u006e\u0076e\u0073\u0074\u006d\u0065\u006e\u0074\u0020\u0074\u006f \u0062\u0065\u0020\u0070\u006f\u0073\u0069\u0074\u0069\u0076\u0065\u0020\u006eu\u006d\u0062\u0065\u0072\u0020\u0061r\u0067\u0075\u006de\u006e\u0074");};if args [3].Type !=ResultTypeNumber {return MakeErrorResult ("\u0049\u004e\u0054\u0052\u0041\u0054E\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0072\u0065\u0064\u0065\u006d\u0070\u0074\u0069\u006f\u006e \u0074\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0061r\u0067u\u006d\u0065\u006e\u0074");};_cfddc :=args [3].ValueNumber ;if _cfddc <=0{return MakeErrorResultType (ErrorTypeNum ,"\u0049\u004e\u0054\u0052\u0041\u0054\u0045\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0072\u0065\u0064e\u006d\u0070\u0074\u0069\u006f\u006e\u0020\u0074\u006f \u0062\u0065\u0020\u0070\u006f\u0073\u0069\u0074\u0069\u0076\u0065\u0020\u006eu\u006d\u0062\u0065\u0072\u0020\u0061r\u0067\u0075\u006de\u006e\u0074");};_aadd :=0;if _dbbg ==5&&args [4].Type !=ResultTypeEmpty {if args [4].Type !=ResultTypeNumber {return MakeErrorResult ("\u0049N\u0054\u0052A\u0054\u0045\u0020\u0072e\u0071\u0075\u0069r\u0065\u0073\u0020\u0062\u0061\u0073\u0069\u0073\u0020to\u0020\u0062\u0065 \u006e\u0075m\u0062\u0065\u0072\u0020\u0061\u0072g\u0075\u006de\u006e\u0074");};_aadd =int (args [4].ValueNumber );if !_facb (_aadd ){return MakeErrorResultType (ErrorTypeNum ,"\u0049\u006eco\u0072\u0072\u0065c\u0074\u0020\u0062\u0061sis\u0020ar\u0067\u0075\u006d\u0065\u006e\u0074\u0020fo\u0072\u0020\u0049\u004e\u0054\u0052\u0041T\u0045");};};_cgee ,_bbbg :=_gacb (_ddbd ,_cafga ,_aadd );if _bbbg .Type ==ResultTypeError {return _bbbg ;};return MakeNumberResult ((_cfddc -_bgac )/_bgac /_cgee );};

// Index implements the Excel INDEX function.
func Index (args []Result )Result {_cgeg :=len (args );if _cgeg < 2||_cgeg > 3{return MakeErrorResult ("\u0049\u004e\u0044E\u0058\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0066\u0072\u006f\u006d\u0020\u006f\u006e\u0065\u0020\u0074\u006f\u0020\u0074\u0068\u0072\u0065\u0065\u0020a\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0073");};_begef :=args [0];if _begef .Type !=ResultTypeArray &&_begef .Type !=ResultTypeList {return MakeErrorResult ("\u0049\u004e\u0044\u0045\u0058\u0020\u0072e\u0071\u0075\u0069r\u0065\u0073\u0020\u0066i\u0072\u0073\u0074\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0020\u006f\u0066\u0020\u0074\u0079\u0070\u0065\u0020\u0061\u0072\u0072\u0061\u0079");};_bggfg :=args [1].AsNumber ();if _bggfg .Type !=ResultTypeNumber {return MakeErrorResult ("I\u004e\u0044\u0045\u0058\u0020\u0072e\u0071\u0075\u0069\u0072\u0065\u0073 \u006e\u0075\u006d\u0065\u0072\u0069\u0063 \u0072\u006f\u0077\u0020\u0061\u0072\u0067\u0075\u006d\u0065n\u0074");};_cdd :=int (_bggfg .ValueNumber )-1;_fgee :=-1;if _cgeg ==3&&args [2].Type !=ResultTypeEmpty {_eaabg :=args [2].AsNumber ();if _eaabg .Type !=ResultTypeNumber {return MakeErrorResult ("I\u004e\u0044\u0045\u0058\u0020\u0072e\u0071\u0075\u0069\u0072\u0065\u0073 \u006e\u0075\u006d\u0065\u0072\u0069\u0063 \u0063\u006f\u006c\u0020\u0061\u0072\u0067\u0075\u006d\u0065n\u0074");};_fgee =int (_eaabg .ValueNumber )-1;};if _cdd ==-1&&_fgee ==-1{return MakeErrorResult ("\u0049\u004e\u0044EX\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073 \u0072o\u0077 \u006fr\u0020\u0063\u006f\u006c\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};var _ceecb []Result ;if _begef .Type ==ResultTypeArray {_gdda :=_begef .ValueArray ;if _cdd < -1||_cdd >=len (_gdda ){return MakeErrorResult ("\u0049\u004e\u0044\u0045\u0058\u0020\u0068\u0061\u0073\u0020\u0072o\u0077\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0072a\u006e\u0067\u0065");};if _cdd ==-1{if _fgee >=len (_gdda [0]){return MakeErrorResult ("\u0049\u004e\u0044\u0045\u0058\u0020\u0068\u0061\u0073\u0020\u0063o\u006c\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0072a\u006e\u0067\u0065");};_cabdd :=[][]Result {};for _ ,_eafc :=range _gdda {_faaa :=_eafc [_fgee ];if _faaa .Type ==ResultTypeEmpty {_faaa =MakeNumberResult (0);};_cabdd =append (_cabdd ,[]Result {_faaa });};return MakeArrayResult (_cabdd );};_ceecb =_gdda [_cdd ];}else {_ecce :=_begef .ValueList ;if _cdd < -1||_cdd >=1{return MakeErrorResult ("\u0049\u004e\u0044\u0045\u0058\u0020\u0068\u0061\u0073\u0020\u0072o\u0077\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0072a\u006e\u0067\u0065");};if _cdd ==-1{if _fgee >=len (_ecce ){return MakeErrorResult ("\u0049\u004e\u0044\u0045\u0058\u0020\u0068\u0061\u0073\u0020\u0063o\u006c\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0072a\u006e\u0067\u0065");};_efee :=_ecce [_fgee ];if _efee .Type ==ResultTypeEmpty {_efee =MakeNumberResult (0);};return _efee ;};_ceecb =_ecce ;};if _fgee < -1||_fgee > len (_ceecb ){return MakeErrorResult ("\u0049\u004e\u0044\u0045\u0058\u0020\u0068\u0061\u0073\u0020\u0063o\u006c\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0072a\u006e\u0067\u0065");};if _fgee ==-1{_dgg :=[]Result {};for _ ,_cbfaf :=range _ceecb {if _cbfaf .Type ==ResultTypeEmpty {_dgg =append (_dgg ,MakeNumberResult (0));}else {_dgg =append (_dgg ,_cbfaf );};};return MakeArrayResult ([][]Result {_dgg });};_cfbf :=_ceecb [_fgee ];if _cfbf .Type ==ResultTypeEmpty {return MakeNumberResult (0);};return _cfbf ;};func _dcbd (_dgac ,_cdgg ,_egb float64 )float64 {return (_dgac *3600+_cdgg *60+_egb )/86400};func _bea (_gfcb BinOpType ,_eac []Result ,_eag Result )Result {_cbf :=[]Result {};switch _eag .Type {case ResultTypeNumber :_deg :=_eag .ValueNumber ;for _fd :=range _eac {_acc :=_eac [_fd ].AsNumber ();if _acc .Type !=ResultTypeNumber {return MakeErrorResult ("\u006e\u006f\u006e\u002d\u006e\u0075\u006e\u006d\u0065\u0072\u0069\u0063\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u0069\u006e\u0020\u0062\u0069n\u0061\u0072\u0079\u0020\u006fp\u0065\u0072a\u0074\u0069\u006f\u006e");};switch _gfcb {case BinOpTypePlus :_cbf =append (_cbf ,MakeNumberResult (_acc .ValueNumber +_deg ));case BinOpTypeMinus :_cbf =append (_cbf ,MakeNumberResult (_acc .ValueNumber -_deg ));case BinOpTypeMult :_cbf =append (_cbf ,MakeNumberResult (_acc .ValueNumber *_deg ));case BinOpTypeDiv :if _deg ==0{return MakeErrorResultType (ErrorTypeDivideByZero ,"");};_cbf =append (_cbf ,MakeNumberResult (_acc .ValueNumber /_deg ));case BinOpTypeExp :_cbf =append (_cbf ,MakeNumberResult (_aca .Pow (_acc .ValueNumber ,_deg )));case BinOpTypeLT :_cbf =append (_cbf ,MakeBoolResult (_acc .ValueNumber < _deg ));case BinOpTypeGT :_cbf =append (_cbf ,MakeBoolResult (_acc .ValueNumber > _deg ));case BinOpTypeEQ :_cbf =append (_cbf ,MakeBoolResult (_acc .ValueNumber ==_deg ));case BinOpTypeLEQ :_cbf =append (_cbf ,MakeBoolResult (_acc .ValueNumber <=_deg ));case BinOpTypeGEQ :_cbf =append (_cbf ,MakeBoolResult (_acc .ValueNumber >=_deg ));case BinOpTypeNE :_cbf =append (_cbf ,MakeBoolResult (_acc .ValueNumber !=_deg ));default:return MakeErrorResult (_a .Sprintf ("\u0075\u006es\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u006c\u0069\u0073\u0074\u0020\u0062\u0069\u006e\u0061\u0072\u0079\u0020\u006fp \u0025\u0073",_gfcb ));};};case ResultTypeString :_bfa :=_eag .ValueString ;for _acb :=range _eac {_bead :=_eac [_acb ].AsString ();if _bead .Type !=ResultTypeString {return MakeErrorResult ("\u006e\u006f\u006e\u002d\u006e\u0075\u006e\u006d\u0065\u0072\u0069\u0063\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u0069\u006e\u0020\u0062\u0069n\u0061\u0072\u0079\u0020\u006fp\u0065\u0072a\u0074\u0069\u006f\u006e");};switch _gfcb {case BinOpTypeLT :_cbf =append (_cbf ,MakeBoolResult (_bead .ValueString < _bfa ));case BinOpTypeGT :_cbf =append (_cbf ,MakeBoolResult (_bead .ValueString > _bfa ));case BinOpTypeEQ :_cbf =append (_cbf ,MakeBoolResult (_bead .ValueString ==_bfa ));case BinOpTypeLEQ :_cbf =append (_cbf ,MakeBoolResult (_bead .ValueString <=_bfa ));case BinOpTypeGEQ :_cbf =append (_cbf ,MakeBoolResult (_bead .ValueString >=_bfa ));case BinOpTypeNE :_cbf =append (_cbf ,MakeBoolResult (_bead .ValueString !=_bfa ));default:return MakeErrorResult (_a .Sprintf ("\u0075\u006es\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u006c\u0069\u0073\u0074\u0020\u0062\u0069\u006e\u0061\u0072\u0079\u0020\u006fp \u0025\u0073",_gfcb ));};};default:return MakeErrorResult ("\u006e\u006f\u006e\u002d\u006e\u0075\u006e\u006d\u0065\u0072\u0069c\u0020\u0061\u006e\u0064\u0020\u006e\u006f\u006e-\u0073t\u0072\u0069\u006e\u0067\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u0069\u006e\u0020\u0062\u0069\u006e\u0061r\u0079\u0020\u006f\u0070\u0065\u0072\u0061\u0074\u0069\u006f\u006e");};return MakeListResult (_cbf );};func _cfdc (_bcbgc Result )bool {_dafca :=_bcbgc .Type ;return _dafca !=ResultTypeArray &&_dafca !=ResultTypeList ;};

// Log implements the Excel LOG function which returns the log of a number. By
// default the result is base 10, however the second argument to the function
// can specify a different base.
func Log (args []Result )Result {if len (args )==0{return MakeErrorResult ("\u004cO\u0047\u0028)\u0020\u0072\u0065\u0071u\u0069\u0072\u0065s\u0020\u0061\u0074\u0020\u006c\u0065\u0061\u0073\u0074 o\u006e\u0065\u0020n\u0075\u006de\u0072\u0069\u0063\u0020\u0061\u0072g\u0075\u006de\u006e\u0074");};if len (args )> 2{return MakeErrorResult ("L\u004f\u0047\u0028\u0029\u0020\u0061\u0063\u0063\u0065\u0070\u0074\u0073\u0020\u0061\u0020\u006d\u0061\u0078i\u006d\u0075\u006d\u0020\u006f\u0066\u0020\u0074\u0077\u006f a\u0072\u0067\u0075m\u0065n\u0074\u0073");};_eeacf :=args [0].AsNumber ();if _eeacf .Type !=ResultTypeNumber {return MakeErrorResult ("\u004cO\u0047\u0028)\u0020\u0072\u0065\u0071u\u0069\u0072\u0065s\u0020\u0061\u0074\u0020\u006c\u0065\u0061\u0073\u0074 o\u006e\u0065\u0020n\u0075\u006de\u0072\u0069\u0063\u0020\u0061\u0072g\u0075\u006de\u006e\u0074");};_fbab :=10.0;if len (args )> 1{_faec :=args [1].AsNumber ();if _faec .Type !=ResultTypeNumber {return MakeErrorResult ("\u004cO\u0047\u0028)\u0020\u0072\u0065\u0071u\u0069\u0072\u0065s\u0020\u0073\u0065\u0063\u006f\u006e\u0064\u0020\u0061rg\u0075\u006d\u0065n\u0074\u0020t\u006f\u0020\u0062\u0065\u0020\u006eu\u006d\u0065r\u0069\u0063");};_fbab =args [1].ValueNumber ;};if _eeacf .ValueNumber ==0{return MakeErrorResult ("\u004cO\u0047\u0028)\u0020\u0072\u0065\u0071u\u0069\u0072\u0065s\u0020\u0066\u0069\u0072\u0073\u0074\u0020\u0061\u0072gu\u006d\u0065\u006et\u0020\u0074o\u0020\u0062\u0065\u0020\u006e\u006fn\u002d\u007ae\u0072\u006f");};if _fbab ==0{return MakeErrorResult ("\u004cO\u0047\u0028)\u0020\u0072\u0065q\u0075\u0069\u0072\u0065\u0073\u0020\u0073e\u0063\u006f\u006e\u0064\u0020\u0061r\u0067\u0075\u006d\u0065\u006e\u0074\u0020\u0074\u006f\u0020\u0062e\u0020\u006e\u006f\u006e\u002d\u007a\u0065\u0072\u006f");};return MakeNumberResult (_aca .Log (_eeacf .ValueNumber )/_aca .Log (_fbab ));};func _faba (_gffed string )string {_gffed =_bf .Replace (_gffed ,"\u000a","\u005c\u006e",-1);_gffed =_bf .Replace (_gffed ,"\u000d","\u005c\u0072",-1);_gffed =_bf .Replace (_gffed ,"\u0009","\u005c\u0074",-1);return _gffed ;};func _gg (_be BinOpType ,_ee ,_ff [][]Result )Result {_cba :=[][]Result {};for _ea :=range _ee {_fb :=_fc (_be ,_ee [_ea ],_ff [_ea ]);if _fb .Type ==ResultTypeError {return _fb ;};_cba =append (_cba ,_fb .ValueList );};return MakeArrayResult (_cba );};

// Reference returns a string reference value to a vertical range with prefix.
func (_dfac PrefixVerticalRange )Reference (ctx Context ,ev Evaluator )Reference {_fcgaf :=_dfac ._geaee .Reference (ctx ,ev );return Reference {Type :ReferenceTypeVerticalRange ,Value :_dfac .verticalRangeReference (_fcgaf .Value )};};

// ResultType is the type of the result
//go:generate stringer -type=ResultType
type ResultType byte ;var _dfdb =[]ri {{1000,"\u004d"},{990,"\u0058\u004d"},{950,"\u004c\u004d"},{900,"\u0043\u004d"},{500,"\u0044"},{490,"\u0058\u0044"},{450,"\u004c\u0044"},{400,"\u0043\u0044"},{100,"\u0043"},{99,"\u0049\u0043"},{90,"\u0058\u0043"},{50,"\u004c"},{45,"\u0056\u004c"},{40,"\u0058\u004c"},{10,"\u0058"},{9,"\u0049\u0058"},{5,"\u0056"},{4,"\u0049\u0056"},{1,"\u0049"}};func _bedge (_cbbb Reference ,_gfad Context )bool {return _gfad .Sheet (_cbbb .Value )==InvalidReferenceContext ;};func _adece (_cdf ,_cdb _ad .Time ,_dfe int )_ad .Time {_eacg :=_ad .Date (_cdf .Year (),_cdb .Month (),_cdb .Day (),0,0,0,0,_ad .UTC );if _eacg .After (_cdf ){_eacg =_eacg .AddDate (-1,0,0);};for !_eacg .After (_cdf ){_eacg =_eacg .AddDate (0,12/_dfe ,0);};return _eacg ;};func _dafb (_caege []Result )Result {_dcgb :=_caege [0].ValueList ;_dedgf :=len (_dcgb );switch len (_caege ){case 1:_dcgac :=[]Result {};for _ ,_eegcc :=range _dcgb {_dcgac =append (_dcgac ,MakeBoolResult (_eegcc .ValueNumber !=0));};return MakeListResult (_dcgac );case 2:_bcfd :=_caege [1];switch _bcfd .Type {case ResultTypeNumber ,ResultTypeString ,ResultTypeEmpty :_gebgc :=[]Result {};for _ ,_eecdc :=range _dcgb {var _dffdf Result ;if _eecdc .ValueNumber ==0{_dffdf =MakeBoolResult (false );}else {_dffdf =_bcfd ;};_gebgc =append (_gebgc ,_dffdf );};return MakeListResult (_gebgc );case ResultTypeList :_caad :=_badgg (_bcfd ,_dedgf );_ccge :=[]Result {};for _bage ,_bddgg :=range _dcgb {var _efefg Result ;if _bddgg .ValueNumber ==0{_efefg =MakeBoolResult (false );}else {_efefg =_caad [_bage ];};_ccge =append (_ccge ,_efefg );};return MakeListResult (_ccge );case ResultTypeArray :_bebc :=_dbfd (_bcfd ,len (_bcfd .ValueArray ),_dedgf );_ggbcb :=[][]Result {};for _ ,_bdee :=range _bebc {_afbe :=[]Result {};for _cbccc ,_dddag :=range _dcgb {var _gegd Result ;if _dddag .ValueNumber ==0{_gegd =MakeBoolResult (false );}else {_gegd =_bdee [_cbccc ];};_afbe =append (_afbe ,_gegd );};_ggbcb =append (_ggbcb ,_afbe );};return MakeArrayResult (_ggbcb );};case 3:_bdfa :=_caege [1];_agdc :=_caege [2];_agag :=_cfdc (_bdfa );_dfgf :=_cfdc (_agdc );if _agag &&_dfgf {_cefd :=[]Result {};for _ ,_bgfa :=range _dcgb {var _gegag Result ;if _bgfa .ValueNumber ==0{_gegag =_agdc ;}else {_gegag =_bdfa ;};_cefd =append (_cefd ,_gegag );};return MakeListResult (_cefd );};if _bdfa .Type !=ResultTypeArray &&_agdc .Type !=ResultTypeArray {_afab :=_badgg (_bdfa ,_dedgf );_fbfe :=_badgg (_agdc ,_dedgf );_ebedf :=[]Result {};for _aced ,_fgga :=range _dcgb {var _gfbca Result ;if _fgga .ValueNumber ==0{_gfbca =_fbfe [_aced ];}else {_gfbca =_afab [_aced ];};_ebedf =append (_ebedf ,_gfbca );};return MakeListResult (_ebedf );};_cebb ,_baegf :=len (_bdfa .ValueArray ),len (_agdc .ValueArray );_afbga ,_ecdd :=_cebb ,_baegf ;if _baegf > _afbga {_afbga ,_ecdd =_ecdd ,_afbga ;};_cccb :=_dbfd (_bdfa ,_afbga ,_dedgf );_egded :=_dbfd (_agdc ,_afbga ,_dedgf );_bfcdc :=[][]Result {};for _gfga :=0;_gfga < _afbga ;_gfga ++{_bcag :=[]Result {};for _dfcd ,_bdddd :=range _dcgb {var _bfdc Result ;if _bdddd .ValueNumber ==0{if _gfga < _baegf {_bfdc =_egded [_gfga ][_dfcd ];}else {_bfdc =MakeErrorResultType (ErrorTypeNA ,"");};}else {if _gfga < _cebb {_bfdc =_cccb [_gfga ][_dfcd ];}else {_bfdc =MakeErrorResultType (ErrorTypeNA ,"");};};_bcag =append (_bcag ,_bfdc );};_bfcdc =append (_bfcdc ,_bcag );};return MakeArrayResult (_bfcdc );};return MakeErrorResult ("");};

// Eval evaluates and returns the result of the NamedRangeRef reference.
func (_addfa NamedRangeRef )Eval (ctx Context ,ev Evaluator )Result {_gafbc :=ctx .NamedRange (_addfa ._ggbf );_gdfb :=_gafbc .Value ;if _ecbag ,_ddccc :=ev .GetFromCache (_gdfb );_ddccc {return _ecbag ;};_bfafe :=_bf .Split (_gdfb ,"\u0021");if len (_bfafe )!=2{return MakeErrorResult (_a .Sprintf ("\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u006e\u0061\u006de\u0064 \u0072\u0061\u006e\u0067\u0065\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u0025\u0073",_gdfb ));};_eeade :=ctx .Sheet (_bfafe [0]);_eeagd :=_bf .Split (_bfafe [1],"\u003a");switch len (_eeagd ){case 1:_fedae :=ev .Eval (_eeade ,_eeagd [0]);ev .SetCache (_gdfb ,_fedae );return _fedae ;case 2:_ggefe :=_dbcgg (_eeade ,ev ,_eeagd [0],_eeagd [1]);ev .SetCache (_gdfb ,_ggefe );return _ggefe ;};return MakeErrorResult (_a .Sprintf ("\u0075\u006es\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0072\u0065\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0020\u0074\u0079\u0070e \u0025\u0073",_gafbc .Type ));};func _cdbcab (_cabdf []Result )(bool ,Result ){for _ ,_dafg :=range _cabdf {if _dafg .Type ==ResultTypeError {return true ,_dafg ;};};return false ,MakeEmptyResult ();};const _dfcff int =0;

// Find is an implementation of the Excel FIND().
func Find (args []Result )Result {_cbed ,_ecgba :=_eade ("\u0046\u0049\u004e\u0044",args );if _ecgba .Type !=ResultTypeEmpty {return _ecgba ;};_bceac :=_cbed ._fbdf ;if _bceac ==""{return MakeNumberResult (1.0);};_eccdb :=_cbed ._bdec ;_efcg :=_cbed ._dcbg ;_dggg :=1;for _geaa :=range _eccdb {if _dggg < _efcg {_dggg ++;continue ;};_eafbc :=_bf .Index (_eccdb [_geaa :],_bceac );if _eafbc ==0{return MakeNumberResult (float64 (_dggg ));};_dggg ++;};return MakeErrorResultType (ErrorTypeValue ,"\u004eo\u0074\u0020\u0066\u006f\u0075\u006ed");};

// Tbilleq implements the Excel TBILLEQ function.
func Tbilleq (args []Result )Result {if len (args )!=3{return MakeErrorResult ("\u0054\u0042\u0049\u004c\u004c\u0045\u0051\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065s\u0020t\u0068\u0072\u0065\u0065\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0073");};_egfc ,_ebca ,_cefg :=_dbda (args [0],args [1],"\u0054B\u0049\u004c\u004c\u0045\u0051");if _cefg .Type ==ResultTypeError {return _cefg ;};if args [2].Type !=ResultTypeNumber {return MakeErrorResult ("T\u0042\u0049\u004c\u004c\u0045\u0051\u0020\u0072\u0065q\u0075\u0069\u0072\u0065\u0073\u0020\u0064is\u0063\u006f\u0075\u006et\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u006e\u0075mb\u0065\u0072 \u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};_dbada :=_ebca -_egfc ;if _dbada > 365{return MakeErrorResultType (ErrorTypeNum ,"\u0054\u0042\u0049\u004c\u004c\u0045\u0051\u0020\u0072e\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u006d\u0061\u0074\u0075\u0072\u0069\u0074\u0079\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u006eo\u0074\u0020m\u006f\u0072e\u0020\u0074\u0068\u0061\u006e\u0020\u006f\u006e\u0065\u0020\u0079\u0065\u0061r \u0061\u0066\u0074\u0065\u0072\u0020\u0073\u0065\u0074t\u006c\u0065\u006d\u0065\u006e\u0074");};_ggaga :=args [2].ValueNumber ;if _ggaga <=0{return MakeErrorResultType (ErrorTypeNum ,"\u0054\u0042\u0049\u004c\u004c\u0045Q\u0020\u0072\u0065q\u0075\u0069\u0072e\u0073\u0020\u0064\u0069\u0073\u0063\u006f\u0075\u006e\u0074 \u0074\u006f\u0020\u0062\u0065 p\u006f\u0073\u0069\u0074\u0069\u0076\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};return MakeNumberResult ((365*_ggaga )/(360-_ggaga *_dbada ));};const _cgge =-1000;var ReferenceInvalid =Reference {Type :ReferenceTypeInvalid };

// String returns an empty string for EmptyExpr.
func (_abfc EmptyExpr )String ()string {return ""};type yyParserImpl struct{_feaeg yySymType ;_fbefd [_fgbe ]yySymType ;_gebc int ;};

// Reference returns a string reference value to a cell.
func (_ccc CellRef )Reference (ctx Context ,ev Evaluator )Reference {return Reference {Type :ReferenceTypeCell ,Value :_ccc ._acbc };};

// Ifs is an implementation of the Excel IFS() function.
func Ifs (args []Result )Result {if len (args )< 2{return MakeErrorResult ("I\u0046\u0053\u0020\u0072\u0065\u0071u\u0069\u0072\u0065\u0073\u0020\u0061t\u0020\u006c\u0065\u0061\u0073\u0074\u0020t\u0077\u006f\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006et\u0073");};for _ffaa :=0;_ffaa < len (args )-1;_ffaa +=2{if args [_ffaa ].ValueNumber ==1{return args [_ffaa +1];};};return MakeErrorResultType (ErrorTypeNA ,"");};func _cebfd (_feef Result )*criteriaParsed {_adff :=_feef .Type ==ResultTypeNumber ;_gafa :=_feef .ValueNumber ;_ffgad :=_bf .ToLower (_feef .ValueString );_eeeeb :=_gcfa (_ffgad );return &criteriaParsed {_adff ,_gafa ,_ffgad ,_eeeeb };};func _adcf (_eeff Result ,_edac *criteriaParsed )bool {_fbedf :=_bf .ToLower (_eeff .ValueString );_cgbb :=_edac ._gggb ._eaedc ;_ddafd :=_edac ._gggb ._fbaad ;if _cgbb ==_bfacb {return _fbedf ==_ddafd ||_gf .Match (_ddafd ,_fbedf );};if _eeff .Type !=ResultTypeEmpty {if _fbedf ==_edac ._daafa ||_gf .Match (_edac ._daafa ,_fbedf ){return true ;};if _ ,_badc :=_d .ParseFloat (_ddafd ,64);_badc ==nil {return false ;};switch _cgbb {case _gdba :return _fbedf <=_ddafd ;case _ecfgb :return _fbedf >=_ddafd ;case _cdfee :return _fbedf < _ddafd ;case _fcag :return _fbedf > _ddafd ;};};return false ;};const (ResultTypeUnknown ResultType =iota ;ResultTypeNumber ;ResultTypeString ;ResultTypeList ;ResultTypeArray ;ResultTypeError ;ResultTypeEmpty ;);

// Value returns a string version of the result.
func (_fefb Result )Value ()string {switch _fefb .Type {case ResultTypeNumber :_fbeg :=_d .FormatFloat (_fefb .ValueNumber ,'f',-1,64);if len (_fbeg )> 12{_bgaeb :=12;for _eaaab :=_bgaeb ;_eaaab > 0&&_fbeg [_eaaab ]=='0';_eaaab --{_bgaeb --;};_fbeg =_fbeg [0:_bgaeb +1];};return _fbeg ;case ResultTypeError :return _fefb .ValueString ;case ResultTypeString :return _fefb .ValueString ;case ResultTypeList :if len (_fefb .ValueList )==0{return "";};return _fefb .ValueList [0].Value ();case ResultTypeArray :if len (_fefb .ValueArray )==0||len (_fefb .ValueArray [0])==0{return "";};return _fefb .ValueArray [0][0].Value ();case ResultTypeEmpty :return "";default:return "\u0075\u006e\u0068\u0061nd\u006c\u0065\u0064\u0020\u0072\u0065\u0073\u0075\u006c\u0074\u0020\u0076\u0061\u006cu\u0065";};};

// Rept is an implementation of the Excel REPT function that returns n copies of
// a string.
func Rept (args []Result )Result {if len (args )!=2{return MakeErrorResult ("R\u0045\u0050\u0054\u0020\u0072\u0065q\u0075\u0069\u0072\u0065\u0073\u0020\u0074\u0077\u006f \u0061\u0072\u0067u\u006de\u006e\u0074\u0073");};_bcgfb :=args [0].AsString ();if _bcgfb .Type !=ResultTypeString {return MakeErrorResult ("\u0050R\u004f\u0050E\u0052\u0020\u0072e\u0071\u0075\u0069\u0072\u0065\u0073\u0020f\u0069\u0072\u0073\u0074\u0020\u0061r\u0067\u0075\u006d\u0065\u006e\u0074\u0020\u0074\u006f\u0020\u0062e\u0020\u0061\u0020\u0073\u0074\u0072\u0069\u006e\u0067");};_fcdb :=args [1].AsNumber ();if _fcdb .Type !=ResultTypeNumber {return MakeErrorResult ("\u0050\u0052O\u0050\u0045\u0052\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0073\u0065\u0063\u006f\u006e\u0064\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u0061\u0020\u006e\u0075\u006d\u0062\u0065\u0072");};if _fcdb .ValueNumber < 0{return MakeErrorResult ("\u0050\u0052\u004fP\u0045\u0052\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0073\u0065\u0063\u006f\u006e\u0064\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0020\u0074o\u0020\u0062\u0065\u0020\u003e\u003d\u0020\u0030");};if _fcdb .ValueNumber ==0{return MakeStringResult ("");};_eagb :=_eb .Buffer {};for _cadg :=0;_cadg < int (_fcdb .ValueNumber );_cadg ++{_eagb .WriteString (_bcgfb .ValueString );};return MakeStringResult (_eagb .String ());};

// Context is a formula execution context.  Formula evaluation uses the context
// to retreive information from sheets.
type Context interface{

// Cell returns the result of evaluating a cell.
Cell (_eeg string ,_cf Evaluator )Result ;

// Sheet returns an evaluation context for a given sheet name.  This is used
// when evaluating cells that pull data from other sheets (e.g. ='Sheet 2'!A1).
Sheet (_edd string )Context ;

// GetEpoch returns the time epoch of the context's Workbook.
GetEpoch ()_ad .Time ;

// GetFilename returns the full filename of the context's Workbook.
GetFilename ()string ;

// GetWidth returns a worksheet's column width.
GetWidth (_ecf int )float64 ;

// GetFormat returns a cell's format.
GetFormat (_cde string )string ;

// GetLabelPrefix returns cell's label prefix dependent on cell horizontal alignment.
GetLabelPrefix (_gbf string )string ;

// GetFormat returns if cell is protected.
GetLocked (_cgca string )bool ;

// HasFormula returns if cell contains formula.
HasFormula (_cae string )bool ;

// IsBool returns if cell contains boolean value.
IsBool (_ecc string )bool ;

// IsDBCS returns if workbook default language is among DBCS.
IsDBCS ()bool ;

// LastColumn returns the name of last column which contains data in range of context sheet's given rows.
LastColumn (_dbf ,_bbfg int )string ;

// LastRow returns the name of last row which contains data in range of context sheet's given columns.
LastRow (_bbfb string )int ;

// SetLocked returns sets cell's protected attribute.
SetLocked (_cge string ,_gdg bool );

// NamedRange returns a named range.
NamedRange (_aeb string )Reference ;

// SetOffset is used so that the Context can evaluate cell references
// differently when they are not absolute (e.g. not like '$A$5').  See the
// shared formula support in Cell for usage.
SetOffset (_eee ,_cfg uint32 );};const _bca ="\u0042\u0069\u006e\u004f\u0070\u0054y\u0070\u0065\u0055\u006e\u006bn\u006fw\u006e\u0042\u0069\u006eO\u0070\u0054\u0079\u0070\u0065\u0050\u006c\u0075\u0073\u0042\u0069\u006eO\u0070\u0054\u0079\u0070\u0065\u004d\u0069\u006e\u0075\u0073\u0042\u0069\u006e\u004f\u0070\u0054\u0079\u0070\u0065M\u0075lt\u0042\u0069\u006e\u004f\u0070\u0054\u0079\u0070\u0065\u0044\u0069\u0076\u0042\u0069\u006e\u004f\u0070\u0054\u0079\u0070\u0065\u0045\u0078\u0070\u0042\u0069\u006e\u004f\u0070\u0054\u0079\u0070\u0065\u004c\u0054\u0042\u0069\u006eO\u0070\u0054\u0079\u0070\u0065G\u0054B\u0069\u006eO\u0070\u0054\u0079\u0070\u0065\u0045\u0051\u0042\u0069nO\u0070\u0054\u0079\u0070\u0065\u004c\u0045\u0051\u0042i\u006eO\u0070\u0054\u0079\u0070\u0065\u0047\u0045\u0051\u0042\u0069\u006e\u004f\u0070\u0054\u0079\u0070\u0065N\u0045\u0042\u0069\u006eO\u0070\u0054\u0079\u0070\u0065\u0043\u006f\u006e\u0063\u0061\u0074";

// NewPrefixRangeExpr constructs a new range with prefix.
func NewPrefixRangeExpr (pfx ,from ,to Expression )Expression {_cfccg ,_bbedc ,_ddeed :=_adcg (from ,to );if _ddeed !=nil {_cc .Log .Debug (_ddeed .Error ());return NewError (_ddeed .Error ());};return PrefixRangeExpr {_fgead :pfx ,_fbade :_cfccg ,_gdegd :_bbedc };};var _bcg =[]int {31,28,31,30,31,30,31,31,30,31,30,31};

// IsDBCS returns false for the invalid reference context.
func (_accgb *ivr )IsDBCS ()bool {return false };

// BinOpType is the binary operation operator type
//go:generate stringer -type=BinOpType
type BinOpType byte ;

// Value is an implementation of the Excel VALUE function.
func Value (args []Result )Result {if len (args )!=1{return MakeErrorResult ("\u0056\u0041\u004c\u0055\u0045\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020a\u0020s\u0069\u006e\u0067\u006c\u0065\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};_gfdf :=args [0];if _gfdf .Type ==ResultTypeNumber {return _gfdf ;};if _gfdf .Type ==ResultTypeString {_fgdde ,_cdcae :=_d .ParseFloat (_gfdf .Value (),64);if _cdcae ==nil {return MakeNumberResult (_fgdde );};};return MakeErrorResult ("\u0049\u006e\u0063\u006fr\u0072\u0065\u0063\u0074\u0020\u0061\u0072\u0067\u0075\u006de\u006et\u0020\u0066\u006f\u0072\u0020\u0056\u0041L\u0055\u0045");};

// Left implements the Excel LEFT(string,[n]) function which returns the
// leftmost n characters.
func Left (args []Result )Result {_gfbec :=1;switch len (args ){case 1:case 2:if args [1].Type !=ResultTypeNumber {return MakeErrorResult ("\u004c\u0045F\u0054\u0020\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0061\u0072\u0067\u0075me\u006e\u0074");};_gfbec =int (args [1].ValueNumber );if _gfbec < 0{return MakeErrorResult ("\u004c\u0045\u0046T \u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020n\u0075m\u0062e\u0072 \u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0020\u003e\u003d\u0020\u0030");};if _gfbec ==0{return MakeStringResult ("");};default:return MakeErrorResult ("\u004c\u0045\u0046T \u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020o\u006ee\u0020o\u0072 \u0074\u0077\u006f\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0073");};if args [0].Type ==ResultTypeList {return MakeErrorResult ("\u004c\u0045\u0046T\u0020\u0063\u0061\u006e'\u0074\u0020\u0062\u0065\u0020\u0063\u0061l\u006c\u0065\u0064\u0020\u006f\u006e\u0020\u0061\u0020\u0072\u0061\u006e\u0067\u0065");};_abgcc :=args [0].Value ();if _gfbec > len (_abgcc ){return MakeStringResult (_abgcc );};return MakeStringResult (_abgcc [0:_gfbec ]);};

// Text is an implementation of the Excel TEXT function.
func Text (args []Result )Result {if len (args )!=2{return MakeErrorResult ("T\u0045\u0058\u0054\u0020\u0072\u0065q\u0075\u0069\u0072\u0065\u0073\u0020\u0074\u0077\u006f \u0061\u0072\u0067u\u006de\u006e\u0074\u0073");};_fdcea :=args [0];if _fdcea .Type !=ResultTypeNumber &&_fdcea .Type !=ResultTypeString &&_fdcea .Type !=ResultTypeEmpty {return MakeErrorResult ("\u0054\u0045\u0058\u0054\u0020\u0072\u0065\u0071\u0075\u0069\u0072e\u0073\u0020\u0066\u0069\u0072\u0073\u0074\u0020a\u0072g\u0075\u006d\u0065\u006e\u0074\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u0061\u0020\u006e\u0075\u006d\u0062e\u0072\u0020\u006f\u0072\u0020\u0073\u0074\u0072\u0069\u006e\u0067");};if args [1].Type !=ResultTypeString {return MakeErrorResult ("\u0054E\u0058\u0054 \u0072\u0065\u0071\u0075i\u0072\u0065\u0073 \u0073\u0065\u0063\u006f\u006e\u0064\u0020\u0061\u0072gu\u006d\u0065\u006et\u0020\u0074o\u0020\u0062\u0065\u0020\u0061\u0020s\u0074\u0072i\u006e\u0067");};_cace :=args [1].ValueString ;switch _fdcea .Type {case ResultTypeNumber :return MakeStringResult (_gc .Number (_fdcea .ValueNumber ,_cace ));case ResultTypeString :return MakeStringResult (_gc .String (_fdcea .ValueString ,_cace ));case ResultTypeEmpty :return MakeStringResult (_gc .Number (0,_cace ));case ResultTypeArray ,ResultTypeList :return MakeErrorResultType (ErrorTypeSpill ,"\u0054\u0045X\u0054\u0020\u0064\u006f\u0065\u0073\u006e\u0027\u0074\u0020\u0077\u006f\u0072\u006b\u0020\u0077\u0069\u0074\u0068\u0020\u0061\u0072ra\u0079\u0073");default:return MakeErrorResult ("I\u006e\u0063\u006f\u0072\u0072\u0065c\u0074\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006et\u0020\u0066\u006fr\u0020T\u0045\u0058\u0054");};};var _bdfb =[...]int {0,-2,1,2,0,0,0,0,11,12,13,14,0,16,5,6,7,8,22,0,24,46,0,26,25,29,30,31,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,18,20,9,10,0,0,23,32,33,47,0,49,51,34,35,36,37,38,39,40,41,42,43,44,45,0,17,0,0,15,27,0,48,53,4,19,21,28,50,52};

// String returns a string representation of a range with prefix.
func (_edaca PrefixRangeExpr )String ()string {return _a .Sprintf ("\u0025\u0073\u0021\u0025\u0073\u003a\u0025\u0073",_edaca ._fgead .String (),_edaca ._fbade .String (),_edaca ._gdegd .String ());};

// Update updates references in the Negate after removing a row/column.
func (_dgd Negate )Update (q *_fe .UpdateQuery )Expression {return Negate {_feaegg :_dgd ._feaegg .Update (q )};};var _fcgb =[]ri {{1000,"\u004d"},{995,"\u0056\u004d"},{990,"\u0058\u004d"},{950,"\u004c\u004d"},{900,"\u0043\u004d"},{500,"\u0044"},{495,"\u0056\u0044"},{490,"\u0058\u0044"},{450,"\u004c\u0044"},{400,"\u0043\u0044"},{100,"\u0043"},{99,"\u0049\u0043"},{90,"\u0058\u0043"},{50,"\u004c"},{45,"\u0056\u004c"},{40,"\u0058\u004c"},{10,"\u0058"},{9,"\u0049\u0058"},{5,"\u0056"},{4,"\u0049\u0056"},{1,"\u0049"}};

// GetEpoch returns a null time object for the invalid reference context.
func (_becfd *ivr )GetEpoch ()_ad .Time {return _ad .Time {}};

// True is an implementation of the Excel TRUE() function.  It takes no
// arguments.
func True (args []Result )Result {if len (args )!=0{return MakeErrorResult ("\u0054\u0052\u0055E \u0074\u0061\u006b\u0065\u0073\u0020\u006e\u006f\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0073");};return MakeBoolResult (true );};const _eeaec =57348;const (ReferenceTypeInvalid ReferenceType =iota ;ReferenceTypeCell ;ReferenceTypeHorizontalRange ;ReferenceTypeVerticalRange ;ReferenceTypeNamedRange ;ReferenceTypeRange ;ReferenceTypeSheet ;);const _fdfb =57372;func _gfgg (_gaeca float64 )float64 {_cbcb :=float64 (1);for _gbea :=float64 (2);_gbea <=_gaeca ;_gbea ++{_cbcb *=_gbea ;};return _cbcb ;};type cumulArgs struct{_cbdfc float64 ;_acg float64 ;_fbc float64 ;_cefb float64 ;_cfae float64 ;_gabc int ;};

// Tbillprice implements the Excel TBILLPRICE function.
func Tbillprice (args []Result )Result {if len (args )!=3{return MakeErrorResult ("T\u0042\u0049\u004c\u004c\u0050\u0052I\u0043\u0045\u0020\u0072\u0065\u0071u\u0069\u0072\u0065\u0073\u0020\u0074\u0068r\u0065\u0065\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006et\u0073");};_cfcg ,_gdeg ,_efcdc :=_dbda (args [0],args [1],"\u0054\u0042\u0049\u004c\u004c\u0050\u0052\u0049\u0043\u0045");if _efcdc .Type ==ResultTypeError {return _efcdc ;};if args [2].Type !=ResultTypeNumber {return MakeErrorResult ("\u0054\u0042\u0049\u004c\u004c\u0050\u0052\u0049\u0043\u0045\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065s\u0020\u0064\u0069\u0073\u0063\u006f\u0075n\u0074\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006db\u0065\u0072\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};_edfa :=_gdeg -_cfcg ;if _edfa > 365{return MakeErrorResultType (ErrorTypeNum ,"\u0054\u0042\u0049\u004c\u004cP\u0052\u0049\u0043\u0045\u0020\u0072e\u0071\u0075\u0069\u0072\u0065\u0073\u0020m\u0061\u0074\u0075r\u0069\u0074\u0079\u0020t\u006f\u0020\u0062\u0065\u0020\u006eo\u0074\u0020\u006d\u006f\u0072\u0065\u0020\u0074\u0068\u0061\u006e\u0020\u006f\u006e\u0065\u0020\u0079e\u0061\u0072\u0020\u0061\u0066\u0074\u0065\u0072\u0020\u0073\u0065\u0074\u0074\u006c\u0065\u006d\u0065\u006e\u0074");};_egef :=args [2].ValueNumber ;if _egef <=0{return MakeErrorResultType (ErrorTypeNum ,"\u0054\u0042\u0049\u004c\u004c\u0050\u0052\u0049\u0043\u0045\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020d\u0069\u0073\u0063\u006f\u0075\u006e\u0074\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u0070\u006f\u0073\u0069\u0074\u0069\u0076\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020a\u0072\u0067\u0075\u006d\u0065n\u0074");};return MakeNumberResult (100*(1-_egef *_edfa /360));};func _edf (_cgd int )int {if _cgd < 1900{if _cgd < 30{_cgd +=2000;}else {_cgd +=1900;};};return _cgd ;};func _gcf (_fbcgg [][]Result ,_bbbbd int )[][]Result {_dbfeb :=[][]Result {};for _ffbf :=range _fbcgg {if _ffbf ==0{continue ;};_gbadc :=[]Result {};for _cecc :=range _fbcgg {if _cecc ==_bbbbd {continue ;};_gbadc =append (_gbadc ,_fbcgg [_ffbf ][_cecc ]);};_dbfeb =append (_dbfeb ,_gbadc );};return _dbfeb ;};

// Eval evaluates a range returning a list of results or an error.
func (_fgbc Range )Eval (ctx Context ,ev Evaluator )Result {_bfea :=_fgbc ._gdefe .Reference (ctx ,ev );_gcff :=_fgbc ._daea .Reference (ctx ,ev );_cfecc :=_egea (_bfea ,_gcff );if _bfea .Type ==ReferenceTypeCell &&_gcff .Type ==ReferenceTypeCell {if _dfegc ,_cged :=ev .GetFromCache (_cfecc );_cged {return _dfegc ;}else {_egfgf :=_dbcgg (ctx ,ev ,_bfea .Value ,_gcff .Value );ev .SetCache (_cfecc ,_egfgf );return _egfgf ;};};return MakeErrorResult ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072a\u006e\u0067\u0065\u0020"+_cfecc );};

// BinaryExpr is a binary expression.
type BinaryExpr struct{_db ,_cg Expression ;_df BinOpType ;};func Trunc (args []Result )Result {if len (args )==0{return MakeErrorResult ("T\u0052\u0055\u004e\u0043\u0028\u0029\u0020\u0072\u0065q\u0075\u0069\u0072\u0065\u0073\u0020\u0061t \u006c\u0065\u0061\u0073t\u0020\u006f\u006e\u0065\u0020\u006e\u0075\u006d\u0065ri\u0063\u0020a\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0073");};_bffb :=args [0].AsNumber ();if _bffb .Type !=ResultTypeNumber {return MakeErrorResult ("\u0066\u0069\u0072s\u0074\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0020\u0074\u006f\u0020\u0054\u0052\u0055\u004e\u0043\u0028\u0029\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065 \u0061\u0020\u006e\u0075\u006d\u0062\u0065\u0072");};_dbefc :=float64 (0);if len (args )> 1{_fdabc :=args [1].AsNumber ();if _fdabc .Type !=ResultTypeNumber {return MakeErrorResult ("\u0073\u0065\u0063\u006f\u006e\u0064\u0020a\u0072\u0067\u0075m\u0065\u006e\u0074\u0020t\u006f\u0020\u0054\u0052\u0055\u004e\u0043\u0028\u0029\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020\u0061\u0020\u006e\u0075\u006d\u0062\u0065\u0072");};_dbefc =_fdabc .ValueNumber ;};_cafed :=_bffb .ValueNumber ;_baafc :=1.0;if _dbefc >=0{_baafc =_aca .Pow (1/10.0,_dbefc );}else {return MakeNumberResult (0);};_cafed ,_gbge :=_aca .Modf (_cafed /_baafc );_cced :=0.99999;if _gbge > _cced {_cafed ++;}else if _gbge < -_cced {_cafed --;};_ =_gbge ;return MakeNumberResult (_cafed *_baafc );};func _fgbbb (_agde ,_aege ,_bcgda ,_gagac ,_gabgg float64 )float64 {var _cfag float64 ;_dcfc :=_gabgg /_bcgda ;if _dcfc >=1{_dcfc =1;if _gagac ==1{_cfag =_agde ;}else {_cfag =0;};}else {_cfag =_agde *_aca .Pow (1-_dcfc ,_gagac -1);};_cfacf :=_agde *_aca .Pow (1-_dcfc ,_gagac );var _badf float64 ;if _cfacf < _aege {_badf =_cfag -_aege ;}else {_badf =_cfag -_cfacf ;};if _badf < 0{_badf =0;};return _badf ;};

// Bool is a boolean expression.
type Bool struct{_efe bool };

// String is a string expression.
type String struct{_edag string };const (_ageeb cmpResult =0;_bgaeg cmpResult =-1;_dbfc cmpResult =1;_bfbfg cmpResult =2;);func _dbeg (_gbgd ,_ebb ,_cab int )float64 {return float64 (_gega (_gbgd ,_ad .Month (_ebb ),_cab )/86400)+_fcd ;};const _gegf =57351;func _bccc (_bbaf float64 ,_aabe *criteriaRegex )bool {_ddgage ,_cgddc :=_d .ParseFloat (_aabe ._fbaad ,64);if _cgddc !=nil {return false ;};switch _aabe ._eaedc {case _bfacb :return _bbaf ==_ddgage ;case _gdba :return _bbaf <=_ddgage ;case _ecfgb :return _bbaf >=_ddgage ;case _cdfee :return _bbaf < _ddgage ;case _fcag :return _bbaf > _ddgage ;};return false ;};type noCache struct{};

// Mirr implements the Excel MIRR function.
func Mirr (args []Result )Result {if len (args )!=3{return MakeErrorResult ("\u004d\u0049R\u0052\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0074\u0068\u0072\u0065\u0065\u0020\u0061\u0072\u0067\u0075\u006den\u0074\u0073");};if args [0].Type !=ResultTypeList &&args [0].Type !=ResultTypeArray {return MakeErrorResult ("M\u0049\u0052\u0052\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0076\u0061\u006c\u0075\u0065s\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u006f\u0066\u0020ar\u0072\u0061\u0079 \u0074y\u0070\u0065");};if args [1].Type !=ResultTypeNumber {return MakeErrorResult ("\u004d\u0049\u0052\u0052\u0020\u0072\u0065\u0071u\u0069\u0072\u0065s \u0066\u0069\u006e\u0061\u006e\u0063e\u0020\u0072\u0061\u0074\u0065\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006db\u0065\u0072\u0020\u0061\u0072\u0067\u0075\u006de\u006e\u0074");};_dafcb :=args [1].ValueNumber +1;if args [2].Type !=ResultTypeNumber {return MakeErrorResult ("\u004d\u0049\u0052\u0052\u0020\u0072e\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0072\u0065\u0069\u006e\u0076\u0065\u0073\u0074\u0020\u0072\u0061\u0074\u0065 \u0074\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0061r\u0067u\u006d\u0065\u006e\u0074");};_ccaf :=args [2].ValueNumber +1;if _ccaf ==0{return MakeErrorResultType (ErrorTypeDivideByZero ,"");};_aaeb :=_gbddgb (args [0]);_egda :=float64 (len (_aaeb ));_ddga ,_edeg :=0.0,0.0;_gebe ,_agcb :=1.0,1.0;_gaec ,_bgcb :=false ,false ;for _ ,_fdef :=range _aaeb {for _ ,_aeee :=range _fdef {if _aeee .Type ==ResultTypeNumber &&!_aeee .IsBoolean {_bfdf :=_aeee .ValueNumber ;if _bfdf ==0{continue ;}else {if _bfdf > 0{_gaec =true ;_edeg +=_aeee .ValueNumber *_agcb ;}else {_bgcb =true ;_ddga +=_aeee .ValueNumber *_gebe ;};_gebe /=_dafcb ;_agcb /=_ccaf ;};};};};if !_gaec ||!_bgcb {return MakeErrorResultType (ErrorTypeDivideByZero ,"");};_cafe :=-_edeg /_ddga ;_cafe *=_aca .Pow (_ccaf ,_egda -1);_cafe =_aca .Pow (_cafe ,1/(_egda -1));return MakeNumberResult (_cafe -1);};

// Syd implements the Excel SYD function.
func Syd (args []Result )Result {if len (args )!=4{return MakeErrorResult ("S\u0059\u0044\u0020\u0072\u0065\u0071u\u0069\u0072\u0065\u0073\u0020\u0066\u006f\u0075\u0072 \u0061\u0072\u0067u\u006de\u006e\u0074\u0073");};if args [0].Type !=ResultTypeNumber {return MakeErrorResult ("\u0053\u0059\u0044\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020c\u006f\u0073\u0074\u0020\u0074\u006f \u0062\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0061\u0072\u0067u\u006d\u0065\u006e\u0074");};_bfaa :=args [0].ValueNumber ;if args [1].Type !=ResultTypeNumber {return MakeErrorResult ("\u0053\u0059\u0044 \u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0073\u0061\u006c\u0076\u0061\u0067\u0065\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072 \u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};_aecb :=args [1].ValueNumber ;if args [2].Type !=ResultTypeNumber {return MakeErrorResult ("\u0053\u0059\u0044\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020l\u0069\u0066\u0065\u0020\u0074\u006f \u0062\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0061\u0072\u0067u\u006d\u0065\u006e\u0074");};_bfag :=args [2].ValueNumber ;if _bfag <=0{return MakeErrorResultType (ErrorTypeNum ,"\u0053\u0059\u0044\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u006c\u0069f\u0065 \u0074\u006f\u0020\u0062\u0065\u0020\u0070\u006f\u0073\u0069\u0074\u0069\u0076\u0065");};if args [3].Type !=ResultTypeNumber {return MakeErrorResult ("\u0053\u0059\u0044\u0020\u0072e\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0070\u0065\u0072\u0069\u006f\u0064 \u0074\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};_ebde :=args [3].ValueNumber ;if _ebde <=0{return MakeErrorResultType (ErrorTypeNum ,"\u0053\u0059\u0044 r\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0070e\u0072i\u006fd\u0020t\u006f\u0020\u0062\u0065\u0020\u0070\u006f\u0073\u0069\u0074\u0069\u0076\u0065");};if _ebde > _bfag {return MakeErrorResultType (ErrorTypeNum ,"\u0053\u0059\u0044\u0020\u0072\u0065q\u0075\u0069\u0072\u0065\u0073\u0020\u0070\u0065\u0072\u0069\u006f\u0064\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u0065q\u0075\u0061\u006c\u0020\u006f\u0072\u0020\u006c\u0065\u0073\u0073\u0020\u0074\u0068a\u006e \u006c\u0069\u0066\u0065");};_gbbd :=(_bfaa -_aecb )*(_bfag -_ebde +1)*2;_cdc :=_bfag *(_bfag +1);return MakeNumberResult (_gbbd /_cdc );};

// Reference returns a string reference value to a range.
func (_dfea Range )Reference (ctx Context ,ev Evaluator )Reference {_dagae :=_dfea ._gdefe .Reference (ctx ,ev );_bggc :=_dfea ._daea .Reference (ctx ,ev );if _dagae .Type ==ReferenceTypeCell &&_bggc .Type ==ReferenceTypeCell {return MakeRangeReference (_egea (_dagae ,_bggc ));};return ReferenceInvalid ;};

// Ppmt implements the Excel PPPMT function.
func Ppmt (args []Result )Result {_gdgfa :=len (args );if _gdgfa < 4||_gdgfa > 6{return MakeErrorResult ("\u0050\u0050\u004d\u0054\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u006e\u0075\u006d\u0062\u0065\u0072 \u006f\u0066\u0020\u0061\u0072\u0067\u0075\u006d\u0065n\u0074\u0073\u0020\u0069\u006e\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u006ff\u0020\u0066\u006f\u0075\u0072\u0020a\u006e\u0064\u0020s\u0069\u0078");};if args [0].Type !=ResultTypeNumber {return MakeErrorResult ("P\u0050\u004d\u0054\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0072\u0061\u0074\u0065\u0020t\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006d\u0062\u0065r \u0061\u0072\u0067u\u006de\u006e\u0074");};_addc :=args [0].ValueNumber ;if args [1].Type !=ResultTypeNumber {return MakeErrorResult ("\u0050\u0050\u004dT\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0070\u0065\u0072\u0069\u006f\u0064\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072 \u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};_badb :=args [1].ValueNumber ;if _badb <=0{return MakeErrorResultType (ErrorTypeNum ,"P\u0050\u004d\u0054\u0020\u0072\u0065q\u0075\u0069\u0072\u0065\u0073\u0020p\u0065\u0072\u0069\u006f\u0064\u0020\u0074o\u0020\u0062\u0065\u0020\u0070\u006f\u0073\u0069\u0074\u0069v\u0065");};if args [2].Type !=ResultTypeNumber {return MakeErrorResult ("\u0050\u0050\u004d\u0054\u0020\u0072\u0065\u0071\u0075\u0069\u0072e\u0073\u0020\u006e\u0075\u006d\u0062\u0065\u0072 \u006ff\u0020\u0070\u0065\u0072\u0069\u006f\u0064\u0073\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006db\u0065\u0072\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};_gebbc :=args [2].ValueNumber ;if _gebbc < _badb {return MakeErrorResultType (ErrorTypeNum ,"\u0050\u0050\u004d\u0054\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u006e\u0075\u006d\u0062\u0065\u0072 \u006f\u0066\u0020\u0070\u0065\u0072\u0069\u006f\u0064s\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u006e\u006f\u0074\u0020\u006c\u0065s\u0073\u0020\u0074\u0068\u0061\u006e \u0070\u0065\u0072i\u006f\u0064");};if args [3].Type !=ResultTypeNumber {return MakeErrorResult ("\u0050\u0050\u004d\u0054\u0020\u0072e\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0020\u0076\u0061\u006c\u0075\u0065 \u0074\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0061r\u0067u\u006d\u0065\u006e\u0074");};_afgg :=args [3].ValueNumber ;_cgcc :=0.0;if _gdgfa >=5&&args [4].Type !=ResultTypeEmpty {if args [4].Type !=ResultTypeNumber {return MakeErrorResult ("\u0050\u0050\u004d\u0054\u0020\u0072\u0065\u0071u\u0069\u0072\u0065s \u0066\u0075\u0074\u0075\u0072\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006db\u0065\u0072\u0020\u0061\u0072\u0067\u0075\u006de\u006e\u0074");};_cgcc =args [4].ValueNumber ;};_acdd :=0;if _gdgfa ==6&&args [5].Type !=ResultTypeEmpty {if args [5].Type !=ResultTypeNumber {return MakeErrorResult ("P\u0050\u004d\u0054\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0074\u0079\u0070\u0065\u0020t\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006d\u0062\u0065r \u0061\u0072\u0067u\u006de\u006e\u0074");};_acdd =int (args [5].ValueNumber );if _acdd !=0{_acdd =1;};};return MakeNumberResult (_agee (_addc ,_gebbc ,_afgg ,_cgcc ,_acdd )-_dgc (_addc ,_badb ,_gebbc ,_afgg ,_cgcc ,_acdd ));};

// Oddlprice implements the Excel ODDLPRICE function.
func Oddlprice (args []Result )Result {if len (args )!=8&&len (args )!=9{return MakeErrorResult ("\u004f\u0044\u0044L\u0050\u0052\u0049\u0043\u0045\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0065\u0069\u0067\u0068\u0074\u0020\u006f\u0072\u0020\u006e\u0069\u006e\u0065\u0020a\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0073");};_dae ,_faed ,_dbdb :=_dbda (args [0],args [1],"\u004fD\u0044\u004c\u0050\u0052\u0049\u0043E");if _dbdb .Type ==ResultTypeError {return _dbdb ;};_ecea ,_dbdb :=_ged (args [2],"\u0069\u0073\u0073\u0075\u0065\u0020\u0064\u0061\u0074\u0065","\u004fD\u0044\u004c\u0050\u0052\u0049\u0043E");if _dbdb .Type ==ResultTypeError {return _dbdb ;};if _ecea >=_dae {return MakeErrorResultType (ErrorTypeNum ,"\u004c\u0061\u0073\u0074\u0020i\u006e\u0074\u0065\u0072\u0065\u0073\u0074\u0020\u0064\u0061\u0074\u0065\u0020s\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0062\u0065\u0066\u006f\u0072\u0065\u0020\u0073\u0065\u0074\u0074\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u0064\u0061\u0074e");};_gfbc :=args [3];if _gfbc .Type !=ResultTypeNumber {return MakeErrorResult ("\u004f\u0044\u0044\u004c\u0050\u0052\u0049\u0043\u0045\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0072\u0061\u0074\u0065\u0020o\u0066\u0020\u0074\u0079\u0070e\u0020\u006eu\u006d\u0062\u0065\u0072");};_dcfg :=_gfbc .ValueNumber ;if _dcfg < 0{return MakeErrorResultType (ErrorTypeNum ,"R\u0061\u0074\u0065\u0020\u0073\u0068o\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u006e\u006fn\u0020\u006e\u0065g\u0061t\u0069\u0076\u0065");};_adeag :=args [4];if _adeag .Type !=ResultTypeNumber {return MakeErrorResult ("\u004f\u0044\u0044\u004c\u0050\u0052\u0049\u0043\u0045\u0020\u0072\u0065\u0071u\u0069\u0072\u0065\u0073\u0020\u0079i\u0065\u006c\u0064\u0020\u006f\u0066\u0020\u0074\u0079\u0070\u0065\u0020\u006eu\u006d\u0062\u0065\u0072");};_bgae :=_adeag .ValueNumber ;if _bgae < 0{return MakeErrorResultType (ErrorTypeNum ,"\u0059\u0069\u0065\u006cd\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065 \u006eo\u006e\u0020\u006e\u0065\u0067\u0061\u0074i\u0076\u0065");};_adgdc :=args [5];if _adgdc .Type !=ResultTypeNumber {return MakeErrorResult ("\u004fD\u0044\u004cP\u0052\u0049\u0043\u0045 \u0072\u0065\u0071u\u0069\u0072\u0065\u0073\u0020\u0072\u0065\u0064\u0065mp\u0074\u0069\u006fn\u0020\u006ff\u0020\u0074\u0079\u0070\u0065\u0020n\u0075\u006db\u0065\u0072");};_bcgg :=_adgdc .ValueNumber ;if _bcgg < 0{return MakeErrorResultType (ErrorTypeNum ,"\u0059\u0069\u0065\u006cd\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065 \u006eo\u006e\u0020\u006e\u0065\u0067\u0061\u0074i\u0076\u0065");};_gdgg :=args [6];if _gdgg .Type !=ResultTypeNumber {return MakeErrorResult ("\u004f\u0044\u0044\u004c\u0050\u0052\u0049C\u0045\u0020\u0072e\u0071\u0075\u0069\u0072e\u0073\u0020\u0066\u0072\u0065\u0071\u0075\u0065\u006e\u0063\u0079\u0020\u006f\u0066\u0020\u0074\u0079\u0070\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072");};_gcga :=float64 (int (_gdgg .ValueNumber ));if !_baeg (_gcga ){return MakeErrorResultType (ErrorTypeNum ,"\u0049n\u0063\u006f\u0072\u0072e\u0063\u0074\u0020\u0066\u0072e\u0071u\u0065n\u0063\u0065\u0020\u0076\u0061\u006c\u0075e");};_ebef :=0;if len (args )==8&&args [7].Type !=ResultTypeEmpty {_fggf :=args [7];if _fggf .Type !=ResultTypeNumber {return MakeErrorResult ("\u004f\u0044\u0044\u004c\u0050\u0052\u0049\u0043\u0045\u0020\u0072\u0065\u0071u\u0069\u0072\u0065\u0073\u0020\u0062a\u0073\u0069\u0073\u0020\u006f\u0066\u0020\u0074\u0079\u0070\u0065\u0020\u006eu\u006d\u0062\u0065\u0072");};_ebef =int (_fggf .ValueNumber );if !_facb (_ebef ){return MakeErrorResultType (ErrorTypeNum ,"I\u006e\u0063\u006f\u0072\u0072\u0065c\u0074\u0020\u0062\u0061\u0073\u0069s\u0020\u0076\u0061\u006c\u0075\u0065\u0020f\u006f\u0072\u0020\u004f\u0044\u0044\u004c\u0050\u0052\u0049C\u0045");};};_fgdf ,_dbdb :=_gacb (_ecea ,_faed ,_ebef );if _dbdb .Type ==ResultTypeError {return _dbdb ;};_fgdf *=_gcga ;_fegf ,_dbdb :=_gacb (_dae ,_faed ,_ebef );if _dbdb .Type ==ResultTypeError {return _dbdb ;};_fegf *=_gcga ;_cfda ,_dbdb :=_gacb (_ecea ,_dae ,_ebef );if _dbdb .Type ==ResultTypeError {return _dbdb ;};_cfda *=_gcga ;_fffe :=_bcgg +_fgdf *100*_dcfg /_gcga ;_fffe /=_fegf *_bgae /_gcga +1;_fffe -=_cfda *100*_dcfg /_gcga ;return MakeNumberResult (_fffe );};var _ddeb =[...]int {0,1,1,2,4,1,1,1,1,2,2,1,1,1,1,3,1,3,1,3,1,3,1,2,1,1,1,3,4,1,1,1,2,2,3,3,3,3,3,3,3,3,3,3,3,3,1,2,3,1,3,1,1,0};

// Yielddisc implements the Excel YIELDDISC function.
func Yielddisc (args []Result )Result {_egaf :=len (args );if _egaf !=4&&_egaf !=5{return MakeErrorResult ("\u0059\u0049\u0045\u004c\u0044D\u0049\u0053\u0043\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020f\u006f\u0075\u0072\u0020\u006f\u0072\u0020\u0066\u0069\u0076\u0065\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0073");};_affed ,_facg ,_fggfa :=_dbda (args [0],args [1],"\u0059I\u0045\u004c\u0044\u0044\u0049\u0053C");if _fggfa .Type ==ResultTypeError {return _fggfa ;};if args [2].Type !=ResultTypeNumber {return MakeErrorResult ("\u0059\u0049\u0045\u004c\u0044\u0044\u0049S\u0043\u0020\u0072e\u0071\u0075\u0069\u0072e\u0073\u0020\u0070\u0072\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};_defde :=args [2].ValueNumber ;if _defde <=0{return MakeErrorResultType (ErrorTypeNum ,"\u0059\u0049E\u004c\u0044\u0044\u0049\u0053C\u0020\u0072\u0065\u0071\u0075i\u0072\u0065\u0073\u0020\u0070\u0072\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u0070\u006f\u0073\u0069\u0074\u0069\u0076\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};if args [3].Type !=ResultTypeNumber {return MakeErrorResult ("\u0059\u0049\u0045\u004c\u0044D\u0049\u0053\u0043\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020r\u0065\u0064\u0065\u006d\u0070\u0074\u0069\u006f\u006e\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006et");};_ccg :=args [3].ValueNumber ;if _ccg <=0{return MakeErrorResultType (ErrorTypeNum ,"YI\u0045\u004cD\u0044\u0049\u0053\u0043\u0020\u0072\u0065\u0071\u0075i\u0072\u0065\u0073\u0020\u0072\u0065\u0064\u0065\u006d\u0070\u0074\u0069\u006f\u006e\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u0070\u006f\u0073\u0069\u0074\u0069\u0076e\u0020n\u0075\u006d\u0062\u0065\u0072\u0020\u0061\u0072g\u0075m\u0065\u006et");};_cbdgd :=0;if _egaf ==5&&args [4].Type !=ResultTypeEmpty {if args [4].Type !=ResultTypeNumber {return MakeErrorResult ("\u0059\u0049E\u004c\u0044\u0044\u0049\u0053\u0043\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0062\u0061\u0073\u0069\u0073\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};_cbdgd =int (args [4].ValueNumber );if !_facb (_cbdgd ){return MakeErrorResultType (ErrorTypeNum ,"\u0049\u006e\u0063\u006f\u0072\u0072\u0065\u0063\u0074\u0020\u0062\u0061\u0073\u0069\u0073\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074 \u0066\u006f\u0072\u0020\u0059I\u0045\u004cD\u0044\u0049\u0053\u0043");};};_acbf ,_fggfa :=_gacb (_affed ,_facg ,_cbdgd );if _fggfa .Type ==ResultTypeError {return _fggfa ;};return MakeNumberResult ((_ccg /_defde -1)/_acbf );};

// Eval evaluates the binary expression using the context given.
func (_ge BinaryExpr )Eval (ctx Context ,ev Evaluator )Result {_dbe :=_ge ._db .Eval (ctx ,ev );if _dbe .Type ==ResultTypeError {return _dbe ;};_ae :=_ge ._cg .Eval (ctx ,ev );if _ae .Type ==ResultTypeError {return _ae ;};if _dbe .Type ==_ae .Type {if _dbe .Type ==ResultTypeArray {if !_ab (_dbe .ValueArray ,_ae .ValueArray ){return MakeErrorResult ("l\u0068\u0073\u002f\u0072\u0068\u0073 \u0073\u0068\u006f\u0075\u006c\u0064 \u0068\u0061\u0076\u0065\u0020\u0073\u0061m\u0065\u0020\u0064\u0069\u006d\u0065\u006e\u0073\u0069\u006fn\u0073");};return _gg (_ge ._df ,_dbe .ValueArray ,_ae .ValueArray );}else if _dbe .Type ==ResultTypeList {if len (_dbe .ValueList )!=len (_ae .ValueList ){return MakeErrorResult ("l\u0068\u0073\u002f\u0072\u0068\u0073 \u0073\u0068\u006f\u0075\u006c\u0064 \u0068\u0061\u0076\u0065\u0020\u0073\u0061m\u0065\u0020\u0064\u0069\u006d\u0065\u006e\u0073\u0069\u006fn\u0073");};return _fc (_ge ._df ,_dbe .ValueList ,_ae .ValueList );};}else if _dbe .Type ==ResultTypeArray &&(_ae .Type ==ResultTypeNumber ||_ae .Type ==ResultTypeString ){return _bbf (_ge ._df ,_dbe .ValueArray ,_ae );}else if _dbe .Type ==ResultTypeList &&(_ae .Type ==ResultTypeNumber ||_ae .Type ==ResultTypeString ){return _bea (_ge ._df ,_dbe .ValueList ,_ae );};switch _ge ._df {case BinOpTypePlus :if _dbe .Type ==_ae .Type {if _dbe .Type ==ResultTypeNumber {return MakeNumberResult (_dbe .ValueNumber +_ae .ValueNumber );};};case BinOpTypeMinus :if _dbe .Type ==_ae .Type {if _dbe .Type ==ResultTypeNumber {return MakeNumberResult (_dbe .ValueNumber -_ae .ValueNumber );};};case BinOpTypeMult :if _dbe .Type ==_ae .Type {if _dbe .Type ==ResultTypeNumber {return MakeNumberResult (_dbe .ValueNumber *_ae .ValueNumber );};};case BinOpTypeDiv :if _dbe .Type ==_ae .Type {if _dbe .Type ==ResultTypeNumber {if _ae .ValueNumber ==0{return MakeErrorResultType (ErrorTypeDivideByZero ,"\u0064\u0069\u0076\u0069\u0064\u0065\u0020\u0062\u0079 \u007a\u0065\u0072\u006f");};return MakeNumberResult (_dbe .ValueNumber /_ae .ValueNumber );};};case BinOpTypeExp :if _dbe .Type ==_ae .Type {if _dbe .Type ==ResultTypeNumber {return MakeNumberResult (_aca .Pow (_dbe .ValueNumber ,_ae .ValueNumber ));};};case BinOpTypeLT :if _dbe .Type ==_ae .Type {if _dbe .Type ==ResultTypeNumber {return MakeBoolResult (_dbe .ValueNumber < _ae .ValueNumber );};if _dbe .Type ==ResultTypeString {return MakeBoolResult (_dbe .ValueString < _ae .ValueString );};if _dbe .Type ==ResultTypeEmpty {return MakeBoolResult (false );};}else if _dbe .Type ==ResultTypeString &&_ae .Type ==ResultTypeNumber {return MakeBoolResult (false );}else if _dbe .Type ==ResultTypeNumber &&_ae .Type ==ResultTypeString {return MakeBoolResult (true );}else if _dbe .Type ==ResultTypeEmpty &&(_ae .Type ==ResultTypeNumber ||_ae .Type ==ResultTypeString ){return MakeBoolResult (true );}else if (_dbe .Type ==ResultTypeNumber ||_dbe .Type ==ResultTypeString )&&_ae .Type ==ResultTypeEmpty {return MakeBoolResult (false );};case BinOpTypeGT :if _dbe .Type ==_ae .Type {if _dbe .Type ==ResultTypeNumber {return MakeBoolResult (_dbe .ValueNumber > _ae .ValueNumber );};if _dbe .Type ==ResultTypeString {return MakeBoolResult (_dbe .ValueString > _ae .ValueString );};if _dbe .Type ==ResultTypeEmpty {return MakeBoolResult (false );};}else if _dbe .Type ==ResultTypeString &&_ae .Type ==ResultTypeNumber {return MakeBoolResult (true );}else if _dbe .Type ==ResultTypeNumber &&_ae .Type ==ResultTypeString {return MakeBoolResult (false );}else if _dbe .Type ==ResultTypeEmpty &&(_ae .Type ==ResultTypeNumber ||_ae .Type ==ResultTypeString ){return MakeBoolResult (false );}else if (_dbe .Type ==ResultTypeNumber ||_dbe .Type ==ResultTypeString )&&_ae .Type ==ResultTypeEmpty {return MakeBoolResult (true );};case BinOpTypeEQ :if _dbe .Type ==_ae .Type {if _dbe .Type ==ResultTypeNumber {return MakeBoolResult (_dbe .ValueNumber ==_ae .ValueNumber );};if _dbe .Type ==ResultTypeString {return MakeBoolResult (_dbe .ValueString ==_ae .ValueString );};if _dbe .Type ==ResultTypeEmpty {return MakeBoolResult (true );};}else if (_dbe .Type ==ResultTypeString &&_ae .Type ==ResultTypeNumber )||(_dbe .Type ==ResultTypeNumber &&_ae .Type ==ResultTypeString ){return MakeBoolResult (false );}else if _dbe .Type ==ResultTypeEmpty &&(_ae .Type ==ResultTypeNumber ||_ae .Type ==ResultTypeString ){return MakeBoolResult (_ebc (_ae ));}else if (_dbe .Type ==ResultTypeNumber ||_dbe .Type ==ResultTypeString )&&_ae .Type ==ResultTypeEmpty {return MakeBoolResult (_ebc (_dbe ));};case BinOpTypeNE :if _dbe .Type ==_ae .Type {if _dbe .Type ==ResultTypeNumber {return MakeBoolResult (_dbe .ValueNumber !=_ae .ValueNumber );};if _dbe .Type ==ResultTypeString {return MakeBoolResult (_dbe .ValueString !=_ae .ValueString );};if _dbe .Type ==ResultTypeEmpty {return MakeBoolResult (false );};}else if (_dbe .Type ==ResultTypeString &&_ae .Type ==ResultTypeNumber )||(_dbe .Type ==ResultTypeNumber &&_ae .Type ==ResultTypeString ){return MakeBoolResult (true );}else if _dbe .Type ==ResultTypeEmpty &&(_ae .Type ==ResultTypeNumber ||_ae .Type ==ResultTypeString ){return MakeBoolResult (!_ebc (_ae ));}else if (_dbe .Type ==ResultTypeNumber ||_dbe .Type ==ResultTypeString )&&_ae .Type ==ResultTypeEmpty {return MakeBoolResult (!_ebc (_dbe ));};case BinOpTypeLEQ :if _dbe .Type ==_ae .Type {if _dbe .Type ==ResultTypeNumber {return MakeBoolResult (_dbe .ValueNumber <=_ae .ValueNumber );};if _dbe .Type ==ResultTypeString {return MakeBoolResult (_dbe .ValueString <=_ae .ValueString );};if _dbe .Type ==ResultTypeEmpty {return MakeBoolResult (true );};}else if _dbe .Type ==ResultTypeString &&_ae .Type ==ResultTypeNumber {return MakeBoolResult (false );}else if _dbe .Type ==ResultTypeNumber &&_ae .Type ==ResultTypeString {return MakeBoolResult (true );}else if _dbe .Type ==ResultTypeEmpty &&(_ae .Type ==ResultTypeNumber ||_ae .Type ==ResultTypeString ){return MakeBoolResult (_ebc (_ae ));}else if (_dbe .Type ==ResultTypeNumber ||_dbe .Type ==ResultTypeString )&&_ae .Type ==ResultTypeEmpty {return MakeBoolResult (_ebc (_dbe ));};case BinOpTypeGEQ :if _dbe .Type ==_ae .Type {if _dbe .Type ==ResultTypeNumber {return MakeBoolResult (_dbe .ValueNumber >=_ae .ValueNumber );};if _dbe .Type ==ResultTypeString {return MakeBoolResult (_dbe .ValueString >=_ae .ValueString );};if _dbe .Type ==ResultTypeEmpty {return MakeBoolResult (true );};}else if _dbe .Type ==ResultTypeString &&_ae .Type ==ResultTypeNumber {return MakeBoolResult (true );}else if _dbe .Type ==ResultTypeNumber &&_ae .Type ==ResultTypeString {return MakeBoolResult (false );}else if _dbe .Type ==ResultTypeEmpty &&(_ae .Type ==ResultTypeNumber ||_ae .Type ==ResultTypeString ){return MakeBoolResult (_ebc (_ae ));}else if (_dbe .Type ==ResultTypeNumber ||_dbe .Type ==ResultTypeString )&&_ae .Type ==ResultTypeEmpty {return MakeBoolResult (_ebc (_dbe ));};case BinOpTypeConcat :return MakeStringResult (_dbe .Value ()+_ae .Value ());};return MakeErrorResult ("u\u006e\u0073\u0075\u0070po\u0072t\u0065\u0064\u0020\u0062\u0069n\u0061\u0072\u0079\u0020\u006f\u0070");};

// Pricedisc implements the Excel PRICEDISC function.
func Pricedisc (args []Result )Result {_becaa :=len (args );if _becaa !=4&&_becaa !=5{return MakeErrorResult ("\u0050\u0052\u0049\u0043\u0045D\u0049\u0053\u0043\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020f\u006f\u0075\u0072\u0020\u006f\u0072\u0020\u0066\u0069\u0076\u0065\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0073");};_efcff ,_bacg ,_fage :=_dbda (args [0],args [1],"\u0050R\u0049\u0043\u0045\u0044\u0049\u0053C");if _fage .Type ==ResultTypeError {return _fage ;};if args [2].Type !=ResultTypeNumber {return MakeErrorResult ("\u0050\u0052\u0049C\u0045\u0044\u0049\u0053\u0043\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0064\u0069\u0073\u0063\u006f\u0075\u006e\u0074\u0020\u006f\u0066\u0020\u0074\u0079p\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072");};_fada :=args [2].ValueNumber ;if _fada <=0{return MakeErrorResultType (ErrorTypeNum ,"\u0050\u0052\u0049C\u0045\u0044\u0049\u0053\u0043\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0064\u0069\u0073\u0063\u006f\u0075\u006e\u0074\u0020\u0074\u006f\u0020\u0062\u0065 \u0070\u006f\u0073\u0069\u0074\u0069\u0076\u0065");};if args [3].Type !=ResultTypeNumber {return MakeErrorResult ("\u0050R\u0049\u0043E\u0044\u0049\u0053\u0043 \u0072\u0065\u0071u\u0069\u0072\u0065\u0073\u0020\u0072\u0065\u0064\u0065mp\u0074\u0069\u006fn\u0020\u006ff\u0020\u0074\u0079\u0070\u0065\u0020n\u0075\u006db\u0065\u0072");};_eaec :=args [3].ValueNumber ;if _eaec <=0{return MakeErrorResultType (ErrorTypeNum ,"\u0050R\u0049\u0043E\u0044\u0049\u0053\u0043 \u0072\u0065\u0071u\u0069\u0072\u0065\u0073\u0020\u0072\u0065\u0064\u0065mp\u0074\u0069\u006fn\u0020\u0074o\u0020\u0062\u0065\u0020\u0070\u006fs\u0069\u0074i\u0076\u0065");};_bfca :=0;if _becaa ==5&&args [4].Type !=ResultTypeEmpty {if args [4].Type !=ResultTypeNumber {return MakeErrorResult ("\u0050\u0052I\u0043\u0045\u0044\u0049\u0053\u0043\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0062\u0061\u0073\u0069\u0073\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};_bfca =int (args [4].ValueNumber );if !_facb (_bfca ){return MakeErrorResultType (ErrorTypeNum ,"\u0049\u006e\u0063\u006f\u0072\u0072\u0065\u0063\u0074\u0020\u0062\u0061\u0073\u0069\u0073\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074 \u0066\u006f\u0072\u0020\u0050R\u0049\u0043E\u0044\u0049\u0053\u0043");};};_bgfb ,_fage :=_gacb (_efcff ,_bacg ,_bfca );if _fage .Type ==ResultTypeError {return _fage ;};return MakeNumberResult (_eaec *(1-_fada *_bgfb ));};

// Pmt implements the Excel PMT function.
func Pmt (args []Result )Result {_cfcb :=len (args );if _cfcb < 3||_cfcb > 5{return MakeErrorResult ("\u0050\u004dT\u0020\u0072\u0065\u0071\u0075i\u0072\u0065\u0073\u0020\u006eu\u006d\u0062\u0065\u0072\u0020\u006f\u0066\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0073\u0020\u0069\u006e\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u006f\u0066\u0020\u0033\u0020\u0061\u006e\u0064\u0020\u0035");};if args [0].Type !=ResultTypeNumber {return MakeErrorResult ("\u0050\u004d\u0054\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020r\u0061\u0074\u0065\u0020\u0074\u006f \u0062\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0061\u0072\u0067u\u006d\u0065\u006e\u0074");};_eeae :=args [0].ValueNumber ;if args [1].Type !=ResultTypeNumber {return MakeErrorResult ("\u0050\u004dT\u0020\u0072\u0065\u0071\u0075i\u0072\u0065\u0073\u0020\u006eu\u006d\u0062\u0065\u0072\u0020\u006f\u0066\u0020\u0070\u0065\u0072\u0069\u006f\u0064\u0073\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};_gebbe :=args [1].ValueNumber ;if _gebbe ==0{return MakeErrorResultType (ErrorTypeNum ,"\u0050\u004d\u0054\u0020\u0072e\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u006e\u0075\u006d\u0062\u0065\u0072 \u006f\u0066\u0020\u0070\u0065\u0072\u0069\u006f\u0064\u0073\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u006e\u006f\u0074\u0020\u0065\u0071\u0075\u0061\u006c\u0020\u0074\u006f\u00200");};if args [2].Type !=ResultTypeNumber {return MakeErrorResult ("\u0050\u004d\u0054\u0020\u0072\u0065\u0071\u0075i\u0072\u0065\u0073 p\u0072\u0065\u0073\u0065\u006e\u0074 \u0076\u0061\u006c\u0075\u0065\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006db\u0065\u0072\u0020\u0061\u0072\u0067\u0075\u006de\u006e\u0074");};_gbga :=args [2].ValueNumber ;_gfcg :=0.0;if _cfcb >=4&&args [3].Type !=ResultTypeEmpty {if args [3].Type !=ResultTypeNumber {return MakeErrorResult ("P\u004d\u0054\u0020\u0072\u0065\u0071\u0075\u0069\u0072e\u0073\u0020\u0066\u0075\u0074\u0075\u0072e \u0076\u0061\u006c\u0075e\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u006e\u0075mb\u0065\u0072 \u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};_gfcg =args [3].ValueNumber ;};_bdabe :=0.0;if _cfcb ==5&&args [4].Type !=ResultTypeEmpty {if args [4].Type !=ResultTypeNumber {return MakeErrorResult ("\u0050\u004d\u0054\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020t\u0079\u0070\u0065\u0020\u0074\u006f \u0062\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0061\u0072\u0067u\u006d\u0065\u006e\u0074");};_bdabe =args [4].ValueNumber ;if _bdabe !=0{_bdabe =1;};};var _ccbga float64 ;if _eeae ==0{_ccbga =(_gbga +_gfcg )/_gebbe ;}else {_dbfe :=_aca .Pow (1+_eeae ,_gebbe );if _bdabe ==1{_ccbga =(_gfcg *_eeae /(_dbfe -1)+_gbga *_eeae /(1-1/_dbfe ))/(1+_eeae );}else {_ccbga =_gfcg *_eeae /(_dbfe -1)+_gbga *_eeae /(1-1/_dbfe );};};return MakeNumberResult (-_ccbga );};

// Amorlinc implements the Excel AMORLINC function.
func Amorlinc (args []Result )Result {_eaca ,_afbb :=_cdfe (args ,"\u0041\u004d\u004f\u0052\u004c\u0049\u004e\u0043");if _afbb .Type ==ResultTypeError {return _afbb ;};_gaaf :=_eaca ._dba ;_addg :=_eaca ._dbfge ;_ebdg :=_eaca ._faea ;_aba :=_eaca ._aeca ;_acfg :=_eaca ._bbfbe ;_fbgbg :=_eaca ._dbbc ;_cecg :=_eaca ._gebb ;_bdf ,_dde :=_gacb (_addg ,_ebdg ,_cecg );if _dde .Type ==ResultTypeError {return MakeErrorResult ("\u0069\u006e\u0063\u006fr\u0072\u0065\u0063\u0074\u0020\u0064\u0061\u0074\u0065\u0073 \u0066o\u0072\u0020\u0041\u004d\u004f\u0052\u004cI\u004e\u0043");};_cagf :=_bdf *_fbgbg *_gaaf ;if _acfg ==0{return MakeNumberResult (_cagf );};_dfd :=_gaaf *_fbgbg ;_gfcf :=_gaaf -_aba ;_faegg :=int ((_gfcf -_cagf )/_dfd );if _acfg <=_faegg {return MakeNumberResult (_dfd );}else if _acfg ==_faegg +1{return MakeNumberResult (_gfcf -_dfd *float64 (_faegg )-_cagf );}else {return MakeNumberResult (0);};};func _baeg (_cef float64 )bool {return _cef ==1||_cef ==2||_cef ==4};

// Eval evaluates and returns an expression with prefix.
func (_cfbde PrefixExpr )Eval (ctx Context ,ev Evaluator )Result {_egbbb :=_cfbde ._dbfebd .Reference (ctx ,ev );switch _egbbb .Type {case ReferenceTypeSheet :if _bedge (_egbbb ,ctx ){return MakeErrorResultType (ErrorTypeName ,_a .Sprintf ("\u0053h\u0065e\u0074\u0020\u0025\u0073\u0020n\u006f\u0074 \u0066\u006f\u0075\u006e\u0064",_egbbb .Value ));};_ddadg :=ctx .Sheet (_egbbb .Value );return _cfbde ._afed .Eval (_ddadg ,ev );default:return MakeErrorResult (_a .Sprintf ("\u006e\u006f\u0020\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0020\u0066\u006f\u0072\u0020r\u0065f\u0065\u0072\u0065\u006e\u0063\u0065\u0020\u0074\u0079\u0070\u0065\u0020\u0025\u0073",_egbbb .Type ));};};func _bbdb (_acdga int )string {if _acdga >=1&&_acdga -1< len (_egdbd ){if _egdbd [_acdga -1]!=""{return _egdbd [_acdga -1];};};return _a .Sprintf ("\u0074\u006f\u006b\u002d\u0025\u0076",_acdga );};

// Nper implements the Excel NPER function.
func Nper (args []Result )Result {_dafa :=len (args );if _dafa < 3||_dafa > 5{return MakeErrorResult ("\u004e\u0050\u0045\u0052\u0020\u0072\u0065\u0071\u0075\u0069\u0072e\u0073\u0020\u006e\u0075\u006d\u0062\u0065\u0072 \u006ff\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0073\u0020\u0069\u006e\u0020\u0072\u0061\u006e\u0067e\u0020\u006f\u0066\u0020\u0033\u0020\u0061\u006e\u0064\u0020\u0035");};if args [0].Type !=ResultTypeNumber {return MakeErrorResult ("N\u0050\u0045\u0052\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0072\u0061\u0074\u0065\u0020t\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006d\u0062\u0065r \u0061\u0072\u0067u\u006de\u006e\u0074");};_fgca :=args [0].ValueNumber ;if args [1].Type !=ResultTypeNumber {return MakeErrorResult ("\u004e\u0050\u0045\u0052\u0020\u0072\u0065q\u0075\u0069\u0072e\u0073\u0020\u0070\u0061y\u006d\u0065\u006e\u0074\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};_cgfb :=args [1].ValueNumber ;if args [2].Type !=ResultTypeNumber {return MakeErrorResult ("\u004e\u0050\u0045\u0052\u0020\u0072e\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0020\u0076\u0061\u006c\u0075\u0065 \u0074\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0061r\u0067u\u006d\u0065\u006e\u0074");};_fcdd :=args [2].ValueNumber ;_gbec :=0.0;if _dafa >=4&&args [3].Type !=ResultTypeEmpty {if args [3].Type !=ResultTypeNumber {return MakeErrorResult ("\u004e\u0050\u0045\u0052\u0020\u0072\u0065\u0071u\u0069\u0072\u0065s \u0066\u0075\u0074\u0075\u0072\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006db\u0065\u0072\u0020\u0061\u0072\u0067\u0075\u006de\u006e\u0074");};_gbec =args [3].ValueNumber ;};_egfd :=0.0;if _dafa ==5&&args [4].Type !=ResultTypeEmpty {if args [4].Type !=ResultTypeNumber {return MakeErrorResult ("N\u0050\u0045\u0052\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0074\u0079\u0070\u0065\u0020t\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006d\u0062\u0065r \u0061\u0072\u0067u\u006de\u006e\u0074");};_egfd =args [4].ValueNumber ;if _egfd !=0{_egfd =1;};};_beaa :=_cgfb *(1+_fgca *_egfd )-_gbec *_fgca ;_caaag :=(_fcdd *_fgca +_cgfb *(1+_fgca *_egfd ));return MakeNumberResult (_aca .Log (_beaa /_caaag )/_aca .Log (1+_fgca ));};

// String returns a string representation for Bool.
func (_ec Bool )String ()string {if _ec ._efe {return "\u0054\u0052\u0055\u0045";}else {return "\u0046\u0041\u004cS\u0045";};};

// MakeArrayResult constructs an array result (matrix).
func MakeArrayResult (arr [][]Result )Result {return Result {Type :ResultTypeArray ,ValueArray :arr }};const _ababf =57365;func (_ffade VerticalRange )verticalRangeReference ()string {return _a .Sprintf ("\u0025\u0073\u003a%\u0073",_ffade ._bbcff ,_ffade ._gebgf );};func _bcc (_bcdf []Result ,_daa string )(*cumulArgs ,Result ){if len (_bcdf )!=6{return nil ,MakeErrorResult (_daa +"\u0020\u0072\u0065qu\u0069\u0072\u0065\u0073\u0020\u0073\u0069\u0078\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0073");};if _bcdf [0].Type !=ResultTypeNumber {return nil ,MakeErrorResult (_daa +"\u0020\u0072eq\u0075\u0069\u0072e\u0073\u0020\u0072\u0061te \u0074o \u0062\u0065\u0020\u006e\u0075\u006d\u0062er\u0020\u0061\u0072\u0067\u0075\u006d\u0065n\u0074");};_edbc :=_bcdf [0].ValueNumber ;if _edbc <=0{return nil ,MakeErrorResultType (ErrorTypeNum ,_daa +"\u0020r\u0065\u0071u\u0069\u0072\u0065s\u0020\u0072\u0061\u0074\u0065\u0020\u0074o\u0020\u0062\u0065\u0020\u0070\u006fs\u0069\u0074\u0069\u0076\u0065\u0020\u006e\u0075\u006d\u0062\u0065r\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};if _bcdf [1].Type !=ResultTypeNumber {return nil ,MakeErrorResult (_daa +"\u0020\u0072\u0065\u0071\u0075\u0069r\u0065\u0073\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u006f\u0066\u0020\u0070\u0065\u0072\u0069\u006f\u0064\u0073 \u0074\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0061r\u0067u\u006d\u0065\u006e\u0074");};_bdbge :=_bcdf [1].ValueNumber ;if _bdbge <=0{return nil ,MakeErrorResultType (ErrorTypeNum ,_daa +"\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u006f\u0066\u0020p\u0065\u0072\u0069\u006f\u0064\u0073\u0020\u0074\u006f \u0062\u0065\u0020\u0070\u006f\u0073\u0069\u0074\u0069\u0076\u0065\u0020\u006eu\u006d\u0062\u0065\u0072\u0020\u0061r\u0067\u0075\u006de\u006e\u0074");};if _bcdf [2].Type !=ResultTypeNumber {return nil ,MakeErrorResult (_daa +"\u0020r\u0065\u0071u\u0069\u0072\u0065s\u0020\u0070\u0072\u0065\u0073\u0065\u006et\u0020\u0076\u0061\u006c\u0075\u0065 \u0074\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006d\u0062\u0065r\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};_bdg :=_bcdf [2].ValueNumber ;if _bdg <=0{return nil ,MakeErrorResultType (ErrorTypeNum ,_daa +"\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0070\u0072\u0065\u0073\u0065n\u0074\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u0074\u006f\u0020\u0062\u0065 \u0070\u006f\u0073\u0069\u0074\u0069\u0076\u0065\u0020\u006e\u0075\u006dbe\u0072\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};if _bcdf [3].Type !=ResultTypeNumber {return nil ,MakeErrorResult (_daa +"\u0020r\u0065\u0071u\u0069\u0072\u0065\u0073 \u0073\u0074\u0061r\u0074\u0020\u0070\u0065\u0072\u0069\u006f\u0064\u0020to\u0020\u0062\u0065 \u006e\u0075m\u0062\u0065\u0072\u0020\u0061\u0072g\u0075\u006de\u006e\u0074");};_ega :=_bcdf [3].ValueNumber ;if _ega <=0{return nil ,MakeErrorResultType (ErrorTypeNum ,_daa +"\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0073t\u0061\u0072\u0074\u0020\u0070\u0065\u0072\u0069o\u0064 \u0074\u006f\u0020\u0062\u0065\u0020\u0070\u006f\u0073\u0069\u0074\u0069\u0076\u0065\u0020\u006e\u0075\u006db\u0065\u0072\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};if _bcdf [4].Type !=ResultTypeNumber {return nil ,MakeErrorResult (_daa +"\u0020\u0072\u0065q\u0075\u0069\u0072\u0065\u0073\u0020\u0065\u006e\u0064\u0020\u0070\u0065\u0072\u0069\u006f\u0064\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072 \u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};_ccdb :=_bcdf [4].ValueNumber ;if _ccdb <=0{return nil ,MakeErrorResultType (ErrorTypeNum ,_daa +"\u0020\u0072\u0065\u0071\u0075i\u0072\u0065\u0073\u0020\u0065\u006e\u0064\u0020\u0070\u0065\u0072\u0069\u006fd\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u0070\u006f\u0073\u0069\u0074\u0069\u0076\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006et");};if _ccdb < _ega {return nil ,MakeErrorResultType (ErrorTypeNum ,_daa +"\u0020\u0072\u0065\u0071u\u0069\u0072\u0065\u0073\u0020\u0065\u006e\u0064\u0020p\u0065\u0072\u0069\u006f\u0064\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u006c\u0061\u0074\u0065\u0072\u0020o\u0072\u0020\u0065\u0071\u0075a\u006c\u0020\u0074\u006f\u0020\u0073\u0074\u0061\u0072\u0074\u0020\u0070\u0065\u0072\u0069\u006f\u0064");};if _ccdb > _bdbge {return nil ,MakeErrorResultType (ErrorTypeNum ,_daa +" \u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0070\u0065\u0072\u0069\u006f\u0064\u0073\u0020\u0074o\u0020\u0062\u0065\u0020\u0069\u006e\u0020\u0070\u0065\u0072io\u0064\u0073\u0020r\u0061n\u0067\u0065");};_ada :=int (_bcdf [5].ValueNumber );if _ada !=0&&_ada !=1{return nil ,MakeErrorResultType (ErrorTypeNum ,_daa +" \u0072\u0065\u0071\u0075\u0069\u0072e\u0073\u0020\u0074\u0079\u0070\u0065\u0020\u0074\u006f \u0062\u0065\u00200\u0020o\u0072\u0020\u0031");};return &cumulArgs {_edbc ,_bdbge ,_bdg ,_ega ,_ccdb ,_ada },_ebega ;};func _cgec (_acbd int )bool {if _acbd ==_acbd /400*400{return true ;};if _acbd ==_acbd /100*100{return false ;};return _acbd ==_acbd /4*4;};

// Nominal implements the Excel NOMINAL function.
func Nominal (args []Result )Result {if len (args )!=2{return MakeErrorResult ("\u004e\u004f\u004d\u0049\u004e\u0041\u004c\u0020\u0072\u0065q\u0075\u0069\u0072\u0065\u0073\u0020\u0074w\u006f\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0073");};if args [0].Type !=ResultTypeNumber {return MakeErrorResult ("NO\u004d\u0049N\u0041\u004c\u0020\u0072\u0065\u0071\u0075\u0069\u0072e\u0073\u0020\u006e\u006f\u006d\u0069\u006e\u0061\u006c\u0020\u0069\u006e\u0074\u0065\u0072\u0065\u0073\u0074\u0020\u0072\u0061\u0074\u0065\u0020\u0074\u006f\u0020\u0062e\u0020n\u0075\u006d\u0062\u0065\u0072\u0020\u0061\u0072g\u0075m\u0065\u006et");};_edea :=args [0].ValueNumber ;if _edea <=0{return MakeErrorResultType (ErrorTypeNum ,"\u004e\u004fM\u0049\u004e\u0041\u004c\u0020r\u0065\u0071\u0075\u0069\u0072e\u0073\u0020\u0065\u0066\u0066\u0065\u0063\u0074\u0020\u0069\u006e\u0074\u0065\u0072\u0065\u0073\u0074\u0020\u0072\u0061\u0074\u0065\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u0070\u006f\u0073\u0069\u0074\u0069\u0076\u0065");};if args [1].Type !=ResultTypeNumber {return MakeErrorResult ("\u004e\u004f\u004d\u0049\u004e\u0041\u004c\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u006e\u0075\u006db\u0065\u0072\u0020\u006f\u0066\u0020\u0063\u006f\u006d\u0070\u006f\u0075\u006e\u0064\u0069\u006e\u0067\u0020\u0070\u0065\u0072i\u006f\u0064\u0073\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006d\u0062e\u0072\u0020\u0061r\u0067\u0075\u006d\u0065\u006e\u0074");};_ceefa :=float64 (int (args [1].ValueNumber ));if _ceefa < 1{return MakeErrorResultType (ErrorTypeNum ,"\u004e\u004f\u004d\u0049\u004e\u0041\u004c\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u006eum\u0062e\u0072\u0020\u006f\u0066\u0020\u0063\u006f\u006d\u0070\u006f\u0075\u006ed\u0069\u006e\u0067\u0020\u0070\u0065\u0072\u0069\u006f\u0064\u0073\u0020\u0074\u006f\u0020\u0062\u0065 \u0031\u0020\u006f\u0072\u0020\u006d\u006f\u0072\u0065");};return MakeNumberResult ((_aca .Pow (_edea +1,1/_ceefa )-1)*_ceefa );};

//go:generate ragel -G2 -Z lexer.rl
//go:generate goimports -w lexer.go
type Lexer struct{_ggdfc chan *node ;_fffg _cb .Mutex ;_gefef []chan *node ;_bacc []*node ;};const _ebd ="(\u0028\u005b\u0030\u002d\u0039\u005d\u0029\u002b\u0029\u002d"+_fgb +"-\u0028\u0028\u005b\u0030\u002d\u0039\u005d\u0029\u002b\u0029";

// Eval evaluates and returns the result of an error expression.
func (_bec Error )Eval (ctx Context ,ev Evaluator )Result {return MakeErrorResult (_bec ._dbga )};

// ISNONTEXT is an implementation of the Excel ISNONTEXT() function.
func IsNonText (args []Result )Result {if len (args )!=1{return MakeErrorResult ("\u0049\u0053N\u004f\u004e\u0054\u0045X\u0054\u0028)\u0020\u0061\u0063\u0063\u0065\u0070\u0074\u0073 \u0061\u0020\u0073\u0069\u006e\u0067\u006c\u0065\u0020\u0061\u0072\u0067u\u006d\u0065\u006e\u0074");};return MakeBoolResult (args [0].Type !=ResultTypeString );};func _gbbc (_daff ,_aecf ,_acce int )int {if _daff > _aecf {return 0;};if _agfb (_acce ){return (_aecf -_daff +1)*360;};_fdab :=0;for _eegc :=_daff ;_eegc <=_aecf ;_eegc ++{_afbg :=365;if _cgec (_eegc ){_afbg =366;};_fdab +=_afbg ;};return _fdab ;};const _fageg =57359;

// Pv implements the Excel PV function.
func Pv (args []Result )Result {_ggag :=len (args );if _ggag < 3||_ggag > 5{return MakeErrorResult ("\u0050\u0056\u0020\u0072\u0065q\u0075\u0069\u0072\u0065\u0073\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020o\u0066\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0073\u0020\u0069\u006e\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u006f\u0066\u0020\u0033\u0020\u0061\u006e\u0064\u00205");};if args [0].Type !=ResultTypeNumber {return MakeErrorResult ("\u0050\u0056\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0072\u0061\u0074\u0065\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u006eu\u006d\u0062\u0065\u0072\u0020a\u0072\u0067u\u006d\u0065\u006e\u0074");};_geac :=args [0].ValueNumber ;if args [1].Type !=ResultTypeNumber {return MakeErrorResult ("\u0050\u0056\u0020\u0072\u0065q\u0075\u0069\u0072\u0065\u0073\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020o\u0066\u0020\u0070\u0065\u0072\u0069\u006f\u0064\u0073\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006et");};_gbgac :=args [1].ValueNumber ;if _gbgac !=float64 (int (_gbgac )){return MakeErrorResultType (ErrorTypeNum ,"\u0050\u0056\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u006ff\u0020\u0070\u0065\u0072\u0069\u006f\u0064\u0073\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020a\u0072\u0067\u0075\u006d\u0065n\u0074");};if args [2].Type !=ResultTypeNumber {return MakeErrorResult ("\u0050\u0056\u0020\u0072\u0065q\u0075\u0069\u0072\u0065\u0073\u0020\u0070\u0061\u0079\u006d\u0065\u006e\u0074 \u0074\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};_ecec :=args [2].ValueNumber ;_bgceg :=0.0;if _ggag >=4&&args [3].Type !=ResultTypeEmpty {if args [3].Type !=ResultTypeNumber {return MakeErrorResult ("\u0050\u0056 \u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0066\u0075\u0074\u0075\u0072\u0065\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};_bgceg =args [3].ValueNumber ;};_gbabc :=0.0;if _ggag ==5&&args [4].Type !=ResultTypeEmpty {if args [4].Type !=ResultTypeNumber {return MakeErrorResult ("\u0050\u0056\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0074\u0079\u0070\u0065\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u006eu\u006d\u0062\u0065\u0072\u0020a\u0072\u0067u\u006d\u0065\u006e\u0074");};_gbabc =args [4].ValueNumber ;if _gbabc !=0{_gbabc =1;};};if _geac ==0{return MakeNumberResult (-_ecec *_gbgac -_bgceg );}else {return MakeNumberResult ((((1-_aca .Pow (1+_geac ,_gbgac ))/_geac )*_ecec *(1+_geac *_gbabc )-_bgceg )/_aca .Pow (1+_geac ,_gbgac ));};};const _aegg int =30;

// Ipmt implements the Excel IPMT function.
func Ipmt (args []Result )Result {_eefd :=len (args );if _eefd < 4||_eefd > 6{return MakeErrorResult ("\u0049P\u004d\u0054\u0020\u0072\u0065\u0071\u0075ir\u0065\u0073\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u006f\u0066\u0020\u0061r\u0067\u0075m\u0065\u006e\u0074s\u0020\u0069\u006e\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u0062\u0065\u0074\u0077\u0065\u0065n\u0020\u0066ou\u0072\u0020\u0061n\u0064\u0020\u0073\u0069\u0078");};if args [0].Type !=ResultTypeNumber {return MakeErrorResult ("I\u0050\u004d\u0054\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0072\u0061\u0074\u0065\u0020t\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006d\u0062\u0065r \u0061\u0072\u0067u\u006de\u006e\u0074");};_gcaf :=args [0].ValueNumber ;if args [1].Type !=ResultTypeNumber {return MakeErrorResult ("\u0049\u0050\u004dT\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0070\u0065\u0072\u0069\u006f\u0064\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072 \u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};_fcff :=args [1].ValueNumber ;if _fcff <=0{return MakeErrorResultType (ErrorTypeNum ,"\u0049\u0050\u004d\u0054\u0020r\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0070\u0065\u0072\u0069\u006fd\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u0070\u006f\u0073\u0069\u0074\u0069\u0076\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006et");};if args [2].Type !=ResultTypeNumber {return MakeErrorResult ("\u0049\u0050\u004d\u0054\u0020\u0072\u0065\u0071\u0075\u0069\u0072e\u0073\u0020\u006e\u0075\u006d\u0062\u0065\u0072 \u006ff\u0020\u0070\u0065\u0072\u0069\u006f\u0064\u0073\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006db\u0065\u0072\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};_deeg :=args [2].ValueNumber ;if _deeg <=0{return MakeErrorResultType (ErrorTypeNum ,"\u0049\u0050\u004d\u0054\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u006e\u0075\u006d\u0062er\u0020o\u0066\u0020\u0070\u0065\u0072\u0069\u006f\u0064\u0073\u0020\u0074\u006f \u0062\u0065\u0020\u0070\u006f\u0073\u0069\u0074\u0069\u0076\u0065\u0020\u006e\u0075\u006d\u0062\u0065r\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};if args [3].Type !=ResultTypeNumber {return MakeErrorResult ("\u0049\u0050\u004d\u0054\u0020\u0072e\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0020\u0076\u0061\u006c\u0075\u0065 \u0074\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0061r\u0067u\u006d\u0065\u006e\u0074");};_bdfd :=args [3].ValueNumber ;_eecd :=0.0;if _eefd > 4&&args [4].Type !=ResultTypeEmpty {if args [4].Type !=ResultTypeNumber {return MakeErrorResult ("\u0049\u0050\u004d\u0054\u0020\u0072\u0065\u0071u\u0069\u0072\u0065s \u0066\u0075\u0074\u0075\u0072\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006db\u0065\u0072\u0020\u0061\u0072\u0067\u0075\u006de\u006e\u0074");};_eecd =args [4].ValueNumber ;};_gfgfa :=0;if _eefd ==6&&args [5].Type !=ResultTypeEmpty {if args [5].Type !=ResultTypeNumber {return MakeErrorResult ("I\u0050\u004d\u0054\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0074\u0079\u0070\u0065\u0020t\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006d\u0062\u0065r \u0061\u0072\u0067u\u006de\u006e\u0074");};_gfgfa =int (args [5].ValueNumber );if _gfgfa !=0{_gfgfa =1;};};return MakeNumberResult (_dgc (_gcaf ,_fcff ,_deeg ,_bdfd ,_eecd ,_gfgfa ));};func _eedb (_gede _ad .Time )bool {return _ad .Now ().Sub (_gede )>=_affea };var _gaa =map[string ]int {"\u006aa\u006e\u0075\u0061\u0072\u0079":1,"\u0066\u0065\u0062\u0072\u0075\u0061\u0072\u0079":2,"\u006d\u0061\u0072c\u0068":3,"\u0061\u0070\u0072i\u006c":4,"\u006d\u0061\u0079":5,"\u006a\u0075\u006e\u0065":6,"\u006a\u0075\u006c\u0079":7,"\u0061\u0075\u0067\u0075\u0073\u0074":8,"\u0073e\u0070\u0074\u0065\u006d\u0070\u0065r":9,"\u006fc\u0074\u006f\u0062\u0065\u0072":10,"\u006e\u006f\u0076\u0065\u006d\u0062\u0065\u0072":11,"\u0064\u0065\u0063\u0065\u006d\u0062\u0065\u0072":12,"\u006a\u0061\u006e":1,"\u0066\u0065\u0062":2,"\u006d\u0061\u0072":3,"\u0061\u0070\u0072":4,"\u006a\u0075\u006e":6,"\u006a\u0075\u006c":7,"\u0061\u0075\u0067":8,"\u0073\u0065\u0070":9,"\u006f\u0063\u0074":10,"\u006e\u006f\u0076":11,"\u0064\u0065\u0063":12};

// Pi is an implementation of the Excel Pi() function that just returns the Pi
// constant.
func Pi (args []Result )Result {if len (args )!=0{return MakeErrorResult ("\u0050I\u0028\u0029\u0020\u0061c\u0063\u0065\u0070\u0074\u0073 \u006eo\u0020a\u0072\u0067\u0075\u006d\u0065\u006e\u0074s");};return MakeNumberResult (_aca .Pi );};

// Parse parses an io.Reader to get an Expression. If expression is parsed with an error, nil is returned
func Parse (r _g .Reader )Expression {_bbccg :=&plex {_ecceb :LexReader (r )};_gcdbg (_bbccg );if _bbccg ._aea !=""{return nil ;};return _bbccg ._cbcbd ;};type plex struct{_ecceb chan *node ;_cbcbd Expression ;_aea string ;};

// NewPrefixVerticalRange constructs a new full columns range with prefix.
func NewPrefixVerticalRange (pfx Expression ,v string )Expression {_gcgd :=_bf .Split (v ,"\u003a");if len (_gcgd )!=2{return nil ;};if _gcgd [0]> _gcgd [1]{_gcgd [0],_gcgd [1]=_gcgd [1],_gcgd [0];};return PrefixVerticalRange {_geaee :pfx ,_adebd :_gcgd [0],_bgdac :_gcgd [1]};};func (_febc Result )AsString ()Result {switch _febc .Type {case ResultTypeNumber :return MakeStringResult (_febc .Value ());default:return _febc ;};};

// NewPrefixExpr constructs an expression with prefix.
func NewPrefixExpr (pfx ,exp Expression )Expression {return &PrefixExpr {_dbfebd :pfx ,_afed :exp }};

// Eomonth is an implementation of the Excel EOMONTH() function.
func Eomonth (args []Result )Result {if len (args )!=2{return MakeErrorResult ("\u0045\u004f\u004d\u004f\u004e\u0054\u0048\u0020\u0072\u0065q\u0075\u0069\u0072\u0065\u0073\u0020\u0074w\u006f\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0073");};if args [1].Type !=ResultTypeNumber {return MakeErrorResult ("\u0049\u006e\u0063\u006f\u0072\u0072\u0065\u0063\u0074\u0020a\u0072\u0067\u0075\u006d\u0065\u006e\u0074 \u0066\u006f\u0072\u0020\u0045\u004f\u004d\u004f\u004e\u0054\u0048");};_beca :=args [1].ValueNumber ;_cbd :=args [0];var _bbee float64 ;switch _cbd .Type {case ResultTypeEmpty :_bbee =0;case ResultTypeNumber :_bbee =_cbd .ValueNumber ;case ResultTypeString :_fed :=DateValue ([]Result {args [0]});if _fed .Type ==ResultTypeError {return MakeErrorResult ("\u0049\u006e\u0063\u006f\u0072\u0072\u0065\u0063\u0074\u0020a\u0072\u0067\u0075\u006d\u0065\u006e\u0074 \u0066\u006f\u0072\u0020\u0045\u004f\u004d\u004f\u004e\u0054\u0048");};_bbee =_fed .ValueNumber ;default:return MakeErrorResult ("\u0049\u006e\u0063\u006f\u0072\u0072\u0065\u0063\u0074\u0020a\u0072\u0067\u0075\u006d\u0065\u006e\u0074 \u0066\u006f\u0072\u0020\u0045\u004f\u004d\u004f\u004e\u0054\u0048");};_dga :=_cgf (_bbee );_abdg :=_dga .AddDate (0,int (_beca +1),0);_dab ,_baf ,_ :=_abdg .Date ();_dbfg :=_dbeg (_dab ,int (_baf ),0);if _dbfg < 1{return MakeErrorResultType (ErrorTypeNum ,"\u0049\u006e\u0063\u006f\u0072\u0072\u0065\u0063\u0074\u0020a\u0072\u0067\u0075\u006d\u0065\u006e\u0074 \u0066\u006f\u0072\u0020\u0045\u004f\u004d\u004f\u004e\u0054\u0048");};if _dab ==1900&&_baf ==3{_dbfg --;};return MakeNumberResult (_dbfg );};func (_fddca *Lexer )lex (_efgb _g .Reader ){_bbfa ,_fddb ,_ggcgc :=0,0,0;_fdgbb :=-1;_ebaad ,_effc ,_ebdcc :=0,0,0;_ =_ebdcc ;_acfcg :=1;_ =_acfcg ;_cbde :=make ([]byte ,4096);_geea :=false ;for !_geea {_dcdd :=0;if _ebaad > 0{_dcdd =_fddb -_ebaad ;};_fddb =0;_ggge ,_aaag :=_efgb .Read (_cbde [_dcdd :]);if _ggge ==0||_aaag !=nil {_geea =true ;};_ggcgc =_ggge +_dcdd ;if _ggcgc < len (_cbde ){_fdgbb =_ggcgc ;};{_bbfa =_aegg ;_ebaad =0;_effc =0;_ebdcc =0;};{var _fedfb int ;var _cdbb uint ;if _fddb ==_ggcgc {goto _aage ;};if _bbfa ==0{goto _fdfbb ;};_bdbc :_fedfb =int (_edbfa [_bbfa ]);_cdbb =uint (_accbf [_fedfb ]);_fedfb ++;for ;_cdbb > 0;_cdbb --{_fedfb ++;switch _accbf [_fedfb -1]{case 2:_ebaad =_fddb ;};};switch _bbfa {case 30:switch _cbde [_fddb ]{case 34:goto _bbbd ;case 35:goto _cgegg ;case 36:goto _edeee ;case 38:goto _fecd ;case 39:goto _efegc ;case 40:goto _dbdfc ;case 41:goto _gbffc ;case 42:goto _bcgc ;case 43:goto _bbcc ;case 44:goto _ddee ;case 45:goto _dcef ;case 47:goto _efagg ;case 58:goto _ecdgd ;case 59:goto _dedca ;case 60:goto _ccdc ;case 61:goto _gadd ;case 62:goto _efacf ;case 63:goto _ddgdd ;case 70:goto _caaca ;case 84:goto _fagcg ;case 92:goto _edeff ;case 94:goto _egfdf ;case 95:goto _caca ;case 123:goto _dbdd ;case 125:goto _ecfgc ;};switch {case _cbde [_fddb ]< 65:switch {case _cbde [_fddb ]> 37:if 48<=_cbde [_fddb ]&&_cbde [_fddb ]<=57{goto _accef ;};case _cbde [_fddb ]>=33:goto _ddgdd ;};case _cbde [_fddb ]> 90:switch {case _cbde [_fddb ]> 93:if 97<=_cbde [_fddb ]&&_cbde [_fddb ]<=122{goto _ccfg ;};case _cbde [_fddb ]>=91:goto _ddgdd ;};default:goto _caeb ;};goto _aecad ;case 1:switch _cbde [_fddb ]{case 33:goto _cfgc ;case 47:goto _ccad ;case 123:goto _ccad ;case 125:goto _ccad ;};switch {case _cbde [_fddb ]< 37:if 34<=_cbde [_fddb ]&&_cbde [_fddb ]<=35{goto _ccad ;};case _cbde [_fddb ]> 45:switch {case _cbde [_fddb ]> 63:if 91<=_cbde [_fddb ]&&_cbde [_fddb ]<=94{goto _ccad ;};case _cbde [_fddb ]>=58:goto _ccad ;};default:goto _ccad ;};goto _aecad ;case 0:goto _fdfbb ;case 2:if _cbde [_fddb ]==34{goto _ffae ;};goto _bbbd ;case 31:if _cbde [_fddb ]==34{goto _bbbd ;};goto _fcgdd ;case 3:switch _cbde [_fddb ]{case 78:goto _acfcb ;case 82:goto _efaca ;};goto _ddgdd ;case 4:switch _cbde [_fddb ]{case 47:goto _edgf ;case 85:goto _ededg ;};goto _ddgdd ;case 5:if _cbde [_fddb ]==65{goto _abggf ;};goto _ddgdd ;case 6:switch _cbde [_fddb ]{case 76:goto _cadf ;case 77:goto _dade ;};goto _ddgdd ;case 7:if _cbde [_fddb ]==76{goto _dade ;};goto _ddgdd ;case 8:if _cbde [_fddb ]==33{goto _abggf ;};goto _ddgdd ;case 9:if _cbde [_fddb ]==69{goto _ccde ;};goto _ddgdd ;case 10:if _cbde [_fddb ]==70{goto _bbgcd ;};goto _ddgdd ;case 11:if _cbde [_fddb ]==33{goto _facbg ;};goto _ddgdd ;case 12:switch _cbde [_fddb ]{case 33:goto _cfgc ;case 47:goto _ddgdd ;case 123:goto _ddgdd ;case 125:goto _ddgdd ;};switch {case _cbde [_fddb ]< 48:switch {case _cbde [_fddb ]> 35:if 37<=_cbde [_fddb ]&&_cbde [_fddb ]<=45{goto _ddgdd ;};case _cbde [_fddb ]>=34:goto _ddgdd ;};case _cbde [_fddb ]> 57:switch {case _cbde [_fddb ]< 65:if 58<=_cbde [_fddb ]&&_cbde [_fddb ]<=63{goto _ddgdd ;};case _cbde [_fddb ]> 90:if 91<=_cbde [_fddb ]&&_cbde [_fddb ]<=94{goto _ddgdd ;};default:goto _gcfc ;};default:goto _fggbb ;};goto _aecad ;case 13:switch _cbde [_fddb ]{case 33:goto _cfgc ;case 47:goto _ddgdd ;case 58:goto _gbbg ;case 123:goto _ddgdd ;case 125:goto _ddgdd ;};switch {case _cbde [_fddb ]< 48:switch {case _cbde [_fddb ]> 35:if 37<=_cbde [_fddb ]&&_cbde [_fddb ]<=45{goto _ddgdd ;};case _cbde [_fddb ]>=34:goto _ddgdd ;};case _cbde [_fddb ]> 57:switch {case _cbde [_fddb ]> 63:if 91<=_cbde [_fddb ]&&_cbde [_fddb ]<=94{goto _ddgdd ;};case _cbde [_fddb ]>=59:goto _ddgdd ;};default:goto _fggbb ;};goto _aecad ;case 14:if _cbde [_fddb ]==36{goto _fgbdb ;};if 48<=_cbde [_fddb ]&&_cbde [_fddb ]<=57{goto _acfgg ;};goto _ccad ;case 15:if 48<=_cbde [_fddb ]&&_cbde [_fddb ]<=57{goto _acfgg ;};goto _ccad ;case 32:if 48<=_cbde [_fddb ]&&_cbde [_fddb ]<=57{goto _acfgg ;};goto _gaeddd ;case 16:switch _cbde [_fddb ]{case 33:goto _cfgc ;case 36:goto _bdaf ;case 47:goto _ddgdd ;case 58:goto _gddag ;case 123:goto _ddgdd ;case 125:goto _ddgdd ;};switch {case _cbde [_fddb ]< 59:switch {case _cbde [_fddb ]> 45:if 48<=_cbde [_fddb ]&&_cbde [_fddb ]<=57{goto _bcac ;};case _cbde [_fddb ]>=34:goto _ddgdd ;};case _cbde [_fddb ]> 63:switch {case _cbde [_fddb ]> 90:if 91<=_cbde [_fddb ]&&_cbde [_fddb ]<=94{goto _ddgdd ;};case _cbde [_fddb ]>=65:goto _gcfc ;};default:goto _ddgdd ;};goto _aecad ;case 17:switch _cbde [_fddb ]{case 33:goto _cfgc ;case 47:goto _ccad ;case 123:goto _ccad ;case 125:goto _ccad ;};switch {case _cbde [_fddb ]< 48:switch {case _cbde [_fddb ]> 35:if 37<=_cbde [_fddb ]&&_cbde [_fddb ]<=45{goto _ccad ;};case _cbde [_fddb ]>=34:goto _ccad ;};case _cbde [_fddb ]> 57:switch {case _cbde [_fddb ]> 63:if 91<=_cbde [_fddb ]&&_cbde [_fddb ]<=94{goto _ccad ;};case _cbde [_fddb ]>=58:goto _ccad ;};default:goto _bcac ;};goto _aecad ;case 33:switch _cbde [_fddb ]{case 33:goto _cfgc ;case 47:goto _ceba ;case 123:goto _ceba ;case 125:goto _ceba ;};switch {case _cbde [_fddb ]< 48:switch {case _cbde [_fddb ]> 35:if 37<=_cbde [_fddb ]&&_cbde [_fddb ]<=45{goto _ceba ;};case _cbde [_fddb ]>=34:goto _ceba ;};case _cbde [_fddb ]> 57:switch {case _cbde [_fddb ]> 63:if 91<=_cbde [_fddb ]&&_cbde [_fddb ]<=94{goto _ceba ;};case _cbde [_fddb ]>=58:goto _ceba ;};default:goto _bcac ;};goto _aecad ;case 18:if _cbde [_fddb ]==36{goto _ggdgf ;};if 65<=_cbde [_fddb ]&&_cbde [_fddb ]<=90{goto _dbcc ;};goto _ccad ;case 19:if 65<=_cbde [_fddb ]&&_cbde [_fddb ]<=90{goto _dbcc ;};goto _ccad ;case 34:if 65<=_cbde [_fddb ]&&_cbde [_fddb ]<=90{goto _dbcc ;};goto _defce ;case 20:switch _cbde [_fddb ]{case 39:goto _ddgdd ;case 42:goto _ddgdd ;case 47:goto _ddgdd ;case 58:goto _ddgdd ;case 63:goto _ddgdd ;};if 91<=_cbde [_fddb ]&&_cbde [_fddb ]<=93{goto _ddgdd ;};goto _adfg ;case 21:switch _cbde [_fddb ]{case 39:goto _ccgg ;case 42:goto _ddgdd ;case 47:goto _ddgdd ;case 58:goto _ddgdd ;case 63:goto _ddgdd ;};if 91<=_cbde [_fddb ]&&_cbde [_fddb ]<=93{goto _ddgdd ;};goto _adfg ;case 22:if _cbde [_fddb ]==33{goto _agfff ;};goto _ddgdd ;case 35:switch _cbde [_fddb ]{case 33:goto _cfgc ;case 46:goto _gaca ;case 58:goto _gbbg ;case 101:goto _fcaga ;case 123:goto _caaage ;case 125:goto _caaage ;};switch {case _cbde [_fddb ]< 48:switch {case _cbde [_fddb ]> 35:if 37<=_cbde [_fddb ]&&_cbde [_fddb ]<=47{goto _caaage ;};case _cbde [_fddb ]>=34:goto _caaage ;};case _cbde [_fddb ]> 57:switch {case _cbde [_fddb ]> 63:if 91<=_cbde [_fddb ]&&_cbde [_fddb ]<=94{goto _caaage ;};case _cbde [_fddb ]>=59:goto _caaage ;};default:goto _accef ;};goto _aecad ;case 36:switch _cbde [_fddb ]{case 33:goto _cfgc ;case 47:goto _caaage ;case 101:goto _fcaga ;case 123:goto _caaage ;case 125:goto _caaage ;};switch {case _cbde [_fddb ]< 48:switch {case _cbde [_fddb ]> 35:if 37<=_cbde [_fddb ]&&_cbde [_fddb ]<=45{goto _caaage ;};case _cbde [_fddb ]>=34:goto _caaage ;};case _cbde [_fddb ]> 57:switch {case _cbde [_fddb ]> 63:if 91<=_cbde [_fddb ]&&_cbde [_fddb ]<=94{goto _caaage ;};case _cbde [_fddb ]>=58:goto _caaage ;};default:goto _gaca ;};goto _aecad ;case 23:switch _cbde [_fddb ]{case 33:goto _cfgc ;case 47:goto _ddbf ;case 123:goto _ddbf ;case 125:goto _ddbf ;};switch {case _cbde [_fddb ]< 48:switch {case _cbde [_fddb ]> 35:if 37<=_cbde [_fddb ]&&_cbde [_fddb ]<=45{goto _ddbf ;};case _cbde [_fddb ]>=34:goto _ddbf ;};case _cbde [_fddb ]> 57:switch {case _cbde [_fddb ]> 63:if 91<=_cbde [_fddb ]&&_cbde [_fddb ]<=94{goto _ddbf ;};case _cbde [_fddb ]>=58:goto _ddbf ;};default:goto _cgdb ;};goto _aecad ;case 37:switch _cbde [_fddb ]{case 33:goto _cfgc ;case 47:goto _caaage ;case 123:goto _caaage ;case 125:goto _caaage ;};switch {case _cbde [_fddb ]< 48:switch {case _cbde [_fddb ]> 35:if 37<=_cbde [_fddb ]&&_cbde [_fddb ]<=45{goto _caaage ;};case _cbde [_fddb ]>=34:goto _caaage ;};case _cbde [_fddb ]> 57:switch {case _cbde [_fddb ]> 63:if 91<=_cbde [_fddb ]&&_cbde [_fddb ]<=94{goto _caaage ;};case _cbde [_fddb ]>=58:goto _caaage ;};default:goto _cgdb ;};goto _aecad ;case 38:switch _cbde [_fddb ]{case 61:goto _bgad ;case 62:goto _aeff ;};goto _bfed ;case 39:if _cbde [_fddb ]==61{goto _faedg ;};goto _dgcgb ;case 24:switch _cbde [_fddb ]{case 33:goto _cfgc ;case 36:goto _bdaf ;case 40:goto _feecg ;case 46:goto _fafg ;case 58:goto _gddag ;case 92:goto _ccdff ;case 95:goto _fafeg ;case 123:goto _ddgdd ;case 125:goto _ddgdd ;};switch {case _cbde [_fddb ]< 59:switch {case _cbde [_fddb ]> 47:if 48<=_cbde [_fddb ]&&_cbde [_fddb ]<=57{goto _agac ;};case _cbde [_fddb ]>=34:goto _ddgdd ;};case _cbde [_fddb ]> 63:switch {case _cbde [_fddb ]< 91:if 65<=_cbde [_fddb ]&&_cbde [_fddb ]<=90{goto _fgcfd ;};case _cbde [_fddb ]> 94:if 97<=_cbde [_fddb ]&&_cbde [_fddb ]<=122{goto _fafeg ;};default:goto _ddgdd ;};default:goto _ddgdd ;};goto _aecad ;case 40:switch _cbde [_fddb ]{case 33:goto _cfgc ;case 40:goto _feecg ;case 46:goto _fafg ;case 92:goto _ccdff ;case 95:goto _fafeg ;case 123:goto _fgggge ;case 125:goto _fgggge ;};switch {case _cbde [_fddb ]< 58:switch {case _cbde [_fddb ]< 37:if 34<=_cbde [_fddb ]&&_cbde [_fddb ]<=35{goto _fgggge ;};case _cbde [_fddb ]> 47:if 48<=_cbde [_fddb ]&&_cbde [_fddb ]<=57{goto _fafg ;};default:goto _fgggge ;};case _cbde [_fddb ]> 63:switch {case _cbde [_fddb ]< 91:if 65<=_cbde [_fddb ]&&_cbde [_fddb ]<=90{goto _fafg ;};case _cbde [_fddb ]> 94:if 97<=_cbde [_fddb ]&&_cbde [_fddb ]<=122{goto _fafeg ;};default:goto _fgggge ;};default:goto _fgggge ;};goto _aecad ;case 41:switch _cbde [_fddb ]{case 46:goto _ccdff ;case 92:goto _ccdff ;case 95:goto _ccdff ;};switch {case _cbde [_fddb ]< 65:if 48<=_cbde [_fddb ]&&_cbde [_fddb ]<=57{goto _ccdff ;};case _cbde [_fddb ]> 90:if 97<=_cbde [_fddb ]&&_cbde [_fddb ]<=122{goto _ccdff ;};default:goto _ccdff ;};goto _fgggge ;case 42:switch _cbde [_fddb ]{case 33:goto _cfgc ;case 46:goto _fafeg ;case 92:goto _ccdff ;case 95:goto _fafeg ;case 123:goto _fgggge ;case 125:goto _fgggge ;};switch {case _cbde [_fddb ]< 58:switch {case _cbde [_fddb ]< 37:if 34<=_cbde [_fddb ]&&_cbde [_fddb ]<=35{goto _fgggge ;};case _cbde [_fddb ]> 47:if 48<=_cbde [_fddb ]&&_cbde [_fddb ]<=57{goto _fafeg ;};default:goto _fgggge ;};case _cbde [_fddb ]> 63:switch {case _cbde [_fddb ]< 91:if 65<=_cbde [_fddb ]&&_cbde [_fddb ]<=90{goto _fafeg ;};case _cbde [_fddb ]> 94:if 97<=_cbde [_fddb ]&&_cbde [_fddb ]<=122{goto _fafeg ;};default:goto _fgggge ;};default:goto _fgggge ;};goto _aecad ;case 43:switch _cbde [_fddb ]{case 33:goto _cfgc ;case 40:goto _feecg ;case 46:goto _fafg ;case 92:goto _ccdff ;case 95:goto _fafeg ;case 123:goto _ceba ;case 125:goto _ceba ;};switch {case _cbde [_fddb ]< 58:switch {case _cbde [_fddb ]< 37:if 34<=_cbde [_fddb ]&&_cbde [_fddb ]<=35{goto _ceba ;};case _cbde [_fddb ]> 47:if 48<=_cbde [_fddb ]&&_cbde [_fddb ]<=57{goto _agac ;};default:goto _ceba ;};case _cbde [_fddb ]> 63:switch {case _cbde [_fddb ]< 91:if 65<=_cbde [_fddb ]&&_cbde [_fddb ]<=90{goto _fafg ;};case _cbde [_fddb ]> 94:if 97<=_cbde [_fddb ]&&_cbde [_fddb ]<=122{goto _fafeg ;};default:goto _ceba ;};default:goto _ceba ;};goto _aecad ;case 44:switch _cbde [_fddb ]{case 33:goto _cfgc ;case 36:goto _bdaf ;case 40:goto _feecg ;case 46:goto _fafg ;case 58:goto _gddag ;case 92:goto _ccdff ;case 95:goto _fafeg ;case 123:goto _ccad ;case 125:goto _ccad ;};switch {case _cbde [_fddb ]< 59:switch {case _cbde [_fddb ]> 47:if 48<=_cbde [_fddb ]&&_cbde [_fddb ]<=57{goto _agac ;};case _cbde [_fddb ]>=34:goto _ccad ;};case _cbde [_fddb ]> 63:switch {case _cbde [_fddb ]< 91:if 65<=_cbde [_fddb ]&&_cbde [_fddb ]<=90{goto _fgcfd ;};case _cbde [_fddb ]> 94:if 97<=_cbde [_fddb ]&&_cbde [_fddb ]<=122{goto _fafeg ;};default:goto _ccad ;};default:goto _ccad ;};goto _aecad ;case 25:switch _cbde [_fddb ]{case 33:goto _cfgc ;case 36:goto _bdaf ;case 40:goto _feecg ;case 46:goto _fafg ;case 58:goto _gddag ;case 65:goto _cgaf ;case 92:goto _ccdff ;case 95:goto _fafeg ;case 123:goto _ddgdd ;case 125:goto _ddgdd ;};switch {case _cbde [_fddb ]< 59:switch {case _cbde [_fddb ]> 47:if 48<=_cbde [_fddb ]&&_cbde [_fddb ]<=57{goto _agac ;};case _cbde [_fddb ]>=34:goto _ddgdd ;};case _cbde [_fddb ]> 63:switch {case _cbde [_fddb ]< 91:if 66<=_cbde [_fddb ]&&_cbde [_fddb ]<=90{goto _fgcfd ;};case _cbde [_fddb ]> 94:if 97<=_cbde [_fddb ]&&_cbde [_fddb ]<=122{goto _fafeg ;};default:goto _ddgdd ;};default:goto _ddgdd ;};goto _aecad ;case 45:switch _cbde [_fddb ]{case 33:goto _cfgc ;case 36:goto _bdaf ;case 40:goto _feecg ;case 46:goto _fafg ;case 58:goto _gddag ;case 76:goto _gaaa ;case 92:goto _ccdff ;case 95:goto _fafeg ;case 123:goto _fgggge ;case 125:goto _fgggge ;};switch {case _cbde [_fddb ]< 59:switch {case _cbde [_fddb ]> 47:if 48<=_cbde [_fddb ]&&_cbde [_fddb ]<=57{goto _agac ;};case _cbde [_fddb ]>=34:goto _fgggge ;};case _cbde [_fddb ]> 63:switch {case _cbde [_fddb ]< 91:if 65<=_cbde [_fddb ]&&_cbde [_fddb ]<=90{goto _fgcfd ;};case _cbde [_fddb ]> 94:if 97<=_cbde [_fddb ]&&_cbde [_fddb ]<=122{goto _fafeg ;};default:goto _fgggge ;};default:goto _fgggge ;};goto _aecad ;case 46:switch _cbde [_fddb ]{case 33:goto _cfgc ;case 36:goto _bdaf ;case 40:goto _feecg ;case 46:goto _fafg ;case 58:goto _gddag ;case 83:goto _ecgbf ;case 92:goto _ccdff ;case 95:goto _fafeg ;case 123:goto _fgggge ;case 125:goto _fgggge ;};switch {case _cbde [_fddb ]< 59:switch {case _cbde [_fddb ]> 47:if 48<=_cbde [_fddb ]&&_cbde [_fddb ]<=57{goto _agac ;};case _cbde [_fddb ]>=34:goto _fgggge ;};case _cbde [_fddb ]> 63:switch {case _cbde [_fddb ]< 91:if 65<=_cbde [_fddb ]&&_cbde [_fddb ]<=90{goto _fgcfd ;};case _cbde [_fddb ]> 94:if 97<=_cbde [_fddb ]&&_cbde [_fddb ]<=122{goto _fafeg ;};default:goto _fgggge ;};default:goto _fgggge ;};goto _aecad ;case 47:switch _cbde [_fddb ]{case 33:goto _cfgc ;case 36:goto _bdaf ;case 40:goto _feecg ;case 46:goto _fafg ;case 58:goto _gddag ;case 69:goto _aedde ;case 92:goto _ccdff ;case 95:goto _fafeg ;case 123:goto _fgggge ;case 125:goto _fgggge ;};switch {case _cbde [_fddb ]< 59:switch {case _cbde [_fddb ]> 47:if 48<=_cbde [_fddb ]&&_cbde [_fddb ]<=57{goto _agac ;};case _cbde [_fddb ]>=34:goto _fgggge ;};case _cbde [_fddb ]> 63:switch {case _cbde [_fddb ]< 91:if 65<=_cbde [_fddb ]&&_cbde [_fddb ]<=90{goto _fgcfd ;};case _cbde [_fddb ]> 94:if 97<=_cbde [_fddb ]&&_cbde [_fddb ]<=122{goto _fafeg ;};default:goto _fgggge ;};default:goto _fgggge ;};goto _aecad ;case 26:switch _cbde [_fddb ]{case 33:goto _cfgc ;case 36:goto _bdaf ;case 40:goto _feecg ;case 46:goto _fafg ;case 58:goto _gddag ;case 79:goto _agecg ;case 82:goto _fefe ;case 92:goto _ccdff ;case 95:goto _fafeg ;case 123:goto _ddgdd ;case 125:goto _ddgdd ;};switch {case _cbde [_fddb ]< 59:switch {case _cbde [_fddb ]> 47:if 48<=_cbde [_fddb ]&&_cbde [_fddb ]<=57{goto _agac ;};case _cbde [_fddb ]>=34:goto _ddgdd ;};case _cbde [_fddb ]> 63:switch {case _cbde [_fddb ]< 91:if 65<=_cbde [_fddb ]&&_cbde [_fddb ]<=90{goto _fgcfd ;};case _cbde [_fddb ]> 94:if 97<=_cbde [_fddb ]&&_cbde [_fddb ]<=122{goto _fafeg ;};default:goto _ddgdd ;};default:goto _ddgdd ;};goto _aecad ;case 48:switch _cbde [_fddb ]{case 33:goto _cfgc ;case 36:goto _bdaf ;case 40:goto _feecg ;case 46:goto _fafg ;case 58:goto _gddag ;case 68:goto _ebda ;case 92:goto _ccdff ;case 95:goto _fafeg ;case 123:goto _fgggge ;case 125:goto _fgggge ;};switch {case _cbde [_fddb ]< 59:switch {case _cbde [_fddb ]> 47:if 48<=_cbde [_fddb ]&&_cbde [_fddb ]<=57{goto _agac ;};case _cbde [_fddb ]>=34:goto _fgggge ;};case _cbde [_fddb ]> 63:switch {case _cbde [_fddb ]< 91:if 65<=_cbde [_fddb ]&&_cbde [_fddb ]<=90{goto _fgcfd ;};case _cbde [_fddb ]> 94:if 97<=_cbde [_fddb ]&&_cbde [_fddb ]<=122{goto _fafeg ;};default:goto _fgggge ;};default:goto _fgggge ;};goto _aecad ;case 49:switch _cbde [_fddb ]{case 33:goto _cfgc ;case 36:goto _bdaf ;case 40:goto _feecg ;case 46:goto _fafg ;case 58:goto _gddag ;case 79:goto _bcdff ;case 92:goto _ccdff ;case 95:goto _fafeg ;case 123:goto _fgggge ;case 125:goto _fgggge ;};switch {case _cbde [_fddb ]< 59:switch {case _cbde [_fddb ]> 47:if 48<=_cbde [_fddb ]&&_cbde [_fddb ]<=57{goto _agac ;};case _cbde [_fddb ]>=34:goto _fgggge ;};case _cbde [_fddb ]> 63:switch {case _cbde [_fddb ]< 91:if 65<=_cbde [_fddb ]&&_cbde [_fddb ]<=90{goto _fgcfd ;};case _cbde [_fddb ]> 94:if 97<=_cbde [_fddb ]&&_cbde [_fddb ]<=122{goto _fafeg ;};default:goto _fgggge ;};default:goto _fgggge ;};goto _aecad ;case 50:switch _cbde [_fddb ]{case 33:goto _cfgc ;case 36:goto _bdaf ;case 40:goto _feecg ;case 46:goto _fafg ;case 58:goto _gddag ;case 85:goto _ecgbf ;case 92:goto _ccdff ;case 95:goto _fafeg ;case 123:goto _fgggge ;case 125:goto _fgggge ;};switch {case _cbde [_fddb ]< 59:switch {case _cbde [_fddb ]> 47:if 48<=_cbde [_fddb ]&&_cbde [_fddb ]<=57{goto _agac ;};case _cbde [_fddb ]>=34:goto _fgggge ;};case _cbde [_fddb ]> 63:switch {case _cbde [_fddb ]< 91:if 65<=_cbde [_fddb ]&&_cbde [_fddb ]<=90{goto _fgcfd ;};case _cbde [_fddb ]> 94:if 97<=_cbde [_fddb ]&&_cbde [_fddb ]<=122{goto _fafeg ;};default:goto _fgggge ;};default:goto _fgggge ;};goto _aecad ;case 27:switch _cbde [_fddb ]{case 46:goto _ccdff ;case 92:goto _ccdff ;case 95:goto _ccdff ;};switch {case _cbde [_fddb ]< 65:if 48<=_cbde [_fddb ]&&_cbde [_fddb ]<=57{goto _ccdff ;};case _cbde [_fddb ]> 90:if 97<=_cbde [_fddb ]&&_cbde [_fddb ]<=122{goto _ccdff ;};default:goto _ccdff ;};goto _ddgdd ;case 28:switch _cbde [_fddb ]{case 33:goto _cfgc ;case 46:goto _fafeg ;case 92:goto _ccdff ;case 95:goto _fafeg ;case 120:goto _cgaagd ;case 123:goto _ddgdd ;case 125:goto _ddgdd ;};switch {case _cbde [_fddb ]< 58:switch {case _cbde [_fddb ]< 37:if 34<=_cbde [_fddb ]&&_cbde [_fddb ]<=35{goto _ddgdd ;};case _cbde [_fddb ]> 47:if 48<=_cbde [_fddb ]&&_cbde [_fddb ]<=57{goto _fafeg ;};default:goto _ddgdd ;};case _cbde [_fddb ]> 63:switch {case _cbde [_fddb ]< 91:if 65<=_cbde [_fddb ]&&_cbde [_fddb ]<=90{goto _fafeg ;};case _cbde [_fddb ]> 94:if 97<=_cbde [_fddb ]&&_cbde [_fddb ]<=122{goto _fafeg ;};default:goto _ddgdd ;};default:goto _ddgdd ;};goto _aecad ;case 51:switch _cbde [_fddb ]{case 33:goto _cfgc ;case 46:goto _fafeg ;case 92:goto _ccdff ;case 95:goto _fafeg ;case 108:goto _cfff ;case 123:goto _fgggge ;case 125:goto _fgggge ;};switch {case _cbde [_fddb ]< 58:switch {case _cbde [_fddb ]< 37:if 34<=_cbde [_fddb ]&&_cbde [_fddb ]<=35{goto _fgggge ;};case _cbde [_fddb ]> 47:if 48<=_cbde [_fddb ]&&_cbde [_fddb ]<=57{goto _fafeg ;};default:goto _fgggge ;};case _cbde [_fddb ]> 63:switch {case _cbde [_fddb ]< 91:if 65<=_cbde [_fddb ]&&_cbde [_fddb ]<=90{goto _fafeg ;};case _cbde [_fddb ]> 94:if 97<=_cbde [_fddb ]&&_cbde [_fddb ]<=122{goto _fafeg ;};default:goto _fgggge ;};default:goto _fgggge ;};goto _aecad ;case 52:switch _cbde [_fddb ]{case 33:goto _cfgc ;case 46:goto _fafeg ;case 92:goto _ccdff ;case 95:goto _fafeg ;case 102:goto _acea ;case 110:goto _bcgge ;case 123:goto _fgggge ;case 125:goto _fgggge ;};switch {case _cbde [_fddb ]< 58:switch {case _cbde [_fddb ]< 37:if 34<=_cbde [_fddb ]&&_cbde [_fddb ]<=35{goto _fgggge ;};case _cbde [_fddb ]> 47:if 48<=_cbde [_fddb ]&&_cbde [_fddb ]<=57{goto _fafeg ;};default:goto _fgggge ;};case _cbde [_fddb ]> 63:switch {case _cbde [_fddb ]< 91:if 65<=_cbde [_fddb ]&&_cbde [_fddb ]<=90{goto _fafeg ;};case _cbde [_fddb ]> 94:if 97<=_cbde [_fddb ]&&_cbde [_fddb ]<=122{goto _fafeg ;};default:goto _fgggge ;};default:goto _fgggge ;};goto _aecad ;case 53:switch _cbde [_fddb ]{case 33:goto _cfgc ;case 46:goto _fafeg ;case 92:goto _ccdff ;case 95:goto _fafeg ;case 110:goto _eadaa ;case 123:goto _fgggge ;case 125:goto _fgggge ;};switch {case _cbde [_fddb ]< 58:switch {case _cbde [_fddb ]< 37:if 34<=_cbde [_fddb ]&&_cbde [_fddb ]<=35{goto _fgggge ;};case _cbde [_fddb ]> 47:if 48<=_cbde [_fddb ]&&_cbde [_fddb ]<=57{goto _fafeg ;};default:goto _fgggge ;};case _cbde [_fddb ]> 63:switch {case _cbde [_fddb ]< 91:if 65<=_cbde [_fddb ]&&_cbde [_fddb ]<=90{goto _fafeg ;};case _cbde [_fddb ]> 94:if 97<=_cbde [_fddb ]&&_cbde [_fddb ]<=122{goto _fafeg ;};default:goto _fgggge ;};default:goto _fgggge ;};goto _aecad ;case 54:switch _cbde [_fddb ]{case 33:goto _cfgc ;case 46:goto _gcbd ;case 92:goto _ccdff ;case 95:goto _fafeg ;case 123:goto _fgggge ;case 125:goto _fgggge ;};switch {case _cbde [_fddb ]< 58:switch {case _cbde [_fddb ]< 37:if 34<=_cbde [_fddb ]&&_cbde [_fddb ]<=35{goto _fgggge ;};case _cbde [_fddb ]> 47:if 48<=_cbde [_fddb ]&&_cbde [_fddb ]<=57{goto _fafeg ;};default:goto _fgggge ;};case _cbde [_fddb ]> 63:switch {case _cbde [_fddb ]< 91:if 65<=_cbde [_fddb ]&&_cbde [_fddb ]<=90{goto _fafeg ;};case _cbde [_fddb ]> 94:if 97<=_cbde [_fddb ]&&_cbde [_fddb ]<=122{goto _fafeg ;};default:goto _fgggge ;};default:goto _fgggge ;};goto _aecad ;case 55:switch _cbde [_fddb ]{case 33:goto _cfgc ;case 46:goto _fafeg ;case 92:goto _ccdff ;case 95:goto _befcc ;case 123:goto _fgggge ;case 125:goto _fgggge ;};switch {case _cbde [_fddb ]< 58:switch {case _cbde [_fddb ]< 37:if 34<=_cbde [_fddb ]&&_cbde [_fddb ]<=35{goto _fgggge ;};case _cbde [_fddb ]> 47:if 48<=_cbde [_fddb ]&&_cbde [_fddb ]<=57{goto _fafeg ;};default:goto _fgggge ;};case _cbde [_fddb ]> 63:switch {case _cbde [_fddb ]< 91:if 65<=_cbde [_fddb ]&&_cbde [_fddb ]<=90{goto _befcc ;};case _cbde [_fddb ]> 94:if 97<=_cbde [_fddb ]&&_cbde [_fddb ]<=122{goto _fafeg ;};default:goto _fgggge ;};default:goto _fgggge ;};goto _aecad ;case 56:switch _cbde [_fddb ]{case 33:goto _cfgc ;case 40:goto _abgbf ;case 46:goto _befcc ;case 92:goto _ccdff ;case 95:goto _fafeg ;case 123:goto _fgggge ;case 125:goto _fgggge ;};switch {case _cbde [_fddb ]< 58:switch {case _cbde [_fddb ]< 37:if 34<=_cbde [_fddb ]&&_cbde [_fddb ]<=35{goto _fgggge ;};case _cbde [_fddb ]> 47:if 48<=_cbde [_fddb ]&&_cbde [_fddb ]<=57{goto _befcc ;};default:goto _fgggge ;};case _cbde [_fddb ]> 63:switch {case _cbde [_fddb ]< 91:if 65<=_cbde [_fddb ]&&_cbde [_fddb ]<=90{goto _befcc ;};case _cbde [_fddb ]> 94:if 97<=_cbde [_fddb ]&&_cbde [_fddb ]<=122{goto _fafeg ;};default:goto _fgggge ;};default:goto _fgggge ;};goto _aecad ;case 57:switch _cbde [_fddb ]{case 33:goto _cfgc ;case 46:goto _fafeg ;case 92:goto _ccdff ;case 95:goto _fafeg ;case 109:goto _dcdbg ;case 123:goto _fgggge ;case 125:goto _fgggge ;};switch {case _cbde [_fddb ]< 58:switch {case _cbde [_fddb ]< 37:if 34<=_cbde [_fddb ]&&_cbde [_fddb ]<=35{goto _fgggge ;};case _cbde [_fddb ]> 47:if 48<=_cbde [_fddb ]&&_cbde [_fddb ]<=57{goto _fafeg ;};default:goto _fgggge ;};case _cbde [_fddb ]> 63:switch {case _cbde [_fddb ]< 91:if 65<=_cbde [_fddb ]&&_cbde [_fddb ]<=90{goto _fafeg ;};case _cbde [_fddb ]> 94:if 97<=_cbde [_fddb ]&&_cbde [_fddb ]<=122{goto _fafeg ;};default:goto _fgggge ;};default:goto _fgggge ;};goto _aecad ;case 58:switch _cbde [_fddb ]{case 33:goto _cfgc ;case 46:goto _fcde ;case 92:goto _ccdff ;case 95:goto _fafeg ;case 123:goto _fgggge ;case 125:goto _fgggge ;};switch {case _cbde [_fddb ]< 58:switch {case _cbde [_fddb ]< 37:if 34<=_cbde [_fddb ]&&_cbde [_fddb ]<=35{goto _fgggge ;};case _cbde [_fddb ]> 47:if 48<=_cbde [_fddb ]&&_cbde [_fddb ]<=57{goto _fafeg ;};default:goto _fgggge ;};case _cbde [_fddb ]> 63:switch {case _cbde [_fddb ]< 91:if 65<=_cbde [_fddb ]&&_cbde [_fddb ]<=90{goto _fafeg ;};case _cbde [_fddb ]> 94:if 97<=_cbde [_fddb ]&&_cbde [_fddb ]<=122{goto _fafeg ;};default:goto _fgggge ;};default:goto _fgggge ;};goto _aecad ;case 59:switch _cbde [_fddb ]{case 33:goto _cfgc ;case 46:goto _fafeg ;case 92:goto _ccdff ;case 95:goto _ecge ;case 123:goto _ccad ;case 125:goto _ccad ;};switch {case _cbde [_fddb ]< 58:switch {case _cbde [_fddb ]< 37:if 34<=_cbde [_fddb ]&&_cbde [_fddb ]<=35{goto _ccad ;};case _cbde [_fddb ]> 47:if 48<=_cbde [_fddb ]&&_cbde [_fddb ]<=57{goto _fafeg ;};default:goto _ccad ;};case _cbde [_fddb ]> 63:switch {case _cbde [_fddb ]< 91:if 65<=_cbde [_fddb ]&&_cbde [_fddb ]<=90{goto _ecge ;};case _cbde [_fddb ]> 94:if 97<=_cbde [_fddb ]&&_cbde [_fddb ]<=122{goto _fafeg ;};default:goto _ccad ;};default:goto _ccad ;};goto _aecad ;case 29:switch _cbde [_fddb ]{case 33:goto _cfgc ;case 46:goto _fafeg ;case 92:goto _ccdff ;case 95:goto _fafeg ;case 123:goto _ddgdd ;case 125:goto _ddgdd ;};switch {case _cbde [_fddb ]< 58:switch {case _cbde [_fddb ]< 37:if 34<=_cbde [_fddb ]&&_cbde [_fddb ]<=35{goto _ddgdd ;};case _cbde [_fddb ]> 47:if 48<=_cbde [_fddb ]&&_cbde [_fddb ]<=57{goto _fafeg ;};default:goto _ddgdd ;};case _cbde [_fddb ]> 63:switch {case _cbde [_fddb ]< 91:if 65<=_cbde [_fddb ]&&_cbde [_fddb ]<=90{goto _fafeg ;};case _cbde [_fddb ]> 94:if 97<=_cbde [_fddb ]&&_cbde [_fddb ]<=122{goto _fafeg ;};default:goto _ddgdd ;};default:goto _ddgdd ;};goto _aecad ;};_ddgdd :_bbfa =0;goto _bgaca ;_aecad :_bbfa =1;goto _bgaca ;_bbbd :_bbfa =2;goto _bgaca ;_cgegg :_bbfa =3;goto _bgaca ;_acfcb :_bbfa =4;goto _bgaca ;_edgf :_bbfa =5;goto _bgaca ;_ededg :_bbfa =6;goto _bgaca ;_cadf :_bbfa =7;goto _bgaca ;_dade :_bbfa =8;goto _bgaca ;_efaca :_bbfa =9;goto _bgaca ;_ccde :_bbfa =10;goto _bgaca ;_bbgcd :_bbfa =11;goto _bgaca ;_edeee :_bbfa =12;goto _bgaca ;_fggbb :_bbfa =13;goto _bgaca ;_gbbg :_bbfa =14;goto _bgaca ;_fgbdb :_bbfa =15;goto _bgaca ;_gcfc :_bbfa =16;goto _bgaca ;_bdaf :_bbfa =17;goto _bgaca ;_gddag :_bbfa =18;goto _bgaca ;_ggdgf :_bbfa =19;goto _bgaca ;_efegc :_bbfa =20;goto _bgaca ;_adfg :_bbfa =21;goto _bgaca ;_ccgg :_bbfa =22;goto _bgaca ;_fcaga :_bbfa =23;goto _bgaca ;_caeb :_bbfa =24;goto _bgaca ;_caaca :_bbfa =25;goto _bgaca ;_fagcg :_bbfa =26;goto _bgaca ;_edeff :_bbfa =27;goto _bgaca ;_caca :_bbfa =28;goto _bgaca ;_ccfg :_bbfa =29;goto _bgaca ;_ccad :_bbfa =30;goto _bedaa ;_cfgc :_bbfa =30;goto _ecgc ;_abggf :_bbfa =30;goto _feccc ;_facbg :_bbfa =30;goto _ecdb ;_agfff :_bbfa =30;goto _ecfc ;_ddbf :_bbfa =30;goto _dggeg ;_feecg :_bbfa =30;goto _dcfbd ;_fecd :_bbfa =30;goto _bdcb ;_dbdfc :_bbfa =30;goto _dbbgd ;_gbffc :_bbfa =30;goto _gdcdd ;_bcgc :_bbfa =30;goto _bfaf ;_bbcc :_bbfa =30;goto _aegb ;_ddee :_bbfa =30;goto _dafdb ;_dcef :_bbfa =30;goto _gdcef ;_efagg :_bbfa =30;goto _acac ;_ecdgd :_bbfa =30;goto _agfba ;_dedca :_bbfa =30;goto _gggba ;_gadd :_bbfa =30;goto _fbacc ;_egfdf :_bbfa =30;goto _edgcf ;_dbdd :_bbfa =30;goto _deebe ;_ecfgc :_bbfa =30;goto _daafb ;_fcgdd :_bbfa =30;goto _geddb ;_gaeddd :_bbfa =30;goto _dadb ;_ceba :_bbfa =30;goto _cgfff ;_defce :_bbfa =30;goto _egbbf ;_caaage :_bbfa =30;goto _dgcae ;_bfed :_bbfa =30;goto _acca ;_bgad :_bbfa =30;goto _decgb ;_aeff :_bbfa =30;goto _gccf ;_dgcgb :_bbfa =30;goto _fdcg ;_faedg :_bbfa =30;goto _dfaa ;_fgggge :_bbfa =30;goto _cbdd ;_abgbf :_bbfa =30;goto _gfeg ;_ffae :_bbfa =31;goto _geaf ;_acfgg :_bbfa =32;goto _bgaca ;_bcac :_bbfa =33;goto _feeff ;_dbcc :_bbfa =34;goto _bgaca ;_accef :_bbfa =35;goto _ceda ;_gaca :_bbfa =36;goto _ceda ;_cgdb :_bbfa =37;goto _ceda ;_ccdc :_bbfa =38;goto _bgaca ;_efacf :_bbfa =39;goto _bgaca ;_fafg :_bbfa =40;goto _gbbb ;_ccdff :_bbfa =41;goto _bgaca ;_fafeg :_bbfa =42;goto _gbbb ;_agac :_bbfa =43;goto _feeff ;_fgcfd :_bbfa =44;goto _gbbb ;_aedde :_bbfa =44;goto _efgd ;_bcdff :_bbfa =44;goto _adee ;_cgaf :_bbfa =45;goto _gbbb ;_gaaa :_bbfa =46;goto _gbbb ;_ecgbf :_bbfa =47;goto _gbbb ;_agecg :_bbfa =48;goto _gbbb ;_ebda :_bbfa =49;goto _gbbb ;_fefe :_bbfa =50;goto _gbbb ;_cgaagd :_bbfa =51;goto _gbbb ;_cfff :_bbfa =52;goto _gbbb ;_acea :_bbfa =53;goto _gbbb ;_eadaa :_bbfa =54;goto _gbbb ;_gcbd :_bbfa =55;goto _gbbb ;_befcc :_bbfa =56;goto _gbbb ;_bcgge :_bbfa =57;goto _gbbb ;_dcdbg :_bbfa =58;goto _gbbb ;_fcde :_bbfa =59;goto _gbbb ;_ecge :_bbfa =59;goto _fcfae ;_feccc :_fedfb =3;goto _bbbbg ;_ecdb :_fedfb =5;goto _bbbbg ;_ecgc :_fedfb =7;goto _bbbbg ;_ecfc :_fedfb =9;goto _bbbbg ;_dcfbd :_fedfb =11;goto _bbbbg ;_gfeg :_fedfb =13;goto _bbbbg ;_bdcb :_fedfb =15;goto _bbbbg ;_deebe :_fedfb =17;goto _bbbbg ;_daafb :_fedfb =19;goto _bbbbg ;_dbbgd :_fedfb =21;goto _bbbbg ;_gdcdd :_fedfb =23;goto _bbbbg ;_aegb :_fedfb =25;goto _bbbbg ;_gdcef :_fedfb =27;goto _bbbbg ;_bfaf :_fedfb =29;goto _bbbbg ;_acac :_fedfb =31;goto _bbbbg ;_edgcf :_fedfb =33;goto _bbbbg ;_fbacc :_fedfb =35;goto _bbbbg ;_decgb :_fedfb =37;goto _bbbbg ;_dfaa :_fedfb =39;goto _bbbbg ;_gccf :_fedfb =41;goto _bbbbg ;_agfba :_fedfb =43;goto _bbbbg ;_gggba :_fedfb =45;goto _bbbbg ;_dafdb :_fedfb =47;goto _bbbbg ;_dgcae :_fedfb =49;goto _bbbbg ;_cgfff :_fedfb =51;goto _bbbbg ;_dadb :_fedfb =53;goto _bbbbg ;_egbbf :_fedfb =55;goto _bbbbg ;_cbdd :_fedfb =57;goto _bbbbg ;_geddb :_fedfb =59;goto _bbbbg ;_acca :_fedfb =61;goto _bbbbg ;_fdcg :_fedfb =63;goto _bbbbg ;_dggeg :_fedfb =65;goto _bbbbg ;_bedaa :_fedfb =67;goto _bbbbg ;_efgd :_fedfb =72;goto _bbbbg ;_ceda :_fedfb =75;goto _bbbbg ;_feeff :_fedfb =78;goto _bbbbg ;_adee :_fedfb =81;goto _bbbbg ;_fcfae :_fedfb =84;goto _bbbbg ;_gbbb :_fedfb =87;goto _bbbbg ;_geaf :_fedfb =90;goto _bbbbg ;_bbbbg :_cdbb =uint (_accbf [_fedfb ]);_fedfb ++;for ;_cdbb > 0;_cdbb --{_fedfb ++;switch _accbf [_fedfb -1]{case 3:_effc =_fddb +1;case 4:_ebdcc =1;case 5:_ebdcc =2;case 6:_ebdcc =3;case 7:_ebdcc =4;case 8:_ebdcc =11;case 9:_ebdcc =14;case 10:_ebdcc =15;case 11:_effc =_fddb +1;{_fddca .emit (_daddb ,_cbde [_ebaad :_effc ]);};case 12:_effc =_fddb +1;{_fddca .emit (_fbbga ,_cbde [_ebaad :_effc ]);};case 13:_effc =_fddb +1;{_fddca .emit (_acabf ,_cbde [_ebaad :_effc -1]);};case 14:_effc =_fddb +1;{_fddca .emit (_acabf ,_cbde [_ebaad +1:_effc -2]);};case 15:_effc =_fddb +1;{_fddca .emit (_fageg ,_cbde [_ebaad :_effc -1]);};case 16:_effc =_fddb +1;{_fddca .emit (_fageg ,_cbde [_ebaad :_effc -1]);};case 17:_effc =_fddb +1;{_fddca .emit (_gafb ,_cbde [_ebaad :_effc ]);};case 18:_effc =_fddb +1;{_fddca .emit (_beefb ,_cbde [_ebaad :_effc ]);};case 19:_effc =_fddb +1;{_fddca .emit (_gdfae ,_cbde [_ebaad :_effc ]);};case 20:_effc =_fddb +1;{_fddca .emit (_acaee ,_cbde [_ebaad :_effc ]);};case 21:_effc =_fddb +1;{_fddca .emit (_fbad ,_cbde [_ebaad :_effc ]);};case 22:_effc =_fddb +1;{_fddca .emit (_bdaca ,_cbde [_ebaad :_effc ]);};case 23:_effc =_fddb +1;{_fddca .emit (_ababf ,_cbde [_ebaad :_effc ]);};case 24:_effc =_fddb +1;{_fddca .emit (_gedd ,_cbde [_ebaad :_effc ]);};case 25:_effc =_fddb +1;{_fddca .emit (_geaad ,_cbde [_ebaad :_effc ]);};case 26:_effc =_fddb +1;{_fddca .emit (_gdbg ,_cbde [_ebaad :_effc ]);};case 27:_effc =_fddb +1;{_fddca .emit (_dbc ,_cbde [_ebaad :_effc ]);};case 28:_effc =_fddb +1;{_fddca .emit (_fdfb ,_cbde [_ebaad :_effc ]);};case 29:_effc =_fddb +1;{_fddca .emit (_eecg ,_cbde [_ebaad :_effc ]);};case 30:_effc =_fddb +1;{_fddca .emit (_bggg ,_cbde [_ebaad :_effc ]);};case 31:_effc =_fddb +1;{_fddca .emit (_bcfa ,_cbde [_ebaad :_effc ]);};case 32:_effc =_fddb +1;{_fddca .emit (_fdda ,_cbde [_ebaad :_effc ]);};case 33:_effc =_fddb +1;{_fddca .emit (_aggg ,_cbde [_ebaad :_effc ]);};case 34:_effc =_fddb ;_fddb --;{_fddca .emit (_gade ,_cbde [_ebaad :_effc ]);};case 35:_effc =_fddb ;_fddb --;{_fddca .emit (_ebaeg ,_cbde [_ebaad :_effc ]);};case 36:_effc =_fddb ;_fddb --;{_fddca .emit (_fabbg ,_cbde [_ebaad :_effc ]);};case 37:_effc =_fddb ;_fddb --;{_fddca .emit (_aegde ,_cbde [_ebaad :_effc ]);};case 38:_effc =_fddb ;_fddb --;{_fddca .emit (_gegf ,_cbde [_ebaad :_effc ]);};case 39:_effc =_fddb ;_fddb --;{_fddca .emit (_dccd ,_cbde [_ebaad +1:_effc -1]);};case 40:_effc =_fddb ;_fddb --;{_fddca .emit (_deec ,_cbde [_ebaad :_effc ]);};case 41:_effc =_fddb ;_fddb --;{_fddca .emit (_fadab ,_cbde [_ebaad :_effc ]);};case 42:_fddb =(_effc )-1;{_fddca .emit (_gade ,_cbde [_ebaad :_effc ]);};case 43:switch _ebdcc {case 0:{_bbfa =0;goto _bgaca ;};case 1:{_fddb =(_effc )-1;_fddca .emit (_fgcbc ,_cbde [_ebaad :_effc ]);};case 2:{_fddb =(_effc )-1;_fddca .emit (_gade ,_cbde [_ebaad :_effc ]);};case 3:{_fddb =(_effc )-1;_fddca .emit (_ebaeg ,_cbde [_ebaad :_effc ]);};case 4:{_fddb =(_effc )-1;_fddca .emit (_ecad ,_cbde [_ebaad :_effc ]);};case 11:{_fddb =(_effc )-1;_fddca .emit (_eeaec ,_cbde [_ebaad :_effc ]);};case 14:{_fddb =(_effc )-1;_fddca .emit (_gegf ,_cbde [_ebaad :_effc ]);};case 15:{_fddb =(_effc )-1;_fddca .emit (_dccd ,_cbde [_ebaad +1:_effc -1]);};};};};goto _bgaca ;_bgaca :_fedfb =int (_agegg [_bbfa ]);_cdbb =uint (_accbf [_fedfb ]);_fedfb ++;for ;_cdbb > 0;_cdbb --{_fedfb ++;switch _accbf [_fedfb -1]{case 0:_ebaad =0;case 1:_ebdcc =0;};};if _bbfa ==0{goto _fdfbb ;};if _fddb ++;_fddb !=_ggcgc {goto _bdbc ;};_aage :{};if _fddb ==_fdgbb {switch _bbfa {case 1:goto _ccad ;case 2:goto _ccad ;case 31:goto _fcgdd ;case 14:goto _ccad ;case 15:goto _ccad ;case 32:goto _gaeddd ;case 17:goto _ccad ;case 33:goto _ceba ;case 18:goto _ccad ;case 19:goto _ccad ;case 34:goto _defce ;case 35:goto _caaage ;case 36:goto _caaage ;case 23:goto _ddbf ;case 37:goto _caaage ;case 38:goto _bfed ;case 39:goto _dgcgb ;case 40:goto _fgggge ;case 41:goto _fgggge ;case 42:goto _fgggge ;case 43:goto _ceba ;case 44:goto _ccad ;case 45:goto _fgggge ;case 46:goto _fgggge ;case 47:goto _fgggge ;case 48:goto _fgggge ;case 49:goto _fgggge ;case 50:goto _fgggge ;case 51:goto _fgggge ;case 52:goto _fgggge ;case 53:goto _fgggge ;case 54:goto _fgggge ;case 55:goto _fgggge ;case 56:goto _fgggge ;case 57:goto _fgggge ;case 58:goto _fgggge ;case 59:goto _ccad ;};};_fdfbb :{};};if _ebaad > 0{copy (_cbde [0:],_cbde [_ebaad :]);};};_ =_fdgbb ;if _bbfa ==_dfcff {_fddca .emit (_bafeb ,nil );};close (_fddca ._ggdfc );};func _dgcg (_dggd string ,_beec func (_faef float64 )float64 )Function {return func (_bece []Result )Result {if len (_bece )!=1{return MakeErrorResult (_dggd +"\u0020\u0072\u0065\u0071ui\u0072\u0065\u0073\u0020\u006f\u006e\u0065\u0020\u0061\u0072\u0067\u0075\u006d\u0065n\u0074");};_eebec :=_bece [0].AsNumber ();switch _eebec .Type {case ResultTypeNumber :_fdf :=_beec (_eebec .ValueNumber );if _aca .IsNaN (_fdf ){return MakeErrorResult (_dggd +"\u0020\u0072\u0065\u0074\u0075\u0072\u006e\u0065\u0064\u0020\u004e\u0061\u004e");};if _aca .IsInf (_fdf ,0){return MakeErrorResult (_dggd +"\u0020r\u0065t\u0075\u0072\u006e\u0065\u0064 \u0069\u006ef\u0069\u006e\u0069\u0074\u0079");};if _fdf ==0{return MakeErrorResultType (ErrorTypeDivideByZero ,_dggd +"\u0020d\u0069v\u0069\u0064\u0065\u0020\u0062\u0079\u0020\u007a\u0065\u0072\u006f");};return MakeNumberResult (1/_fdf );case ResultTypeList ,ResultTypeString :return MakeErrorResult (_dggd +"\u0020\u0072\u0065\u0071u\u0069\u0072\u0065\u0073\u0020\u0061\u0020\u006e\u0075\u006de\u0072i\u0063\u0020\u0061\u0072\u0067\u0075\u006de\u006e\u0074");case ResultTypeError :return _eebec ;default:return MakeErrorResult (_a .Sprintf ("\u0075\u006e\u0068a\u006e\u0064\u006c\u0065d\u0020\u0025\u0073\u0028\u0029\u0020\u0061r\u0067\u0075\u006d\u0065\u006e\u0074\u0020\u0074\u0079\u0070\u0065\u0020\u0025\u0073",_dggd ,_eebec .Type ));};};};type xargs struct{_fegg []float64 ;_gfd []float64 ;};func (_dgaee *Lexer )emit (_fbgca tokenType ,_gfbg []byte ){if _gcde {_a .Println ("\u0065\u006d\u0069\u0074",_fbgca ,_faba (string (_gfbg )));};_dgaee ._ggdfc <-&node {_fbgca ,string (_gfbg )};};

// String returns a string representation for Negate.
func (_fffde Negate )String ()string {return "\u002d"+_fffde ._feaegg .String ()};

// Reference returns a string reference value to a vertical range.
func (_ageba VerticalRange )Reference (ctx Context ,ev Evaluator )Reference {return Reference {Type :ReferenceTypeVerticalRange ,Value :_ageba .verticalRangeReference ()};};

// Eval evaluates and returns the result of an empty expression.
func (_efae EmptyExpr )Eval (ctx Context ,ev Evaluator )Result {return MakeEmptyResult ()};

// Eval evaluates and returns the result of a sheet expression.
func (_eaega SheetPrefixExpr )Eval (ctx Context ,ev Evaluator )Result {return MakeErrorResult ("\u0073\u0068\u0065\u0065\u0074\u0020\u0070\u0072\u0065\u0066\u0069\u0078\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u006e\u0065\u0076\u0065r\u0020\u0062\u0065\u0020\u0065v\u0061\u006cu\u0061\u0074\u0065\u0064");};

// Reference returns an invalid reference for Number.
func (_aedfd Number )Reference (ctx Context ,ev Evaluator )Reference {return ReferenceInvalid };func _daeef (_cgfa Context ,_ggbea ,_gebbd int )(string ,string ){_cded :="\u0041"+_d .Itoa (_ggbea );_aacc :=_cgfa .LastColumn (_ggbea ,_gebbd );_dgegfc :=_aacc +_d .Itoa (_gebbd );return _cded ,_dgegfc ;};var _cggb =map[string ]Function {};

// LastColumn returns empty string for the invalid reference context.
func (_dfdbf *ivr )LastColumn (rowFrom ,rowTo int )string {return ""};

// GetFilename returns an empty string for the invalid reference context.
func (_gdbgb *ivr )GetFilename ()string {return ""};

// RegisterFunction registers a standard function.
func RegisterFunction (name string ,fn Function ){_gcdba .Lock ();defer _gcdba .Unlock ();if _ ,_fdgg :=_cggb [name ];_fdgg {_cc .Log .Debug ("\u0064\u0075p\u006c\u0069\u0063\u0061t\u0065\u0020r\u0065\u0067\u0069\u0073\u0074\u0072\u0061\u0074i\u006f\u006e\u0020\u006f\u0066\u0020\u0066\u0075\u006e\u0063\u0074\u0069o\u006e\u0020\u0025\u0073",name );};_cggb [name ]=fn ;};var _fffd =[]ri {{1000,"\u004d"},{950,"\u004c\u004d"},{900,"\u0043\u004d"},{500,"\u0044"},{450,"\u004c\u0044"},{400,"\u0043\u0044"},{100,"\u0043"},{95,"\u0056\u0043"},{90,"\u0058\u0043"},{50,"\u004c"},{45,"\u0056\u004c"},{40,"\u0058\u004c"},{10,"\u0058"},{9,"\u0049\u0058"},{5,"\u0056"},{4,"\u0049\u0056"},{1,"\u0049"}};

// Exact is an implementation of the Excel EXACT() which compares two strings.
func Exact (args []Result )Result {if len (args )!=2{return MakeErrorResult ("\u0043\u004f\u004e\u0043\u0041\u0054\u0045N\u0041\u0054\u0045(\u0029\u0020\u0072\u0065q\u0075\u0069\u0072\u0065\u0073\u0020\u0074\u0077\u006f\u0020\u0073\u0074\u0072\u0069\u006e\u0067\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0073");};_gagbb :=args [0].AsString ();_faaf :=args [1].AsString ();if _gagbb .Type !=ResultTypeString ||_faaf .Type !=ResultTypeString {return MakeErrorResult ("\u0043\u004f\u004e\u0043\u0041\u0054\u0045N\u0041\u0054\u0045(\u0029\u0020\u0072\u0065q\u0075\u0069\u0072\u0065\u0073\u0020\u0074\u0077\u006f\u0020\u0073\u0074\u0072\u0069\u006e\u0067\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0073");};return MakeBoolResult (_gagbb .ValueString ==_faaf .ValueString );};

// Error is an error expression.
type Error struct{_dbga string };

// Update updates references in the PrefixHorizontalRange after removing a row/column.
func (_fbcbb PrefixHorizontalRange )Update (q *_fe .UpdateQuery )Expression {return _fbcbb };

// Disc implements the Excel DISC function.
func Disc (args []Result )Result {_egdcg :=len (args );if _egdcg !=4&&_egdcg !=5{return MakeErrorResult ("\u0044\u0049SC\u0020\u0072\u0065q\u0075\u0069\u0072\u0065s f\u006fur\u0020\u006f\u0072\u0020\u0066\u0069\u0076e \u0061\u0072\u0067\u0075\u006d\u0065\u006et\u0073");};_dedb ,_fgfa ,_gfee :=_dbda (args [0],args [1],"\u0044\u0049\u0053\u0043");if _gfee .Type ==ResultTypeError {return _gfee ;};if args [2].Type !=ResultTypeNumber {return MakeErrorResult ("\u0044\u0049\u0053\u0043\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0070\u0072\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u006eu\u006d\u0062\u0065\u0072\u0020a\u0072\u0067u\u006d\u0065\u006e\u0074");};_dcda :=args [2].ValueNumber ;if _dcda <=0{return MakeErrorResultType (ErrorTypeNum ,"D\u0049\u0053\u0043\u0020\u0072\u0065\u0071\u0075\u0069r\u0065\u0073\u0020\u0070\u0072\u0020\u0074o \u0062\u0065\u0020\u0070o\u0073\u0069\u0074\u0069\u0076\u0065\u0020\u006e\u0075mb\u0065\u0072 \u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};if args [3].Type !=ResultTypeNumber {return MakeErrorResult ("\u0044\u0049S\u0043\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0072\u0065\u0064\u0065\u006d\u0070\u0074\u0069\u006f\u006e\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};_caff :=args [3].ValueNumber ;if _caff <=0{return MakeErrorResultType (ErrorTypeNum ,"\u0044\u0049\u0053\u0043\u0020\u0072\u0065q\u0075\u0069\u0072e\u0073\u0020\u0072e\u0064\u0065m\u0070\u0074\u0069\u006f\u006e\u0020t\u006f b\u0065\u0020\u0070\u006f\u0073\u0069\u0074\u0069\u0076\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};_ggfa :=0;if _egdcg ==5&&args [4].Type !=ResultTypeEmpty {if args [4].Type !=ResultTypeNumber {return MakeErrorResult ("\u0044\u0049\u0053\u0043\u0020r\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0062\u0061\u0073\u0069\u0073 \u0074\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};_ggfa =int (args [4].ValueNumber );if !_facb (_ggfa ){return MakeErrorResultType (ErrorTypeNum ,"\u0049\u006e\u0063\u006f\u0072\u0072e\u0063\u0074\u0020\u0062\u0061\u0073\u0069\u0073\u0020\u0061\u0072\u0067\u0075m\u0065\u006e\u0074\u0020\u0066\u006f\u0072 \u0044\u0049\u0053\u0043");};};_ebg ,_gfee :=_gacb (_dedb ,_fgfa ,_ggfa );if _gfee .Type ==ResultTypeError {return _gfee ;};return MakeNumberResult ((_caff -_dcda )/_caff /_ebg );};const _aeae ="\u0052\u0065\u0073\u0075\u006c\u0074\u0054\u0079\u0070\u0065U\u006e\u006b\u006e\u006f\u0077\u006e\u0052\u0065\u0073u\u006c\u0074\u0054y\u0070\u0065\u004e\u0075\u006d\u0062\u0065\u0072\u0052\u0065s\u0075\u006c\u0074\u0054\u0079\u0070\u0065\u0053\u0074\u0072\u0069\u006e\u0067\u0052\u0065\u0073\u0075\u006c\u0074\u0054\u0079\u0070\u0065\u004c\u0069\u0073\u0074\u0052\u0065\u0073\u0075lt\u0054\u0079p\u0065\u0041r\u0072\u0061\u0079\u0052\u0065\u0073\u0075\u006c\u0074\u0054\u0079\u0070\u0065\u0045\u0072\u0072\u006f\u0072\u0052\u0065\u0073\u0075\u006c\u0074\u0054\u0079\u0070\u0065\u0045\u006d\u0070\u0074\u0079";func _eceg (_cbcg Context ,_gagda ,_agdea string )(string ,string ){_gdaf :=_gagda +"\u0031";_egdcc :=_cbcg .LastRow (_gagda );_bfcc :=_agdea +_d .Itoa (_egdcc );return _gdaf ,_bfcc ;};func _fdga (_gefe string ,_deeb _ad .Time )(_ad .Time ,error ){_afcd ,_ ,_ebgc :=_b .ParseFloat (_gefe ,10,128,_b .ToNearestEven );if _ebgc !=nil {return _ad .Time {},_ebgc ;};_ggfdc :=new (_b .Float );_ggfdc .SetUint64 (uint64 (24*_ad .Hour ));_afcd .Mul (_afcd ,_ggfdc );_dcec ,_ :=_afcd .Uint64 ();_bdfg :=_deeb .Add (_ad .Duration (_dcec ));return _acbgc (_bdfg ),nil ;};

// CeilingPrecise is an implementation of the CEILING.PRECISE function which
// returns the ceiling of a number.
func CeilingPrecise (args []Result )Result {if len (args )==0{return MakeErrorResult ("\u0043\u0045\u0049\u004c\u0049\u004e\u0047\u002eP\u0052\u0045\u0043IS\u0045\u0028\u0029\u0020\u0072\u0065q\u0075\u0069\u0072\u0065\u0073\u0020\u0061\u0074\u0020\u006c\u0065\u0061\u0073\u0074\u0020o\u006e\u0065\u0020\u0061\u0072\u0067\u0075\u006de\u006e\u0074");};if len (args )> 2{return MakeErrorResult ("\u0043\u0045I\u004c\u0049\u004e\u0047\u002e\u0050\u0052\u0045\u0043\u0049\u0053\u0045\u0028\u0029\u0020\u0061\u006c\u006c\u006f\u0077\u0073\u0020\u0061\u0074\u0020\u006d\u006f\u0073\u0074\u0020\u0074\u0077\u006f\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0073");};_gdcbcb :=args [0].AsNumber ();if _gdcbcb .Type !=ResultTypeNumber {return MakeErrorResult ("\u0066\u0069r\u0073\u0074\u0020\u0061\u0072g\u0075\u006d\u0065\u006e\u0074 \u0074\u006f\u0020\u0043\u0045\u0049\u004c\u0049\u004e\u0047\u002e\u0050\u0052\u0045\u0043\u0049\u0053\u0045\u0028\u0029\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020\u0061\u0020\u006e\u0075\u006d\u0062\u0065\u0072");};_egcfe :=float64 (1);if _gdcbcb .ValueNumber < 0{_egcfe =-1;};if len (args )> 1{_egbf :=args [1].AsNumber ();if _egbf .Type !=ResultTypeNumber {return MakeErrorResult ("\u0073\u0065\u0063\u006f\u006e\u0064\u0020\u0061\u0072\u0067\u0075m\u0065\u006e\u0074\u0020\u0074\u006f\u0020\u0043E\u0049L\u0049\u004e\u0047\u002e\u0050\u0052\u0045\u0043\u0049\u0053\u0045\u0028\u0029\u0020\u006d\u0075\u0073\u0074 \u0062\u0065\u0020\u0061\u0020\u006e\u0075\u006d\u0062\u0065\u0072");};_egcfe =_aca .Abs (_egbf .ValueNumber );};if len (args )==1{return MakeNumberResult (_aca .Ceil (_gdcbcb .ValueNumber ));};_gace :=_gdcbcb .ValueNumber ;_gace ,_fabb :=_aca .Modf (_gace /_egcfe );if _fabb !=0{if _gdcbcb .ValueNumber > 0{_gace ++;};};return MakeNumberResult (_gace *_egcfe );};func _abceg (_feec Result ,_bdgd *criteriaParsed )bool {if _feec .Type ==ResultTypeEmpty {return false ;};if _bdgd ._ddefc {return _feec .ValueNumber ==_bdgd ._geab ;}else {_cegd :=_bf .ToLower (_feec .ValueString );return _bdgd ._daafa ==_cegd ||_gf .Match (_bdgd ._daafa ,_cegd );};};

// Averagea implements the AVERAGEA function, AVERAGEA counts cells that contain
// text as a zero where AVERAGE ignores them entirely.
func Averagea (args []Result )Result {_ddead ,_aagf :=_gcdg (args ,true );if _aagf ==0{return MakeErrorResultType (ErrorTypeDivideByZero ,"\u0041\u0056\u0045\u0052AG\u0045\u0020\u0064\u0069\u0076\u0069\u0064\u0065\u0020\u0062\u0079\u0020\u007a\u0065r\u006f");};return MakeNumberResult (_ddead /_aagf );};func _ggaf (_ffff []Result ,_affga bool )Result {_gfdg :="\u004d\u0041\u0058";if _affga {_gfdg ="\u004d\u0041\u0058\u0041";};if len (_ffff )==0{return MakeErrorResult (_gfdg +"\u0020\u0072\u0065q\u0075\u0069\u0072\u0065s\u0020\u0061\u0074\u0020\u006c\u0065\u0061s\u0074\u0020\u006f\u006e\u0065\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};_bcbbb :=-_aca .MaxFloat64 ;for _ ,_ccdf :=range _ffff {switch _ccdf .Type {case ResultTypeNumber :if (_affga ||!_ccdf .IsBoolean )&&_ccdf .ValueNumber > _bcbbb {_bcbbb =_ccdf .ValueNumber ;};case ResultTypeList ,ResultTypeArray :_cbce :=_ggaf (_ccdf .ListValues (),_affga );if _cbce .ValueNumber > _bcbbb {_bcbbb =_cbce .ValueNumber ;};case ResultTypeEmpty :case ResultTypeString :_aade :=0.0;if _affga {_aade =_ccdf .AsNumber ().ValueNumber ;};if _aade > _bcbbb {_bcbbb =_aade ;};default:_cc .Log .Debug ("\u0075\u006e\u0068\u0061\u006e\u0064\u006c\u0065\u0064\u0020"+_gfdg +"\u0028\u0029\u0020\u0061rg\u0075\u006d\u0065\u006e\u0074\u0020\u0074\u0079\u0070\u0065\u0020\u0025\u0073",_ccdf .Type );};};if _bcbbb ==-_aca .MaxFloat64 {_bcbbb =0;};return MakeNumberResult (_bcbbb );};

// Today is an implementation of the Excel TODAY() function.
func Today (args []Result )Result {if len (args )> 0{return MakeErrorResult ("\u0054\u004f\u0044A\u0059\u0020\u0064\u006fe\u0073\u006e\u0027\u0074\u0020\u0072\u0065q\u0075\u0069\u0072\u0065\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0073");};_bcbb :=_ad .Now ();_ ,_ded :=_bcbb .Zone ();_adcd :=_dca (_dgf ,_bcbb .Unix ()+int64 (_ded ))+1;return MakeNumberResult (_adcd );};

// FunctionCall is a function call expression.
type FunctionCall struct{_fcgae string ;_agdag []Expression ;};

// Update returns the same object as updating sheet references does not affect SheetPrefixExpr.
func (_fgda SheetPrefixExpr )Update (q *_fe .UpdateQuery )Expression {return _fgda };func (_gfeac Result )String ()string {return _gfeac .Value ()};

// Coupncd implements the Excel COUPNCD function.
func Coupncd (args []Result )Result {_egbe ,_eacd :=_fcdg (args ,"\u0043O\u0055\u0050\u004e\u0043\u0044");if _eacd .Type ==ResultTypeError {return _eacd ;};_abcdb :=_cgf (_egbe ._cgfd );_fea :=_cgf (_egbe ._fccg );_cedb :=_egbe ._eccb ;_becd :=_adece (_abcdb ,_fea ,_cedb );_cfdd ,_affc ,_edb :=_becd .Date ();return MakeNumberResult (_dbeg (_cfdd ,int (_affc ),_edb ));};func _agfb (_egf int )bool {return _egf ==0||_egf ==4};func _ebc (_bc Result )bool {if _bc .Type ==ResultTypeString {return _bc .ValueString =="";};return _bc .ValueNumber ==0;};

// Column implements the Excel COLUMN function.
func Column (args []Result )Result {if len (args )< 1{return MakeErrorResult ("\u0043\u004f\u004c\u0055M\u004e\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073 \u006fn\u0065\u0020\u0061\u0072\u0067\u0075\u006de\u006e\u0074");};_cebf :=args [0].Ref ;if _cebf .Type !=ReferenceTypeCell {return MakeErrorResult ("\u0043\u004f\u004c\u0055\u004dN\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0061\u006e\u0020a\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u006f\u0066\u0020\u0074\u0079\u0070\u0065\u0020\u0072\u0065\u0066\u0065\u0072\u0065\u006e\u0063e");};_cceb ,_badgd :=_de .ParseCellReference (_cebf .Value );if _badgd !=nil {return MakeErrorResult ("I\u006e\u0063\u006f\u0072re\u0063t\u0020\u0072\u0065\u0066\u0065r\u0065\u006e\u0063\u0065\u003a\u0020"+_cebf .Value );};return MakeNumberResult (float64 (_cceb .ColumnIdx +1));};

// Coupdaysnc implements the Excel COUPDAYSNC function.
func Coupdaysnc (args []Result )Result {_egdgb ,_bbbb :=_fcdg (args ,"\u0043\u004f\u0055\u0050\u0044\u0041\u0059\u0053\u004e\u0043");if _bbbb .Type ==ResultTypeError {return _bbbb ;};return MakeNumberResult (_eeag (_egdgb ._cgfd ,_egdgb ._fccg ,_egdgb ._eccb ,_egdgb ._bgf ));};type parsedReplaceObject struct{_ebagf string ;_fdaaa int ;_ddfb int ;_fdgb string ;};func _gcdg (_fbcgd []Result ,_feeb bool )(float64 ,float64 ){_ebefc :=0.0;_efag :=0.0;for _ ,_bgfc :=range _fbcgd {switch _bgfc .Type {case ResultTypeNumber :if _feeb ||!_bgfc .IsBoolean {_efag +=_bgfc .ValueNumber ;_ebefc ++;};case ResultTypeList ,ResultTypeArray :_babgad ,_dgab :=_gcdg (_bgfc .ListValues (),_feeb );_efag +=_babgad ;_ebefc +=_dgab ;case ResultTypeString :if _feeb {_ebefc ++;};case ResultTypeEmpty :};};return _efag ,_ebefc ;};

// Update updates the horizontal range references after removing a row/column.
func (_baaaa HorizontalRange )Update (q *_fe .UpdateQuery )Expression {return _baaaa };

// Reference returns an invalid reference for FunctionCall.
func (_ddcc FunctionCall )Reference (ctx Context ,ev Evaluator )Reference {return ReferenceInvalid };

// FactDouble is an implementation of the excel FACTDOUBLE function which
// returns the double factorial of a positive numeric input.
func FactDouble (args []Result )Result {if len (args )!=1{return MakeErrorResult ("\u0046\u0041C\u0054\u0044\u004f\u0055\u0042\u004c\u0045\u0028\u0029\u0020\u0061\u0063\u0063\u0065\u0070\u0074\u0073\u0020\u0061\u0020\u0073\u0069\u006e\u0067\u006c\u0065\u0020\u006e\u0075\u006d\u0065\u0072\u0069\u0063\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};_abcb :=args [0].AsNumber ();if _abcb .Type !=ResultTypeNumber {return MakeErrorResult ("\u0046\u0041C\u0054\u0044\u004f\u0055\u0042\u004c\u0045\u0028\u0029\u0020\u0061\u0063\u0063\u0065\u0070\u0074\u0073\u0020\u0061\u0020\u0073\u0069\u006e\u0067\u006c\u0065\u0020\u006e\u0075\u006d\u0065\u0072\u0069\u0063\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};if _abcb .ValueNumber < 0{return MakeErrorResult ("\u0046A\u0043\u0054D\u004f\u0055\u0042\u004cE\u0028\u0029\u0020a\u0063\u0063\u0065\u0070\u0074\u0073\u0020\u006f\u006ely\u0020\u0070\u006fs\u0069\u0074i\u0076\u0065\u0020\u0061\u0072\u0067u\u006d\u0065n\u0074\u0073");};_gbddg :=float64 (1);_gcag :=_aca .Trunc (_abcb .ValueNumber );for _efgc :=_gcag ;_efgc > 1;_efgc -=2{_gbddg *=_efgc ;};return MakeNumberResult (_gbddg );};

// Update returns the same object as updating sheet references does not affect EmptyExpr.
func (_ce EmptyExpr )Update (q *_fe .UpdateQuery )Expression {return _ce };const _deec =57370;func _dafdc (_affgb []Result ,_fbaf rmode )Result {if len (_affgb )!=2{return MakeErrorResult ("\u0052\u004f\u0055\u004e\u0044\u0028\u0029\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0074\u0077\u006f\u0020\u006e\u0075\u006de\u0072\u0069\u0063\u0020\u0061r\u0067\u0075m\u0065\u006e\u0074\u0073");};_eff :=_affgb [0].AsNumber ();if _eff .Type !=ResultTypeNumber {return MakeErrorResult ("\u0066\u0069\u0072s\u0074\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0020\u0074\u006f\u0020\u0052\u004f\u0055\u004e\u0044\u0028\u0029\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065 \u0061\u0020\u006e\u0075\u006d\u0062\u0065\u0072");};_cdef :=_affgb [1].AsNumber ();if _cdef .Type !=ResultTypeNumber {return MakeErrorResult ("\u0073\u0065\u0063\u006f\u006e\u0064\u0020a\u0072\u0067\u0075m\u0065\u006e\u0074\u0020t\u006f\u0020\u0052\u004f\u0055\u004e\u0044\u0028\u0029\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020\u0061\u0020\u006e\u0075\u006d\u0062\u0065\u0072");};_cfaec :=_cdef .ValueNumber ;_cdfa :=_eff .ValueNumber ;_cabb :=1.0;if _cfaec > 0{_cabb =_aca .Pow (1/10.0,_cfaec );}else {_cabb =_aca .Pow (10.0,-_cfaec );};_cdfa ,_gffe :=_aca .Modf (_cdfa /_cabb );switch _fbaf {case _ddgb :const _eaff =0.499999999;if _gffe >=_eaff {_cdfa ++;}else if _gffe <=-_eaff {_cdfa --;};case _ggdc :case _dcfec :if _gffe > 0{_cdfa ++;}else if _gffe < 0{_cdfa --;};};return MakeNumberResult (_cdfa *_cabb );};func _ffd (_gabg ,_dcfef ,_adgg ,_dcdc ,_bcgb ,_gdff float64 ,_cgcd int )(float64 ,Result ){_ebefe :=int (_gdff );_dced :=_gfbe (_gabg ,_dcfef ,_ebefe ,_cgcd );_gagg :=_eeag (_gabg ,_dcfef ,_ebefe ,_cgcd )/_dced ;_acfc ,_egbg :=_fba (_gabg ,_dcfef ,_ebefe ,_cgcd );if _egbg .Type ==ResultTypeError {return 0,_egbg ;};_daaa :=_feba (_gabg ,_dcfef ,_ebefe ,_cgcd );_dfgge :=_bcgb /_aca .Pow (1+_dcdc /_gdff ,_acfc -1+_gagg );_dfgge -=100*_adgg /_gdff *_daaa /_dced ;_cafec :=100*_adgg /_gdff ;_defd :=1+_dcdc /_gdff ;for _fbde :=0.0;_fbde < _acfc ;_fbde ++{_dfgge +=_cafec /_aca .Pow (_defd ,_fbde +_gagg );};return _dfgge ,MakeEmptyResult ();};

// Fv implements the Excel FV function.
func Fv (args []Result )Result {_fecb :=len (args );if _fecb < 3||_fecb > 5{return MakeErrorResult ("\u0046\u0056\u0020\u0072\u0065q\u0075\u0069\u0072\u0065\u0073\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020o\u0066\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074\u0073\u0020\u0069\u006e\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u006f\u0066\u0020\u0033\u0020\u0061\u006e\u0064\u00205");};if args [0].Type !=ResultTypeNumber {return MakeErrorResult ("\u0046\u0056\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0072\u0061\u0074\u0065\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u006eu\u006d\u0062\u0065\u0072\u0020a\u0072\u0067u\u006d\u0065\u006e\u0074");};_aeeg :=args [0].ValueNumber ;if args [1].Type !=ResultTypeNumber {return MakeErrorResult ("\u0046\u0056\u0020\u0072\u0065q\u0075\u0069\u0072\u0065\u0073\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020o\u0066\u0020\u0070\u0065\u0072\u0069\u006f\u0064\u0073\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006et");};_aagd :=args [1].ValueNumber ;if _aagd !=float64 (int (_aagd )){return MakeErrorResultType (ErrorTypeNum ,"\u0046\u0056\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u006ff\u0020\u0070\u0065\u0072\u0069\u006f\u0064\u0073\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020a\u0072\u0067\u0075\u006d\u0065n\u0074");};if args [2].Type !=ResultTypeNumber {return MakeErrorResult ("\u0046\u0056\u0020\u0072\u0065q\u0075\u0069\u0072\u0065\u0073\u0020\u0070\u0061\u0079\u006d\u0065\u006e\u0074 \u0074\u006f\u0020\u0062\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};_bedbf :=args [2].ValueNumber ;_gffc :=0.0;if _fecb >=4&&args [3].Type !=ResultTypeEmpty {if args [3].Type !=ResultTypeNumber {return MakeErrorResult ("F\u0056\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065s\u0020\u0070\u0072\u0065\u0073\u0065\u006et \u0076\u0061\u006c\u0075e\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u006e\u0075mb\u0065\u0072 \u0061\u0072\u0067\u0075\u006d\u0065\u006e\u0074");};_gffc =args [3].ValueNumber ;};_abce :=0;if _fecb ==5&&args [4].Type !=ResultTypeEmpty {if args [4].Type !=ResultTypeNumber {return MakeErrorResult ("\u0046\u0056\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073\u0020\u0074\u0079\u0070\u0065\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u006eu\u006d\u0062\u0065\u0072\u0020a\u0072\u0067u\u006d\u0065\u006e\u0074");};_abce =int (args [4].ValueNumber );if _abce !=0{_abce =1;};};return MakeNumberResult (_cacd (_aeeg ,_aagd ,_bedbf ,_gffc ,_abce ));};func _faac (_cegfg int )string {if _cegfg >=0&&_cegfg < len (_cggd ){if _cggd [_cegfg ]!=""{return _cggd [_cegfg ];};};return _a .Sprintf ("\u0073\u0074\u0061\u0074\u0065\u002d\u0025\u0076",_cegfg );};

// Eval evaluates the binary expression using the context given.
func (_cgc BinaryExpr )String ()string {_bbg :="";switch _cgc ._df {case BinOpTypePlus :_bbg ="\u002b";case BinOpTypeMinus :_bbg ="\u002d";case BinOpTypeMult :_bbg ="\u002a";case BinOpTypeDiv :_bbg ="\u002f";case BinOpTypeExp :_bbg ="\u005e";case BinOpTypeLT :_bbg ="\u003c";case BinOpTypeGT :_bbg ="\u003e";case BinOpTypeEQ :_bbg ="\u003d";case BinOpTypeLEQ :_bbg ="\u003c\u003d";case BinOpTypeGEQ :_bbg ="\u003e\u003d";case BinOpTypeNE :_bbg ="\u003c\u003e";case BinOpTypeConcat :_bbg ="\u0026";};return _cgc ._db .String ()+_bbg +_cgc ._cg .String ();};func _ede (_eca ,_adec ,_aac int )bool {if _adec < 1||_adec > 12{return false ;};if _aac < 1{return false ;};return _aac <=_egdc (_eca ,_adec );};const _efc ="\u0028\u0028\u005b\u0030\u002d\u0039\u005d\u0029\u002b\u0029\u003a\u0028\u0028\u005b\u0030-\u0039]\u0029\u002b\u0029\u0028\u0020\u0028\u0061\u006d\u007c\u0070\u006d\u0029\u0029\u003f";

// Mround is an implementation of the Excel MROUND function.  It is not a
// generic rounding function and has some oddities to match Excel's behavior.
func Mround (args []Result )Result {if len (args )!=2{return MakeErrorResult ("\u004d\u0052\u004f\u0055\u004e\u0044\u0028\u0029\u0020\u0072\u0065\u0071\u0075i\u0072\u0065\u0073\u0020\u0074\u0077o\u0020\u006e\u0075\u006d\u0065\u0072\u0069\u0063\u0020\u0061\u0072\u0067\u0075m\u0065\u006e\u0074\u0073");};_fgaf :=args [0].AsNumber ();if _fgaf .Type !=ResultTypeNumber {return MakeErrorResult ("\u0066\u0069\u0072\u0073\u0074\u0020\u0061r\u0067\u0075\u006de\u006e\u0074\u0020\u0074o\u0020\u004d\u0052\u004f\u0055\u004e\u0044\u0028\u0029\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020\u0061\u0020\u006e\u0075\u006d\u0062\u0065\u0072");};_fddg :=float64 (1);_cdcfa :=args [1].AsNumber ();if _cdcfa .Type !=ResultTypeNumber {return MakeErrorResult ("\u0073e\u0063\u006fn\u0064\u0020\u0061\u0072g\u0075\u006d\u0065n\u0074\u0020\u0074\u006f\u0020\u004d\u0052\u004f\u0055ND\u0028\u0029\u0020m\u0075\u0073t\u0020\u0062\u0065\u0020\u0061\u0020n\u0075\u006db\u0065\u0072");};_fddg =_cdcfa .ValueNumber ;if _fddg < 0&&_fgaf .ValueNumber > 0||_fddg > 0&&_fgaf .ValueNumber < 0{return MakeErrorResult ("\u004d\u0052\u004fUN\u0044\u0028\u0029\u0020\u0061\u0072\u0067\u0075\u006de\u006et\u0020s\u0069g\u006e\u0073\u0020\u006d\u0075\u0073\u0074\u0020\u006d\u0061\u0074\u0063\u0068");};_bcbbg :=_fgaf .ValueNumber ;_bcbbg ,_agfg :=_aca .Modf (_bcbbg /_fddg );if _aca .Trunc (_agfg +0.5)> 0{_bcbbg ++;};return MakeNumberResult (_bcbbg *_fddg );};type yySymType struct{_gfgbbe int ;_ffef *node ;_dbade Expression ;_adaa []Expression ;_fdeb [][]Expression ;};const _ffgg int =30;const _bcbg ="\u0028\u0028\u005b\u0030\u002d\u0039]\u0029\u002b\u0029:\u0028\u0028\u005b0\u002d\u0039\u005d\u0029\u002b\u0029\u003a\u0028\u0028\u005b0\u002d\u0039\u005d\u0029\u002b(\\\u002e\u0028\u005b\u0030\u002d\u0039\u005d\u0029\u002b\u0029\u003f\u0029\u0028\u0020\u0028\u0061\u006d\u007c\u0070\u006d\u0029\u0029\u003f";