//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package convert ;import (_e "github.com/unidoc/unioffice/common/logger";_cf "github.com/unidoc/unioffice/common/tempstorage";_ed "github.com/unidoc/unioffice/internal/convertutils";_ac "github.com/unidoc/unioffice/measurement";_b "github.com/unidoc/unioffice/schema/soo/dml";
_f "github.com/unidoc/unioffice/schema/soo/dml/chart";_d "github.com/unidoc/unioffice/schema/soo/ofc/sharedTypes";_ab "github.com/unidoc/unioffice/schema/soo/sml";_bb "github.com/unidoc/unioffice/spreadsheet";_cd "github.com/unidoc/unioffice/spreadsheet/reference";
_gd "github.com/unidoc/unipdf/v3/creator";_c "github.com/unidoc/unipdf/v3/model";_a "image";_ge "strconv";);func (_dfb *convertContext )makePages (){for _ ,_aga :=range _dfb ._cdfg {for _ ,_ddg :=range _dfb ._bbbe {_aga ._bfef =append (_aga ._bfef ,&page {_fcc :[]*pageRow {},_dgfg :_aga ,_agag :_ddg });
};};};var _gaafe =map[uint32 ]_gd .PageSize {1:_gd .PageSize {8.5*_ac .Inch ,11*_ac .Inch },2:_gd .PageSize {8.5*_ac .Inch ,11*_ac .Inch },3:_gd .PageSize {11*_ac .Inch ,17*_ac .Inch },4:_gd .PageSize {17*_ac .Inch ,11*_ac .Inch },5:_gd .PageSize {8.5*_ac .Inch ,14*_ac .Inch },6:_gd .PageSize {5.5*_ac .Inch ,8.5*_ac .Inch },7:_gd .PageSize {7.5*_ac .Inch ,10*_ac .Inch },8:_gd .PageSize {_agab (297),_agab (420)},9:_gd .PageSize {_agab (210),_agab (297)},10:_gd .PageSize {_agab (210),_agab (297)},11:_gd .PageSize {_agab (148),_agab (210)},70:_gd .PageSize {_agab (105),_agab (148)},12:_gd .PageSize {_agab (250),_agab (354)},13:_gd .PageSize {_agab (182),_agab (257)},14:_gd .PageSize {8.5*_ac .Inch ,13*_ac .Inch },20:_gd .PageSize {4.125*_ac .Inch ,9.5*_ac .Inch },27:_gd .PageSize {_agab (110),_agab (220)},28:_gd .PageSize {_agab (162),_agab (229)},34:_gd .PageSize {_agab (250),_agab (176)},29:_gd .PageSize {_agab (324),_agab (458)},30:_gd .PageSize {_agab (229),_agab (324)},31:_gd .PageSize {_agab (114),_agab (162)},37:_gd .PageSize {3.88*_ac .Inch ,7.5*_ac .Inch },43:_gd .PageSize {_agab (100),_agab (148)},69:_gd .PageSize {_agab (200),_agab (148)}};
const _gf =2;func (_dbb *convertContext )makeCols (){_cgd :=_dbb ._baab ;_fcg :=_cgd .X ();_gfef :=[]*colInfo {};_bbd :=[]colWidthRange {};if _cgg :=_fcg .Cols ;len (_cgg )> 0{for _ ,_bd :=range _cgg [0].Col {_cbe :=65.0;if _gcb :=_bd .WidthAttr ;_gcb !=nil {if *_gcb > 0.83{*_gcb -=0.83;
};if *_gcb <=1{_cbe =*_gcb *11;}else {_cbe =5+*_gcb *6;};};_ecg :=int (_bd .MinAttr -1);_bde :=int (_bd .MaxAttr -1);_bbd =append (_bbd ,colWidthRange {_becda :_ecg ,_defb :_bde ,_aggg :_cbe ,_ecaf :_dbb .getStyle (_bd .StyleAttr )});};};_fbb :=0;for _ceb :=0;
_ceb <=_dbb ._egdb ;_ceb ++{var _geb float64 ;var _bae *style ;if _fbb >=len (_bbd ){_geb =65;}else {_bg :=_bbd [_fbb ];if _ceb >=_bg ._becda &&_ceb <=_bg ._defb {_geb =_bg ._aggg ;_bae =_bg ._ecaf ;if _ceb ==_bg ._defb {_fbb ++;};}else {_geb =65;};};_gfef =append (_gfef ,&colInfo {_aeag :_geb ,_ecgd :_bae });
};_dbb ._agbe =_gfef ;};func (_dadf *convertContext )getColorStringFromSmlColor (_ffde *_ab .CT_Color )*string {var _gcde string ;if _ffde .RgbAttr !=nil {_gcde =*_ffde .RgbAttr ;}else if _ffde .IndexedAttr !=nil &&*_ffde .IndexedAttr < 64{_gcde =_fdbg [*_ffde .IndexedAttr ];
}else if _ffde .ThemeAttr !=nil {_bdbf :=*_ffde .ThemeAttr ;_gcde =_dadf .getColorFromTheme (_bdbf );};if _gcde ==""{return nil ;};if len (_gcde )> 6{_gcde =_gcde [(len (_gcde )-6):];};if _ffde .TintAttr !=nil {_fcdb :=*_ffde .TintAttr ;_gcde =_ed .AdjustColorByTint (_gcde ,_fcdb );
};_gcde ="\u0023"+_gcde ;return &_gcde ;};

// RegisterFont makes a PdfFont accessible for using in converting to PDF.
func RegisterFont (name string ,style FontStyle ,font *_c .PdfFont ){_ed .RegisterFont (name ,style ,font );};type cell struct{_efa _ab .ST_CellType ;_eeeg int ;_bagg float64 ;_gbc []*line ;_bgdg float64 ;_aggd float64 ;_bfec float64 ;_gdcb float64 ;_dbg float64 ;
_cebg *_gd .TextStyle ;_gedad *border ;_bcec *border ;_fgga *border ;_dgb *border ;_ebbeb bool ;_gfc bool ;};func (_ffga *convertContext )getImage (_bceb _a .Image ,_acce ,_ade ,_eda ,_bgd ,_bfcd ,_ebd float64 ,_bbda _ed .ImgPart )*_gd .Image {_bgd +=_ffga ._bca ;
_eda +=_ffga ._beeb ;_agef ,_gaaf :=_ed .GetImage (_ffga ._bad ,_bceb ,_acce ,_ade ,_eda ,_bgd ,_bfcd ,_ebd ,_bbda );if _gaaf !=nil {_e .Log .Debug ("\u0043\u0061\u006eno\u0074\u0020\u0067\u0065\u0074\u0020\u0061\u006e\u0020\u0069\u006d\u0061\u0067\u0065\u003a\u0020\u0025\u0073",_gaaf );
return nil ;};return _agef ;};func (_ad *convertContext )distributeAnchors (){for _ ,_eeg :=range _ad ._dbc {_bdg ,_dec :=_eeg ._fcge ,_eeg ._ddfg ;_eef ,_ccg :=_eeg ._faef ,_eeg ._gcff ;_fda ,_dbd :=_eeg ._bcecc ,_eeg ._deed ;_afc ,_gdce :=_eeg ._caa ,_eeg ._dfga ;
var _def ,_dfg ,_cgb ,_geaf *page ;for _ ,_ecb :=range _ad ._cdfg {for _ ,_ebb :=range _ecb ._bfef {if _bdg >=_ebb ._agag ._dbdb &&_bdg < _ebb ._agag ._fbgb {if _eef >=_ebb ._dgfg ._defeb &&_eef < _ebb ._dgfg ._faf {_ebb ._bddb =true ;_def =_ebb ;};if _afc >=_ebb ._dgfg ._defeb &&_afc < _ebb ._dgfg ._faf {_ebb ._bddb =true ;
_dfg =_ebb ;};};if _fda >=_ebb ._agag ._dbdb &&_fda < _ebb ._agag ._fbgb {if _eef >=_ebb ._dgfg ._defeb &&_eef < _ebb ._dgfg ._faf {_ebb ._bddb =true ;_geaf =_ebb ;};if _afc >=_ebb ._dgfg ._defeb &&_afc < _ebb ._dgfg ._faf {_ebb ._bddb =true ;_cgb =_ebb ;
};};};};_eca :=_def !=_dfg ;_ef :=_def !=_geaf ;if _eca &&_ef {_fddb :=_ad ._agbe [_eef ]._ccaa +_ac .FromEMU (_ccg );_agc :=_def ._dgfg ._baba ;_fae :=_ad ._agbe [_afc ]._ccaa +_ac .FromEMU (_gdce );_cee :=_ad ._gadc [_bdg ]._fadb +_ac .FromEMU (_dec );
_ebbb :=float64 (_def ._agag ._bggb );_fggc :=_ad ._gadc [_fda ]._fadb +_ac .FromEMU (_dbd );_eega :=_fae +_agc -_fddb ;_cebe :=_fggc +_ebbb -_cee ;_acgf :=_ad .imageFromAnchor (_eeg ,_eega ,_cebe );_def ._fgb =append (_def ._fgb ,_ad .getImage (_acgf ,_cebe ,_eega ,_fddb ,_cee ,_agc -_fddb ,_ebbb -_cee ,_ed .ImgPart_lt ));
_dfg ._fgb =append (_dfg ._fgb ,_ad .getImage (_acgf ,_cebe ,_eega ,0,_cee ,_agc -_fddb ,_ebbb -_cee ,_ed .ImgPart_rt ));_geaf ._fgb =append (_geaf ._fgb ,_ad .getImage (_acgf ,_cebe ,_eega ,_fddb ,0,_agc -_fddb ,_ebbb -_cee ,_ed .ImgPart_lb ));_cgb ._fgb =append (_cgb ._fgb ,_ad .getImage (_acgf ,_cebe ,_eega ,0,0,_agc -_fddb ,_ebbb -_cee ,_ed .ImgPart_rb ));
}else if _eca {_bab :=_ad ._gadc [_bdg ]._fadb +_ac .FromEMU (_dec );_beeg :=_ad ._gadc [_fda ]._fadb +_ac .FromEMU (_dbd );_fcb :=_ad ._agbe [_eef ]._ccaa +_ac .FromEMU (_ccg );_ece :=_def ._dgfg ._baba ;_afcb :=_ad ._agbe [_afc ]._ccaa +_ac .FromEMU (_gdce );
_dba :=_afcb +_ece -_fcb ;_eba :=_beeg -_bab ;_edda :=_ad .imageFromAnchor (_eeg ,_dba ,_eba );_def ._fgb =append (_def ._fgb ,_ad .getImage (_edda ,_eba ,_dba ,_fcb ,_bab ,_ece -_fcb ,0,_ed .ImgPart_l ));_dfg ._fgb =append (_dfg ._fgb ,_ad .getImage (_edda ,_eba ,_dba ,0,_bab ,_ece -_fcb ,0,_ed .ImgPart_r ));
}else if _ef {_bgf :=_ad ._agbe [_eef ]._ccaa +_ac .FromEMU (_ccg );_abff :=_ad ._agbe [_afc ]._ccaa +_ac .FromEMU (_gdce );_ceee :=_ad ._gadc [_bdg ]._fadb +_ac .FromEMU (_dec );_gdee :=float64 (_def ._agag ._bggb );_dee :=_ad ._gadc [_fda ]._fadb +_ac .FromEMU (_dbd );
_aaa :=_abff -_bgf ;_eff :=_dee +_gdee -_ceee ;_efe :=_ad .imageFromAnchor (_eeg ,_aaa ,_eff );_def ._fgb =append (_def ._fgb ,_ad .getImage (_efe ,_eff ,_aaa ,_bgf ,_ceee ,0,_gdee -_ceee ,_ed .ImgPart_t ));_geaf ._fgb =append (_geaf ._fgb ,_ad .getImage (_efe ,_eff ,_aaa ,_bgf ,0,0,_gdee -_ceee ,_ed .ImgPart_b ));
}else {_dge :=_ad ._agbe [_eef ]._ccaa +_ac .FromEMU (_ccg );_dab :=_ad ._agbe [_afc ]._ccaa +_ac .FromEMU (_gdce );_gbd :=_ad ._gadc [_bdg ]._fadb +_ac .FromEMU (_dec );_aec :=_ad ._gadc [_fda ]._fadb +_ac .FromEMU (_dbd );_ffe :=_dab -_dge ;_bcfg :=_aec -_gbd ;
_aff :=_ad .imageFromAnchor (_eeg ,_ffe ,_bcfg );_def ._fgb =append (_def ._fgb ,_ad .getImage (_aff ,_bcfg ,_ffe ,_dge ,_gbd ,0,0,_ed .ImgPart_whole ));};};};type rowspan struct{_bggb float64 ;_dbdb int ;_fbgb int ;};func (_fc *convertContext )makeAnchors (){_ga ,_bcf :=_fc ._baab .GetDrawing ();
if _ga !=nil {for _ ,_dg :=range _ga .EG_Anchor {_gfe :=&anchor {};if _cg :=_dg .TwoCellAnchor ;_cg !=nil {_ba ,_eddf :=_cg .From ,_cg .To ;if _ba ==nil ||_eddf ==nil {return ;};_gfe ._fcge =int (_ba .Row );_gfe ._ddfg =_ed .FromSTCoordinate (_ba .RowOff );
_gfe ._faef =int (_ba .Col );_gfe ._gcff =_ed .FromSTCoordinate (_ba .ColOff );_gfe ._bcecc =int (_eddf .Row );_gfe ._deed =_ed .FromSTCoordinate (_eddf .RowOff );_gfe ._caa =int (_eddf .Col );_gfe ._dfga =_ed .FromSTCoordinate (_eddf .ColOff );if _aae :=_cg .Choice ;
_aae !=nil {if _eg :=_aae .Pic ;_eg !=nil {if _abf :=_eg .BlipFill ;_abf !=nil {if _da :=_abf .Blip ;_da !=nil {if _de :=_da .EmbedAttr ;_de !=nil {for _ ,_af :=range _bcf .X ().Relationship {if _af .IdAttr ==*_de {for _ ,_ff :=range _fc ._accd .Images {if _ff .Target ()==_af .TargetAttr {_cc ,_bba :=_cf .Open (_ff .Path ());
if _bba !=nil {_e .Log .Debug ("\u004fp\u0065\u006e\u0020\u0069m\u0061\u0067\u0065\u0020\u0066i\u006ce\u0020e\u0072\u0072\u006f\u0072\u003a\u0020\u0025s",_bba );continue ;};_cfgb ,_ ,_bba :=_a .Decode (_cc );if _bba !=nil {_e .Log .Debug ("\u0044\u0065\u0063\u006fde\u0020\u0069\u006d\u0061\u0067\u0065\u0020\u0065\u0072\u0072\u006f\u0072\u003a\u0020%\u0073",_bba );
continue ;};_gfe ._cgga =_cfgb ;};};};};};};};}else if _ce :=_aae .GraphicFrame ;_ce !=nil {if _fe :=_ce .Graphic ;_fe !=nil {if _ca :=_fe .GraphicData ;_ca !=nil {for _ ,_abfe :=range _ca .Any {if _ea ,_bag :=_abfe .(*_f .Chart );_bag {for _ ,_edf :=range _bcf .X ().Relationship {if _edf .IdAttr ==_ea .IdAttr {_egd :=_fc ._accd .GetChartByTargetId (_edf .TargetAttr );
if _egd !=nil {_gfe ._fegb =_egd ;};};};};};};};};};};if _gfe ._cgga !=nil ||_gfe ._fegb !=nil {_fc ._dbc =append (_fc ._dbc ,_gfe );};};};};func _decc (_fce *symbol ){_dga :=_gd .New ();_bbgf :=_dga .NewStyledParagraph ();_bbgf .SetMargins (0,0,0,0);_eec :=_bbgf .Append (_fce ._edag );
if _fce ._agga !=nil {_eec .Style =*_fce ._agga ;};_fce ._cfa =_bbgf .Height ();if _fce ._ggdg ==0{_fce ._ggdg =_bbgf .Width ();};};

// RegisterFontsFromDirectory registers all fonts from the given directory automatically detecting font families and styles.
func RegisterFontsFromDirectory (dirName string )error {return _ed .RegisterFontsFromDirectory (dirName )};type rowInfo struct{_fadb float64 ;_gaafb bool ;_dda float64 ;_geag *style ;_edaa []*cell ;_gffe float64 ;};func (_eab *convertContext )addRowToPage (_cgcc []*cell ,_aac int ){_cgcgd :=0.0;
_faa :=_eab ._fege ;for _ ,_dbaa :=range _cgcc {if len (_dbaa ._gbc )!=0{_dbaa ._gdcb =_cgcgd ;_cgcgd =_dbaa ._bagg +_dbaa ._bgdg ;};};for _eaf :=len (_cgcc )-1;_eaf >=0;_eaf --{_aecd :=_cgcc [_eaf ];if len (_aecd ._gbc )!=0{_aecd ._dbg =_faa ;_faa =_aecd ._bagg ;
};};_eab ._ddf ._fcc =append (_eab ._ddf ._fcc ,&pageRow {_fgce :_aac ,_edcc :_cgcc });};func _bbfd (_afca *bool )bool {return _afca !=nil &&*_afca };func (_dad *convertContext )fillPages (){for _bea ,_bec :=range _dad ._bbbe {_agaa :=_dad ._gadc [_bec ._dbdb :_bec ._fbgb ];
for _abe ,_daa :=range _agaa {_ede :=0;_cgcg :=0.0;_ged :=[]*cell {};if _daa ._gaafb {for _ ,_afa :=range _daa ._edaa {_ced :=_dad ._cdfg [_ede ];_dad ._ddf =_ced ._bfef [_bea ];_dad ._ddf ._bddb =true ;_gge :=_afa ._aggd ;if _cgcg +_gge > _ced ._baba {_dad .addRowToPage (_ged ,_abe );
_ged =[]*cell {_afa };_cgcg =_gge ;_ede ++;}else {_afa ._bagg =_cgcg ;_ged =append (_ged ,_afa );_cgcg +=_gge ;};};if len (_ged )> 0{_abc :=_dad ._cdfg [_ede ];_dad ._ddf =_abc ._bfef [_bea ];_dad ._ddf ._bddb =true ;_dad .addRowToPage (_ged ,_abe );};
};};};};type colWidthRange struct{_becda int ;_defb int ;_aggg float64 ;_ecaf *style ;};

// FontStyle represents a kind of font styling. It can be FontStyle_Regular, FontStyle_Bold, FontStyle_Italic and FontStyle_BoldItalic.
type FontStyle =_ed .FontStyle ;type pageRow struct{_fgce int ;_edcc []*cell ;};func (_gdb *convertContext )getBorder (_aaag *_ab .CT_BorderPr )*border {_edfe :=&border {};switch _aaag .StyleAttr {case _ab .ST_BorderStyleThin :_edfe ._bgaf =_aa ;case _ab .ST_BorderStyleMedium :_edfe ._bgaf =_aa *2;
case _ab .ST_BorderStyleThick :_edfe ._bgaf =_aa *4;};if _edfe ._bgaf ==0.0{return nil ;};if _dfdb :=_aaag .Color ;_dfdb !=nil {_acac :=_gdb .getColorStringFromSmlColor (_dfdb );if _acac !=nil {_edfe ._dce =_gd .ColorRGBFromHex (*_acac );}else {_edfe ._dce =_gd .ColorBlack ;
};};return _edfe ;};func (_eac *convertContext )drawSheet (){for _beb ,_gfbc :=range _eac ._cdfg {_aeb :=len (_gfbc ._bfef );if _beb ==len (_eac ._cdfg )-1{for _ebbe :=len (_gfbc ._bfef )-1;_ebbe >=0;_ebbe --{if !_gfbc ._bfef [_ebbe ]._bddb {_aeb =_ebbe ;
};};};_bce :=_gfbc ._bfef [:_aeb ];for _ ,_gbdf :=range _bce {_eac ._bad .NewPage ();_eac .drawPage (_gbdf );};};};const _cb =0.64;func (_adcg *convertContext )alignSymbolsVertically (_geda *cell ,_bdd _ab .ST_VerticalAlignment ){var _fgf float64 ;switch _bdd {case _ab .ST_VerticalAlignmentTop :_fgf =_gf ;
if _geda ._ebbeb {_fgf -=_cfg ;}else if _geda ._gfc {_fgf +=4*_cfg ;};for _ ,_gcg :=range _geda ._gbc {_fgf +=_gcg ._gfeb ;_gcg ._dgfgg =_fgf ;_fgf +=_fb ;};case _ab .ST_VerticalAlignmentCenter :_aega :=0.0;for _ ,_acdf :=range _geda ._gbc {_aega +=_acdf ._gfeb +_agab (1);
};_fgf =0.5*(_geda ._bfec -_aega );if _geda ._ebbeb {_fgf -=2*_cfg ;}else if _geda ._gfc {_fgf +=2*_cfg ;};for _ ,_faed :=range _geda ._gbc {_fgf +=_faed ._gfeb +0.5*_fb ;_faed ._dgfgg =_fgf ;_fgf +=0.5*_fb ;};default:_fgf =_geda ._bfec -_gf ;if _geda ._ebbeb {_fgf -=4*_cfg ;
}else if _geda ._gfc {_fgf +=_cfg ;};for _efg :=len (_geda ._gbc )-1;_efg >=0;_efg --{_geda ._gbc [_efg ]._dgfgg =_fgf ;_fgf -=_geda ._gbc [_efg ]._gfeb ;_fgf -=_fb ;};};};func (_bfce *convertContext )getSymbolsFromString (_dgd string ,_gfefa *style )[]*symbol {_bcef :=[]*symbol {};
_deg :=_bfce .makeTextStyleFromCellStyle (_gfefa );for _ ,_adf :=range _dgd {_bcef =append (_bcef ,&symbol {_edag :string (_adf ),_agga :_deg });};return _bcef ;};func _efd (_abb []*symbol )float64 {_cga :=0.0;for _ ,_bgac :=range _abb {if _bgac ._cfa > _cga {_cga =_bgac ._cfa ;
};};return _cga ;};const (FontStyle_Regular FontStyle =0;FontStyle_Bold FontStyle =1;FontStyle_Italic FontStyle =2;FontStyle_BoldItalic FontStyle =3;);func _agea (_beg []*symbol )float64 {_efff :=0.0;for _ ,_cgef :=range _beg {_efff +=_cgef ._ggdg ;};return _efff ;
};type style struct{_eacc *string ;_gdg *float64 ;_cdca *string ;_afg *bool ;_befb *bool ;_fbbb *bool ;_dcgb *bool ;_cfbc *bool ;_fad *border ;_gabg *border ;_ffgc *border ;_acef *border ;_gcfg bool ;_aef _ab .ST_VerticalAlignment ;_bgb _ab .ST_HorizontalAlignment ;
};var _fdbg =[]string {"\u0030\u0030\u0030\u0030\u0030\u0030","\u0066\u0066\u0066\u0066\u0066\u0066","\u0066\u0066\u0030\u0030\u0030\u0030","\u0030\u0030\u0066\u0066\u0030\u0030","\u0030\u0030\u0030\u0030\u0066\u0066","\u0066\u0066\u0066\u0066\u0030\u0030","\u0066\u0066\u0030\u0030\u0066\u0066","\u0030\u0030\u0066\u0066\u0066\u0066","\u0030\u0030\u0030\u0030\u0030\u0030","\u0066\u0066\u0066\u0066\u0066\u0066","\u0066\u0066\u0030\u0030\u0030\u0030","\u0030\u0030\u0066\u0066\u0030\u0030","\u0030\u0030\u0030\u0030\u0066\u0066","\u0066\u0066\u0066\u0066\u0030\u0030","\u0066\u0066\u0030\u0030\u0066\u0066","\u0030\u0030\u0066\u0066\u0066\u0066","\u0038\u0030\u0030\u0030\u0030\u0030","\u0030\u0030\u0038\u0030\u0030\u0030","\u0030\u0030\u0030\u0030\u0038\u0030","\u0038\u0030\u0038\u0030\u0030\u0030","\u0038\u0030\u0030\u0030\u0038\u0030","\u0030\u0030\u0038\u0030\u0038\u0030","\u0063\u0030\u0063\u0030\u0063\u0030","\u0038\u0030\u0038\u0030\u0038\u0030","\u0039\u0039\u0039\u0039\u0066\u0066","\u0039\u0039\u0033\u0033\u0036\u0036","\u0066\u0066\u0066\u0066\u0063\u0063","\u0063\u0063\u0066\u0066\u0066\u0066","\u0036\u0036\u0030\u0030\u0036\u0036","\u0066\u0066\u0038\u0030\u0038\u0030","\u0030\u0030\u0036\u0036\u0063\u0063","\u0063\u0063\u0063\u0063\u0066\u0066","\u0030\u0030\u0030\u0030\u0038\u0030","\u0066\u0066\u0030\u0030\u0066\u0066","\u0066\u0066\u0066\u0066\u0030\u0030","\u0030\u0030\u0066\u0066\u0066\u0066","\u0038\u0030\u0030\u0030\u0038\u0030","\u0038\u0030\u0030\u0030\u0030\u0030","\u0030\u0030\u0038\u0030\u0038\u0030","\u0030\u0030\u0030\u0030\u0066\u0066","\u0030\u0030\u0063\u0063\u0066\u0066","\u0063\u0063\u0066\u0066\u0066\u0066","\u0063\u0063\u0066\u0066\u0063\u0063","\u0066\u0066\u0066\u0066\u0039\u0039","\u0039\u0039\u0063\u0063\u0066\u0066","\u0066\u0066\u0039\u0039\u0063\u0063","\u0063\u0063\u0039\u0039\u0066\u0066","\u0066\u0066\u0063\u0063\u0039\u0039","\u0033\u0033\u0036\u0036\u0066\u0066","\u0033\u0033\u0063\u0063\u0063\u0063","\u0039\u0039\u0063\u0063\u0030\u0030","\u0066\u0066\u0063\u0063\u0030\u0030","\u0066\u0066\u0039\u0039\u0030\u0030","\u0066\u0066\u0036\u0036\u0030\u0030","\u0036\u0036\u0036\u0036\u0039\u0039","\u0039\u0036\u0039\u0036\u0039\u0036","\u0030\u0030\u0033\u0033\u0036\u0036","\u0033\u0033\u0039\u0039\u0036\u0036","\u0030\u0030\u0033\u0033\u0030\u0030","\u0033\u0033\u0033\u0033\u0030\u0030","\u0039\u0039\u0033\u0033\u0030\u0030","\u0039\u0039\u0033\u0033\u0036\u0036","\u0033\u0033\u0033\u0033\u0039\u0039","\u0033\u0033\u0033\u0033\u0033\u0033"};
func (_deba *convertContext )makePagespans (){_deba ._cdfg =[]*pagespan {};_fge :=0.0;_ebg :=0;for _gb ,_gad :=range _deba ._agbe {_gaa :=_gad ._aeag ;if _fge +_gaa <=_deba ._fege {_gad ._ccaa =_fge ;_fge +=_gaa ;}else {_gad ._ccaa =0;_deba ._cdfg =append (_deba ._cdfg ,&pagespan {_baba :_fge ,_defeb :_ebg ,_faf :_gb });
_fge =_gaa ;_ebg =_gb ;};};_deba ._cdfg =append (_deba ._cdfg ,&pagespan {_baba :_fge ,_defeb :_ebg ,_faf :len (_deba ._agbe )});};type border struct{_bgaf float64 ;_dce _gd .Color ;};func (_dfac *convertContext )makeTextStyleFromCellStyle (_gged *style )*_gd .TextStyle {_ega :=_dfac ._bad .NewTextStyle ();
if _gged ==nil {_ega .FontSize =_ed .DefaultFontSize ;_ega .Font =_ed .AssignStdFontByName (_ega ,_ed .StdFontsMap ["\u0064e\u0066\u0061\u0075\u006c\u0074"][FontStyle_Regular ]);return &_ega ;};if _bbfd (_gged ._fbbb ){_ega .Underline =true ;_ega .UnderlineStyle =_gd .TextDecorationLineStyle {Offset :0.5,Thickness :_agab (1/32)};
};var _abg FontStyle ;if _bbfd (_gged ._afg )&&_bbfd (_gged ._befb ){_abg =FontStyle_BoldItalic ;}else if _bbfd (_gged ._afg ){_abg =FontStyle_Bold ;}else if _bbfd (_gged ._befb ){_abg =FontStyle_Italic ;}else {_abg =FontStyle_Regular ;};_cadg :="\u0064e\u0066\u0061\u0075\u006c\u0074";
if _gged ._cdca !=nil {_cadg =*_gged ._cdca ;};if _cadd ,_abea :=_ed .StdFontsMap [_cadg ];_abea {_ega .Font =_ed .AssignStdFontByName (_ega ,_cadd [_abg ]);}else if _dede :=_ed .GetRegisteredFont (_cadg ,_abg );_dede !=nil {_ega .Font =_dede ;}else {_e .Log .Debug ("\u0046\u006f\u006e\u0074\u0020\u0025\u0073\u0020\u0077\u0069\u0074h\u0020\u0073\u0074\u0079\u006c\u0065\u0020\u0025s\u0020i\u0073\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u002c\u0020\u0072\u0065\u0073\u0065\u0074 \u0074\u006f\u0020\u0064\u0065\u0066\u0061\u0075\u006c\u0074\u002e",_cadg ,_abg );
_ega .Font =_ed .AssignStdFontByName (_ega ,_ed .StdFontsMap ["\u0064e\u0066\u0061\u0075\u006c\u0074"][_abg ]);};if _gged ._gdg !=nil {_ega .FontSize =*_gged ._gdg ;};if _gged ._eacc !=nil {_ega .Color =_gd .ColorRGBFromHex (*_gged ._eacc );};if _gged ._dcgb !=nil &&*_gged ._dcgb {_ega .FontSize *=_cb ;
}else if _gged ._cfbc !=nil &&*_gged ._cfbc {_ega .FontSize *=_cb ;};return &_ega ;};func (_fegf *convertContext )drawPage (_aeg *page ){_ebf :=_fegf ._bca ;_faeg :=_fegf ._beeb ;for _ ,_bdc :=range _aeg ._fcc {_cgcd :=_fegf ._gadc [_bdc ._fgce ];for _ ,_baaf :=range _bdc ._edcc {_dbdc :=_baaf ._gdcb < _baaf ._bagg ;
_bdgb :=_baaf ._dbg > _baaf ._bagg +_baaf ._bgdg ;var _bgg ,_gfgg bool ;for _ ,_dcff :=range _baaf ._gbc {for _ ,_fgd :=range _dcff ._aeec {if _dbdc &&!_bgg {_bgg =_fgd ._eaba < 0;};if _bdgb &&!_gfgg {_gfgg =_baaf ._bgdg < _fgd ._eaba +_fgd ._ggdg ;};if _baaf ._bagg +_fgd ._eaba >=_baaf ._gdcb &&_baaf ._bagg +_fgd ._eaba +_fgd ._ggdg <=_baaf ._dbg {_fff :=_fegf ._bad .NewStyledParagraph ();
_gegg :=_faeg +_baaf ._bagg +_fgd ._eaba ;_cgdd :=_ebf +_cgcd ._fadb +_dcff ._dgfgg -_fgd ._cfa -_agab (0.5);_fff .SetPos (_gegg ,_cgdd );var _daf *_gd .TextChunk ;if _fgd ._acaa !=""{_daf =_fff .AddExternalLink (_fgd ._edag ,_fgd ._acaa );}else {_daf =_fff .Append (_fgd ._edag );
};if _fgd ._agga !=nil {_daf .Style =*_fgd ._agga ;};_fegf ._bad .Draw (_fff );};};};var _age ,_bef ,_cdc ,_fgdb ,_aee ,_gac float64 ;var _bagb ,_fcbb ,_fee ,_afae _gd .Color ;if _acda :=_baaf ._gedad ;_acda !=nil {_age =_acda ._bgaf ;_bagb =_acda ._dce ;
};if _gda :=_baaf ._bcec ;_gda !=nil {_bef =_gda ._bgaf ;_fcbb =_gda ._dce ;};if _gdf :=_baaf ._fgga ;_gdf !=nil {_cdc =_gdf ._bgaf ;_aee =_cdc /2;_fee =_gdf ._dce ;};if _gga :=_baaf ._dgb ;_gga !=nil {_fgdb =_gga ._bgaf ;_gac =_fgdb /2;_afae =_gga ._dce ;
};var _ggg float64 ;if _bdc ._fgce > 1{_ggg =_fegf ._gadc [_bdc ._fgce -1]._gffe ;};_cefd :=_ebf +_cgcd ._fadb -0.5*(_ggg -_age );_fde :=_ebf +_cgcd ._fadb +_cgcd ._dda +0.5*(_cgcd ._gffe +_bef );_cgbg :=_faeg +_baaf ._bagg ;_cdg :=_cgbg +_baaf ._aggd ;
_ed .DrawLine (_fegf ._bad ,_cgbg ,_cefd ,_cdg ,_cefd ,_age ,_bagb );_ed .DrawLine (_fegf ._bad ,_cgbg ,_fde ,_cdg ,_fde ,_bef ,_fcbb );if !_bgg {_ed .DrawLine (_fegf ._bad ,_cgbg -_aee ,_cefd ,_cgbg -_aee ,_fde ,_cdc ,_fee );};if !_gfgg {_ed .DrawLine (_fegf ._bad ,_cdg -_gac ,_cefd ,_cdg -_gac ,_fde ,_fgdb ,_afae );
};};};for _ ,_ggda :=range _aeg ._fgb {if _ggda !=nil {_fegf ._bad .Draw (_ggda );};};};type convertContext struct{_bad *_gd .Creator ;_accd *_bb .Workbook ;_bfb *_b .Theme ;_baab *_bb .Sheet ;_agb *_bb .StyleSheet ;_defe int ;_egdb int ;_cdfg []*pagespan ;
_ddf *page ;_agbe []*colInfo ;_gadc []*rowInfo ;_bbbe []*rowspan ;_bca float64 ;_beeb float64 ;_gege float64 ;_fege float64 ;_dgff []*mergedCell ;_dbc []*anchor ;};var _dd =3.025/_agab (1);func (_ceec *convertContext )getStyleFromCell (_bcc _bb .Cell ,_abbd ,_fecc *style )*style {_add :=_bcc .X ();
_ddga :=_ceec .getStyle (_add .SAttr );_daad (_ddga ,_abbd );_daad (_ddga ,_fecc );return _ddga ;};const _gdc =3;type line struct{_dgfgg float64 ;_aeec []*symbol ;_gfeb float64 ;};type anchor struct{_cgga _a .Image ;_fegb *_f .ChartSpace ;_fcge int ;_ddfg int64 ;
_faef int ;_gcff int64 ;_bcecc int ;_deed int64 ;_caa int ;_dfga int64 ;};var _aa =_agab (0.0625);var _fb =_agab (1);func (_baa *convertContext )makeMergedCells (){_fbg :=[]*mergedCell {};for _ ,_acg :=range _baa ._baab .MergedCells (){_gde ,_dcd ,_ffg :=_cd .ParseRangeReference (_acg .Reference ());
if _ffg !=nil {_e .Log .Debug ("\u0065\u0072r\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u006d\u0065\u0072\u0067\u0065\u0064\u0020\u0063\u0065\u006c\u006c: \u0025\u0073",_ffg );continue ;};_fdd :=mergedCell {_bfbg :_gde .RowIdx ,_cgca :_gde .ColumnIdx ,_fbf :_dcd .RowIdx ,_dgeb :_dcd .ColumnIdx };
for _bbg :=_fdd ._cgca -1;_bbg < _fdd ._dgeb ;_bbg ++{_fdd ._bgfb +=_baa ._agbe [_bbg ]._aeag ;};for _cgc :=_fdd ._bfbg -1;_cgc < _fdd ._fbf ;_cgc ++{_fdd ._dabe +=_baa ._gadc [_cgc ]._dda ;};_fbg =append (_fbg ,&_fdd );};_baa ._dgff =_fbg ;};func (_cbde *convertContext )makeCells (){_fdc :=_cbde ._baab ;
_bage :=_fdc .Rows ();_ae :=0;for _ ,_gg :=range _cbde ._gadc {_gg ._edaa =[]*cell {};_ag :=0.0;_cef :=_gg ._geag ;if _gg ._gaafb {_bbb :=_bage [_ae ];_ae ++;_agf :=_gg ._dda ;for _ ,_acbe :=range _bbb .Cells (){_ace ,_ggd :=_cd .ParseCellReference (_acbe .Reference ());
if _ggd !=nil {_e .Log .Debug ("\u0043\u0061\u006e\u006eo\u0074\u0020\u0070\u0061\u0072\u0073\u0065\u0020\u0061\u0020r\u0065f\u0065\u0072\u0065\u006e\u0063\u0065\u003a \u0025\u0073",_ggd );continue ;};_cdf :=_cbde ._agbe [_ace .ColumnIdx ];_fec :=_cdf ._aeag ;
_dfd :=_fec ;_eb :=_cdf ._ecgd ;var _bdb ,_ceg ,_cag ,_agg bool ;for _ ,_bbbc :=range _cbde ._dgff {if _ace .RowIdx >=_bbbc ._bfbg &&_ace .RowIdx <=_bbbc ._fbf &&_ace .ColumnIdx >=_bbbc ._cgca &&_ace .ColumnIdx <=_bbbc ._dgeb {if _ace .ColumnIdx ==_bbbc ._cgca &&_ace .RowIdx ==_bbbc ._bfbg {_fec =_bbbc ._bgfb ;
_agf =_bbbc ._dabe ;};_bdb =_ace .RowIdx !=_bbbc ._bfbg ;_ceg =_ace .RowIdx !=_bbbc ._fbf ;_cag =_ace .ColumnIdx !=_bbbc ._cgca ;_agg =_ace .ColumnIdx !=_bbbc ._dgeb ;};};_dcg :=_cbde .getStyleFromCell (_acbe ,_cef ,_eb );var _bfc ,_ded ,_fcf bool ;var _dcb ,_dgf ,_aca ,_bee *border ;
var _fef _ab .ST_VerticalAlignment ;var _dfc _ab .ST_HorizontalAlignment ;if _dcg !=nil {if !_bdb {_dcb =_dcg ._fad ;};if !_ceg {_dgf =_dcg ._gabg ;};if !_cag {_aca =_dcg ._ffgc ;};if !_agg {_bee =_dcg ._acef ;};if _dgf !=nil &&_dgf ._bgaf > _ag {_ag =_dgf ._bgaf ;
};_fef =_dcg ._aef ;_dfc =_dcg ._bgb ;if _dcg ._dcgb !=nil {_bfc =*_dcg ._dcgb ;};if _dcg ._cfbc !=nil {_ded =*_dcg ._cfbc ;};_fcf =_dcg ._gcfg ;};_ffa ,_afba :=_cbde .getContentFromCell (_acbe ,_dcg ,_fec ,_fcf );_gfg :=&cell {_efa :_afba ,_bgdg :_fec ,_aggd :_dfd ,_bfec :_agf ,_gbc :_ffa ,_gedad :_dcb ,_bcec :_dgf ,_fgga :_aca ,_dgb :_bee ,_ebbeb :_bfc ,_gfc :_ded };
_cbde .alignSymbolsHorizontally (_gfg ,_dfc );_cbde .alignSymbolsVertically (_gfg ,_fef );_gg ._edaa =append (_gg ._edaa ,_gfg );};};_gg ._gffe =_ag ;};};func (_babf *convertContext )getStyleFromRPrElt (_ebbc *_ab .CT_RPrElt )*style {if _ebbc ==nil {return nil ;
};_ecgg :=&style {};_ecgg ._cdca =&_ebbc .RFont .ValAttr ;if _ffgf :=_ebbc .B ;_ffgf !=nil {_dfbc :=_ffgf .ValAttr ==nil ||*_ffgf .ValAttr ;_ecgg ._afg =&_dfbc ;};if _badd :=_ebbc .I ;_badd !=nil {_eded :=_badd .ValAttr ==nil ||*_badd .ValAttr ;_ecgg ._befb =&_eded ;
};if _fgcf :=_ebbc .U ;_fgcf !=nil {_gdfc :=_fgcf .ValAttr ==_ab .ST_UnderlineValuesSingle ||_fgcf .ValAttr ==_ab .ST_UnderlineValuesUnset ;_ecgg ._fbbb =&_gdfc ;};if _dced :=_ebbc .VertAlign ;_dced !=nil {_dfdd :=_dced .ValAttr ==_d .ST_VerticalAlignRunSuperscript ;
_ecgg ._dcgb =&_dfdd ;_ecce :=_dced .ValAttr ==_d .ST_VerticalAlignRunSubscript ;_ecgg ._cfbc =&_ecce ;};if _ggaa :=_ebbc .Sz ;_ggaa !=nil {_ecf :=_ggaa .ValAttr /12*_ed .DefaultFontSize ;_ecgg ._gdg =&_ecf ;};if _eabag :=_ebbc .Color ;_eabag !=nil {_ecgg ._eacc =_babf .getColorStringFromSmlColor (_eabag );
};return _ecgg ;};type symbol struct{_edag string ;_eaba float64 ;_cfa float64 ;_ggdg float64 ;_agga *_gd .TextStyle ;_acaa string ;};func (_baac *convertContext )getStyle (_gag *uint32 )*style {_fccb :=&style {};_fgdf :=false ;if _gag !=nil {_fdg :=_baac ._agb .GetCellStyle (*_gag );
_gabc :=_fdg .GetFont ();for _ ,_dbf :=range _gabc .Name {if _dbf !=nil {_fccb ._cdca =&_dbf .ValAttr ;_fgdf =true ;break ;};};for _ ,_bda :=range _gabc .B {if _bda !=nil {_ebe :=_bda .ValAttr ==nil ||*_bda .ValAttr ;_fccb ._afg =&_ebe ;_fgdf =true ;break ;
};};for _ ,_dgfc :=range _gabc .I {if _dgfc !=nil {_ccb :=_dgfc .ValAttr ==nil ||*_dgfc .ValAttr ;_fccb ._befb =&_ccb ;_fgdf =true ;break ;};};for _ ,_fdac :=range _gabc .U {if _fdac !=nil {_gfac :=_fdac .ValAttr ==_ab .ST_UnderlineValuesSingle ||_fdac .ValAttr ==_ab .ST_UnderlineValuesUnset ;
_fccb ._fbbb =&_gfac ;_fgdf =true ;break ;};};for _ ,_ffc :=range _gabc .Sz {if _ffc !=nil {_bge :=_ffc .ValAttr /12*_ed .DefaultFontSize ;_fccb ._gdg =&_bge ;_fgdf =true ;break ;};};for _ ,_ggab :=range _gabc .VertAlign {if _ggab !=nil {_cdgg :=_ggab .ValAttr ==_d .ST_VerticalAlignRunSuperscript ;
_fccb ._dcgb =&_cdgg ;_dgea :=_ggab .ValAttr ==_d .ST_VerticalAlignRunSubscript ;_fccb ._cfbc =&_dgea ;_fgdf =true ;break ;};};for _ ,_ada :=range _gabc .Color {if _ada !=nil {_fccb ._eacc =_baac .getColorStringFromSmlColor (_ada );_fgdf =true ;break ;
};};_egc :=_fdg .GetBorder ();if _egc .Top !=nil {_fccb ._fad =_baac .getBorder (_egc .Top );_fgdf =true ;};if _egc .Bottom !=nil {_fccb ._gabg =_baac .getBorder (_egc .Bottom );_fgdf =true ;};if _egc .Left !=nil {_fccb ._ffgc =_baac .getBorder (_egc .Left );
_fgdf =true ;};if _egc .Right !=nil {_fccb ._acef =_baac .getBorder (_egc .Right );_fgdf =true ;};if _fdg .Wrapped (){_fccb ._gcfg =true ;_fgdf =true ;};if _bbf :=_fdg .GetVerticalAlignment ();_bbf !=_ab .ST_VerticalAlignmentUnset {_fccb ._aef =_bbf ;_fgdf =true ;
};if _cfge :=_fdg .GetHorizontalAlignment ();_cfge !=_ab .ST_HorizontalAlignmentUnset {_fccb ._bgb =_cfge ;_fgdf =true ;};};if _fgdf {return _fccb ;};return nil ;};func (_aegad *convertContext )getColorFromTheme (_fcad uint32 )string {_cgaf :=_aegad ._accd .Themes ();
if len (_cgaf )!=0{_geeg :=_cgaf [0];if _beaa :=_geeg .ThemeElements ;_beaa !=nil {if _ebad :=_beaa .ClrScheme ;_ebad !=nil {switch _fcad {case 0:return _ed .GetColorStringFromDmlColor (_ebad .Lt1 );case 1:return _ed .GetColorStringFromDmlColor (_ebad .Dk1 );
case 2:return _ed .GetColorStringFromDmlColor (_ebad .Lt2 );case 3:return _ed .GetColorStringFromDmlColor (_ebad .Dk2 );case 4:return _ed .GetColorStringFromDmlColor (_ebad .Accent1 );case 5:return _ed .GetColorStringFromDmlColor (_ebad .Accent2 );case 6:return _ed .GetColorStringFromDmlColor (_ebad .Accent3 );
case 7:return _ed .GetColorStringFromDmlColor (_ebad .Accent4 );case 8:return _ed .GetColorStringFromDmlColor (_ebad .Accent5 );case 9:return _ed .GetColorStringFromDmlColor (_ebad .Accent6 );};};};};return "";};const _cfg =1.5;type pagespan struct{_baba float64 ;
_bfef []*page ;_defeb int ;_faf int ;};func (_aaee *convertContext )makeRowspans (){var _bac float64 ;_edc :=0;for _fea ,_fbe :=range _aaee ._gadc {_acgd :=_fbe ._dda +_fbe ._gffe ;if _bac +_acgd <=_aaee ._gege {_fbe ._fadb =_bac ;_bac +=_acgd ;}else {_aaee ._bbbe =append (_aaee ._bbbe ,&rowspan {_bggb :_bac ,_dbdb :_edc ,_fbgb :_fea });
_edc =_fea ;_fbe ._fadb =0;_bac =_acgd ;};};_aaee ._bbbe =append (_aaee ._bbbe ,&rowspan {_bggb :_bac ,_dbdb :_edc ,_fbgb :len (_aaee ._gadc )});};

// ConvertToPdf converts a sheet to a PDF file. This package is beta, breaking changes can take place.
func ConvertToPdf (s *_bb .Sheet )*_gd .Creator {_acd :=s .X ();if _acd ==nil {return nil ;};var _fd _gd .PageSize ;var _ee bool ;if _gdcd :=_acd .PageSetup ;_gdcd !=nil {if _db :=_gdcd .PaperSizeAttr ;_db !=nil {_fd =_gaafe [*_db ];};_ee =_gdcd .OrientationAttr ==_ab .ST_OrientationLandscape ;
};if (_fd ==_gd .PageSize {}){_fd =_gaafe [1];};if _ee {_fd [0],_fd [1]=_fd [1],_fd [0];};_fdb :=_gd .New ();_fdb .SetPageSize (_fd );var _be ,_bf ,_geg ,_fa float64 ;if _gc :=_acd .PageMargins ;_gc !=nil {_geg =_gc .LeftAttr ;_fa =_gc .RightAttr ;_be =_gc .TopAttr ;
_bf =_gc .BottomAttr ;};if _geg < 0.25{_geg =0.25;};if _fa < 0.25{_fa =0.25;};_be *=_ac .Inch ;_bf *=_ac .Inch ;_geg *=_ac .Inch ;_fa *=_ac .Inch ;_fdb .SetPageMargins (_geg ,_fa ,_be ,_bf );_gcd :=s .Workbook ();var _bc *_b .Theme ;if len (_gcd .Themes ())> 0{_bc =_gcd .Themes ()[0];
};_ec :=&convertContext {_bad :_fdb ,_baab :s ,_accd :s .Workbook (),_bfb :_bc ,_agb :&s .Workbook ().StyleSheet ,_bca :_be ,_beeb :_geg ,_gege :_fd [1]-_bf -_be ,_fege :_fd [0]-_fa -_geg };_ec .makeAnchors ();_ec .determineMaxIndexes ();if _ec ._defe ==0&&_ec ._egdb ==0{_fdb .NewPage ();
return _fdb ;};_ec .makeCols ();_ec .makeRows ();_ec .makeMergedCells ();_ec .makeCells ();_ec .makePagespans ();_ec .makeRowspans ();_ec .makePages ();_ec .fillPages ();_ec .distributeAnchors ();_ec .drawSheet ();return _fdb ;};func (_aea *convertContext )getContentFromCell (_dcffb _bb .Cell ,_cdfa *style ,_efb float64 ,_gcda bool )([]*line ,_ab .ST_CellType ){_bff :=_dcffb .X ();
var _agd []*symbol ;switch _bff .TAttr {case _ab .ST_CellTypeS :_cge :=_bff .V ;if _cge !=nil {_eddfc ,_dcfb :=_ge .Atoi (*_cge );if _dcfb ==nil {_cbg :=_aea ._accd .SharedStrings .X ().Si [_eddfc ];if _cbg .T !=nil {_agd =_aea .getSymbolsFromString (*_cbg .T ,_cdfa );
}else if _cbg .R !=nil {_agd =_aea .getSymbolsFromR (_cbg .R ,_cdfa );};};};case _ab .ST_CellTypeB :_eee :=_bff .V ;if _eee !=nil {if *_eee =="\u0030"{_agd =_aea .getSymbolsFromString ("\u0046\u0041\u004cS\u0045",_cdfa );}else {_agd =_aea .getSymbolsFromString ("\u0054\u0052\u0055\u0045",_cdfa );
};};default:_agd =_aea .getSymbolsFromString (_dcffb .GetFormattedValue (),_cdfa );};_daag :=0.0;_gab :=0.0;var _adc []*line ;var _cagd bool ;if _cdfa !=nil {if _cdfa ._dcgb !=nil {if *_cdfa ._dcgb {_cagd =true ;};};if _cdfa ._cfbc !=nil {if *_cdfa ._cfbc {_cagd =true ;
};};};if _gcda {_adc =[]*line {};_bgff :=_efb -2*_gdc ;_dbdg :=[]*symbol {};for _ ,_bdbc :=range _agd {_decc (_bdbc );if _daag +_bdbc ._ggdg >=_bgff {_gcf :=_efd (_dbdg );if _cagd {_gcf /=_cb ;};_adc =append (_adc ,&line {_dgfgg :_gab ,_aeec :_dbdg ,_gfeb :_gcf });
_dbdg =[]*symbol {_bdbc };_daag =_bdbc ._ggdg ;_gab +=_gcf ;}else {_bdbc ._eaba =_daag ;_daag +=_bdbc ._ggdg ;_dbdg =append (_dbdg ,_bdbc );};};_fgc :=_efd (_dbdg );if _cagd {_fgc /=_cb ;};if len (_dbdg )> 0{_adc =append (_adc ,&line {_dgfgg :_gab ,_aeec :_dbdg ,_gfeb :_fgc });
};}else {for _ ,_bgc :=range _agd {_decc (_bgc );_bgc ._eaba =_daag ;_daag +=_bgc ._ggdg ;};if len (_agd )> 0{_adc =[]*line {&line {_aeec :_agd ,_gfeb :_efd (_agd )}};};};_cfcd :=_bff .TAttr ;if _cfcd ==_ab .ST_CellTypeUnset {_cfcd =_ab .ST_CellTypeN ;
};return _adc ,_cfcd ;};const _gdd =0.25;func (_fcgg *convertContext )imageFromAnchor (_aeeb *anchor ,_ggc ,_bagbg float64 )_a .Image {if _aeeb ._cgga !=nil {return _aeeb ._cgga ;};if _aeeb ._fegb !=nil {_eafb ,_eegab :=_ed .MakeImageFromChartSpace (_aeeb ._fegb ,_ggc ,_bagbg ,_fcgg ._bfb );
if _eegab !=nil {_e .Log .Debug ("C\u0061\u006e\u006e\u006f\u0074\u0020\u006d\u0061\u006b\u0065\u0020\u0061\u006e\u0020\u0069\u006d\u0061\u0067e\u0020\u0066\u0072\u006f\u006d\u0020\u0063\u0068\u0061\u0072tS\u0070\u0061\u0063e\u003a \u0025\u0073",_eegab );
return nil ;};return _eafb ;};return nil ;};func _daad (_ffd ,_dag *style ){if _dag ==nil {return ;};if _ffd ==nil {_ffd =_dag ;return ;};if _ffd ._cdca ==nil {_ffd ._cdca =_dag ._cdca ;};if _ffd ._eacc ==nil {_ffd ._eacc =_dag ._eacc ;};if _ffd ._gdg ==nil {_ffd ._gdg =_dag ._gdg ;
};if _ffd ._afg ==nil {_ffd ._afg =_dag ._afg ;};if _ffd ._befb ==nil {_ffd ._befb =_dag ._befb ;};if _ffd ._fbbb ==nil {_ffd ._fbbb =_dag ._fbbb ;};if _ffd ._dcgb ==nil {_ffd ._dcgb =_dag ._dcgb ;};if _ffd ._cfbc ==nil {_ffd ._cfbc =_dag ._cfbc ;};if _ffd ._fad ==nil {_ffd ._fad =_dag ._fad ;
};if _ffd ._gabg ==nil {_ffd ._gabg =_dag ._gabg ;};if _ffd ._ffgc ==nil {_ffd ._ffgc =_dag ._ffgc ;};if _ffd ._acef ==nil {_ffd ._acef =_dag ._acef ;};if _ffd ._aef ==_ab .ST_VerticalAlignmentUnset {_ffd ._aef =_dag ._aef ;};if _ffd ._bgb ==_ab .ST_HorizontalAlignmentUnset {_ffd ._bgb =_dag ._bgb ;
};};func (_egdc *convertContext )determineMaxIndexes (){var _cdb ,_gfb int ;_cdb =int (_egdc ._baab .MaxColumnIdx ());_gef :=_egdc ._baab .Rows ();if len (_gef )> 0{_gfb =int (_gef [len (_gef )-1].RowNumber ());};for _ ,_deb :=range _egdc ._dbc {if _deb ._bcecc >=_gfb {_gfb =_deb ._bcecc +1;
};if _deb ._caa >=_cdb {_cdb =_deb ._caa +1;};};_egdc ._defe =_gfb ;_egdc ._egdb =_cdb ;};func (_gcfe *convertContext )combineCellStyleWithRPrElt (_fbbf *style ,_dddg *_ab .CT_RPrElt )*style {_eccc :=*_fbbf ;_dfgf :=_gcfe .getStyleFromRPrElt (_dddg );if _dfgf ==nil {return &_eccc ;
};if _dfgf ._eacc !=nil {_eccc ._eacc =_dfgf ._eacc ;};if _dfgf ._gdg !=nil {_eccc ._gdg =_dfgf ._gdg ;};if _dfgf ._cdca !=nil {_eccc ._cdca =_dfgf ._cdca ;};if _dfgf ._afg !=nil {_eccc ._afg =_dfgf ._afg ;};if _dfgf ._befb !=nil {_eccc ._befb =_dfgf ._befb ;
};if _dfgf ._fbbb !=nil {_eccc ._fbbb =_dfgf ._fbbb ;};if _dfgf ._dcgb !=nil {_eccc ._dcgb =_dfgf ._dcgb ;};if _dfgf ._cfbc !=nil {_eccc ._cfbc =_dfgf ._cfbc ;};return &_eccc ;};type mergedCell struct{_bfbg uint32 ;_cgca uint32 ;_fbf uint32 ;_dgeb uint32 ;
_bgfb float64 ;_dabe float64 ;};type page struct{_fcc []*pageRow ;_bddb bool ;_fgb []*_gd .Image ;_dgfg *pagespan ;_agag *rowspan ;};func (_acb *convertContext )makeRows (){_ccf :=[]*rowInfo {};_dc :=_acb ._baab .Rows ();_dcf :=0;for _ ,_cbd :=range _dc {_dcf ++;
_bcg :=int (_cbd .RowNumber ());if _bcg > _dcf {for _bga :=_dcf ;_bga < _bcg ;_bga ++{_ccf =append (_ccf ,&rowInfo {_dda :16/_dd });};_dcf =_bcg ;};var _df float64 ;if _cbd .X ().HtAttr ==nil {_df =16;}else {_df =*_cbd .X ().HtAttr ;};_ccf =append (_ccf ,&rowInfo {_dda :_df /_dd ,_gaafb :true ,_geag :_acb .getStyle (_cbd .X ().SAttr )});
};for _fac :=len (_ccf );_fac < _acb ._defe ;_fac ++{_ccf =append (_ccf ,&rowInfo {_dda :16/_dd });};_acb ._gadc =_ccf ;};type colInfo struct{_ccaa float64 ;_aeag float64 ;_ecgd *style ;};func _agab (_fab float64 )float64 {return _fab *_ac .Millimeter };
func (_gbdd *convertContext )getSymbolsFromR (_gba []*_ab .CT_RElt ,_cfb *style )[]*symbol {_ecea :=[]*symbol {};for _ ,_egf :=range _gba {_fddd :=_gbdd .combineCellStyleWithRPrElt (_cfb ,_egf .RPr );for _ ,_egb :=range _egf .T {_ecea =append (_ecea ,&symbol {_edag :string (_egb ),_agga :_gbdd .makeTextStyleFromCellStyle (_fddd )});
};};return _ecea ;};func (_edea *convertContext )alignSymbolsHorizontally (_afd *cell ,_dgcf _ab .ST_HorizontalAlignment ){if _dgcf ==_ab .ST_HorizontalAlignmentUnset {switch _afd ._efa {case _ab .ST_CellTypeB :_dgcf =_ab .ST_HorizontalAlignmentCenter ;
case _ab .ST_CellTypeN :_dgcf =_ab .ST_HorizontalAlignmentRight ;default:_dgcf =_ab .ST_HorizontalAlignmentLeft ;};};var _agae float64 ;for _ ,_dfa :=range _afd ._gbc {switch _dgcf {case _ab .ST_HorizontalAlignmentLeft :_agae =_gdc ;case _ab .ST_HorizontalAlignmentRight :_becd :=_agea (_dfa ._aeec );
_agae =_afd ._bgdg -_gdc -_becd ;case _ab .ST_HorizontalAlignmentCenter :_cad :=_agea (_dfa ._aeec );_agae =(_afd ._bgdg -_cad )/2;};for _ ,_afac :=range _dfa ._aeec {_afac ._eaba +=_agae ;};};};