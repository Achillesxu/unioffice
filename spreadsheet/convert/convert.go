//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package convert ;import (_b "github.com/unidoc/unioffice/common/logger";_db "github.com/unidoc/unioffice/common/tempstorage";_ed "github.com/unidoc/unioffice/internal/convertutils";_d "github.com/unidoc/unioffice/measurement";_ac "github.com/unidoc/unioffice/schema/soo/dml";_bg "github.com/unidoc/unioffice/schema/soo/dml/chart";_gb "github.com/unidoc/unioffice/schema/soo/ofc/sharedTypes";_cf "github.com/unidoc/unioffice/schema/soo/sml";_ff "github.com/unidoc/unioffice/spreadsheet";_f "github.com/unidoc/unioffice/spreadsheet/reference";_g "github.com/unidoc/unipdf/v3/creator";_ec "github.com/unidoc/unipdf/v3/model";_c "image";_a "strconv";);const _ea =2;func (_afd *convertContext )getSymbolsFromR (_dda []*_cf .CT_RElt ,_bge *style )[]*symbol {_ddfd :=[]*symbol {};for _ ,_fbbc :=range _dda {_dbg :=_afd .combineCellStyleWithRPrElt (_bge ,_fbbc .RPr );for _ ,_ecg :=range _fbbc .T {_ddfd =append (_ddfd ,&symbol {_edcc :string (_ecg ),_fag :_afd .makeTextStyleFromCellStyle (_dbg )});};};return _ddfd ;};func (_bbe *convertContext )getContentFromCell (_bbfd _ff .Cell ,_ebe *style ,_cgf float64 ,_efde bool )([]*line ,_cf .ST_CellType ){_ffda :=_bbfd .X ();var _feb []*symbol ;switch _ffda .TAttr {case _cf .ST_CellTypeS :_efe :=_ffda .V ;if _efe !=nil {_gebf ,_agf :=_a .Atoi (*_efe );if _agf ==nil {_eba :=_bbe ._dfcg .SharedStrings .X ().Si [_gebf ];if _eba .T !=nil {_feb =_bbe .getSymbolsFromString (*_eba .T ,_ebe );}else if _eba .R !=nil {_feb =_bbe .getSymbolsFromR (_eba .R ,_ebe );};};};case _cf .ST_CellTypeB :_ffeb :=_ffda .V ;if _ffeb !=nil {if *_ffeb =="\u0030"{_feb =_bbe .getSymbolsFromString ("\u0046\u0041\u004cS\u0045",_ebe );}else {_feb =_bbe .getSymbolsFromString ("\u0054\u0052\u0055\u0045",_ebe );};};default:_feb =_bbe .getSymbolsFromString (_bbfd .GetFormattedValue (),_ebe );};_aabg :=0.0;_dbd :=0.0;var _ace []*line ;var _ffdf bool ;if _ebe !=nil {if _ebe ._aadb !=nil {if *_ebe ._aadb {_ffdf =true ;};};if _ebe ._egde !=nil {if *_ebe ._egde {_ffdf =true ;};};};if _efde {_ace =[]*line {};_ced :=_cgf -2*_ag ;_gfe :=[]*symbol {};for _ ,_ddbg :=range _feb {_gfdg (_ddbg );if _aabg +_ddbg ._gdfg >=_ced {_cebcc :=_ddef (_gfe );if _ffdf {_cebcc /=_ga ;};_ace =append (_ace ,&line {_gaa :_dbd ,_bgaa :_gfe ,_adba :_cebcc });_gfe =[]*symbol {_ddbg };_aabg =_ddbg ._gdfg ;_dbd +=_cebcc ;}else {_ddbg ._bff =_aabg ;_aabg +=_ddbg ._gdfg ;_gfe =append (_gfe ,_ddbg );};};_ebb :=_ddef (_gfe );if _ffdf {_ebb /=_ga ;};if len (_gfe )> 0{_ace =append (_ace ,&line {_gaa :_dbd ,_bgaa :_gfe ,_adba :_ebb });};}else {for _ ,_fdfb :=range _feb {_gfdg (_fdfb );_fdfb ._bff =_aabg ;_aabg +=_fdfb ._gdfg ;};if len (_feb )> 0{_ace =[]*line {&line {_bgaa :_feb ,_adba :_ddef (_feb )}};};};_cagc :=_ffda .TAttr ;if _cagc ==_cf .ST_CellTypeUnset {_cagc =_cf .ST_CellTypeN ;};return _ace ,_cagc ;};func (_fgg *convertContext )makeMergedCells (){_ccb :=[]*mergedCell {};for _ ,_beb :=range _fgg ._bbba .MergedCells (){_ffd ,_bdb ,_fdg :=_f .ParseRangeReference (_beb .Reference ());if _fdg !=nil {_b .Log .Debug ("\u0065\u0072r\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u006d\u0065\u0072\u0067\u0065\u0064\u0020\u0063\u0065\u006c\u006c: \u0025\u0073",_fdg );continue ;};_eae :=mergedCell {_bcgd :_ffd .RowIdx ,_efdeg :_ffd .ColumnIdx ,_beff :_bdb .RowIdx ,_gaga :_bdb .ColumnIdx };for _acb :=_eae ._efdeg -1;_acb < _eae ._gaga ;_acb ++{_eae ._gbdc +=_fgg ._gbc [_acb ]._gcc ;};for _faa :=_eae ._bcgd -1;_faa < _eae ._beff ;_faa ++{_eae ._fec +=_fgg ._cafg [_faa ]._ddfb ;};_ccb =append (_ccb ,&_eae );};_fgg ._bdgd =_ccb ;};func _afec (_bee ,_cbac *style ){if _cbac ==nil {return ;};if _bee ==nil {_bee =_cbac ;return ;};if _bee ._bedc ==nil {_bee ._bedc =_cbac ._bedc ;};if _bee ._deae ==nil {_bee ._deae =_cbac ._deae ;};if _bee ._cdae ==nil {_bee ._cdae =_cbac ._cdae ;};if _bee ._bgb ==nil {_bee ._bgb =_cbac ._bgb ;};if _bee ._dagf ==nil {_bee ._dagf =_cbac ._dagf ;};if _bee ._fgga ==nil {_bee ._fgga =_cbac ._fgga ;};if _bee ._aadb ==nil {_bee ._aadb =_cbac ._aadb ;};if _bee ._egde ==nil {_bee ._egde =_cbac ._egde ;};if _bee ._acf ==nil {_bee ._acf =_cbac ._acf ;};if _bee ._gec ==nil {_bee ._gec =_cbac ._gec ;};if _bee ._bebd ==nil {_bee ._bebd =_cbac ._bebd ;};if _bee ._befg ==nil {_bee ._befg =_cbac ._befg ;};if _bee ._eaad ==_cf .ST_VerticalAlignmentUnset {_bee ._eaad =_cbac ._eaad ;};if _bee ._ffcb ==_cf .ST_HorizontalAlignmentUnset {_bee ._ffcb =_cbac ._ffcb ;};};var _ffg =_cbb (0.0625);func (_agfc *convertContext )imageFromAnchor (_cagcc *anchor ,_ffdfg ,_cagg float64 )_c .Image {if _cagcc ._dbaf !=nil {return _cagcc ._dbaf ;};if _cagcc ._fabb !=nil {_ead ,_ggd :=_ed .MakeImageFromChartSpace (_cagcc ._fabb ,_ffdfg ,_cagg ,_agfc ._cfe );if _ggd !=nil {_b .Log .Debug ("C\u0061\u006e\u006e\u006f\u0074\u0020\u006d\u0061\u006b\u0065\u0020\u0061\u006e\u0020\u0069\u006d\u0061\u0067e\u0020\u0066\u0072\u006f\u006d\u0020\u0063\u0068\u0061\u0072tS\u0070\u0061\u0063e\u003a \u0025\u0073",_ggd );return nil ;};return _ead ;};return nil ;};type colInfo struct{_afag float64 ;_gcc float64 ;_effa *style ;};func (_eeg *convertContext )distributeAnchors (){for _ ,_dfg :=range _eeg ._afea {_bbg ,_age :=_dfg ._gfdb ,_dfg ._bbda ;_baag ,_eea :=_dfg ._ebbc ,_dfg ._bcae ;_eaf ,_dbe :=_dfg ._aae ,_dfg ._aadc ;_aed ,_edgd :=_dfg ._cfgf ,_dfg ._caaa ;var _bbd ,_acg ,_dafa ,_edgb *page ;for _ ,_gafa :=range _eeg ._ceab {for _ ,_gafb :=range _gafa ._gffd {if _bbg >=_gafb ._fegg ._ceec &&_bbg < _gafb ._fegg ._ccab {if _baag >=_gafb ._gdg ._caac &&_baag < _gafb ._gdg ._dce {_gafb ._abd =true ;_bbd =_gafb ;};if _aed >=_gafb ._gdg ._caac &&_aed < _gafb ._gdg ._dce {_gafb ._abd =true ;_acg =_gafb ;};};if _eaf >=_gafb ._fegg ._ceec &&_eaf < _gafb ._fegg ._ccab {if _baag >=_gafb ._gdg ._caac &&_baag < _gafb ._gdg ._dce {_gafb ._abd =true ;_edgb =_gafb ;};if _aed >=_gafb ._gdg ._caac &&_aed < _gafb ._gdg ._dce {_gafb ._abd =true ;_dafa =_gafb ;};};};};_ccd :=_bbd !=_acg ;_gaec :=_bbd !=_edgb ;if _ccd &&_gaec {_eece :=_eeg ._gbc [_baag ]._afag +_d .FromEMU (_eea );_fad :=_bbd ._gdg ._abgg ;_dcbb :=_eeg ._gbc [_aed ]._afag +_d .FromEMU (_edgd );_aacd :=_eeg ._cafg [_bbg ]._ebaa +_d .FromEMU (_age );_eaec :=float64 (_bbd ._fegg ._defe );_agd :=_eeg ._cafg [_eaf ]._ebaa +_d .FromEMU (_dbe );_eff :=_dcbb +_fad -_eece ;_ffcf :=_agd +_eaec -_aacd ;_dfa :=_eeg .imageFromAnchor (_dfg ,_eff ,_ffcf );_bbd ._fed =append (_bbd ._fed ,_eeg .getImage (_dfa ,_ffcf ,_eff ,_eece ,_aacd ,_fad -_eece ,_eaec -_aacd ,_ed .ImgPart_lt ));_acg ._fed =append (_acg ._fed ,_eeg .getImage (_dfa ,_ffcf ,_eff ,0,_aacd ,_fad -_eece ,_eaec -_aacd ,_ed .ImgPart_rt ));_edgb ._fed =append (_edgb ._fed ,_eeg .getImage (_dfa ,_ffcf ,_eff ,_eece ,0,_fad -_eece ,_eaec -_aacd ,_ed .ImgPart_lb ));_dafa ._fed =append (_dafa ._fed ,_eeg .getImage (_dfa ,_ffcf ,_eff ,0,0,_fad -_eece ,_eaec -_aacd ,_ed .ImgPart_rb ));}else if _ccd {_bed :=_eeg ._cafg [_bbg ]._ebaa +_d .FromEMU (_age );_dac :=_eeg ._cafg [_eaf ]._ebaa +_d .FromEMU (_dbe );_fegb :=_eeg ._gbc [_baag ]._afag +_d .FromEMU (_eea );_dfb :=_bbd ._gdg ._abgg ;_dde :=_eeg ._gbc [_aed ]._afag +_d .FromEMU (_edgd );_bgfe :=_dde +_dfb -_fegb ;_dgbg :=_dac -_bed ;_aad :=_eeg .imageFromAnchor (_dfg ,_bgfe ,_dgbg );_bbd ._fed =append (_bbd ._fed ,_eeg .getImage (_aad ,_dgbg ,_bgfe ,_fegb ,_bed ,_dfb -_fegb ,0,_ed .ImgPart_l ));_acg ._fed =append (_acg ._fed ,_eeg .getImage (_aad ,_dgbg ,_bgfe ,0,_bed ,_dfb -_fegb ,0,_ed .ImgPart_r ));}else if _gaec {_dgbf :=_eeg ._gbc [_baag ]._afag +_d .FromEMU (_eea );_beg :=_eeg ._gbc [_aed ]._afag +_d .FromEMU (_edgd );_dba :=_eeg ._cafg [_bbg ]._ebaa +_d .FromEMU (_age );_eef :=float64 (_bbd ._fegg ._defe );_geb :=_eeg ._cafg [_eaf ]._ebaa +_d .FromEMU (_dbe );_edgda :=_beg -_dgbf ;_cebc :=_geb +_eef -_dba ;_dfgb :=_eeg .imageFromAnchor (_dfg ,_edgda ,_cebc );_bbd ._fed =append (_bbd ._fed ,_eeg .getImage (_dfgb ,_cebc ,_edgda ,_dgbf ,_dba ,0,_eef -_dba ,_ed .ImgPart_t ));_edgb ._fed =append (_edgb ._fed ,_eeg .getImage (_dfgb ,_cebc ,_edgda ,_dgbf ,0,0,_eef -_dba ,_ed .ImgPart_b ));}else {_bedb :=_eeg ._gbc [_baag ]._afag +_d .FromEMU (_eea );_cebd :=_eeg ._gbc [_aed ]._afag +_d .FromEMU (_edgd );_fadc :=_eeg ._cafg [_bbg ]._ebaa +_d .FromEMU (_age );_fbb :=_eeg ._cafg [_eaf ]._ebaa +_d .FromEMU (_dbe );_gcd :=_cebd -_bedb ;_ffce :=_fbb -_fadc ;_afe :=_eeg .imageFromAnchor (_dfg ,_gcd ,_ffce );_bbd ._fed =append (_bbd ._fed ,_eeg .getImage (_afe ,_ffce ,_gcd ,_bedb ,_fadc ,0,0,_ed .ImgPart_whole ));};};};func _ddef (_cebe []*symbol )float64 {_ggc :=0.0;for _ ,_cbca :=range _cebe {if _cbca ._caaf > _ggc {_ggc =_cbca ._caaf ;};};return _ggc ;};const _ag =3;type rowspan struct{_defe float64 ;_ceec int ;_ccab int ;};func (_fgbg *convertContext )makePages (){for _ ,_ge :=range _fgbg ._ceab {for _ ,_cg :=range _fgbg ._bga {_ge ._gffd =append (_ge ._gffd ,&page {_cgc :[]*pageRow {},_gdg :_ge ,_fegg :_cg });};};};func _geg (_dgbb *bool )bool {return _dgbb !=nil &&*_dgbb };func (_fgb *convertContext )makePagespans (){_fgb ._ceab =[]*pagespan {};_afa :=0.0;_bdg :=0;for _eg ,_aacb :=range _fgb ._gbc {_aaba :=_aacb ._gcc ;if _afa +_aaba <=_fgb ._eceg {_aacb ._afag =_afa ;_afa +=_aaba ;}else {_aacb ._afag =0;_fgb ._ceab =append (_fgb ._ceab ,&pagespan {_abgg :_afa ,_caac :_bdg ,_dce :_eg });_afa =_aaba ;_bdg =_eg ;};};_fgb ._ceab =append (_fgb ._ceab ,&pagespan {_abgg :_afa ,_caac :_bdg ,_dce :len (_fgb ._gbc )});};type symbol struct{_edcc string ;_bff float64 ;_caaf float64 ;_gdfg float64 ;_fag *_g .TextStyle ;_cbcaa string ;};func (_eaa *convertContext )makeRowspans (){var _bba float64 ;_dcbd :=0;for _ddb ,_ccc :=range _eaa ._cafg {_gabc :=_ccc ._ddfb +_ccc ._aage ;if _bba +_gabc <=_eaa ._abc {_ccc ._ebaa =_bba ;_bba +=_gabc ;}else {_eaa ._bga =append (_eaa ._bga ,&rowspan {_defe :_bba ,_ceec :_dcbd ,_ccab :_ddb });_dcbd =_ddb ;_ccc ._ebaa =0;_bba =_gabc ;};};_eaa ._bga =append (_eaa ._bga ,&rowspan {_defe :_bba ,_ceec :_dcbd ,_ccab :len (_eaa ._cafg )});};

// ConvertToPdf converts a sheet to a PDF file. This package is beta, breaking changes can take place.
func ConvertToPdf (s *_ff .Sheet )*_g .Creator {_cc :=s .X ();if _cc ==nil {return nil ;};var _gc _g .PageSize ;var _fd bool ;if _bc :=_cc .PageSetup ;_bc !=nil {if _dd :=_bc .PaperSizeAttr ;_dd !=nil {_gc =_ceg [*_dd ];};_fd =_bc .OrientationAttr ==_cf .ST_OrientationLandscape ;};if (_gc ==_g .PageSize {}){_gc =_ceg [1];};if _fd {_gc [0],_gc [1]=_gc [1],_gc [0];};_faf :=_g .New ();_faf .SetPageSize (_gc );var _ba ,_gf ,_ce ,_fb float64 ;if _gfd :=_cc .PageMargins ;_gfd !=nil {_ce =_gfd .LeftAttr ;_fb =_gfd .RightAttr ;_ba =_gfd .TopAttr ;_gf =_gfd .BottomAttr ;};if _ce < 0.25{_ce =0.25;};if _fb < 0.25{_fb =0.25;};_ba *=_d .Inch ;_gf *=_d .Inch ;_ce *=_d .Inch ;_fb *=_d .Inch ;_faf .SetPageMargins (_ce ,_fb ,_ba ,_gf );_fg :=s .Workbook ();var _de *_ac .Theme ;if len (_fg .Themes ())> 0{_de =_fg .Themes ()[0];};_fe :=&convertContext {_eab :_faf ,_bbba :s ,_dfcg :s .Workbook (),_cfe :_de ,_adb :&s .Workbook ().StyleSheet ,_gaba :_ba ,_eecf :_ce ,_abc :_gc [1]-_gf -_ba ,_eceg :_gc [0]-_fb -_ce };_fe .makeAnchors ();_fe .determineMaxIndexes ();if _fe ._bca ==0&&_fe ._gcfc ==0{_faf .NewPage ();return _faf ;};_fe .makeCols ();_fe .makeRows ();_fe .makeMergedCells ();_fe .makeCells ();_fe .makePagespans ();_fe .makeRowspans ();_fe .makePages ();_fe .fillPages ();_fe .distributeAnchors ();_fe .drawSheet ();return _faf ;};const (FontStyle_Regular FontStyle =0;FontStyle_Bold FontStyle =1;FontStyle_Italic FontStyle =2;FontStyle_BoldItalic FontStyle =3;);func (_gae *convertContext )makeAnchors (){_af ,_cd :=_gae ._bbba .GetDrawing ();if _af !=nil {for _ ,_da :=range _af .EG_Anchor {_ca :=&anchor {};if _df :=_da .TwoCellAnchor ;_df !=nil {_bd ,_bgg :=_df .From ,_df .To ;if _bd ==nil ||_bgg ==nil {return ;};_ca ._gfdb =int (_bd .Row );_ca ._bbda =_ed .FromSTCoordinate (_bd .RowOff );_ca ._ebbc =int (_bd .Col );_ca ._bcae =_ed .FromSTCoordinate (_bd .ColOff );_ca ._aae =int (_bgg .Row );_ca ._aadc =_ed .FromSTCoordinate (_bgg .RowOff );_ca ._cfgf =int (_bgg .Col );_ca ._caaa =_ed .FromSTCoordinate (_bgg .ColOff );if _fafe :=_df .Choice ;_fafe !=nil {if _fda :=_fafe .Pic ;_fda !=nil {if _baa :=_fda .BlipFill ;_baa !=nil {if _bgf :=_baa .Blip ;_bgf !=nil {if _gg :=_bgf .EmbedAttr ;_gg !=nil {for _ ,_eac :=range _cd .X ().Relationship {if _eac .IdAttr ==*_gg {for _ ,_aa :=range _gae ._dfcg .Images {if _aa .Target ()==_eac .TargetAttr {_dea ,_cda :=_db .Open (_aa .Path ());if _cda !=nil {_b .Log .Debug ("\u004fp\u0065\u006e\u0020\u0069m\u0061\u0067\u0065\u0020\u0066i\u006ce\u0020e\u0072\u0072\u006f\u0072\u003a\u0020\u0025s",_cda );continue ;};_aac ,_ ,_cda :=_c .Decode (_dea );if _cda !=nil {_b .Log .Debug ("\u0044\u0065\u0063\u006fde\u0020\u0069\u006d\u0061\u0067\u0065\u0020\u0065\u0072\u0072\u006f\u0072\u003a\u0020%\u0073",_cda );continue ;};_ca ._dbaf =_aac ;};};};};};};};}else if _be :=_fafe .GraphicFrame ;_be !=nil {if _ffeg :=_be .Graphic ;_ffeg !=nil {if _gaea :=_ffeg .GraphicData ;_gaea !=nil {for _ ,_eag :=range _gaea .Any {if _fc ,_ab :=_eag .(*_bg .Chart );_ab {for _ ,_gdd :=range _cd .X ().Relationship {if _gdd .IdAttr ==_fc .IdAttr {_ceb :=_gae ._dfcg .GetChartByTargetId (_gdd .TargetAttr );if _ceb !=nil {_ca ._fabb =_ceb ;};};};};};};};};};};if _ca ._dbaf !=nil ||_ca ._fabb !=nil {_gae ._afea =append (_gae ._afea ,_ca );};};};};type mergedCell struct{_bcgd uint32 ;_efdeg uint32 ;_beff uint32 ;_gaga uint32 ;_gbdc float64 ;_fec float64 ;};type border struct{_dfab float64 ;_ecba _g .Color ;};func (_fbdb *convertContext )addRowToPage (_edc []*cell ,_aadg int ){_dbaa :=0.0;_aacc :=_fbdb ._eceg ;for _ ,_cbc :=range _edc {if len (_cbc ._fcbf )!=0{_cbc ._eccg =_dbaa ;_dbaa =_cbc ._aee +_cbc ._abfc ;};};for _bdd :=len (_edc )-1;_bdd >=0;_bdd --{_cgeg :=_edc [_bdd ];if len (_cgeg ._fcbf )!=0{_cgeg ._agba =_aacc ;_aacc =_cgeg ._aee ;};};_fbdb ._ebaf ._cgc =append (_fbdb ._ebaf ._cgc ,&pageRow {_efeba :_aadg ,_bdc :_edc });};func (_agbc *convertContext )fillPages (){for _dcgg ,_dgfb :=range _agbc ._bga {_gdb :=_agbc ._cafg [_dgfb ._ceec :_dgfb ._ccab ];for _ecca ,_cb :=range _gdb {_fcb :=0;_bda :=0.0;_cce :=[]*cell {};if _cb ._agbcd {for _ ,_gfb :=range _cb ._eegb {_dbf :=_agbc ._ceab [_fcb ];_agbc ._ebaf =_dbf ._gffd [_dcgg ];_agbc ._ebaf ._abd =true ;_gge :=_gfb ._gbe ;if _bda +_gge > _dbf ._abgg {_agbc .addRowToPage (_cce ,_ecca );_cce =[]*cell {_gfb };_bda =_gge ;_fcb ++;}else {_gfb ._aee =_bda ;_cce =append (_cce ,_gfb );_bda +=_gge ;};};if len (_cce )> 0{_caa :=_agbc ._ceab [_fcb ];_agbc ._ebaf =_caa ._gffd [_dcgg ];_agbc ._ebaf ._abd =true ;_agbc .addRowToPage (_cce ,_ecca );};};};};};func (_bdgc *convertContext )getStyle (_agbac *uint32 )*style {_cba :=&style {};_fgac :=false ;if _agbac !=nil {_aggg :=_bdgc ._adb .GetCellStyle (*_agbac );_ecfd :=_aggg .GetFont ();for _ ,_bfd :=range _ecfd .Name {if _bfd !=nil {_cba ._bedc =&_bfd .ValAttr ;_fgac =true ;break ;};};for _ ,_fegf :=range _ecfd .B {if _fegf !=nil {_bcaf :=_fegf .ValAttr ==nil ||*_fegf .ValAttr ;_cba ._bgb =&_bcaf ;_fgac =true ;break ;};};for _ ,_eabb :=range _ecfd .I {if _eabb !=nil {_ddeb :=_eabb .ValAttr ==nil ||*_eabb .ValAttr ;_cba ._dagf =&_ddeb ;_fgac =true ;break ;};};for _ ,_efc :=range _ecfd .U {if _efc !=nil {_cbeb :=_efc .ValAttr ==_cf .ST_UnderlineValuesSingle ||_efc .ValAttr ==_cf .ST_UnderlineValuesUnset ;_cba ._fgga =&_cbeb ;_fgac =true ;break ;};};for _ ,_bagg :=range _ecfd .Sz {if _bagg !=nil {_gea :=_bagg .ValAttr /12*_ed .DefaultFontSize ;_cba ._cdae =&_gea ;_fgac =true ;break ;};};for _ ,_fgf :=range _ecfd .VertAlign {if _fgf !=nil {_dadg :=_fgf .ValAttr ==_gb .ST_VerticalAlignRunSuperscript ;_cba ._aadb =&_dadg ;_cegb :=_fgf .ValAttr ==_gb .ST_VerticalAlignRunSubscript ;_cba ._egde =&_cegb ;_fgac =true ;break ;};};for _ ,_gcfb :=range _ecfd .Color {if _gcfb !=nil {_cba ._deae =_bdgc .getColorStringFromSmlColor (_gcfb );_fgac =true ;break ;};};_ceaba :=_aggg .GetBorder ();if _ceaba .Top !=nil {_cba ._acf =_bdgc .getBorder (_ceaba .Top );_fgac =true ;};if _ceaba .Bottom !=nil {_cba ._gec =_bdgc .getBorder (_ceaba .Bottom );_fgac =true ;};if _ceaba .Left !=nil {_cba ._bebd =_bdgc .getBorder (_ceaba .Left );_fgac =true ;};if _ceaba .Right !=nil {_cba ._befg =_bdgc .getBorder (_ceaba .Right );_fgac =true ;};if _aggg .Wrapped (){_cba ._gaeg =true ;_fgac =true ;};if _fdc :=_aggg .GetVerticalAlignment ();_fdc !=_cf .ST_VerticalAlignmentUnset {_cba ._eaad =_fdc ;_fgac =true ;};if _egcg :=_aggg .GetHorizontalAlignment ();_egcg !=_cf .ST_HorizontalAlignmentUnset {_cba ._ffcb =_egcg ;_fgac =true ;};};if _fgac {return _cba ;};return nil ;};type pageRow struct{_efeba int ;_bdc []*cell ;};func (_ggg *convertContext )makeCols (){_bb :=_ggg ._bbba ;_fga :=_bb .X ();_bec :=[]*colInfo {};_agb :=[]colWidthRange {};if _ffc :=_fga .Cols ;len (_ffc )> 0{for _ ,_ae :=range _ffc [0].Col {_bcg :=65.0;if _gbf :=_ae .WidthAttr ;_gbf !=nil {if *_gbf > 0.83{*_gbf -=0.83;};if *_gbf <=1{_bcg =*_gbf *11;}else {_bcg =5+*_gbf *6;};};_acd :=int (_ae .MinAttr -1);_abg :=int (_ae .MaxAttr -1);_agb =append (_agb ,colWidthRange {_gfdc :_acd ,_agg :_abg ,_fbe :_bcg ,_fab :_ggg .getStyle (_ae .StyleAttr )});};};_bbf :=0;for _bbc :=0;_bbc <=_ggg ._gcfc ;_bbc ++{var _afg float64 ;var _ef *style ;if _bbf >=len (_agb ){_afg =65;}else {_dg :=_agb [_bbf ];if _bbc >=_dg ._gfdc &&_bbc <=_dg ._agg {_afg =_dg ._fbe ;_ef =_dg ._fab ;if _bbc ==_dg ._agg {_bbf ++;};}else {_afg =65;};};_bec =append (_bec ,&colInfo {_gcc :_afg ,_effa :_ef });};_ggg ._gbc =_bec ;};var _fcg =[]string {"\u0030\u0030\u0030\u0030\u0030\u0030","\u0066\u0066\u0066\u0066\u0066\u0066","\u0066\u0066\u0030\u0030\u0030\u0030","\u0030\u0030\u0066\u0066\u0030\u0030","\u0030\u0030\u0030\u0030\u0066\u0066","\u0066\u0066\u0066\u0066\u0030\u0030","\u0066\u0066\u0030\u0030\u0066\u0066","\u0030\u0030\u0066\u0066\u0066\u0066","\u0030\u0030\u0030\u0030\u0030\u0030","\u0066\u0066\u0066\u0066\u0066\u0066","\u0066\u0066\u0030\u0030\u0030\u0030","\u0030\u0030\u0066\u0066\u0030\u0030","\u0030\u0030\u0030\u0030\u0066\u0066","\u0066\u0066\u0066\u0066\u0030\u0030","\u0066\u0066\u0030\u0030\u0066\u0066","\u0030\u0030\u0066\u0066\u0066\u0066","\u0038\u0030\u0030\u0030\u0030\u0030","\u0030\u0030\u0038\u0030\u0030\u0030","\u0030\u0030\u0030\u0030\u0038\u0030","\u0038\u0030\u0038\u0030\u0030\u0030","\u0038\u0030\u0030\u0030\u0038\u0030","\u0030\u0030\u0038\u0030\u0038\u0030","\u0063\u0030\u0063\u0030\u0063\u0030","\u0038\u0030\u0038\u0030\u0038\u0030","\u0039\u0039\u0039\u0039\u0066\u0066","\u0039\u0039\u0033\u0033\u0036\u0036","\u0066\u0066\u0066\u0066\u0063\u0063","\u0063\u0063\u0066\u0066\u0066\u0066","\u0036\u0036\u0030\u0030\u0036\u0036","\u0066\u0066\u0038\u0030\u0038\u0030","\u0030\u0030\u0036\u0036\u0063\u0063","\u0063\u0063\u0063\u0063\u0066\u0066","\u0030\u0030\u0030\u0030\u0038\u0030","\u0066\u0066\u0030\u0030\u0066\u0066","\u0066\u0066\u0066\u0066\u0030\u0030","\u0030\u0030\u0066\u0066\u0066\u0066","\u0038\u0030\u0030\u0030\u0038\u0030","\u0038\u0030\u0030\u0030\u0030\u0030","\u0030\u0030\u0038\u0030\u0038\u0030","\u0030\u0030\u0030\u0030\u0066\u0066","\u0030\u0030\u0063\u0063\u0066\u0066","\u0063\u0063\u0066\u0066\u0066\u0066","\u0063\u0063\u0066\u0066\u0063\u0063","\u0066\u0066\u0066\u0066\u0039\u0039","\u0039\u0039\u0063\u0063\u0066\u0066","\u0066\u0066\u0039\u0039\u0063\u0063","\u0063\u0063\u0039\u0039\u0066\u0066","\u0066\u0066\u0063\u0063\u0039\u0039","\u0033\u0033\u0036\u0036\u0066\u0066","\u0033\u0033\u0063\u0063\u0063\u0063","\u0039\u0039\u0063\u0063\u0030\u0030","\u0066\u0066\u0063\u0063\u0030\u0030","\u0066\u0066\u0039\u0039\u0030\u0030","\u0066\u0066\u0036\u0036\u0030\u0030","\u0036\u0036\u0036\u0036\u0039\u0039","\u0039\u0036\u0039\u0036\u0039\u0036","\u0030\u0030\u0033\u0033\u0036\u0036","\u0033\u0033\u0039\u0039\u0036\u0036","\u0030\u0030\u0033\u0033\u0030\u0030","\u0033\u0033\u0033\u0033\u0030\u0030","\u0039\u0039\u0033\u0033\u0030\u0030","\u0039\u0039\u0033\u0033\u0036\u0036","\u0033\u0033\u0033\u0033\u0039\u0039","\u0033\u0033\u0033\u0033\u0033\u0033"};func (_gag *convertContext )getSymbolsFromString (_dgfe string ,_fadg *style )[]*symbol {_eacf :=[]*symbol {};_abe :=_gag .makeTextStyleFromCellStyle (_fadg );for _ ,_add :=range _dgfe {_eacf =append (_eacf ,&symbol {_edcc :string (_add ),_fag :_abe });};return _eacf ;};type pagespan struct{_abgg float64 ;_gffd []*page ;_caac int ;_dce int ;};type style struct{_deae *string ;_cdae *float64 ;_bedc *string ;_bgb *bool ;_dagf *bool ;_fgga *bool ;_aadb *bool ;_egde *bool ;_acf *border ;_gec *border ;_bebd *border ;_befg *border ;_gaeg bool ;_eaad _cf .ST_VerticalAlignment ;_ffcb _cf .ST_HorizontalAlignment ;};const _edg =0.25;func (_deg *convertContext )makeRows (){_cea :=[]*rowInfo {};_bf :=_deg ._bbba .Rows ();_eb :=0;for _ ,_dga :=range _bf {_eb ++;_dgf :=int (_dga .RowNumber ());if _dgf > _eb {for _bag :=_eb ;_bag < _dgf ;_bag ++{_cea =append (_cea ,&rowInfo {_ddfb :16/_dc });};_eb =_dgf ;};var _feg float64 ;if _dga .X ().HtAttr ==nil {_feg =16;}else {_feg =*_dga .X ().HtAttr ;};_cea =append (_cea ,&rowInfo {_ddfb :_feg /_dc ,_agbcd :true ,_bggd :_deg .getStyle (_dga .X ().SAttr )});};for _cef :=len (_cea );_cef < _deg ._bca ;_cef ++{_cea =append (_cea ,&rowInfo {_ddfb :16/_dc });};_deg ._cafg =_cea ;};

// RegisterFont makes a PdfFont accessible for using in converting to PDF.
func RegisterFont (name string ,style FontStyle ,font *_ec .PdfFont ){_ed .RegisterFont (name ,style ,font );};func (_eed *convertContext )getBorder (_cadg *_cf .CT_BorderPr )*border {_gfea :=&border {};switch _cadg .StyleAttr {case _cf .ST_BorderStyleThin :_gfea ._dfab =_ffg ;case _cf .ST_BorderStyleMedium :_gfea ._dfab =_ffg *2;case _cf .ST_BorderStyleThick :_gfea ._dfab =_ffg *4;};if _gfea ._dfab ==0.0{return nil ;};if _ebgg :=_cadg .Color ;_ebgg !=nil {_afagb :=_eed .getColorStringFromSmlColor (_ebgg );if _afagb !=nil {_gfea ._ecba =_g .ColorRGBFromHex (*_afagb );}else {_gfea ._ecba =_g .ColorBlack ;};};return _gfea ;};type colWidthRange struct{_gfdc int ;_agg int ;_fbe float64 ;_fab *style ;};func (_dgbfb *convertContext )drawSheet (){for _aeb ,_ebg :=range _dgbfb ._ceab {_gafc :=len (_ebg ._gffd );if _aeb ==len (_dgbfb ._ceab )-1{for _gcg :=len (_ebg ._gffd )-1;_gcg >=0;_gcg --{if !_ebg ._gffd [_gcg ]._abd {_gafc =_gcg ;};};};_abf :=_ebg ._gffd [:_gafc ];for _ ,_dega :=range _abf {_dgbfb ._eab .NewPage ();_dgbfb .drawPage (_dega );};};};func (_fgcf *convertContext )makeTextStyleFromCellStyle (_cbeg *style )*_g .TextStyle {_fcc :=_fgcf ._eab .NewTextStyle ();if _cbeg ==nil {_fcc .FontSize =_ed .DefaultFontSize ;_fcc .Font =_ed .AssignStdFontByName (_fcc ,_ed .StdFontsMap ["\u0064e\u0066\u0061\u0075\u006c\u0074"][FontStyle_Regular ]);return &_fcc ;};if _geg (_cbeg ._fgga ){_fcc .Underline =true ;_fcc .UnderlineStyle =_g .TextDecorationLineStyle {Offset :0.5,Thickness :_cbb (1/32)};};var _gefa FontStyle ;if _geg (_cbeg ._bgb )&&_geg (_cbeg ._dagf ){_gefa =FontStyle_BoldItalic ;}else if _geg (_cbeg ._bgb ){_gefa =FontStyle_Bold ;}else if _geg (_cbeg ._dagf ){_gefa =FontStyle_Italic ;}else {_gefa =FontStyle_Regular ;};_ffegb :="\u0064e\u0066\u0061\u0075\u006c\u0074";if _cbeg ._bedc !=nil {_ffegb =*_cbeg ._bedc ;};if _gacf ,_cead :=_ed .StdFontsMap [_ffegb ];_cead {_fcc .Font =_ed .AssignStdFontByName (_fcc ,_gacf [_gefa ]);}else if _egc :=_ed .GetRegisteredFont (_ffegb ,_gefa );_egc !=nil {_fcc .Font =_egc ;}else {_b .Log .Debug ("\u0046\u006f\u006e\u0074\u0020\u0025\u0073\u0020\u0077\u0069\u0074h\u0020\u0073\u0074\u0079\u006c\u0065\u0020\u0025s\u0020i\u0073\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u002c\u0020\u0072\u0065\u0073\u0065\u0074 \u0074\u006f\u0020\u0064\u0065\u0066\u0061\u0075\u006c\u0074\u002e",_ffegb ,_gefa );_fcc .Font =_ed .AssignStdFontByName (_fcc ,_ed .StdFontsMap ["\u0064e\u0066\u0061\u0075\u006c\u0074"][_gefa ]);};if _cbeg ._cdae !=nil {_fcc .FontSize =*_cbeg ._cdae ;};if _cbeg ._deae !=nil {_fcc .Color =_g .ColorRGBFromHex (*_cbeg ._deae );};if _cbeg ._aadb !=nil &&*_cbeg ._aadb {_fcc .FontSize *=_ga ;}else if _cbeg ._egde !=nil &&*_cbeg ._egde {_fcc .FontSize *=_ga ;};return &_fcc ;};func (_fcce *convertContext )getColorStringFromSmlColor (_ecgg *_cf .CT_Color )*string {var _deaf string ;if _ecgg .RgbAttr !=nil {_deaf =*_ecgg .RgbAttr ;}else if _ecgg .IndexedAttr !=nil &&*_ecgg .IndexedAttr < 64{_deaf =_fcg [*_ecgg .IndexedAttr ];}else if _ecgg .ThemeAttr !=nil {_agef :=*_ecgg .ThemeAttr ;_deaf =_fcce .getColorFromTheme (_agef );};if _deaf ==""{return nil ;};if len (_deaf )> 6{_deaf =_deaf [(len (_deaf )-6):];};if _ecgg .TintAttr !=nil {_gabf :=*_ecgg .TintAttr ;_deaf =_ed .AdjustColorByTint (_deaf ,_gabf );};_deaf ="\u0023"+_deaf ;return &_deaf ;};func (_bbaf *convertContext )alignSymbolsVertically (_bgcc *cell ,_cadc _cf .ST_VerticalAlignment ){var _bgdc float64 ;switch _cadc {case _cf .ST_VerticalAlignmentTop :_bgdc =_ea ;if _bgcc ._cbef {_bgdc -=_ffe ;}else if _bgcc ._ggcd {_bgdc +=4*_ffe ;};for _ ,_ffbe :=range _bgcc ._fcbf {_bgdc +=_ffbe ._adba ;_ffbe ._gaa =_bgdc ;_bgdc +=_fa ;};case _cf .ST_VerticalAlignmentCenter :_bbfb :=0.0;for _ ,_ddaa :=range _bgcc ._fcbf {_bbfb +=_ddaa ._adba +_cbb (1);};_bgdc =0.5*(_bgcc ._bcd -_bbfb );if _bgcc ._cbef {_bgdc -=2*_ffe ;}else if _bgcc ._ggcd {_bgdc +=2*_ffe ;};for _ ,_cee :=range _bgcc ._fcbf {_bgdc +=_cee ._adba +0.5*_fa ;_cee ._gaa =_bgdc ;_bgdc +=0.5*_fa ;};default:_bgdc =_bgcc ._bcd -_ea ;if _bgcc ._cbef {_bgdc -=4*_ffe ;}else if _bgcc ._ggcd {_bgdc +=_ffe ;};for _dfga :=len (_bgcc ._fcbf )-1;_dfga >=0;_dfga --{_bgcc ._fcbf [_dfga ]._gaa =_bgdc ;_bgdc -=_bgcc ._fcbf [_dfga ]._adba ;_bgdc -=_fa ;};};};func (_efdg *convertContext )getImage (_efbg _c .Image ,_bggb ,_dfe ,_gef ,_efeb ,_afcf ,_gcf float64 ,_dfdd _ed .ImgPart )*_g .Image {_efeb +=_efdg ._gaba ;_gef +=_efdg ._eecf ;_ggf ,_cdbc :=_ed .GetImage (_efdg ._eab ,_efbg ,_bggb ,_dfe ,_gef ,_efeb ,_afcf ,_gcf ,_dfdd );if _cdbc !=nil {_b .Log .Debug ("\u0043\u0061\u006eno\u0074\u0020\u0067\u0065\u0074\u0020\u0061\u006e\u0020\u0069\u006d\u0061\u0067\u0065\u003a\u0020\u0025\u0073",_cdbc );return nil ;};return _ggf ;};func (_cfb *convertContext )getStyleFromRPrElt (_fde *_cf .CT_RPrElt )*style {if _fde ==nil {return nil ;};_bbgg :=&style {};_bbgg ._bedc =&_fde .RFont .ValAttr ;if _gdc :=_fde .B ;_gdc !=nil {_eceb :=_gdc .ValAttr ==nil ||*_gdc .ValAttr ;_bbgg ._bgb =&_eceb ;};if _dgd :=_fde .I ;_dgd !=nil {_ddg :=_dgd .ValAttr ==nil ||*_dgd .ValAttr ;_bbgg ._dagf =&_ddg ;};if _ggee :=_fde .U ;_ggee !=nil {_dacf :=_ggee .ValAttr ==_cf .ST_UnderlineValuesSingle ||_ggee .ValAttr ==_cf .ST_UnderlineValuesUnset ;_bbgg ._fgga =&_dacf ;};if _bgee :=_fde .VertAlign ;_bgee !=nil {_fge :=_bgee .ValAttr ==_gb .ST_VerticalAlignRunSuperscript ;_bbgg ._aadb =&_fge ;_bdgg :=_bgee .ValAttr ==_gb .ST_VerticalAlignRunSubscript ;_bbgg ._egde =&_bdgg ;};if _effg :=_fde .Sz ;_effg !=nil {_acee :=_effg .ValAttr /12*_ed .DefaultFontSize ;_bbgg ._cdae =&_acee ;};if _cgg :=_fde .Color ;_cgg !=nil {_bbgg ._deae =_cfb .getColorStringFromSmlColor (_cgg );};return _bbgg ;};func (_fcbb *convertContext )getColorFromTheme (_ffbc uint32 )string {_dcda :=_fcbb ._dfcg .Themes ();if len (_dcda )!=0{_cebg :=_dcda [0];if _cfed :=_cebg .ThemeElements ;_cfed !=nil {if _gdbe :=_cfed .ClrScheme ;_gdbe !=nil {switch _ffbc {case 0:return _ed .GetColorStringFromDmlColor (_gdbe .Lt1 );case 1:return _ed .GetColorStringFromDmlColor (_gdbe .Dk1 );case 2:return _ed .GetColorStringFromDmlColor (_gdbe .Lt2 );case 3:return _ed .GetColorStringFromDmlColor (_gdbe .Dk2 );case 4:return _ed .GetColorStringFromDmlColor (_gdbe .Accent1 );case 5:return _ed .GetColorStringFromDmlColor (_gdbe .Accent2 );case 6:return _ed .GetColorStringFromDmlColor (_gdbe .Accent3 );case 7:return _ed .GetColorStringFromDmlColor (_gdbe .Accent4 );case 8:return _ed .GetColorStringFromDmlColor (_gdbe .Accent5 );case 9:return _ed .GetColorStringFromDmlColor (_gdbe .Accent6 );};};};};return "";};func _gfdg (_efba *symbol ){_efaf :=_g .New ();_cbe :=_efaf .NewStyledParagraph ();_cbe .SetMargins (0,0,0,0);_afb :=_cbe .Append (_efba ._edcc );if _efba ._fag !=nil {_afb .Style =*_efba ._fag ;};_efba ._caaf =_cbe .Height ();if _efba ._gdfg ==0{_efba ._gdfg =_cbe .Width ();};};func (_cebf *convertContext )getStyleFromCell (_dadd _ff .Cell ,_fagc ,_eabd *style )*style {_abfe :=_dadd .X ();_gba :=_cebf .getStyle (_abfe .SAttr );_afec (_gba ,_fagc );_afec (_gba ,_eabd );return _gba ;};var _fa =_cbb (1);var _ceg =map[uint32 ]_g .PageSize {1:_g .PageSize {8.5*_d .Inch ,11*_d .Inch },2:_g .PageSize {8.5*_d .Inch ,11*_d .Inch },3:_g .PageSize {11*_d .Inch ,17*_d .Inch },4:_g .PageSize {17*_d .Inch ,11*_d .Inch },5:_g .PageSize {8.5*_d .Inch ,14*_d .Inch },6:_g .PageSize {5.5*_d .Inch ,8.5*_d .Inch },7:_g .PageSize {7.5*_d .Inch ,10*_d .Inch },8:_g .PageSize {_cbb (297),_cbb (420)},9:_g .PageSize {_cbb (210),_cbb (297)},10:_g .PageSize {_cbb (210),_cbb (297)},11:_g .PageSize {_cbb (148),_cbb (210)},70:_g .PageSize {_cbb (105),_cbb (148)},12:_g .PageSize {_cbb (250),_cbb (354)},13:_g .PageSize {_cbb (182),_cbb (257)},14:_g .PageSize {8.5*_d .Inch ,13*_d .Inch },20:_g .PageSize {4.125*_d .Inch ,9.5*_d .Inch },27:_g .PageSize {_cbb (110),_cbb (220)},28:_g .PageSize {_cbb (162),_cbb (229)},34:_g .PageSize {_cbb (250),_cbb (176)},29:_g .PageSize {_cbb (324),_cbb (458)},30:_g .PageSize {_cbb (229),_cbb (324)},31:_g .PageSize {_cbb (114),_cbb (162)},37:_g .PageSize {3.88*_d .Inch ,7.5*_d .Inch },43:_g .PageSize {_cbb (100),_cbb (148)},69:_g .PageSize {_cbb (200),_cbb (148)}};func (_cfbd *convertContext )combineCellStyleWithRPrElt (_degc *style ,_faba *_cf .CT_RPrElt )*style {_fbda :=*_degc ;_cdbg :=_cfbd .getStyleFromRPrElt (_faba );if _cdbg ==nil {return &_fbda ;};if _cdbg ._deae !=nil {_fbda ._deae =_cdbg ._deae ;};if _cdbg ._cdae !=nil {_fbda ._cdae =_cdbg ._cdae ;};if _cdbg ._bedc !=nil {_fbda ._bedc =_cdbg ._bedc ;};if _cdbg ._bgb !=nil {_fbda ._bgb =_cdbg ._bgb ;};if _cdbg ._dagf !=nil {_fbda ._dagf =_cdbg ._dagf ;};if _cdbg ._fgga !=nil {_fbda ._fgga =_cdbg ._fgga ;};if _cdbg ._aadb !=nil {_fbda ._aadb =_cdbg ._aadb ;};if _cdbg ._egde !=nil {_fbda ._egde =_cdbg ._egde ;};return &_fbda ;};type cell struct{_adde _cf .ST_CellType ;_debb int ;_aee float64 ;_fcbf []*line ;_abfc float64 ;_gbe float64 ;_bcd float64 ;_eccg float64 ;_agba float64 ;_fgc *_g .TextStyle ;_ade *border ;_fggaf *border ;_bcag *border ;_bgfg *border ;_cbef bool ;_ggcd bool ;};type rowInfo struct{_ebaa float64 ;_agbcd bool ;_ddfb float64 ;_bggd *style ;_eegb []*cell ;_aage float64 ;};

// FontStyle represents a kind of font styling. It can be FontStyle_Regular, FontStyle_Bold, FontStyle_Italic and FontStyle_BoldItalic.
type FontStyle =_ed .FontStyle ;

// RegisterFontsFromDirectory registers all fonts from the given directory automatically detecting font families and styles.
func RegisterFontsFromDirectory (dirName string )error {return _ed .RegisterFontsFromDirectory (dirName )};func (_bdf *convertContext )drawPage (_dca *page ){_bcb :=_bdf ._gaba ;_cec :=_bdf ._eecf ;for _ ,_fgbd :=range _dca ._cgc {_bde :=_bdf ._cafg [_fgbd ._efeba ];for _ ,_gac :=range _fgbd ._bdc {_gggb :=_gac ._eccg < _gac ._aee ;_caf :=_gac ._agba > _gac ._aee +_gac ._abfc ;var _acgd ,_cbg bool ;for _ ,_aegc :=range _gac ._fcbf {for _ ,_dbef :=range _aegc ._bgaa {if _gggb &&!_acgd {_acgd =_dbef ._bff < 0;};if _caf &&!_cbg {_cbg =_gac ._abfc < _dbef ._bff +_dbef ._gdfg ;};if _gac ._aee +_dbef ._bff >=_gac ._eccg &&_gac ._aee +_dbef ._bff +_dbef ._gdfg <=_gac ._agba {_bgc :=_bdf ._eab .NewStyledParagraph ();_cge :=_cec +_gac ._aee +_dbef ._bff ;_fca :=_bcb +_bde ._ebaa +_aegc ._gaa -_dbef ._caaf -_cbb (0.5);_bgc .SetPos (_cge ,_fca );var _cdb *_g .TextChunk ;if _dbef ._cbcaa !=""{_cdb =_bgc .AddExternalLink (_dbef ._edcc ,_dbef ._cbcaa );}else {_cdb =_bgc .Append (_dbef ._edcc );};if _dbef ._fag !=nil {_cdb .Style =*_dbef ._fag ;};_bdf ._eab .Draw (_bgc );};};};var _deb ,_gdf ,_bgfc ,_dbc ,_cebb ,_bef float64 ;var _ggb ,_afcd ,_bfc ,_deac _g .Color ;if _ggbb :=_gac ._ade ;_ggbb !=nil {_deb =_ggbb ._dfab ;_ggb =_ggbb ._ecba ;};if _bcge :=_gac ._fggaf ;_bcge !=nil {_gdf =_bcge ._dfab ;_afcd =_bcge ._ecba ;};if _agc :=_gac ._bcag ;_agc !=nil {_bgfc =_agc ._dfab ;_cebb =_bgfc /2;_bfc =_agc ._ecba ;};if _efbc :=_gac ._bgfg ;_efbc !=nil {_dbc =_efbc ._dfab ;_bef =_dbc /2;_deac =_efbc ._ecba ;};var _ddf float64 ;if _fgbd ._efeba > 1{_ddf =_bdf ._cafg [_fgbd ._efeba -1]._aage ;};_ccg :=_bcb +_bde ._ebaa -0.5*(_ddf -_deb );_acdf :=_bcb +_bde ._ebaa +_bde ._ddfb +0.5*(_bde ._aage +_gdf );_eaef :=_cec +_gac ._aee ;_def :=_eaef +_gac ._gbe ;_ed .DrawLine (_bdf ._eab ,_eaef ,_ccg ,_def ,_ccg ,_deb ,_ggb );_ed .DrawLine (_bdf ._eab ,_eaef ,_acdf ,_def ,_acdf ,_gdf ,_afcd );if !_acgd {_ed .DrawLine (_bdf ._eab ,_eaef -_cebb ,_ccg ,_eaef -_cebb ,_acdf ,_bgfc ,_bfc );};if !_cbg {_ed .DrawLine (_bdf ._eab ,_def -_bef ,_ccg ,_def -_bef ,_acdf ,_dbc ,_deac );};};};for _ ,_cfg :=range _dca ._fed {if _cfg !=nil {_bdf ._eab .Draw (_cfg );};};};func _aff (_gdff []*symbol )float64 {_gagb :=0.0;for _ ,_ada :=range _gdff {_gagb +=_ada ._gdfg ;};return _gagb ;};type anchor struct{_dbaf _c .Image ;_fabb *_bg .ChartSpace ;_gfdb int ;_bbda int64 ;_ebbc int ;_bcae int64 ;_aae int ;_aadc int64 ;_cfgf int ;_caaa int64 ;};func (_ecc *convertContext )determineMaxIndexes (){var _daf ,_ee int ;_daf =int (_ecc ._bbba .MaxColumnIdx ());_cdaa :=_ecc ._bbba .Rows ();if len (_cdaa )> 0{_ee =int (_cdaa [len (_cdaa )-1].RowNumber ());};for _ ,_dfd :=range _ecc ._afea {if _dfd ._aae >=_ee {_ee =_dfd ._aae +1;};if _dfd ._cfgf >=_daf {_daf =_dfd ._cfgf +1;};};_ecc ._bca =_ee ;_ecc ._gcfc =_daf ;};var _dc =3.025/_cbb (1);const _ga =0.64;func (_acc *convertContext )makeCells (){_afc :=_acc ._bbba ;_dee :=_afc .Rows ();_aab :=0;for _ ,_bggc :=range _acc ._cafg {_bggc ._eegb =[]*cell {};_efd :=0.0;_gaf :=_bggc ._bggd ;if _bggc ._agbcd {_gab :=_dee [_aab ];_aab ++;_aeg :=_bggc ._ddfb ;for _ ,_efb :=range _gab .Cells (){_dcb ,_ccbc :=_f .ParseCellReference (_efb .Reference ());if _ccbc !=nil {_b .Log .Debug ("\u0043\u0061\u006e\u006eo\u0074\u0020\u0070\u0061\u0072\u0073\u0065\u0020\u0061\u0020r\u0065f\u0065\u0072\u0065\u006e\u0063\u0065\u003a \u0025\u0073",_ccbc );continue ;};_bea :=_acc ._gbc [_dcb .ColumnIdx ];_cag :=_bea ._gcc ;_ad :=_cag ;_efdb :=_bea ._effa ;var _edb ,_fegd ,_ffec ,_dcd bool ;for _ ,_gbd :=range _acc ._bdgd {if _dcb .RowIdx >=_gbd ._bcgd &&_dcb .RowIdx <=_gbd ._beff &&_dcb .ColumnIdx >=_gbd ._efdeg &&_dcb .ColumnIdx <=_gbd ._gaga {if _dcb .ColumnIdx ==_gbd ._efdeg &&_dcb .RowIdx ==_gbd ._bcgd {_cag =_gbd ._gbdc ;_aeg =_gbd ._fec ;};_edb =_dcb .RowIdx !=_gbd ._bcgd ;_fegd =_dcb .RowIdx !=_gbd ._beff ;_ffec =_dcb .ColumnIdx !=_gbd ._efdeg ;_dcd =_dcb .ColumnIdx !=_gbd ._gaga ;};};_gff :=_acc .getStyleFromCell (_efb ,_gaf ,_efdb );var _edbb ,_gde ,_ddd bool ;var _gbdg ,_aag ,_dcg ,_dag *border ;var _adc _cf .ST_VerticalAlignment ;var _cde _cf .ST_HorizontalAlignment ;if _gff !=nil {if !_edb {_gbdg =_gff ._acf ;};if !_fegd {_aag =_gff ._gec ;};if !_ffec {_dcg =_gff ._bebd ;};if !_dcd {_dag =_gff ._befg ;};if _aag !=nil &&_aag ._dfab > _efd {_efd =_aag ._dfab ;};_adc =_gff ._eaad ;_cde =_gff ._ffcb ;if _gff ._aadb !=nil {_edbb =*_gff ._aadb ;};if _gff ._egde !=nil {_gde =*_gff ._egde ;};_ddd =_gff ._gaeg ;};_eec ,_fdf :=_acc .getContentFromCell (_efb ,_gff ,_cag ,_ddd );_efa :=&cell {_adde :_fdf ,_abfc :_cag ,_gbe :_ad ,_bcd :_aeg ,_fcbf :_eec ,_ade :_gbdg ,_fggaf :_aag ,_bcag :_dcg ,_bgfg :_dag ,_cbef :_edbb ,_ggcd :_gde };_acc .alignSymbolsHorizontally (_efa ,_cde );_acc .alignSymbolsVertically (_efa ,_adc );_bggc ._eegb =append (_bggc ._eegb ,_efa );};};_bggc ._aage =_efd ;};};func _cbb (_aca float64 )float64 {return _aca *_d .Millimeter };const _ffe =1.5;type page struct{_cgc []*pageRow ;_abd bool ;_fed []*_g .Image ;_gdg *pagespan ;_fegg *rowspan ;};func (_aegb *convertContext )alignSymbolsHorizontally (_dcge *cell ,_bbb _cf .ST_HorizontalAlignment ){if _bbb ==_cf .ST_HorizontalAlignmentUnset {switch _dcge ._adde {case _cf .ST_CellTypeB :_bbb =_cf .ST_HorizontalAlignmentCenter ;case _cf .ST_CellTypeN :_bbb =_cf .ST_HorizontalAlignmentRight ;default:_bbb =_cf .ST_HorizontalAlignmentLeft ;};};var _dbac float64 ;for _ ,_bad :=range _dcge ._fcbf {switch _bbb {case _cf .ST_HorizontalAlignmentLeft :_dbac =_ag ;case _cf .ST_HorizontalAlignmentRight :_gga :=_aff (_bad ._bgaa );_dbac =_dcge ._abfc -_ag -_gga ;case _cf .ST_HorizontalAlignmentCenter :_cdba :=_aff (_bad ._bgaa );_dbac =(_dcge ._abfc -_cdba )/2;};for _ ,_cgd :=range _bad ._bgaa {_cgd ._bff +=_dbac ;};};};type convertContext struct{_eab *_g .Creator ;_dfcg *_ff .Workbook ;_cfe *_ac .Theme ;_bbba *_ff .Sheet ;_adb *_ff .StyleSheet ;_bca int ;_gcfc int ;_ceab []*pagespan ;_ebaf *page ;_gbc []*colInfo ;_cafg []*rowInfo ;_bga []*rowspan ;_gaba float64 ;_eecf float64 ;_abc float64 ;_eceg float64 ;_bdgd []*mergedCell ;_afea []*anchor ;};type line struct{_gaa float64 ;_bgaa []*symbol ;_adba float64 ;};