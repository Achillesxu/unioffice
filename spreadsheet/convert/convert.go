//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package convert ;import (_a "github.com/unidoc/unioffice/common/logger";_cf "github.com/unidoc/unioffice/common/tempstorage";_cddd "github.com/unidoc/unioffice/internal/convertutils";_f "github.com/unidoc/unioffice/measurement";_b "github.com/unidoc/unioffice/schema/soo/dml";
_ea "github.com/unidoc/unioffice/schema/soo/dml/chart";_ecc "github.com/unidoc/unioffice/schema/soo/ofc/sharedTypes";_bb "github.com/unidoc/unioffice/schema/soo/sml";_ba "github.com/unidoc/unioffice/spreadsheet";_af "github.com/unidoc/unioffice/spreadsheet/reference";
_cdd "github.com/unidoc/unipdf/v3/creator";_ec "github.com/unidoc/unipdf/v3/model";_c "image";_cd "strconv";);func (_eeeg *convertContext )alignSymbolsHorizontally (_afa *cell ,_aefdb _bb .ST_HorizontalAlignment ){if _aefdb ==_bb .ST_HorizontalAlignmentUnset {switch _afa ._fag {case _bb .ST_CellTypeB :_aefdb =_bb .ST_HorizontalAlignmentCenter ;
case _bb .ST_CellTypeN :_aefdb =_bb .ST_HorizontalAlignmentRight ;default:_aefdb =_bb .ST_HorizontalAlignmentLeft ;};};var _gcbd float64 ;for _ ,_gbbc :=range _afa ._bbc {switch _aefdb {case _bb .ST_HorizontalAlignmentLeft :_gcbd =_fb ;case _bb .ST_HorizontalAlignmentRight :_bedd :=_cga (_gbbc ._ccbe );
_gcbd =_afa ._efe -_fb -_bedd ;case _bb .ST_HorizontalAlignmentCenter :_gfag :=_cga (_gbbc ._ccbe );_gcbd =(_afa ._efe -_gfag )/2;};for _ ,_aae :=range _gbbc ._ccbe {_aae ._ebba +=_gcbd ;};};};var _d =_decd (0.0625);type colInfo struct{_eca float64 ;_gfbg float64 ;
_gdacg *style ;};func (_fbeg *convertContext )getStyleFromRPrElt (_dbe *_bb .CT_RPrElt )*style {if _dbe ==nil {return nil ;};_dega :=&style {};_dega ._fee =&_dbe .RFont .ValAttr ;if _bcab :=_dbe .B ;_bcab !=nil {_acea :=_bcab .ValAttr ==nil ||*_bcab .ValAttr ;
_dega ._eeb =&_acea ;};if _aecb :=_dbe .I ;_aecb !=nil {_cddfe :=_aecb .ValAttr ==nil ||*_aecb .ValAttr ;_dega ._afcc =&_cddfe ;};if _cae :=_dbe .U ;_cae !=nil {_fgb :=_cae .ValAttr ==_bb .ST_UnderlineValuesSingle ||_cae .ValAttr ==_bb .ST_UnderlineValuesUnset ;
_dega ._ccf =&_fgb ;};if _cegd :=_dbe .VertAlign ;_cegd !=nil {_ebdd :=_cegd .ValAttr ==_ecc .ST_VerticalAlignRunSuperscript ;_dega ._cbda =&_ebdd ;_age :=_cegd .ValAttr ==_ecc .ST_VerticalAlignRunSubscript ;_dega ._ggeg =&_age ;};if _eaad :=_dbe .Sz ;
_eaad !=nil {_fgce :=_eaad .ValAttr /12*_cddd .DefaultFontSize ;_dega ._cbeg =&_fgce ;};if _ceff :=_dbe .Color ;_ceff !=nil {_dega ._gdg =_fbeg .getColorStringFromSmlColor (_ceff );};return _dega ;};func (_agdd *convertContext )getSymbolsFromR (_ddg []*_bb .CT_RElt ,_cce *style )[]*symbol {_dff :=[]*symbol {};
for _ ,_cbe :=range _ddg {_dac :=_agdd .combineCellStyleWithRPrElt (_cce ,_cbe .RPr );for _ ,_dbb :=range _cbe .T {_dff =append (_dff ,&symbol {_gedd :string (_dbb ),_bfd :_agdd .makeTextStyleFromCellStyle (_dac )});};};return _dff ;};type pagespan struct{_eaeg float64 ;
_eea []*page ;_bddg int ;_egaf int ;};func _cea (_acgd ,_fbea *style ){if _fbea ==nil {return ;};if _acgd ==nil {_acgd =_fbea ;return ;};if _acgd ._fee ==nil {_acgd ._fee =_fbea ._fee ;};if _acgd ._gdg ==nil {_acgd ._gdg =_fbea ._gdg ;};if _acgd ._cbeg ==nil {_acgd ._cbeg =_fbea ._cbeg ;
};if _acgd ._eeb ==nil {_acgd ._eeb =_fbea ._eeb ;};if _acgd ._afcc ==nil {_acgd ._afcc =_fbea ._afcc ;};if _acgd ._ccf ==nil {_acgd ._ccf =_fbea ._ccf ;};if _acgd ._cbda ==nil {_acgd ._cbda =_fbea ._cbda ;};if _acgd ._ggeg ==nil {_acgd ._ggeg =_fbea ._ggeg ;
};if _acgd ._gfg ==nil {_acgd ._gfg =_fbea ._gfg ;};if _acgd ._abb ==nil {_acgd ._abb =_fbea ._abb ;};if _acgd ._gga ==nil {_acgd ._gga =_fbea ._gga ;};if _acgd ._efb ==nil {_acgd ._efb =_fbea ._efb ;};if _acgd ._eccc ==_bb .ST_VerticalAlignmentUnset {_acgd ._eccc =_fbea ._eccc ;
};if _acgd ._gee ==_bb .ST_HorizontalAlignmentUnset {_acgd ._gee =_fbea ._gee ;};};func (_bgdf *convertContext )getColorStringFromSmlColor (_fdc *_bb .CT_Color )*string {var _gdag string ;if _fdc .RgbAttr !=nil {_gdag =*_fdc .RgbAttr ;}else if _fdc .IndexedAttr !=nil &&*_fdc .IndexedAttr < 64{_gdag =_bbeb [*_fdc .IndexedAttr ];
}else if _fdc .ThemeAttr !=nil {_geg :=*_fdc .ThemeAttr ;_gdag =_bgdf .getColorFromTheme (_geg );};if _gdag ==""{return nil ;};if len (_gdag )> 6{_gdag =_gdag [(len (_gdag )-6):];};if _fdc .TintAttr !=nil {_ebbg :=*_fdc .TintAttr ;_gdag =_cddd .AdjustColorByTint (_gdag ,_ebbg );
};_gdag ="\u0023"+_gdag ;return &_gdag ;};type anchor struct{_dadb _c .Image ;_bfda *_ea .ChartSpace ;_adgd int ;_baec int64 ;_cbag int ;_aabc int64 ;_cffa int ;_cbab int64 ;_ecgg int ;_aaab int64 ;};func (_dece *convertContext )makePagespans (){_dece ._ceg =[]*pagespan {};
_bab :=0.0;_dbd :=0;for _gac ,_dccg :=range _dece ._fcdf {_bgd :=_dccg ._gfbg ;if _bab +_bgd <=_dece ._fggb {_dccg ._eca =_bab ;_bab +=_bgd ;}else {_dccg ._eca =0;_dece ._ceg =append (_dece ._ceg ,&pagespan {_eaeg :_bab ,_bddg :_dbd ,_egaf :_gac });_bab =_bgd ;
_dbd =_gac ;};};_dece ._ceg =append (_dece ._ceg ,&pagespan {_eaeg :_bab ,_bddg :_dbd ,_egaf :len (_dece ._fcdf )});};func _gcf (_acga *symbol ){_ebd :=_cdd .New ();_daba :=_ebd .NewStyledParagraph ();_daba .SetMargins (0,0,0,0);_gcfd :=_daba .Append (_acga ._gedd );
if _acga ._bfd !=nil {_gcfd .Style =*_acga ._bfd ;};_acga ._fbcg =_daba .Height ();if _acga ._dbg ==0{_acga ._dbg =_daba .Width ();};};func (_dbc *convertContext )getStyleFromCell (_ggc _ba .Cell ,_agda ,_cfg *style )*style {_edf :=_ggc .X ();_bggb :=_dbc .getStyle (_edf .SAttr );
_cea (_bggb ,_agda );_cea (_bggb ,_cfg );return _bggb ;};const _cc =2;func _cccb (_eed *bool )bool {return _eed !=nil &&*_eed };

// RegisterFontsFromDirectory registers all fonts from the given directory automatically detecting font families and styles.
func RegisterFontsFromDirectory (dirName string )error {return _cddd .RegisterFontsFromDirectory (dirName );};type symbol struct{_gedd string ;_ebba float64 ;_fbcg float64 ;_dbg float64 ;_bfd *_cdd .TextStyle ;_bgc string ;};

// ConvertToPdf converts a sheet to a PDF file. This package is beta, breaking changes can take place.
func ConvertToPdf (s *_ba .Sheet )*_cdd .Creator {_ac :=s .X ();if _ac ==nil {return nil ;};var _df _cdd .PageSize ;var _acc bool ;if _bd :=_ac .PageSetup ;_bd !=nil {if _bbg :=_bd .PaperSizeAttr ;_bbg !=nil {_df =_fced [*_bbg ];};_acc =_bd .OrientationAttr ==_bb .ST_OrientationLandscape ;
};if (_df ==_cdd .PageSize {}){_df =_fced [1];};if _acc {_df [0],_df [1]=_df [1],_df [0];};_cbf :=_cdd .New ();_cbf .SetPageSize (_df );var _ge ,_gd ,_gda ,_bc float64 ;if _eg :=_ac .PageMargins ;_eg !=nil {_gda =_eg .LeftAttr ;_bc =_eg .RightAttr ;_ge =_eg .TopAttr ;
_gd =_eg .BottomAttr ;};if _gda < 0.25{_gda =0.25;};if _bc < 0.25{_bc =0.25;};_ge *=_f .Inch ;_gd *=_f .Inch ;_gda *=_f .Inch ;_bc *=_f .Inch ;_cbf .SetPageMargins (_gda ,_bc ,_ge ,_gd );_ad :=s .Workbook ();var _afc *_b .Theme ;if len (_ad .Themes ())> 0{_afc =_ad .Themes ()[0];
};_ff :=&convertContext {_fbcf :_cbf ,_eced :s ,_gede :s .Workbook (),_cbad :_afc ,_fae :&s .Workbook ().StyleSheet ,_bdac :_ge ,_fbe :_gda ,_gdac :_df [1]-_gd -_ge ,_fggb :_df [0]-_bc -_gda };_ff .makeAnchors ();_ff .determineMaxIndexes ();if _ff ._gcgc ==0&&_ff ._egcfc ==0{_cbf .NewPage ();
return _cbf ;};_ff .makeCols ();_ff .makeRows ();_ff .makeMergedCells ();_ff .makeCells ();_ff .makePagespans ();_ff .makeRowspans ();_ff .makePages ();_ff .fillPages ();_ff .distributeAnchors ();_ff .drawSheet ();return _cbf ;};func (_ffef *convertContext )addRowToPage (_ece []*cell ,_ffc int ){_ffbe :=0.0;
_aefa :=_ffef ._fggb ;for _ ,_afcb :=range _ece {if len (_afcb ._bbc )!=0{_afcb ._bbgf =_ffbe ;_ffbe =_afcb ._fdf +_afcb ._efe ;};};for _gcg :=len (_ece )-1;_gcg >=0;_gcg --{_cfba :=_ece [_gcg ];if len (_cfba ._bbc )!=0{_cfba ._efa =_aefa ;_aefa =_cfba ._fdf ;
};};_ffef ._dceg ._bccf =append (_ffef ._dceg ._bccf ,&pageRow {_bbag :_ffc ,_fcg :_ece });};type style struct{_gdg *string ;_cbeg *float64 ;_fee *string ;_eeb *bool ;_afcc *bool ;_ccf *bool ;_cbda *bool ;_ggeg *bool ;_gfg *border ;_abb *border ;_gga *border ;
_efb *border ;_gca bool ;_eccc _bb .ST_VerticalAlignment ;_gee _bb .ST_HorizontalAlignment ;};const _cg =0.64;func (_adcc *convertContext )imageFromAnchor (_dfeb *anchor ,_dagf ,_bceeb float64 )_c .Image {if _dfeb ._dadb !=nil {return _dfeb ._dadb ;};if _dfeb ._bfda !=nil {_cdc ,_fgcd :=_cddd .MakeImageFromChartSpace (_dfeb ._bfda ,_dagf ,_bceeb ,_adcc ._cbad );
if _fgcd !=nil {_a .Log .Debug ("C\u0061\u006e\u006e\u006f\u0074\u0020\u006d\u0061\u006b\u0065\u0020\u0061\u006e\u0020\u0069\u006d\u0061\u0067e\u0020\u0066\u0072\u006f\u006d\u0020\u0063\u0068\u0061\u0072tS\u0070\u0061\u0063e\u003a \u0025\u0073",_fgcd );
return nil ;};return _cdc ;};return nil ;};func (_gfeb *convertContext )getContentFromCell (_dgc _ba .Cell ,_ebfa *style ,_gaf float64 ,_eccf bool )([]*line ,_bb .ST_CellType ){_fgea :=_dgc .X ();var _gff []*symbol ;switch _fgea .TAttr {case _bb .ST_CellTypeS :_abad :=_fgea .V ;
if _abad !=nil {_daa ,_adc :=_cd .Atoi (*_abad );if _adc ==nil {_ffg :=_gfeb ._gede .SharedStrings .X ().Si [_daa ];if _ffg .T !=nil {_gff =_gfeb .getSymbolsFromString (*_ffg .T ,_ebfa );}else if _ffg .R !=nil {_gff =_gfeb .getSymbolsFromR (_ffg .R ,_ebfa );
};};};case _bb .ST_CellTypeB :_bag :=_fgea .V ;if _bag !=nil {if *_bag =="\u0030"{_gff =_gfeb .getSymbolsFromString ("\u0046\u0041\u004cS\u0045",_ebfa );}else {_gff =_gfeb .getSymbolsFromString ("\u0054\u0052\u0055\u0045",_ebfa );};};default:_gff =_gfeb .getSymbolsFromString (_dgc .GetFormattedValue (),_ebfa );
};_eaf :=0.0;_ged :=0.0;var _def []*line ;var _cba bool ;if _ebfa !=nil {if _ebfa ._cbda !=nil {if *_ebfa ._cbda {_cba =true ;};};if _ebfa ._ggeg !=nil {if *_ebfa ._ggeg {_cba =true ;};};};if _eccf {_def =[]*line {};_dbf :=_gaf -2*_fb ;_abcc :=[]*symbol {};
for _ ,_eggg :=range _gff {_gcf (_eggg );if _eaf +_eggg ._dbg >=_dbf {_gde :=_deda (_abcc );if _cba {_gde /=_cg ;};_def =append (_def ,&line {_egac :_ged ,_ccbe :_abcc ,_cgb :_gde });_abcc =[]*symbol {_eggg };_eaf =_eggg ._dbg ;_ged +=_gde ;}else {_eggg ._ebba =_eaf ;
_eaf +=_eggg ._dbg ;_abcc =append (_abcc ,_eggg );};};_fega :=_deda (_abcc );if _cba {_fega /=_cg ;};if len (_abcc )> 0{_def =append (_def ,&line {_egac :_ged ,_ccbe :_abcc ,_cgb :_fega });};}else {for _ ,_fcec :=range _gff {_gcf (_fcec );_fcec ._ebba =_eaf ;
_eaf +=_fcec ._dbg ;};if len (_gff )> 0{_def =[]*line {&line {_ccbe :_gff ,_cgb :_deda (_gff )}};};};_befa :=_fgea .TAttr ;if _befa ==_bb .ST_CellTypeUnset {_befa =_bb .ST_CellTypeN ;};return _def ,_befa ;};func (_cdbf *convertContext )getBorder (_ffba *_bb .CT_BorderPr )*border {_cag :=&border {};
switch _ffba .StyleAttr {case _bb .ST_BorderStyleThin :_cag ._eff =_d ;case _bb .ST_BorderStyleMedium :_cag ._eff =_d *2;case _bb .ST_BorderStyleThick :_cag ._eff =_d *4;};if _cag ._eff ==0.0{return nil ;};if _fbfd :=_ffba .Color ;_fbfd !=nil {_bgcg :=_cdbf .getColorStringFromSmlColor (_fbfd );
if _bgcg !=nil {_cag ._adgf =_cdd .ColorRGBFromHex (*_bgcg );}else {_cag ._adgf =_cdd .ColorBlack ;};};return _cag ;};func (_aec *convertContext )alignSymbolsVertically (_cfd *cell ,_cecg _bb .ST_VerticalAlignment ){var _dgg float64 ;switch _cecg {case _bb .ST_VerticalAlignmentTop :_dgg =_cc ;
if _cfd ._bea {_dgg -=_ae ;}else if _cfd ._bgbf {_dgg +=4*_ae ;};for _ ,_fbd :=range _cfd ._bbc {_dgg +=_fbd ._cgb ;_fbd ._egac =_dgg ;_dgg +=_g ;};case _bb .ST_VerticalAlignmentCenter :_cbgc :=0.0;for _ ,_ddb :=range _cfd ._bbc {_cbgc +=_ddb ._cgb +_decd (1);
};_dgg =0.5*(_cfd ._eada -_cbgc );if _cfd ._bea {_dgg -=2*_ae ;}else if _cfd ._bgbf {_dgg +=2*_ae ;};for _ ,_bbgg :=range _cfd ._bbc {_dgg +=_bbgg ._cgb +0.5*_g ;_bbgg ._egac =_dgg ;_dgg +=0.5*_g ;};default:_dgg =_cfd ._eada -_cc ;if _cfd ._bea {_dgg -=4*_ae ;
}else if _cfd ._bgbf {_dgg +=_ae ;};for _bdcf :=len (_cfd ._bbc )-1;_bdcf >=0;_bdcf --{_cfd ._bbc [_bdcf ]._egac =_dgg ;_dgg -=_cfd ._bbc [_bdcf ]._cgb ;_dgg -=_g ;};};};func (_cdgd *convertContext )getStyle (_dbge *uint32 )*style {_bcae :=&style {};_edbd :=false ;
if _dbge !=nil {_ffcf :=_cdgd ._fae .GetCellStyle (*_dbge );_gaaa :=_ffcf .GetFont ();for _ ,_add :=range _gaaa .Name {if _add !=nil {_bcae ._fee =&_add .ValAttr ;_edbd =true ;break ;};};for _ ,_gecc :=range _gaaa .B {if _gecc !=nil {_gffc :=_gecc .ValAttr ==nil ||*_gecc .ValAttr ;
_bcae ._eeb =&_gffc ;_edbd =true ;break ;};};for _ ,_gadf :=range _gaaa .I {if _gadf !=nil {_bfbb :=_gadf .ValAttr ==nil ||*_gadf .ValAttr ;_bcae ._afcc =&_bfbb ;_edbd =true ;break ;};};for _ ,_ggaa :=range _gaaa .U {if _ggaa !=nil {_cac :=_ggaa .ValAttr ==_bb .ST_UnderlineValuesSingle ||_ggaa .ValAttr ==_bb .ST_UnderlineValuesUnset ;
_bcae ._ccf =&_cac ;_edbd =true ;break ;};};for _ ,_aefg :=range _gaaa .Sz {if _aefg !=nil {_fbca :=_aefg .ValAttr /12*_cddd .DefaultFontSize ;_bcae ._cbeg =&_fbca ;_edbd =true ;break ;};};for _ ,_dgbf :=range _gaaa .VertAlign {if _dgbf !=nil {_dcd :=_dgbf .ValAttr ==_ecc .ST_VerticalAlignRunSuperscript ;
_bcae ._cbda =&_dcd ;_dbgg :=_dgbf .ValAttr ==_ecc .ST_VerticalAlignRunSubscript ;_bcae ._ggeg =&_dbgg ;_edbd =true ;break ;};};for _ ,_ebdg :=range _gaaa .Color {if _ebdg !=nil {_bcae ._gdg =_cdgd .getColorStringFromSmlColor (_ebdg );_edbd =true ;break ;
};};_fabf :=_ffcf .GetBorder ();if _fabf .Top !=nil {_bcae ._gfg =_cdgd .getBorder (_fabf .Top );_edbd =true ;};if _fabf .Bottom !=nil {_bcae ._abb =_cdgd .getBorder (_fabf .Bottom );_edbd =true ;};if _fabf .Left !=nil {_bcae ._gga =_cdgd .getBorder (_fabf .Left );
_edbd =true ;};if _fabf .Right !=nil {_bcae ._efb =_cdgd .getBorder (_fabf .Right );_edbd =true ;};if _ffcf .Wrapped (){_bcae ._gca =true ;_edbd =true ;};if _fcaf :=_ffcf .GetVerticalAlignment ();_fcaf !=_bb .ST_VerticalAlignmentUnset {_bcae ._eccc =_fcaf ;
_edbd =true ;};if _abcb :=_ffcf .GetHorizontalAlignment ();_abcb !=_bb .ST_HorizontalAlignmentUnset {_bcae ._gee =_abcb ;_edbd =true ;};};if _edbd {return _bcae ;};return nil ;};

// FontStyle represents a kind of font styling. It can be FontStyle_Regular, FontStyle_Bold, FontStyle_Italic and FontStyle_BoldItalic.
type FontStyle =_cddd .FontStyle ;type rowInfo struct{_acgaa float64 ;_aeb bool ;_ebe float64 ;_fceb *style ;_fde []*cell ;_ccge float64 ;};func (_ffa *convertContext )makeCells (){_gbd :=_ffa ._eced ;_gbg :=_gbd .Rows ();_cde :=0;for _ ,_ee :=range _ffa ._gea {_ee ._fde =[]*cell {};
_bbd :=0.0;_eba :=_ee ._fceb ;if _ee ._aeb {_ce :=_gbg [_cde ];_cde ++;_cbg :=_ee ._ebe ;for _ ,_ead :=range _ce .Cells (){_deg ,_aga :=_af .ParseCellReference (_ead .Reference ());if _aga !=nil {_a .Log .Debug ("\u0043\u0061\u006e\u006eo\u0074\u0020\u0070\u0061\u0072\u0073\u0065\u0020\u0061\u0020r\u0065f\u0065\u0072\u0065\u006e\u0063\u0065\u003a \u0025\u0073",_aga );
continue ;};_bac :=_ffa ._fcdf [_deg .ColumnIdx ];_dba :=_bac ._gfbg ;_dec :=_dba ;_efd :=_bac ._gdacg ;var _bbf ,_bdbf ,_dfbd ,_afge bool ;for _ ,_fbg :=range _ffa ._bdea {if _deg .RowIdx >=_fbg ._fcea &&_deg .RowIdx <=_fbg ._dgf &&_deg .ColumnIdx >=_fbg ._ccgb &&_deg .ColumnIdx <=_fbg ._dae {if _deg .ColumnIdx ==_fbg ._ccgb &&_deg .RowIdx ==_fbg ._fcea {_dba =_fbg ._gdca ;
_cbg =_fbg ._deb ;};_bbf =_deg .RowIdx !=_fbg ._fcea ;_bdbf =_deg .RowIdx !=_fbg ._dgf ;_dfbd =_deg .ColumnIdx !=_fbg ._ccgb ;_afge =_deg .ColumnIdx !=_fbg ._dae ;};};_bgf :=_ffa .getStyleFromCell (_ead ,_eba ,_efd );var _cge ,_bdf ,_fc bool ;var _cddf ,_ced ,_dcc ,_bge *border ;
var _fg _bb .ST_VerticalAlignment ;var _fcc _bb .ST_HorizontalAlignment ;if _bgf !=nil {if !_bbf {_cddf =_bgf ._gfg ;};if !_bdbf {_ced =_bgf ._abb ;};if !_dfbd {_dcc =_bgf ._gga ;};if !_afge {_bge =_bgf ._efb ;};if _ced !=nil &&_ced ._eff > _bbd {_bbd =_ced ._eff ;
};_fg =_bgf ._eccc ;_fcc =_bgf ._gee ;if _bgf ._cbda !=nil {_cge =*_bgf ._cbda ;};if _bgf ._ggeg !=nil {_bdf =*_bgf ._ggeg ;};_fc =_bgf ._gca ;};_bae ,_afde :=_ffa .getContentFromCell (_ead ,_bgf ,_dba ,_fc );_gba :=&cell {_fag :_afde ,_efe :_dba ,_dedab :_dec ,_eada :_cbg ,_bbc :_bae ,_aefac :_cddf ,_dea :_ced ,_cdg :_dcc ,_faff :_bge ,_bea :_cge ,_bgbf :_bdf };
_ffa .alignSymbolsHorizontally (_gba ,_fcc );_ffa .alignSymbolsVertically (_gba ,_fg );_ee ._fde =append (_ee ._fde ,_gba );};};_ee ._ccge =_bbd ;};};const (FontStyle_Regular FontStyle =0;FontStyle_Bold FontStyle =1;FontStyle_Italic FontStyle =2;FontStyle_BoldItalic FontStyle =3;
);const _ae =1.5;type page struct{_bccf []*pageRow ;_acd bool ;_cbfd []*_cdd .Image ;_ddacc *pagespan ;_dabg *rowspan ;};func (_ddd *convertContext )drawSheet (){for _gdf ,_aaa :=range _ddd ._ceg {_eec :=len (_aaa ._eea );if _gdf ==len (_ddd ._ceg )-1{for _fabc :=len (_aaa ._eea )-1;
_fabc >=0;_fabc --{if !_aaa ._eea [_fabc ]._acd {_eec =_fabc ;};};};_gbege :=_aaa ._eea [:_eec ];for _ ,_dfbg :=range _gbege {_ddd ._fbcf .NewPage ();_ddd .drawPage (_dfbg );};};};type convertContext struct{_fbcf *_cdd .Creator ;_gede *_ba .Workbook ;_cbad *_b .Theme ;
_eced *_ba .Sheet ;_fae *_ba .StyleSheet ;_gcgc int ;_egcfc int ;_ceg []*pagespan ;_dceg *page ;_fcdf []*colInfo ;_gea []*rowInfo ;_cgg []*rowspan ;_bdac float64 ;_fbe float64 ;_gdac float64 ;_fggb float64 ;_bdea []*mergedCell ;_ggf []*anchor ;};func (_gbe *convertContext )fillPages (){for _dda ,_fgd :=range _gbe ._cgg {_ebg :=_gbe ._gea [_fgd ._gdff :_fgd ._ddba ];
for _gdae ,_efc :=range _ebg {_ccc :=0;_bdc :=0.0;_cedc :=[]*cell {};if _efc ._aeb {for _ ,_ddaa :=range _efc ._fde {_bed :=_gbe ._ceg [_ccc ];_gbe ._dceg =_bed ._eea [_dda ];_gbe ._dceg ._acd =true ;_cbb :=_ddaa ._dedab ;if _bdc +_cbb > _bed ._eaeg {_gbe .addRowToPage (_cedc ,_gdae );
_cedc =[]*cell {_ddaa };_bdc =_cbb ;_ccc ++;}else {_ddaa ._fdf =_bdc ;_cedc =append (_cedc ,_ddaa );_bdc +=_cbb ;};};if len (_cedc )> 0{_fbf :=_gbe ._ceg [_ccc ];_gbe ._dceg =_fbf ._eea [_dda ];_gbe ._dceg ._acd =true ;_gbe .addRowToPage (_cedc ,_gdae );
};};};};};func (_ddc *convertContext )getSymbolsFromString (_cgec string ,_gcba *style )[]*symbol {_abf :=[]*symbol {};_fgc :=_ddc .makeTextStyleFromCellStyle (_gcba );for _ ,_gdb :=range _cgec {_abf =append (_abf ,&symbol {_gedd :string (_gdb ),_bfd :_fgc });
};return _abf ;};type colWidthRange struct{_ccec int ;_degd int ;_bbaa float64 ;_dcec *style ;};var _fced =map[uint32 ]_cdd .PageSize {1:_cdd .PageSize {8.5*_f .Inch ,11*_f .Inch },2:_cdd .PageSize {8.5*_f .Inch ,11*_f .Inch },3:_cdd .PageSize {11*_f .Inch ,17*_f .Inch },4:_cdd .PageSize {17*_f .Inch ,11*_f .Inch },5:_cdd .PageSize {8.5*_f .Inch ,14*_f .Inch },6:_cdd .PageSize {5.5*_f .Inch ,8.5*_f .Inch },7:_cdd .PageSize {7.5*_f .Inch ,10*_f .Inch },8:_cdd .PageSize {_decd (297),_decd (420)},9:_cdd .PageSize {_decd (210),_decd (297)},10:_cdd .PageSize {_decd (210),_decd (297)},11:_cdd .PageSize {_decd (148),_decd (210)},70:_cdd .PageSize {_decd (105),_decd (148)},12:_cdd .PageSize {_decd (250),_decd (354)},13:_cdd .PageSize {_decd (182),_decd (257)},14:_cdd .PageSize {8.5*_f .Inch ,13*_f .Inch },20:_cdd .PageSize {4.125*_f .Inch ,9.5*_f .Inch },27:_cdd .PageSize {_decd (110),_decd (220)},28:_cdd .PageSize {_decd (162),_decd (229)},34:_cdd .PageSize {_decd (250),_decd (176)},29:_cdd .PageSize {_decd (324),_decd (458)},30:_cdd .PageSize {_decd (229),_decd (324)},31:_cdd .PageSize {_decd (114),_decd (162)},37:_cdd .PageSize {3.88*_f .Inch ,7.5*_f .Inch },43:_cdd .PageSize {_decd (100),_decd (148)},69:_cdd .PageSize {_decd (200),_decd (148)}};
const _bf =0.25;var _bbeb =[]string {"\u0030\u0030\u0030\u0030\u0030\u0030","\u0066\u0066\u0066\u0066\u0066\u0066","\u0066\u0066\u0030\u0030\u0030\u0030","\u0030\u0030\u0066\u0066\u0030\u0030","\u0030\u0030\u0030\u0030\u0066\u0066","\u0066\u0066\u0066\u0066\u0030\u0030","\u0066\u0066\u0030\u0030\u0066\u0066","\u0030\u0030\u0066\u0066\u0066\u0066","\u0030\u0030\u0030\u0030\u0030\u0030","\u0066\u0066\u0066\u0066\u0066\u0066","\u0066\u0066\u0030\u0030\u0030\u0030","\u0030\u0030\u0066\u0066\u0030\u0030","\u0030\u0030\u0030\u0030\u0066\u0066","\u0066\u0066\u0066\u0066\u0030\u0030","\u0066\u0066\u0030\u0030\u0066\u0066","\u0030\u0030\u0066\u0066\u0066\u0066","\u0038\u0030\u0030\u0030\u0030\u0030","\u0030\u0030\u0038\u0030\u0030\u0030","\u0030\u0030\u0030\u0030\u0038\u0030","\u0038\u0030\u0038\u0030\u0030\u0030","\u0038\u0030\u0030\u0030\u0038\u0030","\u0030\u0030\u0038\u0030\u0038\u0030","\u0063\u0030\u0063\u0030\u0063\u0030","\u0038\u0030\u0038\u0030\u0038\u0030","\u0039\u0039\u0039\u0039\u0066\u0066","\u0039\u0039\u0033\u0033\u0036\u0036","\u0066\u0066\u0066\u0066\u0063\u0063","\u0063\u0063\u0066\u0066\u0066\u0066","\u0036\u0036\u0030\u0030\u0036\u0036","\u0066\u0066\u0038\u0030\u0038\u0030","\u0030\u0030\u0036\u0036\u0063\u0063","\u0063\u0063\u0063\u0063\u0066\u0066","\u0030\u0030\u0030\u0030\u0038\u0030","\u0066\u0066\u0030\u0030\u0066\u0066","\u0066\u0066\u0066\u0066\u0030\u0030","\u0030\u0030\u0066\u0066\u0066\u0066","\u0038\u0030\u0030\u0030\u0038\u0030","\u0038\u0030\u0030\u0030\u0030\u0030","\u0030\u0030\u0038\u0030\u0038\u0030","\u0030\u0030\u0030\u0030\u0066\u0066","\u0030\u0030\u0063\u0063\u0066\u0066","\u0063\u0063\u0066\u0066\u0066\u0066","\u0063\u0063\u0066\u0066\u0063\u0063","\u0066\u0066\u0066\u0066\u0039\u0039","\u0039\u0039\u0063\u0063\u0066\u0066","\u0066\u0066\u0039\u0039\u0063\u0063","\u0063\u0063\u0039\u0039\u0066\u0066","\u0066\u0066\u0063\u0063\u0039\u0039","\u0033\u0033\u0036\u0036\u0066\u0066","\u0033\u0033\u0063\u0063\u0063\u0063","\u0039\u0039\u0063\u0063\u0030\u0030","\u0066\u0066\u0063\u0063\u0030\u0030","\u0066\u0066\u0039\u0039\u0030\u0030","\u0066\u0066\u0036\u0036\u0030\u0030","\u0036\u0036\u0036\u0036\u0039\u0039","\u0039\u0036\u0039\u0036\u0039\u0036","\u0030\u0030\u0033\u0033\u0036\u0036","\u0033\u0033\u0039\u0039\u0036\u0036","\u0030\u0030\u0033\u0033\u0030\u0030","\u0033\u0033\u0033\u0033\u0030\u0030","\u0039\u0039\u0033\u0033\u0030\u0030","\u0039\u0039\u0033\u0033\u0036\u0036","\u0033\u0033\u0033\u0033\u0039\u0039","\u0033\u0033\u0033\u0033\u0033\u0033"};


// RegisterFont makes a PdfFont accessible for using in converting to PDF.
func RegisterFont (name string ,style FontStyle ,font *_ec .PdfFont ){_cddd .RegisterFont (name ,style ,font );};func (_dadca *convertContext )combineCellStyleWithRPrElt (_deed *style ,_efad *_bb .CT_RPrElt )*style {_cfe :=*_deed ;_bdae :=_dadca .getStyleFromRPrElt (_efad );
if _bdae ==nil {return &_cfe ;};if _bdae ._gdg !=nil {_cfe ._gdg =_bdae ._gdg ;};if _bdae ._cbeg !=nil {_cfe ._cbeg =_bdae ._cbeg ;};if _bdae ._fee !=nil {_cfe ._fee =_bdae ._fee ;};if _bdae ._eeb !=nil {_cfe ._eeb =_bdae ._eeb ;};if _bdae ._afcc !=nil {_cfe ._afcc =_bdae ._afcc ;
};if _bdae ._ccf !=nil {_cfe ._ccf =_bdae ._ccf ;};if _bdae ._cbda !=nil {_cfe ._cbda =_bdae ._cbda ;};if _bdae ._ggeg !=nil {_cfe ._ggeg =_bdae ._ggeg ;};return &_cfe ;};const _fb =3;func _decd (_deab float64 )float64 {return _deab *_f .Millimeter };type line struct{_egac float64 ;
_ccbe []*symbol ;_cgb float64 ;};func (_abe *convertContext )drawPage (_aac *page ){_cgc :=_abe ._bdac ;_dbde :=_abe ._fbe ;for _ ,_bbb :=range _aac ._bccf {_bcec :=_abe ._gea [_bbb ._bbag ];for _ ,_gdda :=range _bbb ._fcg {_facf :=_gdda ._bbgf < _gdda ._fdf ;
_bgg :=_gdda ._efa > _gdda ._fdf +_gdda ._efe ;var _aed ,_cec bool ;for _ ,_bcee :=range _gdda ._bbc {for _ ,_cef :=range _bcee ._ccbe {if _facf &&!_aed {_aed =_cef ._ebba < 0;};if _bgg &&!_cec {_cec =_gdda ._efe < _cef ._ebba +_cef ._dbg ;};if _gdda ._fdf +_cef ._ebba >=_gdda ._bbgf &&_gdda ._fdf +_cef ._ebba +_cef ._dbg <=_gdda ._efa {_ecge :=_abe ._fbcf .NewStyledParagraph ();
_aaaf :=_dbde +_gdda ._fdf +_cef ._ebba ;_bdgf :=_cgc +_bcec ._acgaa +_bcee ._egac -_cef ._fbcg -_decd (0.5);_ecge .SetPos (_aaaf ,_bdgf );var _bba *_cdd .TextChunk ;if _cef ._bgc !=""{_bba =_ecge .AddExternalLink (_cef ._gedd ,_cef ._bgc );}else {_bba =_ecge .Append (_cef ._gedd );
};if _cef ._bfd !=nil {_bba .Style =*_cef ._bfd ;};_abe ._fbcf .Draw (_ecge );};};};var _cdfe ,_gfdf ,_dab ,_egcf ,_fge ,_gbcf float64 ;var _egf ,_abce ,_fed ,_fdg _cdd .Color ;if _gcb :=_gdda ._aefac ;_gcb !=nil {_cdfe =_gcb ._eff ;_egf =_gcb ._adgf ;
};if _bde :=_gdda ._dea ;_bde !=nil {_gfdf =_bde ._eff ;_abce =_bde ._adgf ;};if _adb :=_gdda ._cdg ;_adb !=nil {_dab =_adb ._eff ;_fge =_dab /2;_fed =_adb ._adgf ;};if _fcd :=_gdda ._faff ;_fcd !=nil {_egcf =_fcd ._eff ;_gbcf =_egcf /2;_fdg =_fcd ._adgf ;
};var _ffdbe float64 ;if _bbb ._bbag > 1{_ffdbe =_abe ._gea [_bbb ._bbag -1]._ccge ;};_gad :=_cgc +_bcec ._acgaa -0.5*(_ffdbe -_cdfe );_aacb :=_cgc +_bcec ._acgaa +_bcec ._ebe +0.5*(_bcec ._ccge +_gfdf );_eeg :=_dbde +_gdda ._fdf ;_gbae :=_eeg +_gdda ._dedab ;
_cddd .DrawLine (_abe ._fbcf ,_eeg ,_gad ,_gbae ,_gad ,_cdfe ,_egf );_cddd .DrawLine (_abe ._fbcf ,_eeg ,_aacb ,_gbae ,_aacb ,_gfdf ,_abce );if !_aed {_cddd .DrawLine (_abe ._fbcf ,_eeg -_fge ,_gad ,_eeg -_fge ,_aacb ,_dab ,_fed );};if !_cec {_cddd .DrawLine (_abe ._fbcf ,_gbae -_gbcf ,_gad ,_gbae -_gbcf ,_aacb ,_egcf ,_fdg );
};};};for _ ,_edef :=range _aac ._cbfd {if _edef !=nil {_abe ._fbcf .Draw (_edef );};};};func (_gbb *convertContext )makeMergedCells (){_gge :=[]*mergedCell {};for _ ,_bca :=range _gbb ._eced .MergedCells (){_efg ,_ggb ,_egb :=_af .ParseRangeReference (_bca .Reference ());
if _egb !=nil {_a .Log .Debug ("\u0065\u0072r\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u006d\u0065\u0072\u0067\u0065\u0064\u0020\u0063\u0065\u006c\u006c: \u0025\u0073",_egb );continue ;};_agge :=mergedCell {_fcea :_efg .RowIdx ,_ccgb :_efg .ColumnIdx ,_dgf :_ggb .RowIdx ,_dae :_ggb .ColumnIdx };
for _db :=_agge ._ccgb -1;_db < _agge ._dae ;_db ++{_agge ._gdca +=_gbb ._fcdf [_db ]._gfbg ;};for _fba :=_agge ._fcea -1;_fba < _agge ._dgf ;_fba ++{_agge ._deb +=_gbb ._gea [_fba ]._ebe ;};_gge =append (_gge ,&_agge );};_gbb ._bdea =_gge ;};func (_abba *convertContext )makeTextStyleFromCellStyle (_dgd *style )*_cdd .TextStyle {_gdffg :=_abba ._fbcf .NewTextStyle ();
if _dgd ==nil {_gdffg .FontSize =_cddd .DefaultFontSize ;_gdffg .Font =_cddd .AssignStdFontByName (_gdffg ,_cddd .StdFontsMap ["\u0064e\u0066\u0061\u0075\u006c\u0074"][FontStyle_Regular ]);return &_gdffg ;};if _cccb (_dgd ._ccf ){_gdffg .Underline =true ;
_gdffg .UnderlineStyle =_cdd .TextDecorationLineStyle {Offset :0.5,Thickness :_decd (1/32)};};var _bgcd FontStyle ;if _cccb (_dgd ._eeb )&&_cccb (_dgd ._afcc ){_bgcd =FontStyle_BoldItalic ;}else if _cccb (_dgd ._eeb ){_bgcd =FontStyle_Bold ;}else if _cccb (_dgd ._afcc ){_bgcd =FontStyle_Italic ;
}else {_bgcd =FontStyle_Regular ;};_bec :="\u0064e\u0066\u0061\u0075\u006c\u0074";if _dgd ._fee !=nil {_bec =*_dgd ._fee ;};if _bdab ,_aeea :=_cddd .StdFontsMap [_bec ];_aeea {_gdffg .Font =_cddd .AssignStdFontByName (_gdffg ,_bdab [_bgcd ]);}else if _dada :=_cddd .GetRegisteredFont (_bec ,_bgcd );
_dada !=nil {_gdffg .Font =_dada ;}else {_a .Log .Debug ("\u0046\u006f\u006e\u0074\u0020\u0025\u0073\u0020\u0077\u0069\u0074h\u0020\u0073\u0074\u0079\u006c\u0065\u0020\u0025s\u0020i\u0073\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u002c\u0020\u0072\u0065\u0073\u0065\u0074 \u0074\u006f\u0020\u0064\u0065\u0066\u0061\u0075\u006c\u0074\u002e",_bec ,_bgcd );
_gdffg .Font =_cddd .AssignStdFontByName (_gdffg ,_cddd .StdFontsMap ["\u0064e\u0066\u0061\u0075\u006c\u0074"][_bgcd ]);};if _dgd ._cbeg !=nil {_gdffg .FontSize =*_dgd ._cbeg ;};if _dgd ._gdg !=nil {_gdffg .Color =_cdd .ColorRGBFromHex (*_dgd ._gdg );};
if _dgd ._cbda !=nil &&*_dgd ._cbda {_gdffg .FontSize *=_cg ;}else if _dgd ._ggeg !=nil &&*_dgd ._ggeg {_gdffg .FontSize *=_cg ;};return &_gdffg ;};type rowspan struct{_agf float64 ;_gdff int ;_ddba int ;};type cell struct{_fag _bb .ST_CellType ;_eafdb int ;
_fdf float64 ;_bbc []*line ;_efe float64 ;_dedab float64 ;_eada float64 ;_bbgf float64 ;_efa float64 ;_ecd *_cdd .TextStyle ;_aefac *border ;_dea *border ;_cdg *border ;_faff *border ;_bea bool ;_bgbf bool ;};func _deda (_acg []*symbol )float64 {_fea :=0.0;
for _ ,_fgdg :=range _acg {if _fgdg ._fbcg > _fea {_fea =_fgdg ._fbcg ;};};return _fea ;};type border struct{_eff float64 ;_adgf _cdd .Color ;};func (_dcce *convertContext )makePages (){for _ ,_fff :=range _dcce ._ceg {for _ ,_aggd :=range _dcce ._cgg {_fff ._eea =append (_fff ._eea ,&page {_bccf :[]*pageRow {},_ddacc :_fff ,_dabg :_aggd });
};};};func (_ecba *convertContext )getImage (_ceb _c .Image ,_ace ,_fgg ,_ggdc ,_eaa ,_fca ,_gcd float64 ,_eafd _cddd .ImgPart )*_cdd .Image {_eaa +=_ecba ._bdac ;_ggdc +=_ecba ._fbe ;_cgeb ,_cbdd :=_cddd .GetImage (_ecba ._fbcf ,_ceb ,_ace ,_fgg ,_ggdc ,_eaa ,_fca ,_gcd ,_eafd );
if _cbdd !=nil {_a .Log .Debug ("\u0043\u0061\u006eno\u0074\u0020\u0067\u0065\u0074\u0020\u0061\u006e\u0020\u0069\u006d\u0061\u0067\u0065\u003a\u0020\u0025\u0073",_cbdd );return nil ;};return _cgeb ;};func _cga (_gec []*symbol )float64 {_cbae :=0.0;for _ ,_fafe :=range _gec {_cbae +=_fafe ._dbg ;
};return _cbae ;};func (_ed *convertContext )makeCols (){_dg :=_ed ._eced ;_ccb :=_dg .X ();_ggg :=[]*colInfo {};_gfd :=[]colWidthRange {};if _gdd :=_ccb .Cols ;len (_gdd )> 0{for _ ,_adgb :=range _gdd [0].Col {_abc :=65.0;if _ccbf :=_adgb .WidthAttr ;
_ccbf !=nil {if *_ccbf > 0.83{*_ccbf -=0.83;};if *_ccbf <=1{_abc =*_ccbf *11;}else {_abc =5+*_ccbf *6;};};_fac :=int (_adgb .MinAttr -1);_dfb :=int (_adgb .MaxAttr -1);_gfd =append (_gfd ,colWidthRange {_ccec :_fac ,_degd :_dfb ,_bbaa :_abc ,_dcec :_ed .getStyle (_adgb .StyleAttr )});
};};_aba :=0;for _ffdg :=0;_ffdg <=_ed ._egcfc ;_ffdg ++{var _ccbd float64 ;var _be *style ;if _aba >=len (_gfd ){_ccbd =65;}else {_caa :=_gfd [_aba ];if _ffdg >=_caa ._ccec &&_ffdg <=_caa ._degd {_ccbd =_caa ._bbaa ;_be =_caa ._dcec ;if _ffdg ==_caa ._degd {_aba ++;
};}else {_ccbd =65;};};_ggg =append (_ggg ,&colInfo {_gfbg :_ccbd ,_gdacg :_be });};_ed ._fcdf =_ggg ;};type mergedCell struct{_fcea uint32 ;_ccgb uint32 ;_dgf uint32 ;_dae uint32 ;_gdca float64 ;_deb float64 ;};func (_egg *convertContext )makeRows (){_ded :=[]*rowInfo {};
_ccg :=_egg ._eced .Rows ();_eabg :=0;for _ ,_bgb :=range _ccg {_eabg ++;_egc :=int (_bgb .RowNumber ());if _egc > _eabg {for _ef :=_eabg ;_ef < _egc ;_ef ++{_ded =append (_ded ,&rowInfo {_ebe :16/_cb });};_eabg =_egc ;};var _dc float64 ;if _bgb .X ().HtAttr ==nil {_dc =16;
}else {_dc =*_bgb .X ().HtAttr ;};_ded =append (_ded ,&rowInfo {_ebe :_dc /_cb ,_aeb :true ,_fceb :_egg .getStyle (_bgb .X ().SAttr )});};for _gfe :=len (_ded );_gfe < _egg ._gcgc ;_gfe ++{_ded =append (_ded ,&rowInfo {_ebe :16/_cb });};_egg ._gea =_ded ;
};func (_afdb *convertContext )determineMaxIndexes (){var _gdc ,_adg int ;_gdc =int (_afdb ._eced .MaxColumnIdx ());_bcc :=_afdb ._eced .Rows ();if len (_bcc )> 0{_adg =int (_bcc [len (_bcc )-1].RowNumber ());};for _ ,_ffdb :=range _afdb ._ggf {if _ffdb ._cffa >=_adg {_adg =_ffdb ._cffa +1;
};if _ffdb ._ecgg >=_gdc {_gdc =_ffdb ._ecgg +1;};};_afdb ._gcgc =_adg ;_afdb ._egcfc =_gdc ;};func (_dbfc *convertContext )getColorFromTheme (_ffdgd uint32 )string {_gfdb :=_dbfc ._gede .Themes ();if len (_gfdb )!=0{_ecad :=_gfdb [0];if _gcbb :=_ecad .ThemeElements ;
_gcbb !=nil {if _gcfa :=_gcbb .ClrScheme ;_gcfa !=nil {switch _ffdgd {case 0:return _cddd .GetColorStringFromDmlColor (_gcfa .Lt1 );case 1:return _cddd .GetColorStringFromDmlColor (_gcfa .Dk1 );case 2:return _cddd .GetColorStringFromDmlColor (_gcfa .Lt2 );
case 3:return _cddd .GetColorStringFromDmlColor (_gcfa .Dk2 );case 4:return _cddd .GetColorStringFromDmlColor (_gcfa .Accent1 );case 5:return _cddd .GetColorStringFromDmlColor (_gcfa .Accent2 );case 6:return _cddd .GetColorStringFromDmlColor (_gcfa .Accent3 );
case 7:return _cddd .GetColorStringFromDmlColor (_gcfa .Accent4 );case 8:return _cddd .GetColorStringFromDmlColor (_gcfa .Accent5 );case 9:return _cddd .GetColorStringFromDmlColor (_gcfa .Accent6 );};};};};return "";};func (_ffdbg *convertContext )makeRowspans (){var _agad float64 ;
_acb :=0;for _dfe ,_dfa :=range _ffdbg ._gea {_cdf :=_dfa ._ebe +_dfa ._ccge ;if _agad +_cdf <=_ffdbg ._gdac {_dfa ._acgaa =_agad ;_agad +=_cdf ;}else {_ffdbg ._cgg =append (_ffdbg ._cgg ,&rowspan {_agf :_agad ,_gdff :_acb ,_ddba :_dfe });_acb =_dfe ;_dfa ._acgaa =0;
_agad =_cdf ;};};_ffdbg ._cgg =append (_ffdbg ._cgg ,&rowspan {_agf :_agad ,_gdff :_acb ,_ddba :len (_ffdbg ._gea )});};func (_aef *convertContext )makeAnchors (){_eb ,_eab :=_aef ._eced .GetDrawing ();if _eb !=nil {for _ ,_bdb :=range _eb .EG_Anchor {_gb :=&anchor {};
if _afd :=_bdb .TwoCellAnchor ;_afd !=nil {_da ,_gf :=_afd .From ,_afd .To ;if _da ==nil ||_gf ==nil {return ;};_gb ._adgd =int (_da .Row );_gb ._baec =_cddd .FromSTCoordinate (_da .RowOff );_gb ._cbag =int (_da .Col );_gb ._aabc =_cddd .FromSTCoordinate (_da .ColOff );
_gb ._cffa =int (_gf .Row );_gb ._cbab =_cddd .FromSTCoordinate (_gf .RowOff );_gb ._ecgg =int (_gf .Col );_gb ._aaab =_cddd .FromSTCoordinate (_gf .ColOff );if _faa :=_afd .Choice ;_faa !=nil {if _bda :=_faa .Pic ;_bda !=nil {if _fbb :=_bda .BlipFill ;
_fbb !=nil {if _cfb :=_fbb .Blip ;_cfb !=nil {if _ca :=_cfb .EmbedAttr ;_ca !=nil {for _ ,_bg :=range _eab .X ().Relationship {if _bg .IdAttr ==*_ca {for _ ,_dad :=range _aef ._gede .Images {if _dad .Target ()==_bg .TargetAttr {_cfc ,_faf :=_cf .Open (_dad .Path ());
if _faf !=nil {_a .Log .Debug ("\u004fp\u0065\u006e\u0020\u0069m\u0061\u0067\u0065\u0020\u0066i\u006ce\u0020e\u0072\u0072\u006f\u0072\u003a\u0020\u0025s",_faf );continue ;};_bdg ,_ ,_faf :=_c .Decode (_cfc );if _faf !=nil {_a .Log .Debug ("\u0044\u0065\u0063\u006fde\u0020\u0069\u006d\u0061\u0067\u0065\u0020\u0065\u0072\u0072\u006f\u0072\u003a\u0020%\u0073",_faf );
continue ;};_gb ._dadb =_bdg ;};};};};};};};}else if _gfb :=_faa .GraphicFrame ;_gfb !=nil {if _adf :=_gfb .Graphic ;_adf !=nil {if _agd :=_adf .GraphicData ;_agd !=nil {for _ ,_ga :=range _agd .Any {if _de ,_gg :=_ga .(*_ea .Chart );_gg {for _ ,_ab :=range _eab .X ().Relationship {if _ab .IdAttr ==_de .IdAttr {_gc :=_aef ._gede .GetChartByTargetId (_ab .TargetAttr );
if _gc !=nil {_gb ._bfda =_gc ;};};};};};};};};};};if _gb ._dadb !=nil ||_gb ._bfda !=nil {_aef ._ggf =append (_aef ._ggf ,_gb );};};};};var _cb =3.025/_decd (1);func (_ggd *convertContext )distributeAnchors (){for _ ,_bdaa :=range _ggd ._ggf {_bbec ,_ggbg :=_bdaa ._adgd ,_bdaa ._baec ;
_cdb ,_cdbb :=_bdaa ._cbag ,_bdaa ._aabc ;_agc ,_efcd :=_bdaa ._cffa ,_bdaa ._cbab ;_daf ,_bgba :=_bdaa ._ecgg ,_bdaa ._aaab ;var _gag ,_ega ,_gfc ,_gaa *page ;for _ ,_gfcc :=range _ggd ._ceg {for _ ,_ecf :=range _gfcc ._eea {if _bbec >=_ecf ._dabg ._gdff &&_bbec < _ecf ._dabg ._ddba {if _cdb >=_ecf ._ddacc ._bddg &&_cdb < _ecf ._ddacc ._egaf {_ecf ._acd =true ;
_gag =_ecf ;};if _daf >=_ecf ._ddacc ._bddg &&_daf < _ecf ._ddacc ._egaf {_ecf ._acd =true ;_ega =_ecf ;};};if _agc >=_ecf ._dabg ._gdff &&_agc < _ecf ._dabg ._ddba {if _cdb >=_ecf ._ddacc ._bddg &&_cdb < _ecf ._ddacc ._egaf {_ecf ._acd =true ;_gaa =_ecf ;
};if _daf >=_ecf ._ddacc ._bddg &&_daf < _ecf ._ddacc ._egaf {_ecf ._acd =true ;_gfc =_ecf ;};};};};_fe :=_gag !=_ega ;_egae :=_gag !=_gaa ;if _fe &&_egae {_aea :=_ggd ._fcdf [_cdb ]._eca +_f .FromEMU (_cdbb );_aeg :=_gag ._ddacc ._eaeg ;_dag :=_ggd ._fcdf [_daf ]._eca +_f .FromEMU (_bgba );
_gbc :=_ggd ._gea [_bbec ]._acgaa +_f .FromEMU (_ggbg );_dcg :=float64 (_gag ._dabg ._agf );_gfa :=_ggd ._gea [_agc ]._acgaa +_f .FromEMU (_efcd );_fcb :=_dag +_aeg -_aea ;_cbd :=_gfa +_dcg -_gbc ;_bfb :=_ggd .imageFromAnchor (_bdaa ,_fcb ,_cbd );_gag ._cbfd =append (_gag ._cbfd ,_ggd .getImage (_bfb ,_cbd ,_fcb ,_aea ,_gbc ,_aeg -_aea ,_dcg -_gbc ,_cddd .ImgPart_lt ));
_ega ._cbfd =append (_ega ._cbfd ,_ggd .getImage (_bfb ,_cbd ,_fcb ,0,_gbc ,_aeg -_aea ,_dcg -_gbc ,_cddd .ImgPart_rt ));_gaa ._cbfd =append (_gaa ._cbfd ,_ggd .getImage (_bfb ,_cbd ,_fcb ,_aea ,0,_aeg -_aea ,_dcg -_gbc ,_cddd .ImgPart_lb ));_gfc ._cbfd =append (_gfc ._cbfd ,_ggd .getImage (_bfb ,_cbd ,_fcb ,0,0,_aeg -_aea ,_dcg -_gbc ,_cddd .ImgPart_rb ));
}else if _fe {_dadc :=_ggd ._gea [_bbec ]._acgaa +_f .FromEMU (_ggbg );_eae :=_ggd ._gea [_agc ]._acgaa +_f .FromEMU (_efcd );_aa :=_ggd ._fcdf [_cdb ]._eca +_f .FromEMU (_cdbb );_ebf :=_gag ._ddacc ._eaeg ;_ede :=_ggd ._fcdf [_daf ]._eca +_f .FromEMU (_bgba );
_egd :=_ede +_ebf -_aa ;_fda :=_eae -_dadc ;_aee :=_ggd .imageFromAnchor (_bdaa ,_egd ,_fda );_gag ._cbfd =append (_gag ._cbfd ,_ggd .getImage (_aee ,_fda ,_egd ,_aa ,_dadc ,_ebf -_aa ,0,_cddd .ImgPart_l ));_ega ._cbfd =append (_ega ._cbfd ,_ggd .getImage (_aee ,_fda ,_egd ,0,_dadc ,_ebf -_aa ,0,_cddd .ImgPart_r ));
}else if _egae {_fab :=_ggd ._fcdf [_cdb ]._eca +_f .FromEMU (_cdbb );_feg :=_ggd ._fcdf [_daf ]._eca +_f .FromEMU (_bgba );_bdd :=_ggd ._gea [_bbec ]._acgaa +_f .FromEMU (_ggbg );_eee :=float64 (_gag ._dabg ._agf );_ffde :=_ggd ._gea [_agc ]._acgaa +_f .FromEMU (_efcd );
_ffaf :=_feg -_fab ;_bce :=_ffde +_eee -_bdd ;_ecg :=_ggd .imageFromAnchor (_bdaa ,_ffaf ,_bce );_gag ._cbfd =append (_gag ._cbfd ,_ggd .getImage (_ecg ,_bce ,_ffaf ,_fab ,_bdd ,0,_eee -_bdd ,_cddd .ImgPart_t ));_gaa ._cbfd =append (_gaa ._cbfd ,_ggd .getImage (_ecg ,_bce ,_ffaf ,_fab ,0,0,_eee -_bdd ,_cddd .ImgPart_b ));
}else {_bcef :=_ggd ._fcdf [_cdb ]._eca +_f .FromEMU (_cdbb );_dcf :=_ggd ._fcdf [_daf ]._eca +_f .FromEMU (_bgba );_edb :=_ggd ._gea [_bbec ]._acgaa +_f .FromEMU (_ggbg );_ebb :=_ggd ._gea [_agc ]._acgaa +_f .FromEMU (_efcd );_dee :=_dcf -_bcef ;_cff :=_ebb -_edb ;
_aefd :=_ggd .imageFromAnchor (_bdaa ,_dee ,_cff );_gag ._cbfd =append (_gag ._cbfd ,_ggd .getImage (_aefd ,_cff ,_dee ,_bcef ,_edb ,0,0,_cddd .ImgPart_whole ));};};};type pageRow struct{_bbag int ;_fcg []*cell ;};var _g =_decd (1);