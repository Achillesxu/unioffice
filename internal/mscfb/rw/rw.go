//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package rw ;import (_d "bytes";_gb "encoding/binary";_e "errors";_fc "fmt";_g "io";_dg "io/ioutil";_f "reflect";);func (_fef *Writer )AlignLength (alignTo int )error {_bcc :=_fef .Len ()%alignTo ;if _bcc > 0{_ ,_gfg :=_fef .Write (make ([]byte ,alignTo -_bcc ));if _gfg !=nil {return _gfg ;};};return nil ;};func (_ae *Reader )ReadStringProperty (n uint32 )(string ,error ){if _ff :=_ae .align (4);_ff !=nil {return "",_ff ;};_gf :=make ([]byte ,n );if _ffd :=_gb .Read (_ae ,_gb .LittleEndian ,&_gf );_ffd !=nil {return "",_ffd ;};return string (_gf ),nil ;};type Reader struct{*_d .Reader };var _bb =_e .New ("r\u0077.\u0057\u0072\u0069\u0074\u0065\u0072\u003a\u0020t\u006f\u006f\u0020\u006car\u0067\u0065");func (_aa *Writer )WriteByteAt (b byte ,off int )error {if off >=len (_aa ._dgd ){return _e .New ("\u004f\u0075\u0074\u0020\u006f\u0066\u0020\u0062\u006f\u0075\u006e\u0064\u0073");};_aa ._dgd [off ]=b ;return nil ;};func PopRightUI64 (v uint64 )(bool ,uint64 ){return (v &uint64 (1))==1,v >>1};func NewReader (b []byte )(*Reader ,error ){return &Reader {_d .NewReader (b )},nil };func (_fe *Reader )curPos ()int {return int (_fe .Size ())-_fe .Len ()};func (_ad *Writer )WriteProperty (a interface{})error {if _cee :=_ad .align (int (_f .TypeOf (a ).Size ()));_cee !=nil {return _cee ;};return _ad .WritePropertyNoAlign (a );};func NewWriter ()*Writer {return &Writer {_dgd :[]byte {}}};func _gcg (_ceb int )[]byte {defer func (){if recover ()!=nil {panic (_bb );};}();return make ([]byte ,_ceb );};func (_aad *Writer )reset (){_aad ._dgd =_aad ._dgd [:0];_aad ._df =0};func (_db *Writer )WriteStringProperty (s string )error {_db .align (4);_gbeg :=[]byte (s );if _gc :=_gb .Write (_db ,_gb .LittleEndian ,&_gbeg );_gc !=nil {return _gc ;};return nil ;};func PopRightUI32 (v uint32 )(bool ,uint32 ){return (v &uint32 (1))==1,v >>1};func (_ge *Reader )ReadProperty (a interface{})error {_cc :=_f .ValueOf (a );for _cc .Kind ()==_f .Ptr {_cc =_cc .Elem ();};if !_cc .IsValid (){return _fc .Errorf ("\u0076a\u006cu\u0065\u0020\u0069\u0073\u0020n\u006f\u0074 \u0076\u0061\u006c\u0069\u0064");};if _bc :=_ge .align (int (_cc .Type ().Size ()));_bc !=nil {return _bc ;};if _ab :=_gb .Read (_ge ,_gb .LittleEndian ,a );_ab !=nil {return _ab ;};return nil ;};func (_cec *Writer )tryGrowByReslice (_gea int )(int ,bool ){if _faf :=len (_cec ._dgd );_gea <=cap (_cec ._dgd )-_faf {_cec ._dgd =_cec ._dgd [:_faf +_gea ];return _faf ,true ;};return 0,false ;};func (_cba *Writer )Len ()int {return len (_cba ._dgd )-_cba ._df };func (_dd *Writer )Bytes ()[]byte {return _dd ._dgd };func (_gef *Reader )ReadPairProperty (p interface{})error {if _gg :=_gef .align (4);_gg !=nil {return _gg ;};_ag :=_f .ValueOf (p );for _ag .Kind ()==_f .Ptr {_ag =_ag .Elem ();};if !_ag .IsValid (){return _fc .Errorf ("\u0076a\u006cu\u0065\u0020\u0069\u0073\u0020n\u006f\u0074 \u0076\u0061\u006c\u0069\u0064");};if _ca :=_gb .Read (_gef ,_gb .LittleEndian ,p );_ca !=nil {return _ca ;};return nil ;};func (_dge *Reader )align (_ce int )error {return _dge .skip ((_ce -_dge .curPos ()%_ce )%_ce )};func (_aaa *Writer )grow (_cf int )(int ,error ){_caf :=_aaa .Len ();if _caf ==0&&_aaa ._df !=0{_aaa .reset ();};if _fb ,_debf :=_aaa .tryGrowByReslice (_cf );_debf {return _fb ,nil ;};if _aaa ._dgd ==nil &&_cf <=_ade {_aaa ._dgd =make ([]byte ,_cf ,_ade );return 0,nil ;};_ffdc :=cap (_aaa ._dgd );if _cf <=_ffdc /2-_caf {copy (_aaa ._dgd ,_aaa ._dgd [_aaa ._df :]);}else if _ffdc > _deb -_ffdc -_cf {return 0,_bb ;}else {_dec :=_gcg (2*_ffdc +_cf );copy (_dec ,_aaa ._dgd [_aaa ._df :]);_aaa ._dgd =_dec ;};_aaa ._df =0;_aaa ._dgd =_aaa ._dgd [:_caf +_cf ];return _caf ,nil ;};func (_gbe *Reader )skip (_b int )error {_ ,_ee :=_g .CopyN (_dg .Discard ,_gbe ,int64 (_b ));if _ee !=nil {return _ee ;};return nil ;};func (_cb *Writer )WritePropertyNoAlign (a interface{})error {if _ccc :=_gb .Write (_cb ,_gb .LittleEndian ,a );_ccc !=nil {return _ccc ;};return nil ;};func (_de *Writer )curPos ()int {return int (_de .Cap ())-_de .Len ()};type Writer struct{_dgd []byte ;_df int ;};const _ade =64;func (_ded *Writer )FillWithByte (fillSize int ,b byte )error {for _ffg :=0;_ffg < fillSize ;_ffg ++{if _gcge :=_ded .WritePropertyNoAlign (b );_gcge !=nil {return _gcge ;};};return nil ;};func (_fa *Writer )WriteTo (wTo _g .Writer )(_ea int64 ,_cab error ){if _bd :=_fa .Len ();_bd > 0{_ac ,_gga :=wTo .Write (_fa ._dgd [_fa ._df :]);if _ac > _bd {return 0,_e .New ("\u0072\u0077\u002e\u0057\u0072\u0069\u0074\u0065\u0072\u002e\u0057\u0072\u0069\u0074\u0065\u0054\u006f\u003a\u0020\u0069\u006e\u0076\u0061\u006ci\u0064\u0020\u0057\u0072\u0069t\u0065\u0020c\u006f\u0075\u006e\u0074");};_fa ._df +=_ac ;_ea =int64 (_ac );if _gga !=nil {return _ea ,_gga ;};if _ac !=_bd {return _ea ,_g .ErrShortWrite ;};};_fa .reset ();return _ea ,nil ;};func PushLeftUI32 (v uint32 ,flag bool )uint32 {v >>=1;if flag {v |=1<<31;};return v ;};func (_dad *Writer )Cap ()int {return cap (_dad ._dgd )};func (_fg *Writer )align (_ec int )error {return _fg .Skip ((_ec -(_fg .Len ())%_ec )%_ec )};func (_eb *Writer )Skip (n int )error {if n ==0{return nil ;};_ ,_gfa :=_eb .Write (make ([]byte ,n ));return _gfa ;};func PushLeftUI64 (v uint64 ,flag bool )uint64 {v >>=1;if flag {v |=1<<63;};return v ;};const _deb =int (^uint (0)>>1);func (_ggd *Writer )Write (p []byte )(_fee int ,_gba error ){_dcf ,_dbg :=_ggd .tryGrowByReslice (len (p ));if !_dbg {var _dfg error ;_dcf ,_dfg =_ggd .grow (len (p ));if _dfg !=nil {return 0,_dfg ;};};return copy (_ggd ._dgd [_dcf :],p ),nil ;};