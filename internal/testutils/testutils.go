//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package testutils ;import (_dg "crypto/md5";_a "encoding/hex";_c "encoding/json";_ba "errors";_fef "fmt";_eg "github.com/stretchr/testify/require";_gde "golang.org/x/image/font";_bf "golang.org/x/image/font/opentype";_ac "golang.org/x/image/math/fixed";_fe "image";_ge "image/color";_cb "image/draw";_gb "image/png";_ff "io";_d "io/ioutil";_gd "math";_ae "os";_f "os/exec";_b "path/filepath";_ef "strings";_gdf "sync";_g "testing";_ec "time";);type ReferenceFile struct{Timestamp _ec .Time `json:"timestamp"`;Map *ReferenceMap `json:"map,omitempty"`;_bg string ;};func (_ga *ReferenceMap )Copy ()*ReferenceMap {_aa :=ReferenceMap {_fg :make (map[string ]ReferenceEntry ,len (_ga ._fg ))};for _ddc ,_ea :=range _ga ._fg {_aa ._fg [_ddc ]=_ea ;};return &_aa ;};func CompareImages (img1 ,img2 _fe .Image )(bool ,error ){_gaa :=img1 .Bounds ();_ddf :=0;for _gdfd :=0;_gdfd < _gaa .Size ().X ;_gdfd ++{for _fdf :=0;_fdf < _gaa .Size ().Y ;_fdf ++{_dfa ,_bad ,_cbe ,_ :=img1 .At (_gdfd ,_fdf ).RGBA ();_cgb ,_fb ,_acf ,_ :=img2 .At (_gdfd ,_fdf ).RGBA ();if _dfa !=_cgb ||_bad !=_fb ||_cbe !=_acf {_ddf ++;};};};_gbe :=float64 (_ddf )/float64 (_gaa .Dx ()*_gaa .Dy ());if _gbe > 0.0001{_fef .Printf ("\u0064\u0069\u0066f \u0066\u0072\u0061\u0063\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0076\u0020\u0028\u0025\u0064\u0029\u000a",_gbe ,_ddf );return false ,nil ;};return true ,nil ;};var (ErrRenderNotSupported =_ba .New ("\u0072\u0065\u006e\u0064\u0065r\u0069\u006e\u0067\u0020\u0050\u0044\u0046\u0020\u0066\u0069\u006c\u0065\u0073 \u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u006f\u006e\u0020\u0074\u0068\u0069\u0073\u0020\u0073\u0079\u0073\u0074\u0065m");ErrImageSizeNotMatch =_ba .New ("\u0069\u006d\u0061ge\u0020\u0073\u0069\u007a\u0065\u0073\u0020\u0064\u006f\u006e\u0027\u0074\u0020\u006d\u0061\u0074\u0063\u0068"););func CopyFile (src ,dst string )error {_cde ,_bfb :=_ae .Open (src );if _bfb !=nil {return _bfb ;};defer _cde .Close ();_dbf ,_bfb :=_ae .Create (dst );if _bfb !=nil {return _bfb ;};defer _dbf .Close ();_ ,_bfb =_ff .Copy (_dbf ,_cde );return _bfb ;};func (_ecb *ReferenceMap )Write (key string ,entry ReferenceEntry ){_ecb .Lock ();defer _ecb .Unlock ();if _ecb ._fg ==nil {_ecb ._fg =map[string ]ReferenceEntry {};};_ecb ._fg [key ]=entry ;};type ReferenceEntry struct{Timestamp int64 `json:"timestamp"`;Value string `json:"value"`;ResultSize int64 `json:"resultSize,omitempty"`;DiffPercent float64 `json:"diffPercent,omitempty"`;DiffTotal float64 `json:"diffValue,omitempty"`;Invalid bool `json:"markedInvalid,omitempty"`;};func CreatePNGDiff (src ,dst string )(bool ,string ,float64 ,float64 ,error ){_aec ,_ggc :=ReadPNG (src );if _ggc !=nil {return false ,"",0,0,_ggc ;};_ddcb ,_ggc :=ReadPNG (dst );if _ggc !=nil {return false ,"",0,0,_ggc ;};_gee :=_aec .Bounds ();_efb :=_ddcb .Bounds ();if !_caef (_gee ,_efb ){return false ,"",0,0,ErrImageSizeNotMatch ;};_fbe :=_fe .NewRGBA (_fe .Rect (0,0,_gee .Max .X ,_gee .Max .Y ));var (_efc float64 ;_bada float64 ;);for _fdb :=_gee .Min .Y ;_fdb < _gee .Max .Y ;_fdb ++{for _fcg :=_gee .Min .X ;_fcg < _gee .Max .X ;_fcg ++{_dbd ,_aga ,_aag ,_cae :=_ddcb .At (_fcg ,_fdb ).RGBA ();_fbe .Set (_fcg ,_fdb ,_ge .RGBA {uint8 (_dbd ),uint8 (_aga ),uint8 (_aag ),64});_ffd ,_egd ,_fa ,_agg :=_aec .At (_fcg ,_fdb ).RGBA ();if !_ccd (_aec .At (_fcg ,_fdb ),_ddcb .At (_fcg ,_fdb )){_fbe .Set (_fcg ,_fdb ,_ge .RGBA {uint8 (_ffd ),uint8 (_egd ),uint8 (_fa ),uint8 (_agg )});_fea :=float64 (_ffd )+float64 (_egd )+float64 (_fa )+float64 (_agg )-float64 (_dbd )+float64 (_aga )+float64 (_aag )+float64 (_cae );_ecdb :=_gd .Sqrt (_gd .Pow (_fea /float64 (_gee .Dx ()*_gee .Dy ()),2));_bada +=_ecdb ;_efc ++;};};};_eab :=_efc /float64 (_gee .Dx ()*_gee .Dy ())*100;_fed :=_b .Dir (src );_fcf :=_ef .TrimSuffix (_b .Base (src ),_b .Ext (src ));_ffg ,_ggc :=_ae .Create (_fed +"\u002f"+_fcf +"\u002dd\u0069\u0066\u0066\u002e\u0070\u006eg");if _ggc !=nil {return false ,"",0,0,_ggc ;};defer _ffg .Close ();_dgac :=_ef .Replace (_fed ,"\u0072\u0065\u006e\u0064\u0065\u0072","\u0066\u006f\u006et\u0073",1)+"\u002f\u0043\u0061l\u0069\u0062\u0072\u0069\u002e\u0074\u0074\u0066";_dcc :=_fef .Sprintf ("\u0044\u0069f\u0066\u0065\u0072e\u006e\u0063\u0065\u003a\u0020\u0025\u0066\u0025\u0025",_eab );_ggc =_ebf (_fbe ,_dgac ,_dcc ,15,22);if _ggc !=nil {return false ,"",0,0,_ggc ;};_dcc =_fef .Sprintf ("T\u006ft\u0061\u006c\u0020\u0044\u0069\u0066\u0066\u0065r\u0065\u006e\u0063\u0065: \u0025\u0066",_bada );_ggc =_ebf (_fbe ,_dgac ,_dcc ,15,44);if _ggc !=nil {return false ,"",0,0,_ggc ;};if _cgd :=_gb .Encode (_ffg ,_fbe );_cgd !=nil {return false ,"",0,0,_cgd ;};return true ,_ffg .Name (),_eab ,_bada ,nil ;};func ReadPNG (file string )(_fe .Image ,error ){_cdc ,_bgg :=_ae .Open (file );if _bgg !=nil {return nil ,_bgg ;};defer _cdc .Close ();return _gb .Decode (_cdc );};func (_dd *ReferenceMap )Len ()int {return len (_dd ._fg )};func _caef (_fdd ,_dde _fe .Rectangle )bool {return _fdd .Min .X ==_dde .Min .X &&_fdd .Min .Y ==_dde .Min .Y &&_fdd .Max .X ==_dde .Max .X &&_fdd .Max .Y ==_dde .Max .Y ;};func ReadFile (dirPath ,testName string ,createEmpty bool )(*ReferenceFile ,error ){if dirPath ==""&&createEmpty {return &ReferenceFile {Map :&ReferenceMap {}},nil ;};if dirPath ==""{return nil ,_ae .ErrNotExist ;};_fd :=_b .Join (dirPath ,testName +"\u005fr\u0065f\u0065\u0072\u0065\u006e\u0063\u0065\u002e\u006a\u0073\u006f\u006e");_dgd :=&ReferenceFile {_bg :_fd };_eff ,_cf :=_ae .Open (_fd );if _ba .Is (_cf ,_ae .ErrNotExist )&&createEmpty {_dgd .Timestamp =_ec .Now ().UTC ();_dgd .Map =&ReferenceMap {};return _dgd ,nil ;};if _cf !=nil {return nil ,_cf ;};defer _eff .Close ();if _da :=_c .NewDecoder (_eff ).Decode (_dgd );_da !=nil {if _da .Error ()=="i\u006c\u006c\u0065\u0067\u0061\u006c \u0062\u0061\u0073\u0065\u0036\u0034 \u0064\u0061\u0074\u0061\u0020\u0061\u0074 \u0069\u006e\u0070\u0075\u0074\u0020\u0062\u0079\u0074\u0065 \u0030"&&createEmpty {return _dgd ,nil ;};return nil ,_da ;};return _dgd ,nil ;};func _ccd (_cfb ,_ffde _ge .Color )bool {_dcb ,_eee ,_bbd ,_cfgb :=_cfb .RGBA ();_cga ,_age ,_dffd ,_gbc :=_ffde .RGBA ();return _dcb ==_cga &&_eee ==_age &&_bbd ==_dffd &&_cfgb ==_gbc ;};type ReferenceMap struct{_gdf .Mutex ;_fg map[string ]ReferenceEntry ;};func (_db *ReferenceFile )updateMap (_cba *ReferenceMap )int {var _ca int ;if _db .Map ._fg ==nil {_db .Map ._fg =map[string ]ReferenceEntry {};};for _bb ,_gf :=range _cba ._fg {_gbd ,_gc :=_db .Map ._fg [_bb ];if !_gc {_db .Map ._fg [_bb ]=_gf ;_ca ++;continue ;};if string (_gbd .Value )!=string (_gf .Value ){_db .Map ._fg [_bb ]=_gf ;_ca ++;};};for _agb :=range _db .Map ._fg {if _ ,_de :=_cba ._fg [_agb ];!_de {delete (_db .Map ._fg ,_agb );_ca ++;};};return _ca ;};func (_gda *ReferenceMap )UnmarshalJSON (data []byte )error {return _c .Unmarshal (data ,&_gda ._fg )};func RenderPDFToPNGs (pdfPath string ,dpi int ,outpathTpl string )error {if dpi <=0{dpi =100;};if _ ,_geg :=_f .LookPath ("\u0067\u0073");_geg !=nil {return ErrRenderNotSupported ;};return _f .Command ("\u0067\u0073","\u002d\u0073\u0044\u0045\u0056\u0049\u0043\u0045\u003d\u0070\u006e\u0067a\u006c\u0070\u0068\u0061","\u002d\u006f",outpathTpl ,_fef .Sprintf ("\u002d\u0072\u0025\u0064",dpi ),pdfPath ).Run ();};func HashFile (file string )(string ,error ){_ecd ,_dac :=_ae .Open (file );if _dac !=nil {return "",_dac ;};defer _ecd .Close ();_dab :=_dg .New ();if _ ,_dac =_ff .Copy (_dab ,_ecd );_dac !=nil {return "",_dac ;};return _a .EncodeToString (_dab .Sum (nil )),nil ;};func _aab (_aea *_g .T ,_dbfe string )int64 {_badd ,_bdag :=_ae .Stat (_dbfe );_eg .NoError (_aea ,_bdag );return _badd .Size ();};func (_dgg *ReferenceMap )Keys ()(_aba []string ){_aba =make ([]string ,len (_dgg ._fg ));var _gbb int ;for _aef :=range _dgg ._fg {_aba [_gbb ]=_aef ;_gbb ++;};return _aba ;};func (_ag *ReferenceFile )Update (currentMap *ReferenceMap )error {if _ag ._bg ==""{return nil ;};_ab :=_ag .updateMap (currentMap );if _ab ==0{return nil ;};_dc ,_df :=_ae .OpenFile (_ag ._bg ,_ae .O_CREATE |_ae .O_TRUNC |_ae .O_WRONLY ,0664);if _df !=nil {return _df ;};defer _dc .Close ();_ag .Timestamp =_ec .Now ().UTC ();_ce :=_c .NewEncoder (_dc );_ce .SetIndent ("","\u0009");return _ce .Encode (_ag );};func (_dbc *ReferenceMap )Read (key string )(ReferenceEntry ,bool ){_dbc .Lock ();defer _dbc .Unlock ();if _dbc ._fg ==nil {return ReferenceEntry {},false ;};_cd ,_gg :=_dbc ._fg [key ];return _cd ,_gg ;};func CombinePNGFiles (file1 ,file2 string )(bool ,error ){_fc ,_gaad :=ReadPNG (file1 );if _gaad !=nil {return false ,_gaad ;};_gcc ,_gaad :=ReadPNG (file2 );if _gaad !=nil {return false ,_gaad ;};_ggd :=_fe .Point {_fc .Bounds ().Dx (),0};_gec :=_fe .Rectangle {_ggd ,_ggd .Add (_gcc .Bounds ().Size ())};_ed :=_fe .Rectangle {_fe .Point {0,0},_gec .Max };_gfd :=_fe .NewRGBA (_ed );_cb .Draw (_gfd ,_fc .Bounds (),_fc ,_fe .Point {0,0},_cb .Src );_cb .Draw (_gfd ,_gec ,_gcc ,_fe .Point {0,0},_cb .Src );_caf :=_b .Dir (file1 );_gdd :=_ef .TrimSuffix (_b .Base (file1 ),_b .Ext (file1 ));_cad ,_gaad :=_ae .Create (_caf +"\u002f"+_gdd +"\u002d\u0063\u006f\u006d\u0062\u0069\u006e\u0065\u0064\u002e\u0070\u006e\u0067");if _gaad !=nil {return false ,_gaad ;};defer _cad .Close ();if _cfg :=_gb .Encode (_cad ,_gfd );_cfg !=nil {return false ,_cfg ;};return true ,nil ;};func (_dff *ReferenceMap )MarshalJSON ()([]byte ,error ){return _c .Marshal (_dff ._fg )};func RunRenderTest (t *_g .T ,pdfPath ,outputDir ,baselineRenderPath string ,saveBaseline bool ,currentHashMap *ReferenceMap ,refFile *ReferenceFile ){_be :=_ef .TrimSuffix (_b .Base (pdfPath ),_b .Ext (pdfPath ));t .Run ("\u0072\u0065\u006e\u0064\u0065\u0072",func (_bc *_g .T ){_beb :=_b .Join (outputDir ,_be );_cafg :=_beb +"\u002d%\u0064\u002e\u0070\u006e\u0067";if _gfa :=RenderPDFToPNGs (pdfPath ,0,_cafg );_gfa !=nil {_bc .Skip (_gfa );};_gfe :=_be +"\u002em\u0073\u0077\u006f\u0072\u0064";_fae :=_b .Join (outputDir ,_gfe );_fdc :=_fae +"\u002d%\u0064\u002e\u0070\u006e\u0067";_abaf :=false ;if saveBaseline {_gdeg :=_b .Dir (pdfPath );_aae :=_b .Join (_gdeg ,_gfe +"\u002e\u0070\u0064\u0066");if _ ,_gea :=_ae .Stat (_aae );_gea ==nil {_bc .Logf ("\u0052\u0065\u006e\u0064er\u0020\u004d\u0053\u0020\u0057\u006f\u0072\u0064\u0020\u0050\u0044\u0046\u003a\u0020%\u0076",_aae );if _fee :=RenderPDFToPNGs (_aae ,0,_fdc );_fee !=nil {_bc .Skip (_fee );};_abaf =true ;};};for _eed :=1;true ;_eed ++{_bed :=_fef .Sprintf ("\u0025s\u002d\u0025\u0064\u002e\u0070\u006eg",_beb ,_eed );_dffb :=_b .Join (baselineRenderPath ,_fef .Sprintf ("\u0025\u0073\u002d\u0025\u0064\u005f\u0065\u0078\u0070\u002e\u0070\u006e\u0067",_be ,_eed ));if _ ,_gcad :=_ae .Stat (_bed );_gcad !=nil {break ;};_bc .Logf ("\u0025\u0073",_dffb );if saveBaseline {_bc .Logf ("\u0043\u006fp\u0079\u0069\u006eg\u0020\u0025\u0073\u0020\u002d\u003e\u0020\u0025\u0073",_bed ,_dffb );_gdb :=CopyFile (_bed ,_dffb );if _gdb !=nil {_bc .Fatalf ("\u0045\u0052\u0052OR\u0020\u0063\u006f\u0070\u0079\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0025\u0073\u003a\u0020\u0025\u0076",_dffb ,_gdb );};if _abaf {_eaa :=_fef .Sprintf ("\u0025s\u002d\u0025\u0064\u002e\u0070\u006eg",_fae ,_eed );_eeg :=_b .Join (baselineRenderPath ,_fef .Sprintf ("\u0025\u0073\u002d\u0025\u0064\u005f\u0065\u0078\u0070\u002e\u0070\u006e\u0067",_gfe ,_eed ));_bc .Logf ("\u0043\u006f\u0070\u0079\u0069\u006e\u0067\u0020\u004d\u0053\u0020\u0057\u006f\u0072\u0064 \u0072e\u0073\u0075\u006c\u0074\u0073\u0020\u0025\u0073\u0020\u002d\u003e\u0020\u0025\u0073",_eaa ,_eeg );_fbf :=CopyFile (_eaa ,_eeg );if _fbf !=nil {_bc .Fatalf ("\u0045\u0052\u0052OR\u0020\u0063\u006f\u0070\u0079\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0025\u0073\u003a\u0020\u0025\u0076",_eeg ,_fbf );};_bc .Logf ("\u0043\u006f\u006d\u0062\u0069\u006e\u0069\u006e\u0067\u0020\u0055\u006e\u0069\u004f\u0066\u0066\u0069\u0063e\u0020\u0072\u0065\u0073\u0075\u006c\u0074s\u0020\u0077\u0069\u0074\u0068\u0020\u004d\u0053\u0020\u0057\u006fr\u0064\u0020\u0025\u0073\u0020\u0061\u006e\u0064\u0020\u0025\u0073",_dffb ,_eeg );_dgdb ,_fbf :=CombinePNGFiles (_dffb ,_eeg );if _ae .IsNotExist (_fbf ){_bc .Fatal ("\u0069m\u0061g\u0065\u0020\u0066\u0069\u006ce\u0020\u006di\u0073\u0073\u0069\u006e\u0067");}else if !_dgdb {_bc .Fatal ("\u0055n\u0061\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0063\u006f\u006db\u0069\u006e\u0065\u0020\u0069\u006d\u0061\u0067\u0065\u0073");};_bc .Logf ("Cr\u0065\u0061t\u0069\u006e\u0067\u0020\u0069\u006d\u0061\u0067\u0065 \u0064\u0069\u0066\u0066\u0020\u0055\u006e\u0069\u004f\u0066\u0066\u0069\u0063\u0065\u0020\u0072\u0065\u0073\u0075\u006c\u0074\u0073\u0020\u0077\u0069\u0074\u0068\u0020M\u0053 \u0057\u006f\u0072\u0064\u0020\u0025\u0073\u0020a\u006ed\u0020\u0025s",_dffb ,_eeg );_dgdb ,_gad ,_ade ,_ada ,_fbf :=CreatePNGDiff (_dffb ,_eeg );if _fbf !=nil &&_fbf !=ErrImageSizeNotMatch {_bc .Fatalf ("\u0045\u0072\u0072\u006fr\u0020\u006f\u006e\u0020\u0063\u0072\u0065\u0061\u0074\u0065 \u0050N\u0047\u0020\u0044\u0069\u0066\u0066\u003a \u0025\u0076",_fbf );};if _dgdb {_bc .Logf ("\u0049\u006d\u0061\u0067\u0065\u003a\u0020\u0025\u0073\u000a",_gad );_bc .Logf ("D\u0069\u0066\u0066\u0020Pe\u0072c\u0065\u006e\u0074\u003a\u0020%\u0032\u002e\u0066\u0025\u0025\u000a",_ade );_bc .Logf ("\u0044i\u0066f\u0020\u0054\u006f\u0074\u0061\u006c\u003a\u0020\u0025\u0066\u000a",_ada );_eda :=_b .Base (_gad );if _dgf ,_fcc :=currentHashMap .Read (_eda );_fcc {if _dgf .DiffPercent < _ade ||_dgf .DiffTotal < _ada {_bc .Fatalf ("\u004e\u0065\u0077\u0020\u0072\u0065\u0073\u0075\u006c\u0074\u0073\u0020\u0068\u0061\u0076\u0069\u006e\u0067 h\u0069g\u0068\u0065\u0072\u0020\u0064\u0069\u0066\u0066\u0065\u0072\u0065\u006ec\u0065\u0020\u0070\u0065\u0072\u0063\u0065\u006e\u0074\u003a\u0020\u0025\u0066\u0020\u0061\u006e\u0064 \u0074\u006f\u0074\u0061\u006c\u0020\u0025\u0066\u000a",_ade ,_ada );};};_edf ,_aaf :=HashFile (_gad );_eg .NoError (_bc ,_aaf );_feb :=ReferenceEntry {Timestamp :_ec .Now ().UTC ().Unix (),Value :_edf ,ResultSize :_aab (_bc ,_gad ),DiffPercent :_ade ,DiffTotal :_ada };currentHashMap .Write (_eda ,_feb );if _aaf =refFile .Update (currentHashMap );_aaf !=nil {_bc .Logf ("\u0055\u0070\u0064\u0061\u0074\u0065\u0020\u0072\u0065\u0066\u0065\u0072\u0065\u006e\u0063e\u0020f\u0069\u006c\u0065\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0076",_aaf );};};};continue ;};_bc .Run (_fef .Sprintf ("\u0070\u0061\u0067\u0065\u0025\u0064",_eed ),func (_cbg *_g .T ){_cbg .Logf ("\u0043o\u006dp\u0061\u0072\u0069\u006e\u0067 \u0025\u0073 \u0076\u0073\u0020\u0025\u0073",_bed ,_dffb );_ecf ,_aaa :=ComparePNGFiles (_bed ,_dffb );if _ae .IsNotExist (_aaa ){_cbg .Fatal ("\u0069m\u0061g\u0065\u0020\u0066\u0069\u006ce\u0020\u006di\u0073\u0073\u0069\u006e\u0067");}else if !_ecf {_cbg .Fatal ("\u0077\u0072\u006f\u006eg \u0070\u0061\u0067\u0065\u0020\u0072\u0065\u006e\u0064\u0065\u0072\u0065\u0064");};});};});};func ComparePNGFiles (file1 ,file2 string )(bool ,error ){_bae ,_ffa :=HashFile (file1 );if _ffa !=nil {return false ,_ffa ;};_cc ,_ffa :=HashFile (file2 );if _ffa !=nil {return false ,_ffa ;};if _bae ==_cc {return true ,nil ;};_ee ,_ffa :=ReadPNG (file1 );if _ffa !=nil {return false ,_ffa ;};_dga ,_ffa :=ReadPNG (file2 );if _ffa !=nil {return false ,_ffa ;};if _ee .Bounds ()!=_dga .Bounds (){return false ,nil ;};return CompareImages (_ee ,_dga );};func _ebf (_caeb *_fe .RGBA ,_egc string ,_ad string ,_gca ,_deb int )error {_bda ,_eag :=_d .ReadFile (_egc );if _eag !=nil {return _eag ;};_cce ,_eag :=_bf .Parse (_bda );if _eag !=nil {return _eag ;};_cdf ,_eag :=_bf .NewFace (_cce ,&_bf .FaceOptions {Size :18,DPI :72,Hinting :_gde .HintingNone });if _eag !=nil {return _eag ;};_gba :=&_gde .Drawer {Dst :_caeb ,Src :_fe .NewUniform (_ge .RGBA {200,100,0,255}),Face :_cdf ,Dot :_ac .P (_gca ,_deb )};_gba .DrawString (_ad );return nil ;};