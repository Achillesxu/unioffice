//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package testutils ;import (_a "crypto/md5";_fb "encoding/hex";_f "errors";_ec "fmt";_gg "image";_gc "image/png";_dg "io";_ga "os";_e "os/exec";_db "path/filepath";_g "strings";_de "testing";);func CopyFile (src ,dst string )error {_eb ,_fg :=_ga .Open (src );if _fg !=nil {return _fg ;};defer _eb .Close ();_eg ,_fg :=_ga .Create (dst );if _fg !=nil {return _fg ;};defer _eg .Close ();_ ,_fg =_dg .Copy (_eg ,_eb );return _fg ;};func RunRenderTest (t *_de .T ,pdfPath ,outputDir ,baselineRenderPath string ,saveBaseline bool ){_ege :=_g .TrimSuffix (_db .Base (pdfPath ),_db .Ext (pdfPath ));t .Run ("\u0072\u0065\u006e\u0064\u0065\u0072",func (_ba *_de .T ){_ae :=_db .Join (outputDir ,_ege );_aa :=_ae +"\u002d%\u0064\u002e\u0070\u006e\u0067";if _eec :=RenderPDFToPNGs (pdfPath ,0,_aa );_eec !=nil {_ba .Skip (_eec );};for _aec :=1;true ;_aec ++{_bc :=_ec .Sprintf ("\u0025s\u002d\u0025\u0064\u002e\u0070\u006eg",_ae ,_aec );_cab :=_db .Join (baselineRenderPath ,_ec .Sprintf ("\u0025\u0073\u002d\u0025\u0064\u005f\u0065\u0078\u0070\u002e\u0070\u006e\u0067",_ege ,_aec ));if _ ,_da :=_ga .Stat (_bc );_da !=nil {break ;};_ba .Logf ("\u0025\u0073",_cab );if saveBaseline {_ba .Logf ("\u0043\u006fp\u0079\u0069\u006eg\u0020\u0025\u0073\u0020\u002d\u003e\u0020\u0025\u0073",_bc ,_cab );_bbb :=CopyFile (_bc ,_cab );if _bbb !=nil {_ba .Fatalf ("\u0045\u0052\u0052OR\u0020\u0063\u006f\u0070\u0079\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0025\u0073\u003a\u0020\u0025\u0076",_cab ,_bbb );};continue ;};_ba .Run (_ec .Sprintf ("\u0070\u0061\u0067\u0065\u0025\u0064",_aec ),func (_dbb *_de .T ){_dbb .Logf ("\u0043o\u006dp\u0061\u0072\u0069\u006e\u0067 \u0025\u0073 \u0076\u0073\u0020\u0025\u0073",_bc ,_cab );_cac ,_feg :=ComparePNGFiles (_bc ,_cab );if _ga .IsNotExist (_feg ){_dbb .Fatal ("\u0069m\u0061g\u0065\u0020\u0066\u0069\u006ce\u0020\u006di\u0073\u0073\u0069\u006e\u0067");}else if !_cac {_dbb .Fatal ("\u0077\u0072\u006f\u006eg \u0070\u0061\u0067\u0065\u0020\u0072\u0065\u006e\u0064\u0065\u0072\u0065\u0064");};});};});};func HashFile (file string )(string ,error ){_gf ,_gec :=_ga .Open (file );if _gec !=nil {return "",_gec ;};defer _gf .Close ();_dee :=_a .New ();if _ ,_gec =_dg .Copy (_dee ,_gf );_gec !=nil {return "",_gec ;};return _fb .EncodeToString (_dee .Sum (nil )),nil ;};func RenderPDFToPNGs (pdfPath string ,dpi int ,outpathTpl string )error {if dpi <=0{dpi =100;};if _ ,_bb :=_e .LookPath ("\u0067\u0073");_bb !=nil {return ErrRenderNotSupported ;};return _e .Command ("\u0067\u0073","\u002d\u0073\u0044\u0045\u0056\u0049\u0043\u0045\u003d\u0070\u006e\u0067a\u006c\u0070\u0068\u0061","\u002d\u006f",outpathTpl ,_ec .Sprintf ("\u002d\u0072\u0025\u0064",dpi ),pdfPath ).Run ();};func CompareImages (img1 ,img2 _gg .Image )(bool ,error ){_eca :=img1 .Bounds ();_fd :=0;for _ad :=0;_ad < _eca .Size ().X ;_ad ++{for _gfc :=0;_gfc < _eca .Size ().Y ;_gfc ++{_b ,_fe ,_gge ,_ :=img1 .At (_ad ,_gfc ).RGBA ();_fed ,_ce ,_gb ,_ :=img2 .At (_ad ,_gfc ).RGBA ();if _b !=_fed ||_fe !=_ce ||_gge !=_gb {_fd ++;};};};_cag :=float64 (_fd )/float64 (_eca .Dx ()*_eca .Dy ());if _cag > 0.0001{_ec .Printf ("\u0064\u0069\u0066f \u0066\u0072\u0061\u0063\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0076\u0020\u0028\u0025\u0064\u0029\u000a",_cag ,_fd );return false ,nil ;};return true ,nil ;};var (ErrRenderNotSupported =_f .New ("\u0072\u0065\u006e\u0064\u0065r\u0069\u006e\u0067\u0020\u0050\u0044\u0046\u0020\u0066\u0069\u006c\u0065\u0073 \u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u006f\u006e\u0020\u0074\u0068\u0069\u0073\u0020\u0073\u0079\u0073\u0074\u0065m"););func ComparePNGFiles (file1 ,file2 string )(bool ,error ){_adb ,_cf :=HashFile (file1 );if _cf !=nil {return false ,_cf ;};_ed ,_cf :=HashFile (file2 );if _cf !=nil {return false ,_cf ;};if _adb ==_ed {return true ,nil ;};_fc ,_cf :=ReadPNG (file1 );if _cf !=nil {return false ,_cf ;};_ea ,_cf :=ReadPNG (file2 );if _cf !=nil {return false ,_cf ;};if _fc .Bounds ()!=_ea .Bounds (){return false ,nil ;};return CompareImages (_fc ,_ea );};func ReadPNG (file string )(_gg .Image ,error ){_ge ,_ca :=_ga .Open (file );if _ca !=nil {return nil ,_ca ;};defer _ge .Close ();return _gc .Decode (_ge );};