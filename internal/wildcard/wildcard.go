//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package wildcard ;func _fa (_ce ,_ff []rune ,_de bool )bool {for len (_ff )> 0{switch _ff [0]{default:if len (_ce )==0||_ce [0]!=_ff [0]{return false ;};case '?':if len (_ce )==0&&!_de {return false ;};case '*':return _fa (_ce ,_ff [1:],_de )||(len (_ce )> 0&&_fa (_ce [1:],_ff ,_de ));};_ce =_ce [1:];_ff =_ff [1:];};return len (_ce )==0&&len (_ff )==0;};func MatchSimple (pattern ,name string )bool {if pattern ==""{return name ==pattern ;};if pattern =="\u002a"{return true ;};_be :=make ([]rune ,0,len (name ));_a :=make ([]rune ,0,len (pattern ));for _ ,_d :=range name {_be =append (_be ,_d );};for _ ,_aa :=range pattern {_a =append (_a ,_aa );};_ga :=true ;return _fa (_be ,_a ,_ga );};func _db (_ac ,_gdf []rune ,_cg int )int {for len (_gdf )> 0{switch _gdf [0]{default:if len (_ac )==0{return -1;};if _ac [0]!=_gdf [0]{return _db (_ac [1:],_gdf ,_cg +1);};case '?':if len (_ac )==0{return -1;};case '*':if len (_ac )==0{return -1;};_ccf :=_db (_ac ,_gdf [1:],_cg );if _ccf !=-1{return _cg ;}else {_ccf =_db (_ac [1:],_gdf ,_cg );if _ccf !=-1{return _cg ;}else {return -1;};};};_ac =_ac [1:];_gdf =_gdf [1:];};return _cg ;};func Match (pattern ,name string )(_e bool ){if pattern ==""{return name ==pattern ;};if pattern =="\u002a"{return true ;};_gg :=make ([]rune ,0,len (name ));_dc :=make ([]rune ,0,len (pattern ));for _ ,_ec :=range name {_gg =append (_gg ,_ec );};for _ ,_ef :=range pattern {_dc =append (_dc ,_ef );};_c :=false ;return _fa (_gg ,_dc ,_c );};func Index (pattern ,name string )(_dd int ){if pattern ==""||pattern =="\u002a"{return 0;};_aag :=make ([]rune ,0,len (name ));_cc :=make ([]rune ,0,len (pattern ));for _ ,_deb :=range name {_aag =append (_aag ,_deb );};for _ ,_cd :=range pattern {_cc =append (_cc ,_cd );};return _db (_aag ,_cc ,0);};