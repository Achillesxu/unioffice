//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package wildcard ;func Index (pattern ,name string )(_eaa int ){if pattern ==""||pattern =="\u002a"{return 0;};_ag :=make ([]rune ,0,len (name ));_dfgg :=make ([]rune ,0,len (pattern ));for _ ,_ed :=range name {_ag =append (_ag ,_ed );};for _ ,_fc :=range pattern {_dfgg =append (_dfgg ,_fc );};return _agf (_ag ,_dfgg ,0);};func _ccd (_dfg ,_db []rune ,_bg bool )bool {for len (_db )> 0{switch _db [0]{default:if len (_dfg )==0||_dfg [0]!=_db [0]{return false ;};case '?':if len (_dfg )==0&&!_bg {return false ;};case '*':return _ccd (_dfg ,_db [1:],_bg )||(len (_dfg )> 0&&_ccd (_dfg [1:],_db ,_bg ));};_dfg =_dfg [1:];_db =_db [1:];};return len (_dfg )==0&&len (_db )==0;};func Match (pattern ,name string )(_cd bool ){if pattern ==""{return name ==pattern ;};if pattern =="\u002a"{return true ;};_cc :=make ([]rune ,0,len (name ));_ca :=make ([]rune ,0,len (pattern ));for _ ,_bf :=range name {_cc =append (_cc ,_bf );};for _ ,_ab :=range pattern {_ca =append (_ca ,_ab );};_be :=false ;return _ccd (_cc ,_ca ,_be );};func MatchSimple (pattern ,name string )bool {if pattern ==""{return name ==pattern ;};if pattern =="\u002a"{return true ;};_f :=make ([]rune ,0,len (name ));_e :=make ([]rune ,0,len (pattern ));for _ ,_bb :=range name {_f =append (_f ,_bb );};for _ ,_c :=range pattern {_e =append (_e ,_c );};_eg :=true ;return _ccd (_f ,_e ,_eg );};func _agf (_cdg ,_fe []rune ,_beab int )int {for len (_fe )> 0{switch _fe [0]{default:if len (_cdg )==0{return -1;};if _cdg [0]!=_fe [0]{return _agf (_cdg [1:],_fe ,_beab +1);};case '?':if len (_cdg )==0{return -1;};case '*':if len (_cdg )==0{return -1;};_fb :=_agf (_cdg ,_fe [1:],_beab );if _fb !=-1{return _beab ;}else {_fb =_agf (_cdg [1:],_fe ,_beab );if _fb !=-1{return _beab ;}else {return -1;};};};_cdg =_cdg [1:];_fe =_fe [1:];};return _beab ;};