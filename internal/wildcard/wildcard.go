//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package wildcard ;func _acf (_ed ,_bf []rune ,_gc bool )bool {for len (_bf )> 0{switch _bf [0]{default:if len (_ed )==0||_ed [0]!=_bf [0]{return false ;};case '?':if len (_ed )==0&&!_gc {return false ;};case '*':return _acf (_ed ,_bf [1:],_gc )||(len (_ed )> 0&&_acf (_ed [1:],_bf ,_gc ));};_ed =_ed [1:];_bf =_bf [1:];};return len (_ed )==0&&len (_bf )==0;};func MatchSimple (pattern ,name string )bool {if pattern ==""{return name ==pattern ;};if pattern =="\u002a"{return true ;};_d :=make ([]rune ,0,len (name ));_c :=make ([]rune ,0,len (pattern ));for _ ,_cg :=range name {_d =append (_d ,_cg );};for _ ,_dbd :=range pattern {_c =append (_c ,_dbd );};_ac :=true ;return _acf (_d ,_c ,_ac );};func Match (pattern ,name string )(_b bool ){if pattern ==""{return name ==pattern ;};if pattern =="\u002a"{return true ;};_fd :=make ([]rune ,0,len (name ));_fda :=make ([]rune ,0,len (pattern ));for _ ,_fa :=range name {_fd =append (_fd ,_fa );};for _ ,_eb :=range pattern {_fda =append (_fda ,_eb );};_g :=false ;return _acf (_fd ,_fda ,_g );};func Index (pattern ,name string )(_df int ){if pattern ==""||pattern =="\u002a"{return 0;};_ddf :=make ([]rune ,0,len (name ));_cf :=make ([]rune ,0,len (pattern ));for _ ,_bd :=range name {_ddf =append (_ddf ,_bd );};for _ ,_ca :=range pattern {_cf =append (_cf ,_ca );};return _caf (_ddf ,_cf ,0);};func _caf (_cfg ,_cd []rune ,_ab int )int {for len (_cd )> 0{switch _cd [0]{default:if len (_cfg )==0{return -1;};if _cfg [0]!=_cd [0]{return _caf (_cfg [1:],_cd ,_ab +1);};case '?':if len (_cfg )==0{return -1;};case '*':if len (_cfg )==0{return -1;};_dfe :=_caf (_cfg ,_cd [1:],_ab );if _dfe !=-1{return _ab ;}else {_dfe =_caf (_cfg [1:],_cd ,_ab );if _dfe !=-1{return _ab ;}else {return -1;};};};_cfg =_cfg [1:];_cd =_cd [1:];};return _ab ;};