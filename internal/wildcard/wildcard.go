//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package wildcard ;func Match (pattern ,name string )(_c bool ){if pattern ==""{return name ==pattern ;};if pattern =="\u002a"{return true ;};_ag :=make ([]rune ,0,len (name ));_bc :=make ([]rune ,0,len (pattern ));for _ ,_fd :=range name {_ag =append (_ag ,_fd );};for _ ,_ce :=range pattern {_bc =append (_bc ,_ce );};_bf :=false ;return _fcb (_ag ,_bc ,_bf );};func _fcb (_fdg ,_cb []rune ,_bd bool )bool {for len (_cb )> 0{switch _cb [0]{default:if len (_fdg )==0||_fdg [0]!=_cb [0]{return false ;};case '?':if len (_fdg )==0&&!_bd {return false ;};case '*':return _fcb (_fdg ,_cb [1:],_bd )||(len (_fdg )> 0&&_fcb (_fdg [1:],_cb ,_bd ));};_fdg =_fdg [1:];_cb =_cb [1:];};return len (_fdg )==0&&len (_cb )==0;};func MatchSimple (pattern ,name string )bool {if pattern ==""{return name ==pattern ;};if pattern =="\u002a"{return true ;};_b :=make ([]rune ,0,len (name ));_a :=make ([]rune ,0,len (pattern ));for _ ,_ba :=range name {_b =append (_b ,_ba );};for _ ,_fb :=range pattern {_a =append (_a ,_fb );};_fc :=true ;return _fcb (_b ,_a ,_fc );};func Index (pattern ,name string )(_fbd int ){if pattern ==""||pattern =="\u002a"{return 0;};_ccb :=make ([]rune ,0,len (name ));_bdf :=make ([]rune ,0,len (pattern ));for _ ,_bab :=range name {_ccb =append (_ccb ,_bab );};for _ ,_ff :=range pattern {_bdf =append (_bdf ,_ff );};return _d (_ccb ,_bdf ,0);};func _d (_gff ,_be []rune ,_aa int )int {for len (_be )> 0{switch _be [0]{default:if len (_gff )==0{return -1;};if _gff [0]!=_be [0]{return _d (_gff [1:],_be ,_aa +1);};case '?':if len (_gff )==0{return -1;};case '*':if len (_gff )==0{return -1;};_ac :=_d (_gff ,_be [1:],_aa );if _ac !=-1{return _aa ;}else {_ac =_d (_gff [1:],_be ,_aa );if _ac !=-1{return _aa ;}else {return -1;};};};_gff =_gff [1:];_be =_be [1:];};return _aa ;};