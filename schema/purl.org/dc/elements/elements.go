//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package elements ;import (_af "encoding/xml";_b "fmt";_ba "github.com/unidoc/unioffice";_d "github.com/unidoc/unioffice/common/logger";);

// Validate validates the ElementContainer and its children
func (_bd *ElementContainer )Validate ()error {return _bd .ValidateWithPath ("\u0045\u006ce\u006d\u0065\u006et\u0043\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072");};func (_ed *ElementsGroup )UnmarshalXML (d *_af .Decoder ,start _af .StartElement )error {_ff :for {_aba ,_fe :=d .Token ();if _fe !=nil {return _fe ;};switch _abd :=_aba .(type ){case _af .StartElement :switch _abd .Name {case _af .Name {Space :"\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0072\u0067/\u0064c\u002f\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0073\u002f\u0031\u002e\u0031\u002f",Local :"\u0061\u006e\u0079"}:_bae :=NewElementsGroupChoice ();if _gb :=d .DecodeElement (&_bae .Any ,&_abd );_gb !=nil {return _gb ;};_ed .Choice =append (_ed .Choice ,_bae );default:_d .Log .Debug ("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0045\u006c\u0065\u006de\u006e\u0074\u0073\u0047\u0072\u006f\u0075\u0070 \u0025\u0076",_abd .Name );if _cg :=d .Skip ();_cg !=nil {return _cg ;};};case _af .EndElement :break _ff ;case _af .CharData :};};return nil ;};

// ValidateWithPath validates the ElementsGroup and its children, prefixing error messages with path
func (_ca *ElementsGroup )ValidateWithPath (path string )error {for _fcg ,_gc :=range _ca .Choice {if _ace :=_gc .ValidateWithPath (_b .Sprintf ("\u0025\u0073\u002f\u0043\u0068\u006f\u0069\u0063\u0065\u005b\u0025\u0064\u005d",path ,_fcg ));_ace !=nil {return _ace ;};};return nil ;};type Any struct{SimpleLiteral };

// ValidateWithPath validates the ElementsGroupChoice and its children, prefixing error messages with path
func (_afff *ElementsGroupChoice )ValidateWithPath (path string )error {for _feg ,_ccg :=range _afff .Any {if _bcc :=_ccg .ValidateWithPath (_b .Sprintf ("\u0025\u0073\u002f\u0041\u006e\u0079\u005b\u0025\u0064\u005d",path ,_feg ));_bcc !=nil {return _bcc ;};};return nil ;};func (_gg *ElementContainer )UnmarshalXML (d *_af .Decoder ,start _af .StartElement )error {_acab :for {_dd ,_fa :=d .Token ();if _fa !=nil {return _fa ;};switch _ggb :=_dd .(type ){case _af .StartElement :switch _ggb .Name {case _af .Name {Space :"\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0072\u0067/\u0064c\u002f\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0073\u002f\u0031\u002e\u0031\u002f",Local :"\u0061\u006e\u0079"}:_da :=NewElementsGroupChoice ();if _ae :=d .DecodeElement (&_da .Any ,&_ggb );_ae !=nil {return _ae ;};_gg .Choice =append (_gg .Choice ,_da );default:_d .Log .Debug ("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0045\u006c\u0065\u006d\u0065\u006e\u0074\u0043\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072\u0020\u0025v",_ggb .Name );if _fc :=d .Skip ();_fc !=nil {return _fc ;};};case _af .EndElement :break _acab ;case _af .CharData :};};return nil ;};type ElementContainer struct{Choice []*ElementsGroupChoice ;};

// Validate validates the ElementsGroup and its children
func (_aac *ElementsGroup )Validate ()error {return _aac .ValidateWithPath ("\u0045\u006c\u0065\u006d\u0065\u006e\u0074\u0073\u0047\u0072\u006f\u0075\u0070");};func (_bf *ElementsGroup )MarshalXML (e *_af .Encoder ,start _af .StartElement )error {if _bf .Choice !=nil {for _ ,_ab :=range _bf .Choice {_ab .MarshalXML (e ,_af .StartElement {});};};return nil ;};func (_gd *SimpleLiteral )UnmarshalXML (d *_af .Decoder ,start _af .StartElement )error {for {_ag ,_db :=d .Token ();if _db !=nil {return _b .Errorf ("\u0070a\u0072\u0073\u0069\u006eg\u0020\u0053\u0069\u006d\u0070l\u0065L\u0069t\u0065\u0072\u0061\u006c\u003a\u0020\u0025s",_db );};if _gdc ,_eef :=_ag .(_af .EndElement );_eef &&_gdc .Name ==start .Name {break ;};};return nil ;};func NewElementContainer ()*ElementContainer {_cca :=&ElementContainer {};return _cca };type SimpleLiteral struct{};func NewElementsGroupChoice ()*ElementsGroupChoice {_eg :=&ElementsGroupChoice {};return _eg };

// ValidateWithPath validates the ElementContainer and its children, prefixing error messages with path
func (_ga *ElementContainer )ValidateWithPath (path string )error {for _fd ,_e :=range _ga .Choice {if _bdg :=_e .ValidateWithPath (_b .Sprintf ("\u0025\u0073\u002f\u0043\u0068\u006f\u0069\u0063\u0065\u005b\u0025\u0064\u005d",path ,_fd ));_bdg !=nil {return _bdg ;};};return nil ;};func NewElementsGroup ()*ElementsGroup {_ee :=&ElementsGroup {};return _ee };func (_g *ElementContainer )MarshalXML (e *_af .Encoder ,start _af .StartElement )error {start .Name .Local ="\u0065\u006ce\u006d\u0065\u006et\u0043\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072";e .EncodeToken (start );if _g .Choice !=nil {for _ ,_ge :=range _g .Choice {_ge .MarshalXML (e ,_af .StartElement {});};};e .EncodeToken (_af .EndElement {Name :start .Name });return nil ;};type ElementsGroupChoice struct{Any []*Any ;};

// Validate validates the Any and its children
func (_aca *Any )Validate ()error {return _aca .ValidateWithPath ("\u0041\u006e\u0079")};func NewSimpleLiteral ()*SimpleLiteral {_ef :=&SimpleLiteral {};return _ef };

// ValidateWithPath validates the Any and its children, prefixing error messages with path
func (_cc *Any )ValidateWithPath (path string )error {if _cf :=_cc .SimpleLiteral .ValidateWithPath (path );_cf !=nil {return _cf ;};return nil ;};func NewAny ()*Any {_bc :=&Any {};_bc .SimpleLiteral =*NewSimpleLiteral ();return _bc };func (_aa *Any )MarshalXML (e *_af .Encoder ,start _af .StartElement )error {return _aa .SimpleLiteral .MarshalXML (e ,start );};

// ValidateWithPath validates the SimpleLiteral and its children, prefixing error messages with path
func (_eb *SimpleLiteral )ValidateWithPath (path string )error {return nil };func (_dg *SimpleLiteral )MarshalXML (e *_af .Encoder ,start _af .StartElement )error {e .EncodeToken (start );e .EncodeToken (_af .EndElement {Name :start .Name });return nil ;};func (_ce *ElementsGroupChoice )UnmarshalXML (d *_af .Decoder ,start _af .StartElement )error {_geb :for {_cd ,_bdf :=d .Token ();if _bdf !=nil {return _bdf ;};switch _gbe :=_cd .(type ){case _af .StartElement :switch _gbe .Name {case _af .Name {Space :"\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0072\u0067/\u0064c\u002f\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0073\u002f\u0031\u002e\u0031\u002f",Local :"\u0061\u006e\u0079"}:_cgd :=NewAny ();if _ede :=d .DecodeElement (_cgd ,&_gbe );_ede !=nil {return _ede ;};_ce .Any =append (_ce .Any ,_cgd );default:_d .Log .Debug ("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020o\u006e\u0020\u0045\u006c\u0065\u006d\u0065\u006e\u0074\u0073\u0047\u0072ou\u0070\u0043\u0068\u006f\u0069\u0063\u0065\u0020\u0025\u0076",_gbe .Name );if _cdg :=d .Skip ();_cdg !=nil {return _cdg ;};};case _af .EndElement :break _geb ;case _af .CharData :};};return nil ;};func (_daf *ElementsGroupChoice )MarshalXML (e *_af .Encoder ,start _af .StartElement )error {if _daf .Any !=nil {_geeg :=_af .StartElement {Name :_af .Name {Local :"\u0064\u0063\u003a\u0061\u006e\u0079"}};for _ ,_ggd :=range _daf .Any {e .EncodeElement (_ggd ,_geeg );};};return nil ;};type ElementsGroup struct{Choice []*ElementsGroupChoice ;};

// Validate validates the ElementsGroupChoice and its children
func (_cag *ElementsGroupChoice )Validate ()error {return _cag .ValidateWithPath ("\u0045\u006c\u0065\u006den\u0074\u0073\u0047\u0072\u006f\u0075\u0070\u0043\u0068\u006f\u0069\u0063\u0065");};func (_ad *Any )UnmarshalXML (d *_af .Decoder ,start _af .StartElement )error {_ad .SimpleLiteral =*NewSimpleLiteral ();for {_ac ,_aff :=d .Token ();if _aff !=nil {return _b .Errorf ("\u0070a\u0072s\u0069\u006e\u0067\u0020\u0041\u006e\u0079\u003a\u0020\u0025\u0073",_aff );};if _c ,_f :=_ac .(_af .EndElement );_f &&_c .Name ==start .Name {break ;};};return nil ;};

// Validate validates the SimpleLiteral and its children
func (_gf *SimpleLiteral )Validate ()error {return _gf .ValidateWithPath ("\u0053\u0069\u006d\u0070\u006c\u0065\u004c\u0069\u0074\u0065\u0072\u0061\u006c");};func init (){_ba .RegisterConstructor ("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0072\u0067/\u0064c\u002f\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0073\u002f\u0031\u002e\u0031\u002f","\u0053\u0069\u006d\u0070\u006c\u0065\u004c\u0069\u0074\u0065\u0072\u0061\u006c",NewSimpleLiteral );_ba .RegisterConstructor ("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0072\u0067/\u0064c\u002f\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0073\u002f\u0031\u002e\u0031\u002f","\u0065\u006ce\u006d\u0065\u006et\u0043\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072",NewElementContainer );_ba .RegisterConstructor ("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0072\u0067/\u0064c\u002f\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0073\u002f\u0031\u002e\u0031\u002f","\u0061\u006e\u0079",NewAny );_ba .RegisterConstructor ("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0072\u0067/\u0064c\u002f\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0073\u002f\u0031\u002e\u0031\u002f","\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0073\u0047\u0072\u006f\u0075\u0070",NewElementsGroup );};