//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package elements ;import (_c "encoding/xml";_e "fmt";_cg "github.com/unidoc/unioffice";_be "github.com/unidoc/unioffice/common/logger";);func (_ab *ElementContainer )MarshalXML (e *_c .Encoder ,start _c .StartElement )error {start .Name .Local ="\u0065\u006ce\u006d\u0065\u006et\u0043\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072";e .EncodeToken (start );if _ab .Choice !=nil {for _ ,_cf :=range _ab .Choice {_cf .MarshalXML (e ,_c .StartElement {});};};e .EncodeToken (_c .EndElement {Name :start .Name });return nil ;};func (_a *Any )UnmarshalXML (d *_c .Decoder ,start _c .StartElement )error {_a .SimpleLiteral =*NewSimpleLiteral ();for {_cb ,_g :=d .Token ();if _g !=nil {return _e .Errorf ("\u0070a\u0072s\u0069\u006e\u0067\u0020\u0041\u006e\u0079\u003a\u0020\u0025\u0073",_g );};if _ca ,_eed :=_cb .(_c .EndElement );_eed &&_ca .Name ==start .Name {break ;};};return nil ;};

// Validate validates the ElementContainer and its children
func (_gb *ElementContainer )Validate ()error {return _gb .ValidateWithPath ("\u0045\u006ce\u006d\u0065\u006et\u0043\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072");};func NewSimpleLiteral ()*SimpleLiteral {_ae :=&SimpleLiteral {};return _ae };

// ValidateWithPath validates the SimpleLiteral and its children, prefixing error messages with path
func (_dc *SimpleLiteral )ValidateWithPath (path string )error {return nil };

// Validate validates the ElementsGroupChoice and its children
func (_cfc *ElementsGroupChoice )Validate ()error {return _cfc .ValidateWithPath ("\u0045\u006c\u0065\u006den\u0074\u0073\u0047\u0072\u006f\u0075\u0070\u0043\u0068\u006f\u0069\u0063\u0065");};func (_ba *ElementsGroup )MarshalXML (e *_c .Encoder ,start _c .StartElement )error {if _ba .Choice !=nil {for _ ,_cbe :=range _ba .Choice {_cbe .MarshalXML (e ,_c .StartElement {});};};return nil ;};type ElementsGroupChoice struct{Any []*Any ;};func (_gg *ElementContainer )UnmarshalXML (d *_c .Decoder ,start _c .StartElement )error {_da :for {_dg ,_gge :=d .Token ();if _gge !=nil {return _gge ;};switch _bee :=_dg .(type ){case _c .StartElement :switch _bee .Name {case _c .Name {Space :"\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0072\u0067/\u0064c\u002f\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0073\u002f\u0031\u002e\u0031\u002f",Local :"\u0061\u006e\u0079"}:_ggc :=NewElementsGroupChoice ();if _fc :=d .DecodeElement (&_ggc .Any ,&_bee );_fc !=nil {return _fc ;};_gg .Choice =append (_gg .Choice ,_ggc );default:_be .Log .Debug ("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0045\u006c\u0065\u006d\u0065\u006e\u0074\u0043\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072\u0020\u0025v",_bee .Name );if _abd :=d .Skip ();_abd !=nil {return _abd ;};};case _c .EndElement :break _da ;case _c .CharData :};};return nil ;};

// ValidateWithPath validates the ElementsGroup and its children, prefixing error messages with path
func (_ag *ElementsGroup )ValidateWithPath (path string )error {for _fgb ,_afa :=range _ag .Choice {if _ff :=_afa .ValidateWithPath (_e .Sprintf ("\u0025\u0073\u002f\u0043\u0068\u006f\u0069\u0063\u0065\u005b\u0025\u0064\u005d",path ,_fgb ));_ff !=nil {return _ff ;};};return nil ;};

// Validate validates the ElementsGroup and its children
func (_cge *ElementsGroup )Validate ()error {return _cge .ValidateWithPath ("\u0045\u006c\u0065\u006d\u0065\u006e\u0074\u0073\u0047\u0072\u006f\u0075\u0070");};func (_acf *ElementsGroupChoice )UnmarshalXML (d *_c .Decoder ,start _c .StartElement )error {_fa :for {_fb ,_gfg :=d .Token ();if _gfg !=nil {return _gfg ;};switch _gda :=_fb .(type ){case _c .StartElement :switch _gda .Name {case _c .Name {Space :"\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0072\u0067/\u0064c\u002f\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0073\u002f\u0031\u002e\u0031\u002f",Local :"\u0061\u006e\u0079"}:_fba :=NewAny ();if _de :=d .DecodeElement (_fba ,&_gda );_de !=nil {return _de ;};_acf .Any =append (_acf .Any ,_fba );default:_be .Log .Debug ("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020o\u006e\u0020\u0045\u006c\u0065\u006d\u0065\u006e\u0074\u0073\u0047\u0072ou\u0070\u0043\u0068\u006f\u0069\u0063\u0065\u0020\u0025\u0076",_gda .Name );if _ge :=d .Skip ();_ge !=nil {return _ge ;};};case _c .EndElement :break _fa ;case _c .CharData :};};return nil ;};func (_ec *SimpleLiteral )MarshalXML (e *_c .Encoder ,start _c .StartElement )error {e .EncodeToken (start );e .EncodeToken (_c .EndElement {Name :start .Name });return nil ;};type SimpleLiteral struct{};func NewElementContainer ()*ElementContainer {_f :=&ElementContainer {};return _f };func NewElementsGroup ()*ElementsGroup {_abe :=&ElementsGroup {};return _abe };

// ValidateWithPath validates the ElementsGroupChoice and its children, prefixing error messages with path
func (_bbb *ElementsGroupChoice )ValidateWithPath (path string )error {for _afd ,_ad :=range _bbb .Any {if _gfee :=_ad .ValidateWithPath (_e .Sprintf ("\u0025\u0073\u002f\u0041\u006e\u0079\u005b\u0025\u0064\u005d",path ,_afd ));_gfee !=nil {return _gfee ;};};return nil ;};func (_ee *Any )MarshalXML (e *_c .Encoder ,start _c .StartElement )error {return _ee .SimpleLiteral .MarshalXML (e ,start );};func (_bga *ElementsGroupChoice )MarshalXML (e *_c .Encoder ,start _c .StartElement )error {if _bga .Any !=nil {_gfe :=_c .StartElement {Name :_c .Name {Local :"\u0064\u0063\u003a\u0061\u006e\u0079"}};for _ ,_ac :=range _bga .Any {e .EncodeElement (_ac ,_gfe );};};return nil ;};func NewAny ()*Any {_bg :=&Any {};_bg .SimpleLiteral =*NewSimpleLiteral ();return _bg };type ElementsGroup struct{Choice []*ElementsGroupChoice ;};

// Validate validates the SimpleLiteral and its children
func (_eeaf *SimpleLiteral )Validate ()error {return _eeaf .ValidateWithPath ("\u0053\u0069\u006d\u0070\u006c\u0065\u004c\u0069\u0074\u0065\u0072\u0061\u006c");};

// ValidateWithPath validates the Any and its children, prefixing error messages with path
func (_d *Any )ValidateWithPath (path string )error {if _af :=_d .SimpleLiteral .ValidateWithPath (path );_af !=nil {return _af ;};return nil ;};type Any struct{SimpleLiteral };func (_gc *ElementsGroup )UnmarshalXML (d *_c .Decoder ,start _c .StartElement )error {_ga :for {_eea ,_cd :=d .Token ();if _cd !=nil {return _cd ;};switch _gaa :=_eea .(type ){case _c .StartElement :switch _gaa .Name {case _c .Name {Space :"\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0072\u0067/\u0064c\u002f\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0073\u002f\u0031\u002e\u0031\u002f",Local :"\u0061\u006e\u0079"}:_fg :=NewElementsGroupChoice ();if _fgd :=d .DecodeElement (&_fg .Any ,&_gaa );_fgd !=nil {return _fgd ;};_gc .Choice =append (_gc .Choice ,_fg );default:_be .Log .Debug ("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0045\u006c\u0065\u006de\u006e\u0074\u0073\u0047\u0072\u006f\u0075\u0070 \u0025\u0076",_gaa .Name );if _gf :=d .Skip ();_gf !=nil {return _gf ;};};case _c .EndElement :break _ga ;case _c .CharData :};};return nil ;};func NewElementsGroupChoice ()*ElementsGroupChoice {_fcb :=&ElementsGroupChoice {};return _fcb };func (_acfe *SimpleLiteral )UnmarshalXML (d *_c .Decoder ,start _c .StartElement )error {for {_dag ,_egb :=d .Token ();if _egb !=nil {return _e .Errorf ("\u0070a\u0072\u0073\u0069\u006eg\u0020\u0053\u0069\u006d\u0070l\u0065L\u0069t\u0065\u0072\u0061\u006c\u003a\u0020\u0025s",_egb );};if _baf ,_gdd :=_dag .(_c .EndElement );_gdd &&_baf .Name ==start .Name {break ;};};return nil ;};type ElementContainer struct{Choice []*ElementsGroupChoice ;};

// ValidateWithPath validates the ElementContainer and its children, prefixing error messages with path
func (_fcf *ElementContainer )ValidateWithPath (path string )error {for _bb ,_dac :=range _fcf .Choice {if _gd :=_dac .ValidateWithPath (_e .Sprintf ("\u0025\u0073\u002f\u0043\u0068\u006f\u0069\u0063\u0065\u005b\u0025\u0064\u005d",path ,_bb ));_gd !=nil {return _gd ;};};return nil ;};

// Validate validates the Any and its children
func (_eg *Any )Validate ()error {return _eg .ValidateWithPath ("\u0041\u006e\u0079")};func init (){_cg .RegisterConstructor ("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0072\u0067/\u0064c\u002f\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0073\u002f\u0031\u002e\u0031\u002f","\u0053\u0069\u006d\u0070\u006c\u0065\u004c\u0069\u0074\u0065\u0072\u0061\u006c",NewSimpleLiteral );_cg .RegisterConstructor ("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0072\u0067/\u0064c\u002f\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0073\u002f\u0031\u002e\u0031\u002f","\u0065\u006ce\u006d\u0065\u006et\u0043\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072",NewElementContainer );_cg .RegisterConstructor ("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0072\u0067/\u0064c\u002f\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0073\u002f\u0031\u002e\u0031\u002f","\u0061\u006e\u0079",NewAny );_cg .RegisterConstructor ("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0072\u0067/\u0064c\u002f\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0073\u002f\u0031\u002e\u0031\u002f","\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0073\u0047\u0072\u006f\u0075\u0070",NewElementsGroup );};