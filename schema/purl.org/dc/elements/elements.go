//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package elements ;import (_a "encoding/xml";_g "fmt";_d "github.com/unidoc/unioffice";_gd "github.com/unidoc/unioffice/common/logger";);func (_eg *ElementsGroupChoice )MarshalXML (e *_a .Encoder ,start _a .StartElement )error {if _eg .Any !=nil {_eb :=_a .StartElement {Name :_a .Name {Local :"\u0064\u0063\u003a\u0061\u006e\u0079"}};for _ ,_defc :=range _eg .Any {e .EncodeElement (_defc ,_eb );};};return nil ;};

// Validate validates the SimpleLiteral and its children
func (_cae *SimpleLiteral )Validate ()error {return _cae .ValidateWithPath ("\u0053\u0069\u006d\u0070\u006c\u0065\u004c\u0069\u0074\u0065\u0072\u0061\u006c");};type ElementsGroupChoice struct{Any []*Any ;};func NewElementsGroupChoice ()*ElementsGroupChoice {_gfa :=&ElementsGroupChoice {};return _gfa };func (_be *ElementContainer )UnmarshalXML (d *_a .Decoder ,start _a .StartElement )error {_bg :for {_ad ,_cdc :=d .Token ();if _cdc !=nil {return _cdc ;};switch _bd :=_ad .(type ){case _a .StartElement :switch _bd .Name {case _a .Name {Space :"\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0072\u0067/\u0064c\u002f\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0073\u002f\u0031\u002e\u0031\u002f",Local :"\u0061\u006e\u0079"}:_af :=NewElementsGroupChoice ();if _ada :=d .DecodeElement (&_af .Any ,&_bd );_ada !=nil {return _ada ;};_be .Choice =append (_be .Choice ,_af );default:_gd .Log .Debug ("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0045\u006c\u0065\u006d\u0065\u006e\u0074\u0043\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072\u0020\u0025v",_bd .Name );if _fea :=d .Skip ();_fea !=nil {return _fea ;};};case _a .EndElement :break _bg ;case _a .CharData :};};return nil ;};

// ValidateWithPath validates the ElementContainer and its children, prefixing error messages with path
func (_de *ElementContainer )ValidateWithPath (path string )error {for _cc ,_df :=range _de .Choice {if _ba :=_df .ValidateWithPath (_g .Sprintf ("\u0025\u0073\u002f\u0043\u0068\u006f\u0069\u0063\u0065\u005b\u0025\u0064\u005d",path ,_cc ));_ba !=nil {return _ba ;};};return nil ;};

// Validate validates the ElementsGroup and its children
func (_aa *ElementsGroup )Validate ()error {return _aa .ValidateWithPath ("\u0045\u006c\u0065\u006d\u0065\u006e\u0074\u0073\u0047\u0072\u006f\u0075\u0070");};func NewSimpleLiteral ()*SimpleLiteral {_bb :=&SimpleLiteral {};return _bb };func (_f *Any )UnmarshalXML (d *_a .Decoder ,start _a .StartElement )error {_f .SimpleLiteral =*NewSimpleLiteral ();for {_fb ,_fe :=d .Token ();if _fe !=nil {return _g .Errorf ("\u0070a\u0072s\u0069\u006e\u0067\u0020\u0041\u006e\u0079\u003a\u0020\u0025\u0073",_fe );};if _ae ,_b :=_fb .(_a .EndElement );_b &&_ae .Name ==start .Name {break ;};};return nil ;};type ElementContainer struct{Choice []*ElementsGroupChoice ;};

// ValidateWithPath validates the ElementsGroup and its children, prefixing error messages with path
func (_ef *ElementsGroup )ValidateWithPath (path string )error {for _fa ,_ce :=range _ef .Choice {if _cef :=_ce .ValidateWithPath (_g .Sprintf ("\u0025\u0073\u002f\u0043\u0068\u006f\u0069\u0063\u0065\u005b\u0025\u0064\u005d",path ,_fa ));_cef !=nil {return _cef ;};};return nil ;};

// ValidateWithPath validates the ElementsGroupChoice and its children, prefixing error messages with path
func (_cb *ElementsGroupChoice )ValidateWithPath (path string )error {for _dd ,_dcg :=range _cb .Any {if _gfga :=_dcg .ValidateWithPath (_g .Sprintf ("\u0025\u0073\u002f\u0041\u006e\u0079\u005b\u0025\u0064\u005d",path ,_dd ));_gfga !=nil {return _gfga ;};};return nil ;};func (_dc *Any )MarshalXML (e *_a .Encoder ,start _a .StartElement )error {return _dc .SimpleLiteral .MarshalXML (e ,start );};

// Validate validates the Any and its children
func (_c *Any )Validate ()error {return _c .ValidateWithPath ("\u0041\u006e\u0079")};

// Validate validates the ElementsGroupChoice and its children
func (_cg *ElementsGroupChoice )Validate ()error {return _cg .ValidateWithPath ("\u0045\u006c\u0065\u006den\u0074\u0073\u0047\u0072\u006f\u0075\u0070\u0043\u0068\u006f\u0069\u0063\u0065");};func (_egg *SimpleLiteral )MarshalXML (e *_a .Encoder ,start _a .StartElement )error {e .EncodeToken (start );e .EncodeToken (_a .EndElement {Name :start .Name });return nil ;};func NewElementsGroup ()*ElementsGroup {_cdb :=&ElementsGroup {};return _cdb };

// ValidateWithPath validates the Any and its children, prefixing error messages with path
func (_bf *Any )ValidateWithPath (path string )error {if _ge :=_bf .SimpleLiteral .ValidateWithPath (path );_ge !=nil {return _ge ;};return nil ;};type ElementsGroup struct{Choice []*ElementsGroupChoice ;};func (_bge *SimpleLiteral )UnmarshalXML (d *_a .Decoder ,start _a .StartElement )error {for {_egf ,_db :=d .Token ();if _db !=nil {return _g .Errorf ("\u0070a\u0072\u0073\u0069\u006eg\u0020\u0053\u0069\u006d\u0070l\u0065L\u0069t\u0065\u0072\u0061\u006c\u003a\u0020\u0025s",_db );};if _agf ,_aea :=_egf .(_a .EndElement );_aea &&_agf .Name ==start .Name {break ;};};return nil ;};func NewAny ()*Any {_gf :=&Any {};_gf .SimpleLiteral =*NewSimpleLiteral ();return _gf };func (_ac *ElementsGroup )MarshalXML (e *_a .Encoder ,start _a .StartElement )error {if _ac .Choice !=nil {for _ ,_fc :=range _ac .Choice {_fc .MarshalXML (e ,_a .StartElement {});};};return nil ;};

// ValidateWithPath validates the SimpleLiteral and its children, prefixing error messages with path
func (_ec *SimpleLiteral )ValidateWithPath (path string )error {return nil };func (_gfg *ElementContainer )MarshalXML (e *_a .Encoder ,start _a .StartElement )error {start .Name .Local ="\u0065\u006ce\u006d\u0065\u006et\u0043\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072";e .EncodeToken (start );if _gfg .Choice !=nil {for _ ,_cd :=range _gfg .Choice {_cd .MarshalXML (e ,_a .StartElement {});};};e .EncodeToken (_a .EndElement {Name :start .Name });return nil ;};

// Validate validates the ElementContainer and its children
func (_fd *ElementContainer )Validate ()error {return _fd .ValidateWithPath ("\u0045\u006ce\u006d\u0065\u006et\u0043\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072");};func (_ccd *ElementsGroup )UnmarshalXML (d *_a .Decoder ,start _a .StartElement )error {_fec :for {_dcd ,_cde :=d .Token ();if _cde !=nil {return _cde ;};switch _gfc :=_dcd .(type ){case _a .StartElement :switch _gfc .Name {case _a .Name {Space :"\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0072\u0067/\u0064c\u002f\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0073\u002f\u0031\u002e\u0031\u002f",Local :"\u0061\u006e\u0079"}:_fg :=NewElementsGroupChoice ();if _dcf :=d .DecodeElement (&_fg .Any ,&_gfc );_dcf !=nil {return _dcf ;};_ccd .Choice =append (_ccd .Choice ,_fg );default:_gd .Log .Debug ("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0045\u006c\u0065\u006de\u006e\u0074\u0073\u0047\u0072\u006f\u0075\u0070 \u0025\u0076",_gfc .Name );if _dec :=d .Skip ();_dec !=nil {return _dec ;};};case _a .EndElement :break _fec ;case _a .CharData :};};return nil ;};type Any struct{SimpleLiteral };func NewElementContainer ()*ElementContainer {_ea :=&ElementContainer {};return _ea };type SimpleLiteral struct{};func (_efa *ElementsGroupChoice )UnmarshalXML (d *_a .Decoder ,start _a .StartElement )error {_afa :for {_da ,_ca :=d .Token ();if _ca !=nil {return _ca ;};switch _gcc :=_da .(type ){case _a .StartElement :switch _gcc .Name {case _a .Name {Space :"\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0072\u0067/\u0064c\u002f\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0073\u002f\u0031\u002e\u0031\u002f",Local :"\u0061\u006e\u0079"}:_dea :=NewAny ();if _bff :=d .DecodeElement (_dea ,&_gcc );_bff !=nil {return _bff ;};_efa .Any =append (_efa .Any ,_dea );default:_gd .Log .Debug ("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020o\u006e\u0020\u0045\u006c\u0065\u006d\u0065\u006e\u0074\u0073\u0047\u0072ou\u0070\u0043\u0068\u006f\u0069\u0063\u0065\u0020\u0025\u0076",_gcc .Name );if _gec :=d .Skip ();_gec !=nil {return _gec ;};};case _a .EndElement :break _afa ;case _a .CharData :};};return nil ;};func init (){_d .RegisterConstructor ("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0072\u0067/\u0064c\u002f\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0073\u002f\u0031\u002e\u0031\u002f","\u0053\u0069\u006d\u0070\u006c\u0065\u004c\u0069\u0074\u0065\u0072\u0061\u006c",NewSimpleLiteral );_d .RegisterConstructor ("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0072\u0067/\u0064c\u002f\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0073\u002f\u0031\u002e\u0031\u002f","\u0065\u006ce\u006d\u0065\u006et\u0043\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072",NewElementContainer );_d .RegisterConstructor ("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0072\u0067/\u0064c\u002f\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0073\u002f\u0031\u002e\u0031\u002f","\u0061\u006e\u0079",NewAny );_d .RegisterConstructor ("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0072\u0067/\u0064c\u002f\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0073\u002f\u0031\u002e\u0031\u002f","\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0073\u0047\u0072\u006f\u0075\u0070",NewElementsGroup );};