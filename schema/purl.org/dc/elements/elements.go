//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package elements ;import (_a "encoding/xml";_bd "fmt";_gf "github.com/unidoc/unioffice";_g "github.com/unidoc/unioffice/common/logger";);

// Validate validates the ElementsGroup and its children
func (_ce *ElementsGroup )Validate ()error {return _ce .ValidateWithPath ("\u0045\u006c\u0065\u006d\u0065\u006e\u0074\u0073\u0047\u0072\u006f\u0075\u0070");};func (_de *ElementsGroup )MarshalXML (e *_a .Encoder ,start _a .StartElement )error {if _de .Choice !=nil {for _ ,_ec :=range _de .Choice {_ec .MarshalXML (e ,_a .StartElement {});};};return nil ;};type ElementsGroup struct{Choice []*ElementsGroupChoice ;};

// Validate validates the SimpleLiteral and its children
func (_cb *SimpleLiteral )Validate ()error {return _cb .ValidateWithPath ("\u0053\u0069\u006d\u0070\u006c\u0065\u004c\u0069\u0074\u0065\u0072\u0061\u006c");};type Any struct{SimpleLiteral };func (_ag *ElementContainer )MarshalXML (e *_a .Encoder ,start _a .StartElement )error {start .Name .Local ="\u0065\u006ce\u006d\u0065\u006et\u0043\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072";e .EncodeToken (start );if _ag .Choice !=nil {for _ ,_f :=range _ag .Choice {_f .MarshalXML (e ,_a .StartElement {});};};e .EncodeToken (_a .EndElement {Name :start .Name });return nil ;};

// Validate validates the ElementsGroupChoice and its children
func (_fdb *ElementsGroupChoice )Validate ()error {return _fdb .ValidateWithPath ("\u0045\u006c\u0065\u006den\u0074\u0073\u0047\u0072\u006f\u0075\u0070\u0043\u0068\u006f\u0069\u0063\u0065");};func NewElementsGroup ()*ElementsGroup {_faa :=&ElementsGroup {};return _faa };func (_eb *ElementsGroupChoice )UnmarshalXML (d *_a .Decoder ,start _a .StartElement )error {_ged :for {_bg ,_abb :=d .Token ();if _abb !=nil {return _abb ;};switch _egd :=_bg .(type ){case _a .StartElement :switch _egd .Name {case _a .Name {Space :"\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0072\u0067/\u0064c\u002f\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0073\u002f\u0031\u002e\u0031\u002f",Local :"\u0061\u006e\u0079"}:_fcf :=NewAny ();if _bgc :=d .DecodeElement (_fcf ,&_egd );_bgc !=nil {return _bgc ;};_eb .Any =append (_eb .Any ,_fcf );default:_g .Log .Debug ("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020o\u006e\u0020\u0045\u006c\u0065\u006d\u0065\u006e\u0074\u0073\u0047\u0072ou\u0070\u0043\u0068\u006f\u0069\u0063\u0065\u0020\u0025\u0076",_egd .Name );if _dcc :=d .Skip ();_dcc !=nil {return _dcc ;};};case _a .EndElement :break _ged ;case _a .CharData :};};return nil ;};func NewAny ()*Any {_aa :=&Any {};_aa .SimpleLiteral =*NewSimpleLiteral ();return _aa };type SimpleLiteral struct{};

// ValidateWithPath validates the SimpleLiteral and its children, prefixing error messages with path
func (_ecc *SimpleLiteral )ValidateWithPath (path string )error {return nil };

// Validate validates the Any and its children
func (_bdb *Any )Validate ()error {return _bdb .ValidateWithPath ("\u0041\u006e\u0079")};type ElementsGroupChoice struct{Any []*Any ;};func (_adff *SimpleLiteral )UnmarshalXML (d *_a .Decoder ,start _a .StartElement )error {for {_acb ,_eab :=d .Token ();if _eab !=nil {return _bd .Errorf ("\u0070a\u0072\u0073\u0069\u006eg\u0020\u0053\u0069\u006d\u0070l\u0065L\u0069t\u0065\u0072\u0061\u006c\u003a\u0020\u0025s",_eab );};if _fcff ,_ccb :=_acb .(_a .EndElement );_ccb &&_fcff .Name ==start .Name {break ;};};return nil ;};func (_gc *ElementsGroup )UnmarshalXML (d *_a .Decoder ,start _a .StartElement )error {_ca :for {_gcf ,_eg :=d .Token ();if _eg !=nil {return _eg ;};switch _ff :=_gcf .(type ){case _a .StartElement :switch _ff .Name {case _a .Name {Space :"\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0072\u0067/\u0064c\u002f\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0073\u002f\u0031\u002e\u0031\u002f",Local :"\u0061\u006e\u0079"}:_dc :=NewElementsGroupChoice ();if _cac :=d .DecodeElement (&_dc .Any ,&_ff );_cac !=nil {return _cac ;};_gc .Choice =append (_gc .Choice ,_dc );default:_g .Log .Debug ("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0045\u006c\u0065\u006de\u006e\u0074\u0073\u0047\u0072\u006f\u0075\u0070 \u0025\u0076",_ff .Name );if _cfe :=d .Skip ();_cfe !=nil {return _cfe ;};};case _a .EndElement :break _ca ;case _a .CharData :};};return nil ;};func NewElementContainer ()*ElementContainer {_cf :=&ElementContainer {};return _cf };

// ValidateWithPath validates the ElementsGroup and its children, prefixing error messages with path
func (_fb *ElementsGroup )ValidateWithPath (path string )error {for _gg ,_df :=range _fb .Choice {if _gfc :=_df .ValidateWithPath (_bd .Sprintf ("\u0025\u0073\u002f\u0043\u0068\u006f\u0069\u0063\u0065\u005b\u0025\u0064\u005d",path ,_gg ));_gfc !=nil {return _gfc ;};};return nil ;};func (_da *ElementContainer )UnmarshalXML (d *_a .Decoder ,start _a .StartElement )error {_dda :for {_db ,_ad :=d .Token ();if _ad !=nil {return _ad ;};switch _fc :=_db .(type ){case _a .StartElement :switch _fc .Name {case _a .Name {Space :"\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0072\u0067/\u0064c\u002f\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0073\u002f\u0031\u002e\u0031\u002f",Local :"\u0061\u006e\u0079"}:_cff :=NewElementsGroupChoice ();if _bed :=d .DecodeElement (&_cff .Any ,&_fc );_bed !=nil {return _bed ;};_da .Choice =append (_da .Choice ,_cff );default:_g .Log .Debug ("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0045\u006c\u0065\u006d\u0065\u006e\u0074\u0043\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072\u0020\u0025v",_fc .Name );if _ge :=d .Skip ();_ge !=nil {return _ge ;};};case _a .EndElement :break _dda ;case _a .CharData :};};return nil ;};func (_d *Any )UnmarshalXML (d *_a .Decoder ,start _a .StartElement )error {_d .SimpleLiteral =*NewSimpleLiteral ();for {_gfd ,_bc :=d .Token ();if _bc !=nil {return _bd .Errorf ("\u0070a\u0072s\u0069\u006e\u0067\u0020\u0041\u006e\u0079\u003a\u0020\u0025\u0073",_bc );};if _e ,_dg :=_gfd .(_a .EndElement );_dg &&_e .Name ==start .Name {break ;};};return nil ;};

// ValidateWithPath validates the ElementsGroupChoice and its children, prefixing error messages with path
func (_fe *ElementsGroupChoice )ValidateWithPath (path string )error {for _gce ,_fae :=range _fe .Any {if _cc :=_fae .ValidateWithPath (_bd .Sprintf ("\u0025\u0073\u002f\u0041\u006e\u0079\u005b\u0025\u0064\u005d",path ,_gce ));_cc !=nil {return _cc ;};};return nil ;};func (_ecf *ElementsGroupChoice )MarshalXML (e *_a .Encoder ,start _a .StartElement )error {if _ecf .Any !=nil {_ab :=_a .StartElement {Name :_a .Name {Local :"\u0064\u0063\u003a\u0061\u006e\u0079"}};for _ ,_cgb :=range _ecf .Any {e .EncodeElement (_cgb ,_ab );};};return nil ;};type ElementContainer struct{Choice []*ElementsGroupChoice ;};

// ValidateWithPath validates the Any and its children, prefixing error messages with path
func (_c *Any )ValidateWithPath (path string )error {if _ea :=_c .SimpleLiteral .ValidateWithPath (path );_ea !=nil {return _ea ;};return nil ;};func NewSimpleLiteral ()*SimpleLiteral {_ee :=&SimpleLiteral {};return _ee };func (_be *Any )MarshalXML (e *_a .Encoder ,start _a .StartElement )error {return _be .SimpleLiteral .MarshalXML (e ,start );};func NewElementsGroupChoice ()*ElementsGroupChoice {_ege :=&ElementsGroupChoice {};return _ege };func (_dge *SimpleLiteral )MarshalXML (e *_a .Encoder ,start _a .StartElement )error {e .EncodeToken (start );e .EncodeToken (_a .EndElement {Name :start .Name });return nil ;};

// Validate validates the ElementContainer and its children
func (_fd *ElementContainer )Validate ()error {return _fd .ValidateWithPath ("\u0045\u006ce\u006d\u0065\u006et\u0043\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072");};

// ValidateWithPath validates the ElementContainer and its children, prefixing error messages with path
func (_beda *ElementContainer )ValidateWithPath (path string )error {for _cg ,_fa :=range _beda .Choice {if _ac :=_fa .ValidateWithPath (_bd .Sprintf ("\u0025\u0073\u002f\u0043\u0068\u006f\u0069\u0063\u0065\u005b\u0025\u0064\u005d",path ,_cg ));_ac !=nil {return _ac ;};};return nil ;};func init (){_gf .RegisterConstructor ("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0072\u0067/\u0064c\u002f\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0073\u002f\u0031\u002e\u0031\u002f","\u0053\u0069\u006d\u0070\u006c\u0065\u004c\u0069\u0074\u0065\u0072\u0061\u006c",NewSimpleLiteral );_gf .RegisterConstructor ("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0072\u0067/\u0064c\u002f\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0073\u002f\u0031\u002e\u0031\u002f","\u0065\u006ce\u006d\u0065\u006et\u0043\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072",NewElementContainer );_gf .RegisterConstructor ("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0072\u0067/\u0064c\u002f\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0073\u002f\u0031\u002e\u0031\u002f","\u0061\u006e\u0079",NewAny );_gf .RegisterConstructor ("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0072\u0067/\u0064c\u002f\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0073\u002f\u0031\u002e\u0031\u002f","\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0073\u0047\u0072\u006f\u0075\u0070",NewElementsGroup );};