//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package elements ;import (_b "encoding/xml";_c "fmt";_cd "github.com/unidoc/unioffice";_d "github.com/unidoc/unioffice/common/logger";);func (_bd *ElementContainer )MarshalXML (e *_b .Encoder ,start _b .StartElement )error {start .Name .Local ="\u0065\u006ce\u006d\u0065\u006et\u0043\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072";e .EncodeToken (start );if _bd .Choice !=nil {for _ ,_ga :=range _bd .Choice {_ga .MarshalXML (e ,_b .StartElement {});};};e .EncodeToken (_b .EndElement {Name :start .Name });return nil ;};type ElementsGroupChoice struct{Any []*Any ;};func (_bgc *ElementsGroup )MarshalXML (e *_b .Encoder ,start _b .StartElement )error {if _bgc .Choice !=nil {for _ ,_bgf :=range _bgc .Choice {_bgf .MarshalXML (e ,_b .StartElement {});};};return nil ;};

// Validate validates the SimpleLiteral and its children
func (_ad *SimpleLiteral )Validate ()error {return _ad .ValidateWithPath ("\u0053\u0069\u006d\u0070\u006c\u0065\u004c\u0069\u0074\u0065\u0072\u0061\u006c");};

// ValidateWithPath validates the ElementsGroup and its children, prefixing error messages with path
func (_eeb *ElementsGroup )ValidateWithPath (path string )error {for _ea ,_ff :=range _eeb .Choice {if _eeba :=_ff .ValidateWithPath (_c .Sprintf ("\u0025\u0073\u002f\u0043\u0068\u006f\u0069\u0063\u0065\u005b\u0025\u0064\u005d",path ,_ea ));_eeba !=nil {return _eeba ;};};return nil ;};func NewSimpleLiteral ()*SimpleLiteral {_dbb :=&SimpleLiteral {};return _dbb };func NewElementsGroup ()*ElementsGroup {_dg :=&ElementsGroup {};return _dg };type ElementContainer struct{Choice []*ElementsGroupChoice ;};func (_gdd *ElementsGroup )UnmarshalXML (d *_b .Decoder ,start _b .StartElement )error {_ac :for {_gdc ,_bda :=d .Token ();if _bda !=nil {return _bda ;};switch _gea :=_gdc .(type ){case _b .StartElement :switch _gea .Name {case _b .Name {Space :"\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0072\u0067/\u0064c\u002f\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0073\u002f\u0031\u002e\u0031\u002f",Local :"\u0061\u006e\u0079"}:_ee :=NewElementsGroupChoice ();if _cdc :=d .DecodeElement (&_ee .Any ,&_gea );_cdc !=nil {return _cdc ;};_gdd .Choice =append (_gdd .Choice ,_ee );default:_d .Log .Debug ("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0045\u006c\u0065\u006de\u006e\u0074\u0073\u0047\u0072\u006f\u0075\u0070 \u0025\u0076",_gea .Name );if _gfa :=d .Skip ();_gfa !=nil {return _gfa ;};};case _b .EndElement :break _ac ;case _b .CharData :};};return nil ;};func (_cf *ElementContainer )UnmarshalXML (d *_b .Decoder ,start _b .StartElement )error {_gdf :for {_bc ,_be :=d .Token ();if _be !=nil {return _be ;};switch _ed :=_bc .(type ){case _b .StartElement :switch _ed .Name {case _b .Name {Space :"\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0072\u0067/\u0064c\u002f\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0073\u002f\u0031\u002e\u0031\u002f",Local :"\u0061\u006e\u0079"}:_bfa :=NewElementsGroupChoice ();if _gae :=d .DecodeElement (&_bfa .Any ,&_ed );_gae !=nil {return _gae ;};_cf .Choice =append (_cf .Choice ,_bfa );default:_d .Log .Debug ("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0045\u006c\u0065\u006d\u0065\u006e\u0074\u0043\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072\u0020\u0025v",_ed .Name );if _fad :=d .Skip ();_fad !=nil {return _fad ;};};case _b .EndElement :break _gdf ;case _b .CharData :};};return nil ;};

// Validate validates the ElementsGroup and its children
func (_df *ElementsGroup )Validate ()error {return _df .ValidateWithPath ("\u0045\u006c\u0065\u006d\u0065\u006e\u0074\u0073\u0047\u0072\u006f\u0075\u0070");};

// Validate validates the ElementContainer and its children
func (_ab *ElementContainer )Validate ()error {return _ab .ValidateWithPath ("\u0045\u006ce\u006d\u0065\u006et\u0043\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072");};type SimpleLiteral struct{};type Any struct{SimpleLiteral };

// Validate validates the Any and its children
func (_f *Any )Validate ()error {return _f .ValidateWithPath ("\u0041\u006e\u0079")};func (_bgfb *ElementsGroupChoice )UnmarshalXML (d *_b .Decoder ,start _b .StartElement )error {_abe :for {_aee ,_cdf :=d .Token ();if _cdf !=nil {return _cdf ;};switch _fe :=_aee .(type ){case _b .StartElement :switch _fe .Name {case _b .Name {Space :"\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0072\u0067/\u0064c\u002f\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0073\u002f\u0031\u002e\u0031\u002f",Local :"\u0061\u006e\u0079"}:_gede :=NewAny ();if _gcg :=d .DecodeElement (_gede ,&_fe );_gcg !=nil {return _gcg ;};_bgfb .Any =append (_bgfb .Any ,_gede );default:_d .Log .Debug ("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020o\u006e\u0020\u0045\u006c\u0065\u006d\u0065\u006e\u0074\u0073\u0047\u0072ou\u0070\u0043\u0068\u006f\u0069\u0063\u0065\u0020\u0025\u0076",_fe .Name );if _af :=d .Skip ();_af !=nil {return _af ;};};case _b .EndElement :break _abe ;case _b .CharData :};};return nil ;};func (_ged *ElementsGroupChoice )MarshalXML (e *_b .Encoder ,start _b .StartElement )error {if _ged .Any !=nil {_gg :=_b .StartElement {Name :_b .Name {Local :"\u0064\u0063\u003a\u0061\u006e\u0079"}};for _ ,_ag :=range _ged .Any {e .EncodeElement (_ag ,_gg );};};return nil ;};func (_cae *SimpleLiteral )MarshalXML (e *_b .Encoder ,start _b .StartElement )error {e .EncodeToken (start );e .EncodeToken (_b .EndElement {Name :start .Name });return nil ;};func (_ca *Any )MarshalXML (e *_b .Encoder ,start _b .StartElement )error {return _ca .SimpleLiteral .MarshalXML (e ,start );};type ElementsGroup struct{Choice []*ElementsGroupChoice ;};

// ValidateWithPath validates the SimpleLiteral and its children, prefixing error messages with path
func (_fda *SimpleLiteral )ValidateWithPath (path string )error {return nil };

// Validate validates the ElementsGroupChoice and its children
func (_db *ElementsGroupChoice )Validate ()error {return _db .ValidateWithPath ("\u0045\u006c\u0065\u006den\u0074\u0073\u0047\u0072\u006f\u0075\u0070\u0043\u0068\u006f\u0069\u0063\u0065");};func (_agc *SimpleLiteral )UnmarshalXML (d *_b .Decoder ,start _b .StartElement )error {for {_deg ,_aec :=d .Token ();if _aec !=nil {return _c .Errorf ("\u0070a\u0072\u0073\u0069\u006eg\u0020\u0053\u0069\u006d\u0070l\u0065L\u0069t\u0065\u0072\u0061\u006c\u003a\u0020\u0025s",_aec );};if _ggg ,_cc :=_deg .(_b .EndElement );_cc &&_ggg .Name ==start .Name {break ;};};return nil ;};

// ValidateWithPath validates the ElementsGroupChoice and its children, prefixing error messages with path
func (_dcc *ElementsGroupChoice )ValidateWithPath (path string )error {for _ce ,_bb :=range _dcc .Any {if _aed :=_bb .ValidateWithPath (_c .Sprintf ("\u0025\u0073\u002f\u0041\u006e\u0079\u005b\u0025\u0064\u005d",path ,_ce ));_aed !=nil {return _aed ;};};return nil ;};func NewElementContainer ()*ElementContainer {_bf :=&ElementContainer {};return _bf };func NewAny ()*Any {_gc :=&Any {};_gc .SimpleLiteral =*NewSimpleLiteral ();return _gc };func (_de *Any )UnmarshalXML (d *_b .Decoder ,start _b .StartElement )error {_de .SimpleLiteral =*NewSimpleLiteral ();for {_gb ,_a :=d .Token ();if _a !=nil {return _c .Errorf ("\u0070a\u0072s\u0069\u006e\u0067\u0020\u0041\u006e\u0079\u003a\u0020\u0025\u0073",_a );};if _gd ,_gf :=_gb .(_b .EndElement );_gf &&_gd .Name ==start .Name {break ;};};return nil ;};

// ValidateWithPath validates the ElementContainer and its children, prefixing error messages with path
func (_gfg *ElementContainer )ValidateWithPath (path string )error {for _dc ,_ded :=range _gfg .Choice {if _ae :=_ded .ValidateWithPath (_c .Sprintf ("\u0025\u0073\u002f\u0043\u0068\u006f\u0069\u0063\u0065\u005b\u0025\u0064\u005d",path ,_dc ));_ae !=nil {return _ae ;};};return nil ;};

// ValidateWithPath validates the Any and its children, prefixing error messages with path
func (_fa *Any )ValidateWithPath (path string )error {if _e :=_fa .SimpleLiteral .ValidateWithPath (path );_e !=nil {return _e ;};return nil ;};func NewElementsGroupChoice ()*ElementsGroupChoice {_fd :=&ElementsGroupChoice {};return _fd };func init (){_cd .RegisterConstructor ("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0072\u0067/\u0064c\u002f\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0073\u002f\u0031\u002e\u0031\u002f","\u0053\u0069\u006d\u0070\u006c\u0065\u004c\u0069\u0074\u0065\u0072\u0061\u006c",NewSimpleLiteral );_cd .RegisterConstructor ("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0072\u0067/\u0064c\u002f\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0073\u002f\u0031\u002e\u0031\u002f","\u0065\u006ce\u006d\u0065\u006et\u0043\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072",NewElementContainer );_cd .RegisterConstructor ("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0072\u0067/\u0064c\u002f\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0073\u002f\u0031\u002e\u0031\u002f","\u0061\u006e\u0079",NewAny );_cd .RegisterConstructor ("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0072\u0067/\u0064c\u002f\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0073\u002f\u0031\u002e\u0031\u002f","\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0073\u0047\u0072\u006f\u0075\u0070",NewElementsGroup );};