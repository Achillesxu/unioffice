//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package elements ;import (_d "encoding/xml";_f "fmt";_b "github.com/unidoc/unioffice";_a "github.com/unidoc/unioffice/common/logger";);func NewElementsGroup ()*ElementsGroup {_gg :=&ElementsGroup {};return _gg };func (_ed *Any )MarshalXML (e *_d .Encoder ,start _d .StartElement )error {return _ed .SimpleLiteral .MarshalXML (e ,start );};

// Validate validates the SimpleLiteral and its children
func (_cca *SimpleLiteral )Validate ()error {return _cca .ValidateWithPath ("\u0053\u0069\u006d\u0070\u006c\u0065\u004c\u0069\u0074\u0065\u0072\u0061\u006c");};func NewAny ()*Any {_ad :=&Any {};_ad .SimpleLiteral =*NewSimpleLiteral ();return _ad };

// ValidateWithPath validates the Any and its children, prefixing error messages with path
func (_ec *Any )ValidateWithPath (path string )error {if _bf :=_ec .SimpleLiteral .ValidateWithPath (path );_bf !=nil {return _bf ;};return nil ;};func (_fde *ElementContainer )UnmarshalXML (d *_d .Decoder ,start _d .StartElement )error {_ag :for {_be ,_fc :=d .Token ();if _fc !=nil {return _fc ;};switch _bfd :=_be .(type ){case _d .StartElement :switch _bfd .Name {case _d .Name {Space :"\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0072\u0067/\u0064c\u002f\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0073\u002f\u0031\u002e\u0031\u002f",Local :"\u0061\u006e\u0079"}:_ac :=NewElementsGroupChoice ();if _gf :=d .DecodeElement (&_ac .Any ,&_bfd );_gf !=nil {return _gf ;};_fde .Choice =append (_fde .Choice ,_ac );default:_a .Log .Debug ("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0045\u006c\u0065\u006d\u0065\u006e\u0074\u0043\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072\u0020\u0025v",_bfd .Name );if _bfe :=d .Skip ();_bfe !=nil {return _bfe ;};};case _d .EndElement :break _ag ;case _d .CharData :};};return nil ;};func (_fca *ElementsGroup )UnmarshalXML (d *_d .Decoder ,start _d .StartElement )error {_ee :for {_fg ,_eb :=d .Token ();if _eb !=nil {return _eb ;};switch _db :=_fg .(type ){case _d .StartElement :switch _db .Name {case _d .Name {Space :"\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0072\u0067/\u0064c\u002f\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0073\u002f\u0031\u002e\u0031\u002f",Local :"\u0061\u006e\u0079"}:_ccg :=NewElementsGroupChoice ();if _fdg :=d .DecodeElement (&_ccg .Any ,&_db );_fdg !=nil {return _fdg ;};_fca .Choice =append (_fca .Choice ,_ccg );default:_a .Log .Debug ("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0045\u006c\u0065\u006de\u006e\u0074\u0073\u0047\u0072\u006f\u0075\u0070 \u0025\u0076",_db .Name );if _ff :=d .Skip ();_ff !=nil {return _ff ;};};case _d .EndElement :break _ee ;case _d .CharData :};};return nil ;};

// Validate validates the ElementContainer and its children
func (_ecd *ElementContainer )Validate ()error {return _ecd .ValidateWithPath ("\u0045\u006ce\u006d\u0065\u006et\u0043\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072");};func (_gfc *ElementsGroupChoice )MarshalXML (e *_d .Encoder ,start _d .StartElement )error {if _gfc .Any !=nil {_ecb :=_d .StartElement {Name :_d .Name {Local :"\u0064\u0063\u003a\u0061\u006e\u0079"}};for _ ,_eef :=range _gfc .Any {e .EncodeElement (_eef ,_ecb );};};return nil ;};func (_ceg *ElementsGroupChoice )UnmarshalXML (d *_d .Decoder ,start _d .StartElement )error {_eda :for {_geb ,_eca :=d .Token ();if _eca !=nil {return _eca ;};switch _dfg :=_geb .(type ){case _d .StartElement :switch _dfg .Name {case _d .Name {Space :"\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0072\u0067/\u0064c\u002f\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0073\u002f\u0031\u002e\u0031\u002f",Local :"\u0061\u006e\u0079"}:_eea :=NewAny ();if _cg :=d .DecodeElement (_eea ,&_dfg );_cg !=nil {return _cg ;};_ceg .Any =append (_ceg .Any ,_eea );default:_a .Log .Debug ("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020o\u006e\u0020\u0045\u006c\u0065\u006d\u0065\u006e\u0074\u0073\u0047\u0072ou\u0070\u0043\u0068\u006f\u0069\u0063\u0065\u0020\u0025\u0076",_dfg .Name );if _ca :=d .Skip ();_ca !=nil {return _ca ;};};case _d .EndElement :break _eda ;case _d .CharData :};};return nil ;};

// Validate validates the Any and its children
func (_fd *Any )Validate ()error {return _fd .ValidateWithPath ("\u0041\u006e\u0079")};func (_eff *SimpleLiteral )UnmarshalXML (d *_d .Decoder ,start _d .StartElement )error {for {_ga ,_ced :=d .Token ();if _ced !=nil {return _f .Errorf ("\u0070a\u0072\u0073\u0069\u006eg\u0020\u0053\u0069\u006d\u0070l\u0065L\u0069t\u0065\u0072\u0061\u006c\u003a\u0020\u0025s",_ced );};if _bd ,_dfgd :=_ga .(_d .EndElement );_dfgd &&_bd .Name ==start .Name {break ;};};return nil ;};func NewElementsGroupChoice ()*ElementsGroupChoice {_ef :=&ElementsGroupChoice {};return _ef };func (_cc *ElementsGroup )MarshalXML (e *_d .Encoder ,start _d .StartElement )error {if _cc .Choice !=nil {for _ ,_adb :=range _cc .Choice {_adb .MarshalXML (e ,_d .StartElement {});};};return nil ;};

// Validate validates the ElementsGroup and its children
func (_dda *ElementsGroup )Validate ()error {return _dda .ValidateWithPath ("\u0045\u006c\u0065\u006d\u0065\u006e\u0074\u0073\u0047\u0072\u006f\u0075\u0070");};func (_g *ElementContainer )MarshalXML (e *_d .Encoder ,start _d .StartElement )error {start .Name .Local ="\u0065\u006ce\u006d\u0065\u006et\u0043\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072";e .EncodeToken (start );if _g .Choice !=nil {for _ ,_c :=range _g .Choice {_c .MarshalXML (e ,_d .StartElement {});};};e .EncodeToken (_d .EndElement {Name :start .Name });return nil ;};func (_ba *Any )UnmarshalXML (d *_d .Decoder ,start _d .StartElement )error {_ba .SimpleLiteral =*NewSimpleLiteral ();for {_da ,_ede :=d .Token ();if _ede !=nil {return _f .Errorf ("\u0070a\u0072s\u0069\u006e\u0067\u0020\u0041\u006e\u0079\u003a\u0020\u0025\u0073",_ede );};if _dd ,_adc :=_da .(_d .EndElement );_adc &&_dd .Name ==start .Name {break ;};};return nil ;};func NewSimpleLiteral ()*SimpleLiteral {_dfe :=&SimpleLiteral {};return _dfe };type ElementsGroupChoice struct{Any []*Any ;};type SimpleLiteral struct{};

// ValidateWithPath validates the SimpleLiteral and its children, prefixing error messages with path
func (_dbb *SimpleLiteral )ValidateWithPath (path string )error {return nil };

// Validate validates the ElementsGroupChoice and its children
func (_ab *ElementsGroupChoice )Validate ()error {return _ab .ValidateWithPath ("\u0045\u006c\u0065\u006den\u0074\u0073\u0047\u0072\u006f\u0075\u0070\u0043\u0068\u006f\u0069\u0063\u0065");};type ElementsGroup struct{Choice []*ElementsGroupChoice ;};type Any struct{SimpleLiteral };type ElementContainer struct{Choice []*ElementsGroupChoice ;};

// ValidateWithPath validates the ElementsGroupChoice and its children, prefixing error messages with path
func (_dce *ElementsGroupChoice )ValidateWithPath (path string )error {for _baa ,_fdd :=range _dce .Any {if _egd :=_fdd .ValidateWithPath (_f .Sprintf ("\u0025\u0073\u002f\u0041\u006e\u0079\u005b\u0025\u0064\u005d",path ,_baa ));_egd !=nil {return _egd ;};};return nil ;};

// ValidateWithPath validates the ElementContainer and its children, prefixing error messages with path
func (_cb *ElementContainer )ValidateWithPath (path string )error {for _ce ,_eg :=range _cb .Choice {if _fcf :=_eg .ValidateWithPath (_f .Sprintf ("\u0025\u0073\u002f\u0043\u0068\u006f\u0069\u0063\u0065\u005b\u0025\u0064\u005d",path ,_ce ));_fcf !=nil {return _fcf ;};};return nil ;};func NewElementContainer ()*ElementContainer {_bb :=&ElementContainer {};return _bb };

// ValidateWithPath validates the ElementsGroup and its children, prefixing error messages with path
func (_df *ElementsGroup )ValidateWithPath (path string )error {for _dg ,_cbg :=range _df .Choice {if _dc :=_cbg .ValidateWithPath (_f .Sprintf ("\u0025\u0073\u002f\u0043\u0068\u006f\u0069\u0063\u0065\u005b\u0025\u0064\u005d",path ,_dg ));_dc !=nil {return _dc ;};};return nil ;};func (_fa *SimpleLiteral )MarshalXML (e *_d .Encoder ,start _d .StartElement )error {e .EncodeToken (start );e .EncodeToken (_d .EndElement {Name :start .Name });return nil ;};func init (){_b .RegisterConstructor ("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0072\u0067/\u0064c\u002f\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0073\u002f\u0031\u002e\u0031\u002f","\u0053\u0069\u006d\u0070\u006c\u0065\u004c\u0069\u0074\u0065\u0072\u0061\u006c",NewSimpleLiteral );_b .RegisterConstructor ("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0072\u0067/\u0064c\u002f\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0073\u002f\u0031\u002e\u0031\u002f","\u0065\u006ce\u006d\u0065\u006et\u0043\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072",NewElementContainer );_b .RegisterConstructor ("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0072\u0067/\u0064c\u002f\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0073\u002f\u0031\u002e\u0031\u002f","\u0061\u006e\u0079",NewAny );_b .RegisterConstructor ("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0072\u0067/\u0064c\u002f\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0073\u002f\u0031\u002e\u0031\u002f","\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0073\u0047\u0072\u006f\u0075\u0070",NewElementsGroup );};