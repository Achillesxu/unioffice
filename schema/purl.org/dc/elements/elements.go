//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package elements ;import (_f "encoding/xml";_bb "fmt";_ba "github.com/unidoc/unioffice";_e "github.com/unidoc/unioffice/common/logger";);type SimpleLiteral struct{};type Any struct{SimpleLiteral };type ElementsGroupChoice struct{Any []*Any ;};func NewElementContainer ()*ElementContainer {_cg :=&ElementContainer {};return _cg };

// ValidateWithPath validates the ElementContainer and its children, prefixing error messages with path
func (_gc *ElementContainer )ValidateWithPath (path string )error {for _bf ,_gb :=range _gc .Choice {if _fc :=_gb .ValidateWithPath (_bb .Sprintf ("\u0025\u0073\u002f\u0043\u0068\u006f\u0069\u0063\u0065\u005b\u0025\u0064\u005d",path ,_bf ));_fc !=nil {return _fc ;};};return nil ;};func (_ea *Any )MarshalXML (e *_f .Encoder ,start _f .StartElement )error {return _ea .SimpleLiteral .MarshalXML (e ,start );};

// ValidateWithPath validates the Any and its children, prefixing error messages with path
func (_bc *Any )ValidateWithPath (path string )error {if _fa :=_bc .SimpleLiteral .ValidateWithPath (path );_fa !=nil {return _fa ;};return nil ;};

// ValidateWithPath validates the SimpleLiteral and its children, prefixing error messages with path
func (_eee *SimpleLiteral )ValidateWithPath (path string )error {return nil };

// ValidateWithPath validates the ElementsGroupChoice and its children, prefixing error messages with path
func (_dac *ElementsGroupChoice )ValidateWithPath (path string )error {for _bcc ,_gcge :=range _dac .Any {if _gdb :=_gcge .ValidateWithPath (_bb .Sprintf ("\u0025\u0073\u002f\u0041\u006e\u0079\u005b\u0025\u0064\u005d",path ,_bcc ));_gdb !=nil {return _gdb ;};};return nil ;};func (_edg *SimpleLiteral )UnmarshalXML (d *_f .Decoder ,start _f .StartElement )error {for {_fbc ,_fcc :=d .Token ();if _fcc !=nil {return _bb .Errorf ("\u0070a\u0072\u0073\u0069\u006eg\u0020\u0053\u0069\u006d\u0070l\u0065L\u0069t\u0065\u0072\u0061\u006c\u003a\u0020\u0025s",_fcc );};if _cfg ,_ddc :=_fbc .(_f .EndElement );_ddc &&_cfg .Name ==start .Name {break ;};};return nil ;};

// Validate validates the ElementsGroupChoice and its children
func (_def *ElementsGroupChoice )Validate ()error {return _def .ValidateWithPath ("\u0045\u006c\u0065\u006den\u0074\u0073\u0047\u0072\u006f\u0075\u0070\u0043\u0068\u006f\u0069\u0063\u0065");};

// Validate validates the ElementContainer and its children
func (_egg *ElementContainer )Validate ()error {return _egg .ValidateWithPath ("\u0045\u006ce\u006d\u0065\u006et\u0043\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072");};func (_de *ElementsGroup )MarshalXML (e *_f .Encoder ,start _f .StartElement )error {if _de .Choice !=nil {for _ ,_gg :=range _de .Choice {_gg .MarshalXML (e ,_f .StartElement {});};};return nil ;};func NewSimpleLiteral ()*SimpleLiteral {_efb :=&SimpleLiteral {};return _efb };func (_fg *ElementsGroup )UnmarshalXML (d *_f .Decoder ,start _f .StartElement )error {_cc :for {_ae ,_cdc :=d .Token ();if _cdc !=nil {return _cdc ;};switch _bcf :=_ae .(type ){case _f .StartElement :switch _bcf .Name {case _f .Name {Space :"\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0072\u0067/\u0064c\u002f\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0073\u002f\u0031\u002e\u0031\u002f",Local :"\u0061\u006e\u0079"}:_gcb :=NewElementsGroupChoice ();if _da :=d .DecodeElement (&_gcb .Any ,&_bcf );_da !=nil {return _da ;};_fg .Choice =append (_fg .Choice ,_gcb );default:_e .Log .Debug ("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0045\u006c\u0065\u006de\u006e\u0074\u0073\u0047\u0072\u006f\u0075\u0070 \u0025\u0076",_bcf .Name );if _cee :=d .Skip ();_cee !=nil {return _cee ;};};case _f .EndElement :break _cc ;case _f .CharData :};};return nil ;};func (_dfc *SimpleLiteral )MarshalXML (e *_f .Encoder ,start _f .StartElement )error {e .EncodeToken (start );e .EncodeToken (_f .EndElement {Name :start .Name });return nil ;};func (_fe *ElementContainer )MarshalXML (e *_f .Encoder ,start _f .StartElement )error {start .Name .Local ="\u0065\u006ce\u006d\u0065\u006et\u0043\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072";e .EncodeToken (start );if _fe .Choice !=nil {for _ ,_ed :=range _fe .Choice {_ed .MarshalXML (e ,_f .StartElement {});};};e .EncodeToken (_f .EndElement {Name :start .Name });return nil ;};func NewAny ()*Any {_d :=&Any {};_d .SimpleLiteral =*NewSimpleLiteral ();return _d };type ElementContainer struct{Choice []*ElementsGroupChoice ;};

// ValidateWithPath validates the ElementsGroup and its children, prefixing error messages with path
func (_gf *ElementsGroup )ValidateWithPath (path string )error {for _fab ,_gcg :=range _gf .Choice {if _ac :=_gcg .ValidateWithPath (_bb .Sprintf ("\u0025\u0073\u002f\u0043\u0068\u006f\u0069\u0063\u0065\u005b\u0025\u0064\u005d",path ,_fab ));_ac !=nil {return _ac ;};};return nil ;};func (_c *Any )UnmarshalXML (d *_f .Decoder ,start _f .StartElement )error {_c .SimpleLiteral =*NewSimpleLiteral ();for {_eb ,_ca :=d .Token ();if _ca !=nil {return _bb .Errorf ("\u0070a\u0072s\u0069\u006e\u0067\u0020\u0041\u006e\u0079\u003a\u0020\u0025\u0073",_ca );};if _fb ,_df :=_eb .(_f .EndElement );_df &&_fb .Name ==start .Name {break ;};};return nil ;};func NewElementsGroupChoice ()*ElementsGroupChoice {_gfb :=&ElementsGroupChoice {};return _gfb };type ElementsGroup struct{Choice []*ElementsGroupChoice ;};func (_efd *ElementsGroupChoice )MarshalXML (e *_f .Encoder ,start _f .StartElement )error {if _efd .Any !=nil {_cf :=_f .StartElement {Name :_f .Name {Local :"\u0064\u0063\u003a\u0061\u006e\u0079"}};for _ ,_gda :=range _efd .Any {e .EncodeElement (_gda ,_cf );};};return nil ;};

// Validate validates the SimpleLiteral and its children
func (_ee *SimpleLiteral )Validate ()error {return _ee .ValidateWithPath ("\u0053\u0069\u006d\u0070\u006c\u0065\u004c\u0069\u0074\u0065\u0072\u0061\u006c");};func NewElementsGroup ()*ElementsGroup {_dfa :=&ElementsGroup {};return _dfa };

// Validate validates the ElementsGroup and its children
func (_gd *ElementsGroup )Validate ()error {return _gd .ValidateWithPath ("\u0045\u006c\u0065\u006d\u0065\u006e\u0074\u0073\u0047\u0072\u006f\u0075\u0070");};func (_ef *ElementContainer )UnmarshalXML (d *_f .Decoder ,start _f .StartElement )error {_bd :for {_fd ,_cad :=d .Token ();if _cad !=nil {return _cad ;};switch _cd :=_fd .(type ){case _f .StartElement :switch _cd .Name {case _f .Name {Space :"\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0072\u0067/\u0064c\u002f\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0073\u002f\u0031\u002e\u0031\u002f",Local :"\u0061\u006e\u0079"}:_dfb :=NewElementsGroupChoice ();if _g :=d .DecodeElement (&_dfb .Any ,&_cd );_g !=nil {return _g ;};_ef .Choice =append (_ef .Choice ,_dfb );default:_e .Log .Debug ("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0045\u006c\u0065\u006d\u0065\u006e\u0074\u0043\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072\u0020\u0025v",_cd .Name );if _ce :=d .Skip ();_ce !=nil {return _ce ;};};case _f .EndElement :break _bd ;case _f .CharData :};};return nil ;};

// Validate validates the Any and its children
func (_eg *Any )Validate ()error {return _eg .ValidateWithPath ("\u0041\u006e\u0079")};func (_fcg *ElementsGroupChoice )UnmarshalXML (d *_f .Decoder ,start _f .StartElement )error {_gcc :for {_be ,_ada :=d .Token ();if _ada !=nil {return _ada ;};switch _cadd :=_be .(type ){case _f .StartElement :switch _cadd .Name {case _f .Name {Space :"\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0072\u0067/\u0064c\u002f\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0073\u002f\u0031\u002e\u0031\u002f",Local :"\u0061\u006e\u0079"}:_faa :=NewAny ();if _bfg :=d .DecodeElement (_faa ,&_cadd );_bfg !=nil {return _bfg ;};_fcg .Any =append (_fcg .Any ,_faa );default:_e .Log .Debug ("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020o\u006e\u0020\u0045\u006c\u0065\u006d\u0065\u006e\u0074\u0073\u0047\u0072ou\u0070\u0043\u0068\u006f\u0069\u0063\u0065\u0020\u0025\u0076",_cadd .Name );if _fef :=d .Skip ();_fef !=nil {return _fef ;};};case _f .EndElement :break _gcc ;case _f .CharData :};};return nil ;};func init (){_ba .RegisterConstructor ("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0072\u0067/\u0064c\u002f\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0073\u002f\u0031\u002e\u0031\u002f","\u0053\u0069\u006d\u0070\u006c\u0065\u004c\u0069\u0074\u0065\u0072\u0061\u006c",NewSimpleLiteral );_ba .RegisterConstructor ("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0072\u0067/\u0064c\u002f\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0073\u002f\u0031\u002e\u0031\u002f","\u0065\u006ce\u006d\u0065\u006et\u0043\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072",NewElementContainer );_ba .RegisterConstructor ("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0072\u0067/\u0064c\u002f\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0073\u002f\u0031\u002e\u0031\u002f","\u0061\u006e\u0079",NewAny );_ba .RegisterConstructor ("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0072\u0067/\u0064c\u002f\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0073\u002f\u0031\u002e\u0031\u002f","\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0073\u0047\u0072\u006f\u0075\u0070",NewElementsGroup );};