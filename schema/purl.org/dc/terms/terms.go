//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package terms ;import (_g "encoding/xml";_e "fmt";_b "github.com/unidoc/unioffice";_gf "github.com/unidoc/unioffice/common/logger";_ge "github.com/unidoc/unioffice/schema/purl.org/dc/elements";);func (_cgge *W3CDTF )MarshalXML (e *_g .Encoder ,start _g .StartElement )error {start .Name .Local ="\u0057\u0033\u0043\u0044\u0054\u0046";e .EncodeToken (start );e .EncodeToken (_g .EndElement {Name :start .Name });return nil ;};

// ValidateWithPath validates the ElementsAndRefinementsGroupChoice and its children, prefixing error messages with path
func (_aga *ElementsAndRefinementsGroupChoice )ValidateWithPath (path string )error {for _egfd ,_dge :=range _aga .Any {if _cc :=_dge .ValidateWithPath (_e .Sprintf ("\u0025\u0073\u002f\u0041\u006e\u0079\u005b\u0025\u0064\u005d",path ,_egfd ));_cc !=nil {return _cc ;};};return nil ;};type TGN struct{};func (_fa *Period )UnmarshalXML (d *_g .Decoder ,start _g .StartElement )error {for {_dff ,_dba :=d .Token ();if _dba !=nil {return _e .Errorf ("\u0070a\u0072s\u0069\u006e\u0067\u0020\u0050e\u0072\u0069o\u0064\u003a\u0020\u0025\u0073",_dba );};if _bbc ,_gee :=_dff .(_g .EndElement );_gee &&_bbc .Name ==start .Name {break ;};};return nil ;};type RFC3066 struct{};

// ValidateWithPath validates the IMT and its children, prefixing error messages with path
func (_bacd *IMT )ValidateWithPath (path string )error {return nil };func NewISO3166 ()*ISO3166 {_bgf :=&ISO3166 {};return _bgf };

// ValidateWithPath validates the ISO639_2 and its children, prefixing error messages with path
func (_cfe *ISO639_2 )ValidateWithPath (path string )error {return nil };

// Validate validates the MESH and its children
func (_bb *MESH )Validate ()error {return _bb .ValidateWithPath ("\u004d\u0045\u0053\u0048")};type LCC struct{};func NewIMT ()*IMT {_dbc :=&IMT {};return _dbc };func NewElementsAndRefinementsGroup ()*ElementsAndRefinementsGroup {_gfa :=&ElementsAndRefinementsGroup {};return _gfa ;};func (_bca *LCSH )MarshalXML (e *_g .Encoder ,start _g .StartElement )error {start .Name .Local ="\u004c\u0043\u0053\u0048";e .EncodeToken (start );e .EncodeToken (_g .EndElement {Name :start .Name });return nil ;};type URI struct{};func NewISO639_2 ()*ISO639_2 {_cgf :=&ISO639_2 {};return _cgf };type ElementOrRefinementContainer struct{Choice []*ElementsAndRefinementsGroupChoice ;};func (_dfgf *TGN )MarshalXML (e *_g .Encoder ,start _g .StartElement )error {start .Name .Local ="\u0054\u0047\u004e";e .EncodeToken (start );e .EncodeToken (_g .EndElement {Name :start .Name });return nil ;};

// Validate validates the Point and its children
func (_ced *Point )Validate ()error {return _ced .ValidateWithPath ("\u0050\u006f\u0069n\u0074")};

// Validate validates the ISO3166 and its children
func (_afc *ISO3166 )Validate ()error {return _afc .ValidateWithPath ("\u0049S\u004f\u0033\u0031\u0036\u0036");};func (_fba *Period )MarshalXML (e *_g .Encoder ,start _g .StartElement )error {start .Name .Local ="\u0050\u0065\u0072\u0069\u006f\u0064";e .EncodeToken (start );e .EncodeToken (_g .EndElement {Name :start .Name });return nil ;};func (_beg *Point )UnmarshalXML (d *_g .Decoder ,start _g .StartElement )error {for {_gfdb ,_ebb :=d .Token ();if _ebb !=nil {return _e .Errorf ("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0050\u006f\u0069\u006et\u003a\u0020\u0025\u0073",_ebb );};if _aec ,_cbc :=_gfdb .(_g .EndElement );_cbc &&_aec .Name ==start .Name {break ;};};return nil ;};

// ValidateWithPath validates the DCMIType and its children, prefixing error messages with path
func (_eee *DCMIType )ValidateWithPath (path string )error {return nil };func (_cdf *Point )MarshalXML (e *_g .Encoder ,start _g .StartElement )error {start .Name .Local ="\u0050\u006f\u0069n\u0074";e .EncodeToken (start );e .EncodeToken (_g .EndElement {Name :start .Name });return nil ;};

// ValidateWithPath validates the URI and its children, prefixing error messages with path
func (_aefd *URI )ValidateWithPath (path string )error {return nil };

// Validate validates the ISO639_2 and its children
func (_de *ISO639_2 )Validate ()error {return _de .ValidateWithPath ("\u0049\u0053\u004f\u0036\u0033\u0039\u005f\u0032");};

// Validate validates the RFC3066 and its children
func (_gcea *RFC3066 )Validate ()error {return _gcea .ValidateWithPath ("\u0052F\u0043\u0033\u0030\u0036\u0036");};func NewPoint ()*Point {_cd :=&Point {};return _cd };func NewW3CDTF ()*W3CDTF {_bfg :=&W3CDTF {};return _bfg };func (_fg *ElementsAndRefinementsGroup )MarshalXML (e *_g .Encoder ,start _g .StartElement )error {if _fg .Choice !=nil {for _ ,_cea :=range _fg .Choice {_cea .MarshalXML (e ,_g .StartElement {});};};return nil ;};

// Validate validates the ElementsAndRefinementsGroupChoice and its children
func (_eab *ElementsAndRefinementsGroupChoice )Validate ()error {return _eab .ValidateWithPath ("\u0045\u006c\u0065\u006d\u0065\u006et\u0073\u0041\u006e\u0064\u0052\u0065\u0066\u0069\u006e\u0065\u006d\u0065\u006et\u0073\u0047\u0072\u006f\u0075\u0070\u0043h\u006f\u0069\u0063\u0065");};func (_fb *ElementOrRefinementContainer )UnmarshalXML (d *_g .Decoder ,start _g .StartElement )error {_gbg :for {_aaf ,_eag :=d .Token ();if _eag !=nil {return _eag ;};switch _cbd :=_aaf .(type ){case _g .StartElement :switch _cbd .Name {case _g .Name {Space :"\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0072\u0067/\u0064c\u002f\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0073\u002f\u0031\u002e\u0031\u002f",Local :"\u0061\u006e\u0079"}:_bg :=NewElementsAndRefinementsGroupChoice ();if _be :=d .DecodeElement (&_bg .Any ,&_cbd );_be !=nil {return _be ;};_fb .Choice =append (_fb .Choice ,_bg );default:_gf .Log .Debug ("\u0073k\u0069\u0070\u0070\u0069\u006e\u0067\u0020un\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006de\u006e\u0074 \u006f\u006e\u0020E\u006c\u0065\u006d\u0065\u006e\u0074\u004f\u0072\u0052\u0065\u0066\u0069\u006e\u0065\u006d\u0065n\u0074\u0043on\u0074\u0061\u0069n\u0065\u0072\u0020\u0025\u0076",_cbd .Name );if _gea :=d .Skip ();_gea !=nil {return _gea ;};};case _g .EndElement :break _gbg ;case _g .CharData :};};return nil ;};func (_edd *DCMIType )MarshalXML (e *_g .Encoder ,start _g .StartElement )error {start .Name .Local ="\u0044\u0043\u004d\u0049\u0054\u0079\u0070\u0065";e .EncodeToken (start );e .EncodeToken (_g .EndElement {Name :start .Name });return nil ;};type Period struct{};type ElementsAndRefinementsGroup struct{Choice []*ElementsAndRefinementsGroupChoice ;};

// Validate validates the URI and its children
func (_ggd *URI )Validate ()error {return _ggd .ValidateWithPath ("\u0055\u0052\u0049")};

// ValidateWithPath validates the W3CDTF and its children, prefixing error messages with path
func (_eaca *W3CDTF )ValidateWithPath (path string )error {return nil };func (_ad *ISO639_2 )UnmarshalXML (d *_g .Decoder ,start _g .StartElement )error {for {_cfb ,_ab :=d .Token ();if _ab !=nil {return _e .Errorf ("p\u0061r\u0073\u0069\u006e\u0067\u0020\u0049\u0053\u004f6\u0033\u0039\u005f\u0032: \u0025\u0073",_ab );};if _acd ,_ceb :=_cfb .(_g .EndElement );_ceb &&_acd .Name ==start .Name {break ;};};return nil ;};func (_ee *DCMIType )UnmarshalXML (d *_g .Decoder ,start _g .StartElement )error {for {_ca ,_ec :=d .Token ();if _ec !=nil {return _e .Errorf ("p\u0061r\u0073\u0069\u006e\u0067\u0020\u0044\u0043\u004dI\u0054\u0079\u0070\u0065: \u0025\u0073",_ec );};if _ea ,_egf :=_ca .(_g .EndElement );_egf &&_ea .Name ==start .Name {break ;};};return nil ;};func (_aaaaf *URI )UnmarshalXML (d *_g .Decoder ,start _g .StartElement )error {for {_fgg ,_fbb :=d .Token ();if _fbb !=nil {return _e .Errorf ("\u0070a\u0072s\u0069\u006e\u0067\u0020\u0055\u0052\u0049\u003a\u0020\u0025\u0073",_fbb );};if _edad ,_baf :=_fgg .(_g .EndElement );_baf &&_edad .Name ==start .Name {break ;};};return nil ;};type W3CDTF struct{};func NewElementOrRefinementContainer ()*ElementOrRefinementContainer {_fd :=&ElementOrRefinementContainer {};return _fd ;};type LCSH struct{};

// Validate validates the DCMIType and its children
func (_gbb *DCMIType )Validate ()error {return _gbb .ValidateWithPath ("\u0044\u0043\u004d\u0049\u0054\u0079\u0070\u0065");};type DDC struct{};

// Validate validates the RFC1766 and its children
func (_gaa *RFC1766 )Validate ()error {return _gaa .ValidateWithPath ("\u0052F\u0043\u0031\u0037\u0036\u0036");};func (_gbgb *RFC1766 )UnmarshalXML (d *_g .Decoder ,start _g .StartElement )error {for {_dbb ,_gdc :=d .Token ();if _gdc !=nil {return _e .Errorf ("\u0070\u0061\u0072\u0073in\u0067\u0020\u0052\u0046\u0043\u0031\u0037\u0036\u0036\u003a\u0020\u0025\u0073",_gdc );};if _aef ,_fbe :=_dbb .(_g .EndElement );_fbe &&_aef .Name ==start .Name {break ;};};return nil ;};

// Validate validates the DDC and its children
func (_fe *DDC )Validate ()error {return _fe .ValidateWithPath ("\u0044\u0044\u0043")};func (_aafe *TGN )UnmarshalXML (d *_g .Decoder ,start _g .StartElement )error {for {_fcad ,_dgg :=d .Token ();if _dgg !=nil {return _e .Errorf ("\u0070a\u0072s\u0069\u006e\u0067\u0020\u0054\u0047\u004e\u003a\u0020\u0025\u0073",_dgg );};if _gfdf ,_bdd :=_fcad .(_g .EndElement );_bdd &&_gfdf .Name ==start .Name {break ;};};return nil ;};func NewMESH ()*MESH {_ggc :=&MESH {};return _ggc };

// Validate validates the IMT and its children
func (_edg *IMT )Validate ()error {return _edg .ValidateWithPath ("\u0049\u004d\u0054")};func (_fca *ISO3166 )MarshalXML (e *_g .Encoder ,start _g .StartElement )error {start .Name .Local ="\u0049S\u004f\u0033\u0031\u0036\u0036";e .EncodeToken (start );e .EncodeToken (_g .EndElement {Name :start .Name });return nil ;};type ISO639_2 struct{};type RFC1766 struct{};

// ValidateWithPath validates the LCC and its children, prefixing error messages with path
func (_fda *LCC )ValidateWithPath (path string )error {return nil };func (_ce *Box )UnmarshalXML (d *_g .Decoder ,start _g .StartElement )error {for {_ga ,_ed :=d .Token ();if _ed !=nil {return _e .Errorf ("\u0070a\u0072s\u0069\u006e\u0067\u0020\u0042\u006f\u0078\u003a\u0020\u0025\u0073",_ed );};if _eg ,_eda :=_ga .(_g .EndElement );_eda &&_eg .Name ==start .Name {break ;};};return nil ;};func (_dgfa *ElementsAndRefinementsGroupChoice )UnmarshalXML (d *_g .Decoder ,start _g .StartElement )error {_ac :for {_baa ,_bgg :=d .Token ();if _bgg !=nil {return _bgg ;};switch _bd :=_baa .(type ){case _g .StartElement :switch _bd .Name {case _g .Name {Space :"\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0072\u0067/\u0064c\u002f\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0073\u002f\u0031\u002e\u0031\u002f",Local :"\u0061\u006e\u0079"}:_gfb :=_ge .NewAny ();if _gag :=d .DecodeElement (_gfb ,&_bd );_gag !=nil {return _gag ;};_dgfa .Any =append (_dgfa .Any ,_gfb );default:_gf .Log .Debug ("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0045\u006c\u0065\u006d\u0065\u006e\u0074\u0073\u0041\u006ed\u0052\u0065\u0066\u0069\u006e\u0065\u006d\u0065\u006e\u0074\u0073\u0047\u0072\u006fu\u0070\u0043\u0068o\u0069\u0063\u0065\u0020\u0025\u0076",_bd .Name );if _df :=d .Skip ();_df !=nil {return _df ;};};case _g .EndElement :break _ac ;case _g .CharData :};};return nil ;};func (_dg *ElementOrRefinementContainer )MarshalXML (e *_g .Encoder ,start _g .StartElement )error {start .Name .Local ="\u0065\u006c\u0065\u006de\u006e\u0074\u004f\u0072\u0052\u0065\u0066\u0069\u006e\u0065m\u0065n\u0074\u0043\u006f\u006e\u0074\u0061\u0069n\u0065\u0072";e .EncodeToken (start );if _dg .Choice !=nil {for _ ,_eb :=range _dg .Choice {_eb .MarshalXML (e ,_g .StartElement {});};};e .EncodeToken (_g .EndElement {Name :start .Name });return nil ;};func (_ecg *LCC )UnmarshalXML (d *_g .Decoder ,start _g .StartElement )error {for {_bcb ,_adb :=d .Token ();if _adb !=nil {return _e .Errorf ("\u0070a\u0072s\u0069\u006e\u0067\u0020\u004c\u0043\u0043\u003a\u0020\u0025\u0073",_adb );};if _ffaf ,_bgfe :=_bcb .(_g .EndElement );_bgfe &&_ffaf .Name ==start .Name {break ;};};return nil ;};func (_fgb *IMT )MarshalXML (e *_g .Encoder ,start _g .StartElement )error {start .Name .Local ="\u0049\u004d\u0054";e .EncodeToken (start );e .EncodeToken (_g .EndElement {Name :start .Name });return nil ;};func NewBox ()*Box {_gc :=&Box {};return _gc };

// Validate validates the LCC and its children
func (_cccg *LCC )Validate ()error {return _cccg .ValidateWithPath ("\u004c\u0043\u0043")};

// ValidateWithPath validates the RFC1766 and its children, prefixing error messages with path
func (_fgc *RFC1766 )ValidateWithPath (path string )error {return nil };type Box struct{};

// ValidateWithPath validates the UDC and its children, prefixing error messages with path
func (_agff *UDC )ValidateWithPath (path string )error {return nil };func NewRFC1766 ()*RFC1766 {_bea :=&RFC1766 {};return _bea };func NewURI ()*URI {_ddf :=&URI {};return _ddf };func NewDDC ()*DDC {_gcf :=&DDC {};return _gcf };func (_dcb *UDC )MarshalXML (e *_g .Encoder ,start _g .StartElement )error {start .Name .Local ="\u0055\u0044\u0043";e .EncodeToken (start );e .EncodeToken (_g .EndElement {Name :start .Name });return nil ;};func NewElementsAndRefinementsGroupChoice ()*ElementsAndRefinementsGroupChoice {_ega :=&ElementsAndRefinementsGroupChoice {};return _ega ;};

// Validate validates the ElementOrRefinementContainer and its children
func (_geg *ElementOrRefinementContainer )Validate ()error {return _geg .ValidateWithPath ("\u0045\u006c\u0065\u006de\u006e\u0074\u004f\u0072\u0052\u0065\u0066\u0069\u006e\u0065m\u0065n\u0074\u0043\u006f\u006e\u0074\u0061\u0069n\u0065\u0072");};func (_ccf *MESH )UnmarshalXML (d *_g .Decoder ,start _g .StartElement )error {for {_ggf ,_gfd :=d .Token ();if _gfd !=nil {return _e .Errorf ("\u0070\u0061r\u0073\u0069\u006eg\u0020\u004d\u0045\u0053\u0048\u003a\u0020\u0025\u0073",_gfd );};if _aae ,_ada :=_ggf .(_g .EndElement );_ada &&_aae .Name ==start .Name {break ;};};return nil ;};

// Validate validates the Box and its children
func (_gb *Box )Validate ()error {return _gb .ValidateWithPath ("\u0042\u006f\u0078")};func (_gcc *ISO639_2 )MarshalXML (e *_g .Encoder ,start _g .StartElement )error {start .Name .Local ="\u0049\u0053\u004f\u0036\u0033\u0039\u002d\u0032";e .EncodeToken (start );e .EncodeToken (_g .EndElement {Name :start .Name });return nil ;};

// ValidateWithPath validates the DDC and its children, prefixing error messages with path
func (_aa *DDC )ValidateWithPath (path string )error {return nil };func (_f *DDC )UnmarshalXML (d *_g .Decoder ,start _g .StartElement )error {for {_gd ,_dd :=d .Token ();if _dd !=nil {return _e .Errorf ("\u0070a\u0072s\u0069\u006e\u0067\u0020\u0044\u0044\u0043\u003a\u0020\u0025\u0073",_dd );};if _ag ,_eeg :=_gd .(_g .EndElement );_eeg &&_ag .Name ==start .Name {break ;};};return nil ;};

// ValidateWithPath validates the LCSH and its children, prefixing error messages with path
func (_ae *LCSH )ValidateWithPath (path string )error {return nil };type Point struct{};

// Validate validates the W3CDTF and its children
func (_aaag *W3CDTF )Validate ()error {return _aaag .ValidateWithPath ("\u0057\u0033\u0043\u0044\u0054\u0046");};func (_ggff *RFC3066 )UnmarshalXML (d *_g .Decoder ,start _g .StartElement )error {for {_fac ,_gad :=d .Token ();if _gad !=nil {return _e .Errorf ("\u0070\u0061\u0072\u0073in\u0067\u0020\u0052\u0046\u0043\u0033\u0030\u0036\u0036\u003a\u0020\u0025\u0073",_gad );};if _ebbe ,_eff :=_fac .(_g .EndElement );_eff &&_ebbe .Name ==start .Name {break ;};};return nil ;};

// ValidateWithPath validates the ElementOrRefinementContainer and its children, prefixing error messages with path
func (_cbe *ElementOrRefinementContainer )ValidateWithPath (path string )error {for _af ,_cg :=range _cbe .Choice {if _cfg :=_cg .ValidateWithPath (_e .Sprintf ("\u0025\u0073\u002f\u0043\u0068\u006f\u0069\u0063\u0065\u005b\u0025\u0064\u005d",path ,_af ));_cfg !=nil {return _cfg ;};};return nil ;};func (_ba *DDC )MarshalXML (e *_g .Encoder ,start _g .StartElement )error {start .Name .Local ="\u0044\u0044\u0043";e .EncodeToken (start );e .EncodeToken (_g .EndElement {Name :start .Name });return nil ;};type UDC struct{};type ISO3166 struct{};func NewPeriod ()*Period {_dca :=&Period {};return _dca };

// ValidateWithPath validates the TGN and its children, prefixing error messages with path
func (_bgc *TGN )ValidateWithPath (path string )error {return nil };func (_egfe *ElementsAndRefinementsGroup )UnmarshalXML (d *_g .Decoder ,start _g .StartElement )error {_fga :for {_dgf ,_cga :=d .Token ();if _cga !=nil {return _cga ;};switch _cee :=_dgf .(type ){case _g .StartElement :switch _cee .Name {case _g .Name {Space :"\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0072\u0067/\u0064c\u002f\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0073\u002f\u0031\u002e\u0031\u002f",Local :"\u0061\u006e\u0079"}:_gce :=NewElementsAndRefinementsGroupChoice ();if _ebc :=d .DecodeElement (&_gce .Any ,&_cee );_ebc !=nil {return _ebc ;};_egfe .Choice =append (_egfe .Choice ,_gce );default:_gf .Log .Debug ("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020e\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0045\u006ce\u006d\u0065\u006e\u0074\u0073\u0041\u006e\u0064\u0052\u0065\u0066\u0069\u006e\u0065\u006d\u0065\u006et\u0073\u0047\u0072\u006f\u0075\u0070\u0020\u0025\u0076",_cee .Name );if _ebe :=d .Skip ();_ebe !=nil {return _ebe ;};};case _g .EndElement :break _fga ;case _g .CharData :};};return nil ;};func (_egc *RFC3066 )MarshalXML (e *_g .Encoder ,start _g .StartElement )error {start .Name .Local ="\u0052F\u0043\u0033\u0030\u0036\u0036";e .EncodeToken (start );e .EncodeToken (_g .EndElement {Name :start .Name });return nil ;};func NewDCMIType ()*DCMIType {_cb :=&DCMIType {};return _cb };

// Validate validates the Period and its children
func (_bcf *Period )Validate ()error {return _bcf .ValidateWithPath ("\u0050\u0065\u0072\u0069\u006f\u0064");};func (_d *Box )MarshalXML (e *_g .Encoder ,start _g .StartElement )error {start .Name .Local ="\u0042\u006f\u0078";e .EncodeToken (start );e .EncodeToken (_g .EndElement {Name :start .Name });return nil ;};type IMT struct{};

// Validate validates the ElementsAndRefinementsGroup and its children
func (_cgb *ElementsAndRefinementsGroup )Validate ()error {return _cgb .ValidateWithPath ("E\u006c\u0065\u006d\u0065\u006e\u0074s\u0041\u006e\u0064\u0052\u0065\u0066\u0069\u006e\u0065m\u0065\u006e\u0074s\u0047r\u006f\u0075\u0070");};func (_ccd *ISO3166 )UnmarshalXML (d *_g .Decoder ,start _g .StartElement )error {for {_fcd ,_eca :=d .Token ();if _eca !=nil {return _e .Errorf ("\u0070\u0061\u0072\u0073in\u0067\u0020\u0049\u0053\u004f\u0033\u0031\u0036\u0036\u003a\u0020\u0025\u0073",_eca );};if _baaa ,_cbf :=_fcd .(_g .EndElement );_cbf &&_baaa .Name ==start .Name {break ;};};return nil ;};func NewLCSH ()*LCSH {_cgg :=&LCSH {};return _cgg };func (_ded *MESH )MarshalXML (e *_g .Encoder ,start _g .StartElement )error {start .Name .Local ="\u004d\u0045\u0053\u0048";e .EncodeToken (start );e .EncodeToken (_g .EndElement {Name :start .Name });return nil ;};type MESH struct{};func NewRFC3066 ()*RFC3066 {_dcg :=&RFC3066 {};return _dcg };

// ValidateWithPath validates the MESH and its children, prefixing error messages with path
func (_gec *MESH )ValidateWithPath (path string )error {return nil };

// ValidateWithPath validates the ElementsAndRefinementsGroup and its children, prefixing error messages with path
func (_afb *ElementsAndRefinementsGroup )ValidateWithPath (path string )error {for _bac ,_ef :=range _afb .Choice {if _ff :=_ef .ValidateWithPath (_e .Sprintf ("\u0025\u0073\u002f\u0043\u0068\u006f\u0069\u0063\u0065\u005b\u0025\u0064\u005d",path ,_bac ));_ff !=nil {return _ff ;};};return nil ;};func (_dgc *W3CDTF )UnmarshalXML (d *_g .Decoder ,start _g .StartElement )error {for {_aad ,_begc :=d .Token ();if _begc !=nil {return _e .Errorf ("\u0070a\u0072s\u0069\u006e\u0067\u0020\u00573\u0043\u0044T\u0046\u003a\u0020\u0025\u0073",_begc );};if _abc ,_aee :=_aad .(_g .EndElement );_aee &&_abc .Name ==start .Name {break ;};};return nil ;};func (_bc *ElementsAndRefinementsGroupChoice )MarshalXML (e *_g .Encoder ,start _g .StartElement )error {if _bc .Any !=nil {_ffa :=_g .StartElement {Name :_g .Name {Local :"\u0064\u0063\u003a\u0061\u006e\u0079"}};for _ ,_ecc :=range _bc .Any {e .EncodeElement (_ecc ,_ffa );};};return nil ;};func (_gfe *IMT )UnmarshalXML (d *_g .Decoder ,start _g .StartElement )error {for {_agf ,_fc :=d .Token ();if _fc !=nil {return _e .Errorf ("\u0070a\u0072s\u0069\u006e\u0067\u0020\u0049\u004d\u0054\u003a\u0020\u0025\u0073",_fc );};if _bf ,_eegd :=_agf .(_g .EndElement );_eegd &&_bf .Name ==start .Name {break ;};};return nil ;};

// Validate validates the UDC and its children
func (_cfbd *UDC )Validate ()error {return _cfbd .ValidateWithPath ("\u0055\u0044\u0043")};

// ValidateWithPath validates the Point and its children, prefixing error messages with path
func (_cbdf *Point )ValidateWithPath (path string )error {return nil };func (_eba *UDC )UnmarshalXML (d *_g .Decoder ,start _g .StartElement )error {for {_afe ,_acf :=d .Token ();if _acf !=nil {return _e .Errorf ("\u0070a\u0072s\u0069\u006e\u0067\u0020\u0055\u0044\u0043\u003a\u0020\u0025\u0073",_acf );};if _efg ,_aaaa :=_afe .(_g .EndElement );_aaaa &&_efg .Name ==start .Name {break ;};};return nil ;};func (_gfeg *LCSH )UnmarshalXML (d *_g .Decoder ,start _g .StartElement )error {for {_aaa ,_dc :=d .Token ();if _dc !=nil {return _e .Errorf ("\u0070\u0061r\u0073\u0069\u006eg\u0020\u004c\u0043\u0053\u0048\u003a\u0020\u0025\u0073",_dc );};if _gbd ,_ddb :=_aaa .(_g .EndElement );_ddb &&_gbd .Name ==start .Name {break ;};};return nil ;};

// ValidateWithPath validates the Box and its children, prefixing error messages with path
func (_a *Box )ValidateWithPath (path string )error {return nil };func (_ege *LCC )MarshalXML (e *_g .Encoder ,start _g .StartElement )error {start .Name .Local ="\u004c\u0043\u0043";e .EncodeToken (start );e .EncodeToken (_g .EndElement {Name :start .Name });return nil ;};type DCMIType struct{};func (_bga *RFC1766 )MarshalXML (e *_g .Encoder ,start _g .StartElement )error {start .Name .Local ="\u0052F\u0043\u0031\u0037\u0036\u0036";e .EncodeToken (start );e .EncodeToken (_g .EndElement {Name :start .Name });return nil ;};func NewTGN ()*TGN {_eac :=&TGN {};return _eac };func NewUDC ()*UDC {_abg :=&UDC {};return _abg };

// ValidateWithPath validates the ISO3166 and its children, prefixing error messages with path
func (_ccc *ISO3166 )ValidateWithPath (path string )error {return nil };

// ValidateWithPath validates the Period and its children, prefixing error messages with path
func (_dfg *Period )ValidateWithPath (path string )error {return nil };func NewLCC ()*LCC {_gegd :=&LCC {};return _gegd };type ElementsAndRefinementsGroupChoice struct{Any []*_ge .Any ;};

// Validate validates the LCSH and its children
func (_edb *LCSH )Validate ()error {return _edb .ValidateWithPath ("\u004c\u0043\u0053\u0048")};func (_agd *URI )MarshalXML (e *_g .Encoder ,start _g .StartElement )error {start .Name .Local ="\u0055\u0052\u0049";e .EncodeToken (start );e .EncodeToken (_g .EndElement {Name :start .Name });return nil ;};

// Validate validates the TGN and its children
func (_eagc *TGN )Validate ()error {return _eagc .ValidateWithPath ("\u0054\u0047\u004e")};

// ValidateWithPath validates the RFC3066 and its children, prefixing error messages with path
func (_dbae *RFC3066 )ValidateWithPath (path string )error {return nil };func init (){_b .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u004c\u0043\u0053\u0048",NewLCSH );_b .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u004d\u0045\u0053\u0048",NewMESH );_b .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u0044\u0044\u0043",NewDDC );_b .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u004c\u0043\u0043",NewLCC );_b .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u0055\u0044\u0043",NewUDC );_b .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u0050\u0065\u0072\u0069\u006f\u0064",NewPeriod );_b .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u0057\u0033\u0043\u0044\u0054\u0046",NewW3CDTF );_b .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u0044\u0043\u004d\u0049\u0054\u0079\u0070\u0065",NewDCMIType );_b .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u0049\u004d\u0054",NewIMT );_b .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u0055\u0052\u0049",NewURI );_b .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u0049\u0053\u004f\u0036\u0033\u0039\u002d\u0032",NewISO639_2 );_b .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u0052F\u0043\u0031\u0037\u0036\u0036",NewRFC1766 );_b .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u0052F\u0043\u0033\u0030\u0036\u0036",NewRFC3066 );_b .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u0050\u006f\u0069n\u0074",NewPoint );_b .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u0049S\u004f\u0033\u0031\u0036\u0036",NewISO3166 );_b .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u0042\u006f\u0078",NewBox );_b .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u0054\u0047\u004e",NewTGN );_b .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u0065\u006c\u0065\u006de\u006e\u0074\u004f\u0072\u0052\u0065\u0066\u0069\u006e\u0065m\u0065n\u0074\u0043\u006f\u006e\u0074\u0061\u0069n\u0065\u0072",NewElementOrRefinementContainer );_b .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","e\u006c\u0065\u006d\u0065\u006e\u0074s\u0041\u006e\u0064\u0052\u0065\u0066\u0069\u006e\u0065m\u0065\u006e\u0074s\u0047r\u006f\u0075\u0070",NewElementsAndRefinementsGroup );};