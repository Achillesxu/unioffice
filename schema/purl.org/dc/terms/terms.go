//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package terms ;import (_f "encoding/xml";_b "fmt";_e "github.com/unidoc/unioffice";_af "github.com/unidoc/unioffice/common/logger";_d "github.com/unidoc/unioffice/schema/purl.org/dc/elements";);

// ValidateWithPath validates the DCMIType and its children, prefixing error messages with path
func (_ee *DCMIType )ValidateWithPath (path string )error {return nil };

// ValidateWithPath validates the URI and its children, prefixing error messages with path
func (_degg *URI )ValidateWithPath (path string )error {return nil };func (_bdd *ElementsAndRefinementsGroup )UnmarshalXML (d *_f .Decoder ,start _f .StartElement )error {_fg :for {_deg ,_egf :=d .Token ();if _egf !=nil {return _egf ;};switch _gaf :=_deg .(type ){case _f .StartElement :switch _gaf .Name {case _f .Name {Space :"\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0072\u0067/\u0064c\u002f\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0073\u002f\u0031\u002e\u0031\u002f",Local :"\u0061\u006e\u0079"}:_gf :=NewElementsAndRefinementsGroupChoice ();
if _ca :=d .DecodeElement (&_gf .Any ,&_gaf );_ca !=nil {return _ca ;};_bdd .Choice =append (_bdd .Choice ,_gf );default:_af .Log .Debug ("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020e\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0045\u006ce\u006d\u0065\u006e\u0074\u0073\u0041\u006e\u0064\u0052\u0065\u0066\u0069\u006e\u0065\u006d\u0065\u006et\u0073\u0047\u0072\u006f\u0075\u0070\u0020\u0025\u0076",_gaf .Name );
if _afb :=d .Skip ();_afb !=nil {return _afb ;};};case _f .EndElement :break _fg ;case _f .CharData :};};return nil ;};func (_abb *RFC3066 )UnmarshalXML (d *_f .Decoder ,start _f .StartElement )error {for {_cfc ,_aed :=d .Token ();if _aed !=nil {return _b .Errorf ("\u0070\u0061\u0072\u0073in\u0067\u0020\u0052\u0046\u0043\u0033\u0030\u0036\u0036\u003a\u0020\u0025\u0073",_aed );
};if _dae ,_bcd :=_cfc .(_f .EndElement );_bcd &&_dae .Name ==start .Name {break ;};};return nil ;};type LCSH struct{};type ElementsAndRefinementsGroupChoice struct{Any []*_d .Any ;};func (_ad *DCMIType )UnmarshalXML (d *_f .Decoder ,start _f .StartElement )error {for {_cf ,_dc :=d .Token ();
if _dc !=nil {return _b .Errorf ("p\u0061r\u0073\u0069\u006e\u0067\u0020\u0044\u0043\u004dI\u0054\u0079\u0070\u0065: \u0025\u0073",_dc );};if _bd ,_bdc :=_cf .(_f .EndElement );_bdc &&_bd .Name ==start .Name {break ;};};return nil ;};type ElementsAndRefinementsGroup struct{Choice []*ElementsAndRefinementsGroupChoice ;
};

// ValidateWithPath validates the Period and its children, prefixing error messages with path
func (_efe *Period )ValidateWithPath (path string )error {return nil };func (_ecb *RFC3066 )MarshalXML (e *_f .Encoder ,start _f .StartElement )error {start .Name .Local ="\u0052F\u0043\u0033\u0030\u0036\u0036";e .EncodeToken (start );e .EncodeToken (_f .EndElement {Name :start .Name });
return nil ;};

// ValidateWithPath validates the LCSH and its children, prefixing error messages with path
func (_ebac *LCSH )ValidateWithPath (path string )error {return nil };type ISO639_2 struct{};func (_eea *ISO3166 )UnmarshalXML (d *_f .Decoder ,start _f .StartElement )error {for {_cfbe ,_dbd :=d .Token ();if _dbd !=nil {return _b .Errorf ("\u0070\u0061\u0072\u0073in\u0067\u0020\u0049\u0053\u004f\u0033\u0031\u0036\u0036\u003a\u0020\u0025\u0073",_dbd );
};if _fab ,_ade :=_cfbe .(_f .EndElement );_ade &&_fab .Name ==start .Name {break ;};};return nil ;};func (_fabf *UDC )UnmarshalXML (d *_f .Decoder ,start _f .StartElement )error {for {_baa ,_aec :=d .Token ();if _aec !=nil {return _b .Errorf ("\u0070a\u0072s\u0069\u006e\u0067\u0020\u0055\u0044\u0043\u003a\u0020\u0025\u0073",_aec );
};if _bff ,_fe :=_baa .(_f .EndElement );_fe &&_bff .Name ==start .Name {break ;};};return nil ;};type ISO3166 struct{};

// Validate validates the ISO639_2 and its children
func (_gfd *ISO639_2 )Validate ()error {return _gfd .ValidateWithPath ("\u0049\u0053\u004f\u0036\u0033\u0039\u005f\u0032");};type RFC3066 struct{};

// Validate validates the LCC and its children
func (_cbe *LCC )Validate ()error {return _cbe .ValidateWithPath ("\u004c\u0043\u0043")};func (_dcgb *Point )MarshalXML (e *_f .Encoder ,start _f .StartElement )error {start .Name .Local ="\u0050\u006f\u0069n\u0074";e .EncodeToken (start );e .EncodeToken (_f .EndElement {Name :start .Name });
return nil ;};func NewPeriod ()*Period {_cbf :=&Period {};return _cbf };func (_cg *DDC )UnmarshalXML (d *_f .Decoder ,start _f .StartElement )error {for {_fa ,_ac :=d .Token ();if _ac !=nil {return _b .Errorf ("\u0070a\u0072s\u0069\u006e\u0067\u0020\u0044\u0044\u0043\u003a\u0020\u0025\u0073",_ac );
};if _bc ,_bbf :=_fa .(_f .EndElement );_bbf &&_bc .Name ==start .Name {break ;};};return nil ;};

// Validate validates the MESH and its children
func (_dcga *MESH )Validate ()error {return _dcga .ValidateWithPath ("\u004d\u0045\u0053\u0048")};func (_fc *ElementOrRefinementContainer )MarshalXML (e *_f .Encoder ,start _f .StartElement )error {start .Name .Local ="\u0065\u006c\u0065\u006de\u006e\u0074\u004f\u0072\u0052\u0065\u0066\u0069\u006e\u0065m\u0065n\u0074\u0043\u006f\u006e\u0074\u0061\u0069n\u0065\u0072";
e .EncodeToken (start );if _fc .Choice !=nil {for _ ,_ef :=range _fc .Choice {_ef .MarshalXML (e ,_f .StartElement {});};};e .EncodeToken (_f .EndElement {Name :start .Name });return nil ;};func (_ffb *IMT )MarshalXML (e *_f .Encoder ,start _f .StartElement )error {start .Name .Local ="\u0049\u004d\u0054";
e .EncodeToken (start );e .EncodeToken (_f .EndElement {Name :start .Name });return nil ;};

// Validate validates the DDC and its children
func (_ab *DDC )Validate ()error {return _ab .ValidateWithPath ("\u0044\u0044\u0043")};func (_cfg *LCSH )MarshalXML (e *_f .Encoder ,start _f .StartElement )error {start .Name .Local ="\u004c\u0043\u0053\u0048";e .EncodeToken (start );e .EncodeToken (_f .EndElement {Name :start .Name });
return nil ;};func NewIMT ()*IMT {_edd :=&IMT {};return _edd };func (_baf *Point )UnmarshalXML (d *_f .Decoder ,start _f .StartElement )error {for {_fdf ,_dee :=d .Token ();if _dee !=nil {return _b .Errorf ("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0050\u006f\u0069\u006et\u003a\u0020\u0025\u0073",_dee );
};if _ceb ,_ggde :=_fdf .(_f .EndElement );_ggde &&_ceb .Name ==start .Name {break ;};};return nil ;};func (_ce *IMT )UnmarshalXML (d *_f .Decoder ,start _f .StartElement )error {for {_dea ,_daa :=d .Token ();if _daa !=nil {return _b .Errorf ("\u0070a\u0072s\u0069\u006e\u0067\u0020\u0049\u004d\u0054\u003a\u0020\u0025\u0073",_daa );
};if _fda ,_bccf :=_dea .(_f .EndElement );_bccf &&_fda .Name ==start .Name {break ;};};return nil ;};

// Validate validates the Box and its children
func (_cd *Box )Validate ()error {return _cd .ValidateWithPath ("\u0042\u006f\u0078")};func NewElementsAndRefinementsGroupChoice ()*ElementsAndRefinementsGroupChoice {_bbb :=&ElementsAndRefinementsGroupChoice {};return _bbb ;};func (_afcd *LCC )UnmarshalXML (d *_f .Decoder ,start _f .StartElement )error {for {_gee ,_bdde :=d .Token ();
if _bdde !=nil {return _b .Errorf ("\u0070a\u0072s\u0069\u006e\u0067\u0020\u004c\u0043\u0043\u003a\u0020\u0025\u0073",_bdde );};if _ecf ,_dgce :=_gee .(_f .EndElement );_dgce &&_ecf .Name ==start .Name {break ;};};return nil ;};

// Validate validates the W3CDTF and its children
func (_efd *W3CDTF )Validate ()error {return _efd .ValidateWithPath ("\u0057\u0033\u0043\u0044\u0054\u0046");};func (_cad *W3CDTF )UnmarshalXML (d *_f .Decoder ,start _f .StartElement )error {for {_gaeb ,_dgd :=d .Token ();if _dgd !=nil {return _b .Errorf ("\u0070a\u0072s\u0069\u006e\u0067\u0020\u00573\u0043\u0044T\u0046\u003a\u0020\u0025\u0073",_dgd );
};if _ggdb ,_gac :=_gaeb .(_f .EndElement );_gac &&_ggdb .Name ==start .Name {break ;};};return nil ;};func (_acf *RFC1766 )UnmarshalXML (d *_f .Decoder ,start _f .StartElement )error {for {_ged ,_aea :=d .Token ();if _aea !=nil {return _b .Errorf ("\u0070\u0061\u0072\u0073in\u0067\u0020\u0052\u0046\u0043\u0031\u0037\u0036\u0036\u003a\u0020\u0025\u0073",_aea );
};if _dda ,_dag :=_ged .(_f .EndElement );_dag &&_dda .Name ==start .Name {break ;};};return nil ;};func (_abgf *MESH )UnmarshalXML (d *_f .Decoder ,start _f .StartElement )error {for {_gfdf ,_bbc :=d .Token ();if _bbc !=nil {return _b .Errorf ("\u0070\u0061r\u0073\u0069\u006eg\u0020\u004d\u0045\u0053\u0048\u003a\u0020\u0025\u0073",_bbc );
};if _edce ,_bg :=_gfdf .(_f .EndElement );_bg &&_edce .Name ==start .Name {break ;};};return nil ;};type RFC1766 struct{};func (_cdb *LCSH )UnmarshalXML (d *_f .Decoder ,start _f .StartElement )error {for {_cgd ,_fbc :=d .Token ();if _fbc !=nil {return _b .Errorf ("\u0070\u0061r\u0073\u0069\u006eg\u0020\u004c\u0043\u0053\u0048\u003a\u0020\u0025\u0073",_fbc );
};if _dd ,_bdb :=_cgd .(_f .EndElement );_bdb &&_dd .Name ==start .Name {break ;};};return nil ;};type LCC struct{};

// Validate validates the ISO3166 and its children
func (_deaf *ISO3166 )Validate ()error {return _deaf .ValidateWithPath ("\u0049S\u004f\u0033\u0031\u0036\u0036");};type Period struct{};func NewDDC ()*DDC {_cb :=&DDC {};return _cb };func NewW3CDTF ()*W3CDTF {_bdbb :=&W3CDTF {};return _bdbb };

// Validate validates the RFC1766 and its children
func (_bef *RFC1766 )Validate ()error {return _bef .ValidateWithPath ("\u0052F\u0043\u0031\u0037\u0036\u0036");};type Box struct{};func NewUDC ()*UDC {_bf :=&UDC {};return _bf };

// ValidateWithPath validates the LCC and its children, prefixing error messages with path
func (_ggf *LCC )ValidateWithPath (path string )error {return nil };func (_fdc *LCC )MarshalXML (e *_f .Encoder ,start _f .StartElement )error {start .Name .Local ="\u004c\u0043\u0043";e .EncodeToken (start );e .EncodeToken (_f .EndElement {Name :start .Name });
return nil ;};

// ValidateWithPath validates the W3CDTF and its children, prefixing error messages with path
func (_fcb *W3CDTF )ValidateWithPath (path string )error {return nil };type IMT struct{};type MESH struct{};func (_dgb *ElementsAndRefinementsGroupChoice )MarshalXML (e *_f .Encoder ,start _f .StartElement )error {if _dgb .Any !=nil {_aef :=_f .StartElement {Name :_f .Name {Local :"\u0064\u0063\u003a\u0061\u006e\u0079"}};
for _ ,_acc :=range _dgb .Any {e .EncodeElement (_acc ,_aef );};};return nil ;};

// ValidateWithPath validates the DDC and its children, prefixing error messages with path
func (_dbf *DDC )ValidateWithPath (path string )error {return nil };func (_gga *W3CDTF )MarshalXML (e *_f .Encoder ,start _f .StartElement )error {start .Name .Local ="\u0057\u0033\u0043\u0044\u0054\u0046";e .EncodeToken (start );e .EncodeToken (_f .EndElement {Name :start .Name });
return nil ;};type DCMIType struct{};func NewURI ()*URI {_dcfg :=&URI {};return _dcfg };

// ValidateWithPath validates the RFC3066 and its children, prefixing error messages with path
func (_gaa *RFC3066 )ValidateWithPath (path string )error {return nil };func NewLCC ()*LCC {_ea :=&LCC {};return _ea };func NewElementsAndRefinementsGroup ()*ElementsAndRefinementsGroup {_dcb :=&ElementsAndRefinementsGroup {};return _dcb ;};type ElementOrRefinementContainer struct{Choice []*ElementsAndRefinementsGroupChoice ;
};

// ValidateWithPath validates the Point and its children, prefixing error messages with path
func (_adec *Point )ValidateWithPath (path string )error {return nil };

// ValidateWithPath validates the ISO639_2 and its children, prefixing error messages with path
func (_efa *ISO639_2 )ValidateWithPath (path string )error {return nil };

// Validate validates the ElementOrRefinementContainer and its children
func (_dcf *ElementOrRefinementContainer )Validate ()error {return _dcf .ValidateWithPath ("\u0045\u006c\u0065\u006de\u006e\u0074\u004f\u0072\u0052\u0065\u0066\u0069\u006e\u0065m\u0065n\u0074\u0043\u006f\u006e\u0074\u0061\u0069n\u0065\u0072");};

// Validate validates the DCMIType and its children
func (_fb *DCMIType )Validate ()error {return _fb .ValidateWithPath ("\u0044\u0043\u004d\u0049\u0054\u0079\u0070\u0065");};func NewDCMIType ()*DCMIType {_g :=&DCMIType {};return _g };func NewElementOrRefinementContainer ()*ElementOrRefinementContainer {_ffa :=&ElementOrRefinementContainer {};
return _ffa ;};

// ValidateWithPath validates the MESH and its children, prefixing error messages with path
func (_fga *MESH )ValidateWithPath (path string )error {return nil };func NewRFC1766 ()*RFC1766 {_bgg :=&RFC1766 {};return _bgg };func NewRFC3066 ()*RFC3066 {_gcc :=&RFC3066 {};return _gcc };func NewPoint ()*Point {_ggd :=&Point {};return _ggd };func (_ge *ElementOrRefinementContainer )UnmarshalXML (d *_f .Decoder ,start _f .StartElement )error {_cc :for {_da ,_dbg :=d .Token ();
if _dbg !=nil {return _dbg ;};switch _ed :=_da .(type ){case _f .StartElement :switch _ed .Name {case _f .Name {Space :"\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0072\u0067/\u0064c\u002f\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0073\u002f\u0031\u002e\u0031\u002f",Local :"\u0061\u006e\u0079"}:_efg :=NewElementsAndRefinementsGroupChoice ();
if _ccb :=d .DecodeElement (&_efg .Any ,&_ed );_ccb !=nil {return _ccb ;};_ge .Choice =append (_ge .Choice ,_efg );default:_af .Log .Debug ("\u0073k\u0069\u0070\u0070\u0069\u006e\u0067\u0020un\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006de\u006e\u0074 \u006f\u006e\u0020E\u006c\u0065\u006d\u0065\u006e\u0074\u004f\u0072\u0052\u0065\u0066\u0069\u006e\u0065\u006d\u0065n\u0074\u0043on\u0074\u0061\u0069n\u0065\u0072\u0020\u0025\u0076",_ed .Name );
if _ba :=d .Skip ();_ba !=nil {return _ba ;};};case _f .EndElement :break _cc ;case _f .CharData :};};return nil ;};

// ValidateWithPath validates the ElementsAndRefinementsGroup and its children, prefixing error messages with path
func (_dcg *ElementsAndRefinementsGroup )ValidateWithPath (path string )error {for _afc ,_cgb :=range _dcg .Choice {if _df :=_cgb .ValidateWithPath (_b .Sprintf ("\u0025\u0073\u002f\u0043\u0068\u006f\u0069\u0063\u0065\u005b\u0025\u0064\u005d",path ,_afc ));
_df !=nil {return _df ;};};return nil ;};

// Validate validates the UDC and its children
func (_fed *UDC )Validate ()error {return _fed .ValidateWithPath ("\u0055\u0044\u0043")};func (_dcc *UDC )MarshalXML (e *_f .Encoder ,start _f .StartElement )error {start .Name .Local ="\u0055\u0044\u0043";e .EncodeToken (start );e .EncodeToken (_f .EndElement {Name :start .Name });
return nil ;};

// Validate validates the ElementsAndRefinementsGroup and its children
func (_gc *ElementsAndRefinementsGroup )Validate ()error {return _gc .ValidateWithPath ("E\u006c\u0065\u006d\u0065\u006e\u0074s\u0041\u006e\u0064\u0052\u0065\u0066\u0069\u006e\u0065m\u0065\u006e\u0074s\u0047r\u006f\u0075\u0070");};func (_c *Box )UnmarshalXML (d *_f .Decoder ,start _f .StartElement )error {for {_db ,_de :=d .Token ();
if _de !=nil {return _b .Errorf ("\u0070a\u0072s\u0069\u006e\u0067\u0020\u0042\u006f\u0078\u003a\u0020\u0025\u0073",_de );};if _eg ,_ff :=_db .(_f .EndElement );_ff &&_eg .Name ==start .Name {break ;};};return nil ;};type W3CDTF struct{};func (_bb *DDC )MarshalXML (e *_f .Encoder ,start _f .StartElement )error {start .Name .Local ="\u0044\u0044\u0043";
e .EncodeToken (start );e .EncodeToken (_f .EndElement {Name :start .Name });return nil ;};type Point struct{};func (_fadc *ISO639_2 )MarshalXML (e *_f .Encoder ,start _f .StartElement )error {start .Name .Local ="\u0049\u0053\u004f\u0036\u0033\u0039\u002d\u0032";
e .EncodeToken (start );e .EncodeToken (_f .EndElement {Name :start .Name });return nil ;};

// ValidateWithPath validates the ElementOrRefinementContainer and its children, prefixing error messages with path
func (_ga *ElementOrRefinementContainer )ValidateWithPath (path string )error {for _ffc ,_dbb :=range _ga .Choice {if _ec :=_dbb .ValidateWithPath (_b .Sprintf ("\u0025\u0073\u002f\u0043\u0068\u006f\u0069\u0063\u0065\u005b\u0025\u0064\u005d",path ,_ffc ));
_ec !=nil {return _ec ;};};return nil ;};

// ValidateWithPath validates the ElementsAndRefinementsGroupChoice and its children, prefixing error messages with path
func (_gef *ElementsAndRefinementsGroupChoice )ValidateWithPath (path string )error {for _bcb ,_ecc :=range _gef .Any {if _cac :=_ecc .ValidateWithPath (_b .Sprintf ("\u0025\u0073\u002f\u0041\u006e\u0079\u005b\u0025\u0064\u005d",path ,_bcb ));_cac !=nil {return _cac ;
};};return nil ;};func (_be *ElementsAndRefinementsGroup )MarshalXML (e *_f .Encoder ,start _f .StartElement )error {if _be .Choice !=nil {for _ ,_abc :=range _be .Choice {_abc .MarshalXML (e ,_f .StartElement {});};};return nil ;};

// Validate validates the RFC3066 and its children
func (_fgc *RFC3066 )Validate ()error {return _fgc .ValidateWithPath ("\u0052F\u0043\u0033\u0030\u0036\u0036");};func (_ddg *Period )UnmarshalXML (d *_f .Decoder ,start _f .StartElement )error {for {_geeg ,_adff :=d .Token ();if _adff !=nil {return _b .Errorf ("\u0070a\u0072s\u0069\u006e\u0067\u0020\u0050e\u0072\u0069o\u0064\u003a\u0020\u0025\u0073",_adff );
};if _cab ,_gd :=_geeg .(_f .EndElement );_gd &&_cab .Name ==start .Name {break ;};};return nil ;};func (_dg *Box )MarshalXML (e *_f .Encoder ,start _f .StartElement )error {start .Name .Local ="\u0042\u006f\u0078";e .EncodeToken (start );e .EncodeToken (_f .EndElement {Name :start .Name });
return nil ;};

// ValidateWithPath validates the ISO3166 and its children, prefixing error messages with path
func (_dgbe *ISO3166 )ValidateWithPath (path string )error {return nil };func (_acb *TGN )UnmarshalXML (d *_f .Decoder ,start _f .StartElement )error {for {_eag ,_bab :=d .Token ();if _bab !=nil {return _b .Errorf ("\u0070a\u0072s\u0069\u006e\u0067\u0020\u0054\u0047\u004e\u003a\u0020\u0025\u0073",_bab );
};if _aee ,_cff :=_eag .(_f .EndElement );_cff &&_aee .Name ==start .Name {break ;};};return nil ;};type DDC struct{};

// ValidateWithPath validates the IMT and its children, prefixing error messages with path
func (_gae *IMT )ValidateWithPath (path string )error {return nil };func (_fbg *MESH )MarshalXML (e *_f .Encoder ,start _f .StartElement )error {start .Name .Local ="\u004d\u0045\u0053\u0048";e .EncodeToken (start );e .EncodeToken (_f .EndElement {Name :start .Name });
return nil ;};type URI struct{};

// ValidateWithPath validates the RFC1766 and its children, prefixing error messages with path
func (_aded *RFC1766 )ValidateWithPath (path string )error {return nil };type UDC struct{};func NewMESH ()*MESH {_ccc :=&MESH {};return _ccc };

// Validate validates the IMT and its children
func (_fbd *IMT )Validate ()error {return _fbd .ValidateWithPath ("\u0049\u004d\u0054")};func (_gea *RFC1766 )MarshalXML (e *_f .Encoder ,start _f .StartElement )error {start .Name .Local ="\u0052F\u0043\u0031\u0037\u0036\u0036";e .EncodeToken (start );
e .EncodeToken (_f .EndElement {Name :start .Name });return nil ;};func NewISO3166 ()*ISO3166 {_cbg :=&ISO3166 {};return _cbg };

// Validate validates the ElementsAndRefinementsGroupChoice and its children
func (_bed *ElementsAndRefinementsGroupChoice )Validate ()error {return _bed .ValidateWithPath ("\u0045\u006c\u0065\u006d\u0065\u006et\u0073\u0041\u006e\u0064\u0052\u0065\u0066\u0069\u006e\u0065\u006d\u0065\u006et\u0073\u0047\u0072\u006f\u0075\u0070\u0043h\u006f\u0069\u0063\u0065");
};

// ValidateWithPath validates the UDC and its children, prefixing error messages with path
func (_bca *UDC )ValidateWithPath (path string )error {return nil };

// Validate validates the TGN and its children
func (_ebb *TGN )Validate ()error {return _ebb .ValidateWithPath ("\u0054\u0047\u004e")};func (_gad *URI )UnmarshalXML (d *_f .Decoder ,start _f .StartElement )error {for {_bda ,_ece :=d .Token ();if _ece !=nil {return _b .Errorf ("\u0070a\u0072s\u0069\u006e\u0067\u0020\u0055\u0052\u0049\u003a\u0020\u0025\u0073",_ece );
};if _ffe ,_efb :=_bda .(_f .EndElement );_efb &&_ffe .Name ==start .Name {break ;};};return nil ;};

// Validate validates the URI and its children
func (_bbfe *URI )Validate ()error {return _bbfe .ValidateWithPath ("\u0055\u0052\u0049")};func NewLCSH ()*LCSH {_dgg :=&LCSH {};return _dgg };

// ValidateWithPath validates the TGN and its children, prefixing error messages with path
func (_faf *TGN )ValidateWithPath (path string )error {return nil };type TGN struct{};func (_edcb *TGN )MarshalXML (e *_f .Encoder ,start _f .StartElement )error {start .Name .Local ="\u0054\u0047\u004e";e .EncodeToken (start );e .EncodeToken (_f .EndElement {Name :start .Name });
return nil ;};func (_abe *ISO639_2 )UnmarshalXML (d *_f .Decoder ,start _f .StartElement )error {for {_ffd ,_bba :=d .Token ();if _bba !=nil {return _b .Errorf ("p\u0061r\u0073\u0069\u006e\u0067\u0020\u0049\u0053\u004f6\u0033\u0039\u005f\u0032: \u0025\u0073",_bba );
};if _abgc ,_eba :=_ffd .(_f .EndElement );_eba &&_abgc .Name ==start .Name {break ;};};return nil ;};func (_daad *Period )MarshalXML (e *_f .Encoder ,start _f .StartElement )error {start .Name .Local ="\u0050\u0065\u0072\u0069\u006f\u0064";e .EncodeToken (start );
e .EncodeToken (_f .EndElement {Name :start .Name });return nil ;};func NewISO639_2 ()*ISO639_2 {_aag :=&ISO639_2 {};return _aag };

// Validate validates the Point and its children
func (_ega *Point )Validate ()error {return _ega .ValidateWithPath ("\u0050\u006f\u0069n\u0074")};func (_cabe *URI )MarshalXML (e *_f .Encoder ,start _f .StartElement )error {start .Name .Local ="\u0055\u0052\u0049";e .EncodeToken (start );e .EncodeToken (_f .EndElement {Name :start .Name });
return nil ;};

// Validate validates the Period and its children
func (_cda *Period )Validate ()error {return _cda .ValidateWithPath ("\u0050\u0065\u0072\u0069\u006f\u0064");};func (_eb *ISO3166 )MarshalXML (e *_f .Encoder ,start _f .StartElement )error {start .Name .Local ="\u0049S\u004f\u0033\u0031\u0036\u0036";e .EncodeToken (start );
e .EncodeToken (_f .EndElement {Name :start .Name });return nil ;};

// Validate validates the LCSH and its children
func (_bdg *LCSH )Validate ()error {return _bdg .ValidateWithPath ("\u004c\u0043\u0053\u0048")};

// ValidateWithPath validates the Box and its children, prefixing error messages with path
func (_aff *Box )ValidateWithPath (path string )error {return nil };func NewBox ()*Box {_ae :=&Box {};return _ae };func NewTGN ()*TGN {_ggg :=&TGN {};return _ggg };func (_cfb *ElementsAndRefinementsGroupChoice )UnmarshalXML (d *_f .Decoder ,start _f .StartElement )error {_dgc :for {_adf ,_abg :=d .Token ();
if _abg !=nil {return _abg ;};switch _aa :=_adf .(type ){case _f .StartElement :switch _aa .Name {case _f .Name {Space :"\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0072\u0067/\u0064c\u002f\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0073\u002f\u0031\u002e\u0031\u002f",Local :"\u0061\u006e\u0079"}:_edc :=_d .NewAny ();
if _gfb :=d .DecodeElement (_edc ,&_aa );_gfb !=nil {return _gfb ;};_cfb .Any =append (_cfb .Any ,_edc );default:_af .Log .Debug ("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0045\u006c\u0065\u006d\u0065\u006e\u0074\u0073\u0041\u006ed\u0052\u0065\u0066\u0069\u006e\u0065\u006d\u0065\u006e\u0074\u0073\u0047\u0072\u006fu\u0070\u0043\u0068o\u0069\u0063\u0065\u0020\u0025\u0076",_aa .Name );
if _fca :=d .Skip ();_fca !=nil {return _fca ;};};case _f .EndElement :break _dgc ;case _f .CharData :};};return nil ;};func (_fd *DCMIType )MarshalXML (e *_f .Encoder ,start _f .StartElement )error {start .Name .Local ="\u0044\u0043\u004d\u0049\u0054\u0079\u0070\u0065";
e .EncodeToken (start );e .EncodeToken (_f .EndElement {Name :start .Name });return nil ;};func init (){_e .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u004c\u0043\u0053\u0048",NewLCSH );
_e .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u004d\u0045\u0053\u0048",NewMESH );_e .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u0044\u0044\u0043",NewDDC );
_e .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u004c\u0043\u0043",NewLCC );_e .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u0055\u0044\u0043",NewUDC );
_e .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u0050\u0065\u0072\u0069\u006f\u0064",NewPeriod );_e .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u0057\u0033\u0043\u0044\u0054\u0046",NewW3CDTF );
_e .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u0044\u0043\u004d\u0049\u0054\u0079\u0070\u0065",NewDCMIType );_e .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u0049\u004d\u0054",NewIMT );
_e .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u0055\u0052\u0049",NewURI );_e .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u0049\u0053\u004f\u0036\u0033\u0039\u002d\u0032",NewISO639_2 );
_e .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u0052F\u0043\u0031\u0037\u0036\u0036",NewRFC1766 );_e .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u0052F\u0043\u0033\u0030\u0036\u0036",NewRFC3066 );
_e .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u0050\u006f\u0069n\u0074",NewPoint );_e .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u0049S\u004f\u0033\u0031\u0036\u0036",NewISO3166 );
_e .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u0042\u006f\u0078",NewBox );_e .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u0054\u0047\u004e",NewTGN );
_e .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u0065\u006c\u0065\u006de\u006e\u0074\u004f\u0072\u0052\u0065\u0066\u0069\u006e\u0065m\u0065n\u0074\u0043\u006f\u006e\u0074\u0061\u0069n\u0065\u0072",NewElementOrRefinementContainer );
_e .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","e\u006c\u0065\u006d\u0065\u006e\u0074s\u0041\u006e\u0064\u0052\u0065\u0066\u0069\u006e\u0065m\u0065\u006e\u0074s\u0047r\u006f\u0075\u0070",NewElementsAndRefinementsGroup );
};