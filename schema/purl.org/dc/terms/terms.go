//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package terms ;import (_fff "encoding/xml";_dea "fmt";_gbb "github.com/unidoc/unioffice";_dcd "github.com/unidoc/unioffice/schema/purl.org/dc/elements";);func (_bee *ElementOrRefinementContainer )UnmarshalXML (d *_fff .Decoder ,start _fff .StartElement )error {_afe :for {_aea ,_gc :=d .Token ();if _gc !=nil {return _gc ;};switch _ff :=_aea .(type ){case _fff .StartElement :switch _ff .Name {case _fff .Name {Space :"\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0072\u0067/\u0064c\u002f\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0073\u002f\u0031\u002e\u0031\u002f",Local :"\u0061\u006e\u0079"}:_gfa :=NewElementsAndRefinementsGroupChoice ();if _bcd :=d .DecodeElement (&_gfa .Any ,&_ff );_bcd !=nil {return _bcd ;};_bee .Choice =append (_bee .Choice ,_gfa );default:_gbb .Log ("\u0073k\u0069\u0070\u0070\u0069\u006e\u0067\u0020un\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006de\u006e\u0074 \u006f\u006e\u0020E\u006c\u0065\u006d\u0065\u006e\u0074\u004f\u0072\u0052\u0065\u0066\u0069\u006e\u0065\u006d\u0065n\u0074\u0043on\u0074\u0061\u0069n\u0065\u0072\u0020\u0025\u0076",_ff .Name );if _dfg :=d .Skip ();_dfg !=nil {return _dfg ;};};case _fff .EndElement :break _afe ;case _fff .CharData :};};return nil ;};

// ValidateWithPath validates the DDC and its children, prefixing error messages with path
func (_cc *DDC )ValidateWithPath (path string )error {return nil };

// Validate validates the ElementsAndRefinementsGroupChoice and its children
func (_gff *ElementsAndRefinementsGroupChoice )Validate ()error {return _gff .ValidateWithPath ("\u0045\u006c\u0065\u006d\u0065\u006et\u0073\u0041\u006e\u0064\u0052\u0065\u0066\u0069\u006e\u0065\u006d\u0065\u006et\u0073\u0047\u0072\u006f\u0075\u0070\u0043h\u006f\u0069\u0063\u0065");};

// ValidateWithPath validates the DCMIType and its children, prefixing error messages with path
func (_efg *DCMIType )ValidateWithPath (path string )error {return nil };func (_cfc *LCSH )MarshalXML (e *_fff .Encoder ,start _fff .StartElement )error {start .Name .Local ="\u004c\u0043\u0053\u0048";e .EncodeToken (start );e .EncodeToken (_fff .EndElement {Name :start .Name });return nil ;};

// ValidateWithPath validates the LCSH and its children, prefixing error messages with path
func (_df *LCSH )ValidateWithPath (path string )error {return nil };func NewLCSH ()*LCSH {_aecg :=&LCSH {};return _aecg };func (_degc *ElementOrRefinementContainer )MarshalXML (e *_fff .Encoder ,start _fff .StartElement )error {start .Name .Local ="\u0065\u006c\u0065\u006de\u006e\u0074\u004f\u0072\u0052\u0065\u0066\u0069\u006e\u0065m\u0065n\u0074\u0043\u006f\u006e\u0074\u0061\u0069n\u0065\u0072";e .EncodeToken (start );if _degc .Choice !=nil {for _ ,_eg :=range _degc .Choice {_eg .MarshalXML (e ,_fff .StartElement {});};};e .EncodeToken (_fff .EndElement {Name :start .Name });return nil ;};

// ValidateWithPath validates the ElementsAndRefinementsGroup and its children, prefixing error messages with path
func (_aec *ElementsAndRefinementsGroup )ValidateWithPath (path string )error {for _geab ,_bgg :=range _aec .Choice {if _feac :=_bgg .ValidateWithPath (_dea .Sprintf ("\u0025\u0073\u002f\u0043\u0068\u006f\u0069\u0063\u0065\u005b\u0025\u0064\u005d",path ,_geab ));_feac !=nil {return _feac ;};};return nil ;};func (_caa *ElementsAndRefinementsGroupChoice )MarshalXML (e *_fff .Encoder ,start _fff .StartElement )error {if _caa .Any !=nil {_bg :=_fff .StartElement {Name :_fff .Name {Local :"\u0064\u0063\u003a\u0061\u006e\u0079"}};for _ ,_cee :=range _caa .Any {e .EncodeElement (_cee ,_bg );};};return nil ;};

// ValidateWithPath validates the ElementsAndRefinementsGroupChoice and its children, prefixing error messages with path
func (_efgd *ElementsAndRefinementsGroupChoice )ValidateWithPath (path string )error {for _fgg ,_fag :=range _efgd .Any {if _fd :=_fag .ValidateWithPath (_dea .Sprintf ("\u0025\u0073\u002f\u0041\u006e\u0079\u005b\u0025\u0064\u005d",path ,_fgg ));_fd !=nil {return _fd ;};};return nil ;};

// Validate validates the MESH and its children
func (_efa *MESH )Validate ()error {return _efa .ValidateWithPath ("\u004d\u0045\u0053\u0048")};func (_d *DDC )MarshalXML (e *_fff .Encoder ,start _fff .StartElement )error {start .Name .Local ="\u0044\u0044\u0043";e .EncodeToken (start );e .EncodeToken (_fff .EndElement {Name :start .Name });return nil ;};

// Validate validates the ElementsAndRefinementsGroup and its children
func (_fea *ElementsAndRefinementsGroup )Validate ()error {return _fea .ValidateWithPath ("E\u006c\u0065\u006d\u0065\u006e\u0074s\u0041\u006e\u0064\u0052\u0065\u0066\u0069\u006e\u0065m\u0065\u006e\u0074s\u0047r\u006f\u0075\u0070");};type ElementOrRefinementContainer struct{Choice []*ElementsAndRefinementsGroupChoice ;};type IMT struct{};func (_dg *IMT )MarshalXML (e *_fff .Encoder ,start _fff .StartElement )error {start .Name .Local ="\u0049\u004d\u0054";e .EncodeToken (start );e .EncodeToken (_fff .EndElement {Name :start .Name });return nil ;};func (_gdd *RFC1766 )UnmarshalXML (d *_fff .Decoder ,start _fff .StartElement )error {for {_ddaf ,_cbf :=d .Token ();if _cbf !=nil {return _dea .Errorf ("\u0070\u0061\u0072\u0073in\u0067\u0020\u0052\u0046\u0043\u0031\u0037\u0036\u0036\u003a\u0020\u0025\u0073",_cbf );};if _da ,_fdg :=_ddaf .(_fff .EndElement );_fdg &&_da .Name ==start .Name {break ;};};return nil ;};func (_fca *URI )UnmarshalXML (d *_fff .Decoder ,start _fff .StartElement )error {for {_eeg ,_dfa :=d .Token ();if _dfa !=nil {return _dea .Errorf ("\u0070a\u0072s\u0069\u006e\u0067\u0020\u0055\u0052\u0049\u003a\u0020\u0025\u0073",_dfa );};if _bcdc ,_add :=_eeg .(_fff .EndElement );_add &&_bcdc .Name ==start .Name {break ;};};return nil ;};func (_fbde *UDC )UnmarshalXML (d *_fff .Decoder ,start _fff .StartElement )error {for {_daa ,_eac :=d .Token ();if _eac !=nil {return _dea .Errorf ("\u0070a\u0072s\u0069\u006e\u0067\u0020\u0055\u0044\u0043\u003a\u0020\u0025\u0073",_eac );};if _ccd ,_ebeb :=_daa .(_fff .EndElement );_ebeb &&_ccd .Name ==start .Name {break ;};};return nil ;};func (_cece *ElementsAndRefinementsGroupChoice )UnmarshalXML (d *_fff .Decoder ,start _fff .StartElement )error {_ef :for {_fagc ,_ce :=d .Token ();if _ce !=nil {return _ce ;};switch _cbc :=_fagc .(type ){case _fff .StartElement :switch _cbc .Name {case _fff .Name {Space :"\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0072\u0067/\u0064c\u002f\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0073\u002f\u0031\u002e\u0031\u002f",Local :"\u0061\u006e\u0079"}:_bce :=_dcd .NewAny ();if _cfb :=d .DecodeElement (_bce ,&_cbc );_cfb !=nil {return _cfb ;};_cece .Any =append (_cece .Any ,_bce );default:_gbb .Log ("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0045\u006c\u0065\u006d\u0065\u006e\u0074\u0073\u0041\u006ed\u0052\u0065\u0066\u0069\u006e\u0065\u006d\u0065\u006e\u0074\u0073\u0047\u0072\u006fu\u0070\u0043\u0068o\u0069\u0063\u0065\u0020\u0025\u0076",_cbc .Name );if _gfb :=d .Skip ();_gfb !=nil {return _gfb ;};};case _fff .EndElement :break _ef ;case _fff .CharData :};};return nil ;};

// Validate validates the ISO3166 and its children
func (_bff *ISO3166 )Validate ()error {return _bff .ValidateWithPath ("\u0049S\u004f\u0033\u0031\u0036\u0036");};type ElementsAndRefinementsGroup struct{Choice []*ElementsAndRefinementsGroupChoice ;};type LCC struct{};func NewRFC1766 ()*RFC1766 {_cbb :=&RFC1766 {};return _cbb };func NewDDC ()*DDC {_cbd :=&DDC {};return _cbd };

// ValidateWithPath validates the IMT and its children, prefixing error messages with path
func (_bae *IMT )ValidateWithPath (path string )error {return nil };func NewISO639_2 ()*ISO639_2 {_fgf :=&ISO639_2 {};return _fgf };func NewBox ()*Box {_ec :=&Box {};return _ec };

// ValidateWithPath validates the Period and its children, prefixing error messages with path
func (_gdf *Period )ValidateWithPath (path string )error {return nil };func NewUDC ()*UDC {_fc :=&UDC {};return _fc };

// Validate validates the ElementOrRefinementContainer and its children
func (_bc *ElementOrRefinementContainer )Validate ()error {return _bc .ValidateWithPath ("\u0045\u006c\u0065\u006de\u006e\u0074\u004f\u0072\u0052\u0065\u0066\u0069\u006e\u0065m\u0065n\u0074\u0043\u006f\u006e\u0074\u0061\u0069n\u0065\u0072");};func (_ccba *TGN )UnmarshalXML (d *_fff .Decoder ,start _fff .StartElement )error {for {_aa ,_dgd :=d .Token ();if _dgd !=nil {return _dea .Errorf ("\u0070a\u0072s\u0069\u006e\u0067\u0020\u0054\u0047\u004e\u003a\u0020\u0025\u0073",_dgd );};if _cdd ,_ac :=_aa .(_fff .EndElement );_ac &&_cdd .Name ==start .Name {break ;};};return nil ;};

// ValidateWithPath validates the ISO639_2 and its children, prefixing error messages with path
func (_dda *ISO639_2 )ValidateWithPath (path string )error {return nil };func (_ad *ISO639_2 )MarshalXML (e *_fff .Encoder ,start _fff .StartElement )error {start .Name .Local ="\u0049\u0053\u004f\u0036\u0033\u0039\u002d\u0032";e .EncodeToken (start );e .EncodeToken (_fff .EndElement {Name :start .Name });return nil ;};func (_bbg *RFC3066 )MarshalXML (e *_fff .Encoder ,start _fff .StartElement )error {start .Name .Local ="\u0052F\u0043\u0033\u0030\u0036\u0036";e .EncodeToken (start );e .EncodeToken (_fff .EndElement {Name :start .Name });return nil ;};func NewElementOrRefinementContainer ()*ElementOrRefinementContainer {_bfad :=&ElementOrRefinementContainer {};return _bfad ;};

// Validate validates the Point and its children
func (_ga *Point )Validate ()error {return _ga .ValidateWithPath ("\u0050\u006f\u0069n\u0074")};

// ValidateWithPath validates the Point and its children, prefixing error messages with path
func (_ba *Point )ValidateWithPath (path string )error {return nil };type Period struct{};

// Validate validates the URI and its children
func (_adf *URI )Validate ()error {return _adf .ValidateWithPath ("\u0055\u0052\u0049")};func (_dca *Point )UnmarshalXML (d *_fff .Decoder ,start _fff .StartElement )error {for {_de ,_ece :=d .Token ();if _ece !=nil {return _dea .Errorf ("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0050\u006f\u0069\u006et\u003a\u0020\u0025\u0073",_ece );};if _gacb ,_gda :=_de .(_fff .EndElement );_gda &&_gacb .Name ==start .Name {break ;};};return nil ;};func (_fgb *MESH )MarshalXML (e *_fff .Encoder ,start _fff .StartElement )error {start .Name .Local ="\u004d\u0045\u0053\u0048";e .EncodeToken (start );e .EncodeToken (_fff .EndElement {Name :start .Name });return nil ;};

// ValidateWithPath validates the W3CDTF and its children, prefixing error messages with path
func (_ccf *W3CDTF )ValidateWithPath (path string )error {return nil };

// ValidateWithPath validates the URI and its children, prefixing error messages with path
func (_gbaa *URI )ValidateWithPath (path string )error {return nil };func NewMESH ()*MESH {_gdfd :=&MESH {};return _gdfd };

// Validate validates the IMT and its children
func (_agc *IMT )Validate ()error {return _agc .ValidateWithPath ("\u0049\u004d\u0054")};type ISO3166 struct{};type Box struct{};func (_ddg *W3CDTF )MarshalXML (e *_fff .Encoder ,start _fff .StartElement )error {start .Name .Local ="\u0057\u0033\u0043\u0044\u0054\u0046";e .EncodeToken (start );e .EncodeToken (_fff .EndElement {Name :start .Name });return nil ;};

// Validate validates the RFC1766 and its children
func (_aaag *RFC1766 )Validate ()error {return _aaag .ValidateWithPath ("\u0052F\u0043\u0031\u0037\u0036\u0036");};type RFC1766 struct{};func NewPoint ()*Point {_gba :=&Point {};return _gba };func (_cae *DDC )UnmarshalXML (d *_fff .Decoder ,start _fff .StartElement )error {for {_afd ,_ace :=d .Token ();if _ace !=nil {return _dea .Errorf ("\u0070a\u0072s\u0069\u006e\u0067\u0020\u0044\u0044\u0043\u003a\u0020\u0025\u0073",_ace );};if _fbg ,_cf :=_afd .(_fff .EndElement );_cf &&_fbg .Name ==start .Name {break ;};};return nil ;};

// ValidateWithPath validates the LCC and its children, prefixing error messages with path
func (_bda *LCC )ValidateWithPath (path string )error {return nil };

// Validate validates the DCMIType and its children
func (_ddcd *DCMIType )Validate ()error {return _ddcd .ValidateWithPath ("\u0044\u0043\u004d\u0049\u0054\u0079\u0070\u0065");};func (_dga *UDC )MarshalXML (e *_fff .Encoder ,start _fff .StartElement )error {start .Name .Local ="\u0055\u0044\u0043";e .EncodeToken (start );e .EncodeToken (_fff .EndElement {Name :start .Name });return nil ;};func (_acb *RFC3066 )UnmarshalXML (d *_fff .Decoder ,start _fff .StartElement )error {for {_ca ,_ggb :=d .Token ();if _ggb !=nil {return _dea .Errorf ("\u0070\u0061\u0072\u0073in\u0067\u0020\u0052\u0046\u0043\u0033\u0030\u0036\u0036\u003a\u0020\u0025\u0073",_ggb );};if _efb ,_cab :=_ca .(_fff .EndElement );_cab &&_efb .Name ==start .Name {break ;};};return nil ;};type TGN struct{};type LCSH struct{};func NewPeriod ()*Period {_ea :=&Period {};return _ea };

// ValidateWithPath validates the ElementOrRefinementContainer and its children, prefixing error messages with path
func (_deg *ElementOrRefinementContainer )ValidateWithPath (path string )error {for _aabd ,_db :=range _deg .Choice {if _agbd :=_db .ValidateWithPath (_dea .Sprintf ("\u0025\u0073\u002f\u0043\u0068\u006f\u0069\u0063\u0065\u005b\u0025\u0064\u005d",path ,_aabd ));_agbd !=nil {return _agbd ;};};return nil ;};func (_dcdf *ElementsAndRefinementsGroup )UnmarshalXML (d *_fff .Decoder ,start _fff .StartElement )error {_gfe :for {_dff ,_dfb :=d .Token ();if _dfb !=nil {return _dfb ;};switch _egg :=_dff .(type ){case _fff .StartElement :switch _egg .Name {case _fff .Name {Space :"\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0072\u0067/\u0064c\u002f\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0073\u002f\u0031\u002e\u0031\u002f",Local :"\u0061\u006e\u0079"}:_acea :=NewElementsAndRefinementsGroupChoice ();if _cec :=d .DecodeElement (&_acea .Any ,&_egg );_cec !=nil {return _cec ;};_dcdf .Choice =append (_dcdf .Choice ,_acea );default:_gbb .Log ("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020e\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0045\u006ce\u006d\u0065\u006e\u0074\u0073\u0041\u006e\u0064\u0052\u0065\u0066\u0069\u006e\u0065\u006d\u0065\u006et\u0073\u0047\u0072\u006f\u0075\u0070\u0020\u0025\u0076",_egg .Name );if _adc :=d .Skip ();_adc !=nil {return _adc ;};};case _fff .EndElement :break _gfe ;case _fff .CharData :};};return nil ;};func (_gd *ElementsAndRefinementsGroup )MarshalXML (e *_fff .Encoder ,start _fff .StartElement )error {if _gd .Choice !=nil {for _ ,_ebe :=range _gd .Choice {_ebe .MarshalXML (e ,_fff .StartElement {});};};return nil ;};type MESH struct{};func (_ee *Box )UnmarshalXML (d *_fff .Decoder ,start _fff .StartElement )error {for {_ae ,_cb :=d .Token ();if _cb !=nil {return _dea .Errorf ("\u0070a\u0072s\u0069\u006e\u0067\u0020\u0042\u006f\u0078\u003a\u0020\u0025\u0073",_cb );};if _dbe ,_ge :=_ae .(_fff .EndElement );_ge &&_dbe .Name ==start .Name {break ;};};return nil ;};

// ValidateWithPath validates the RFC1766 and its children, prefixing error messages with path
func (_bb *RFC1766 )ValidateWithPath (path string )error {return nil };type W3CDTF struct{};func (_eff *LCSH )UnmarshalXML (d *_fff .Decoder ,start _fff .StartElement )error {for {_gfeb ,_fgc :=d .Token ();if _fgc !=nil {return _dea .Errorf ("\u0070\u0061r\u0073\u0069\u006eg\u0020\u004c\u0043\u0053\u0048\u003a\u0020\u0025\u0073",_fgc );};if _bfa ,_bceb :=_gfeb .(_fff .EndElement );_bceb &&_bfa .Name ==start .Name {break ;};};return nil ;};type RFC3066 struct{};func NewIMT ()*IMT {_deaa :=&IMT {};return _deaa };func NewTGN ()*TGN {_gbg :=&TGN {};return _gbg };func NewElementsAndRefinementsGroupChoice ()*ElementsAndRefinementsGroupChoice {_baa :=&ElementsAndRefinementsGroupChoice {};return _baa ;};

// ValidateWithPath validates the TGN and its children, prefixing error messages with path
func (_agd *TGN )ValidateWithPath (path string )error {return nil };func (_bf *ISO3166 )MarshalXML (e *_fff .Encoder ,start _fff .StartElement )error {start .Name .Local ="\u0049S\u004f\u0033\u0031\u0036\u0036";e .EncodeToken (start );e .EncodeToken (_fff .EndElement {Name :start .Name });return nil ;};

// Validate validates the Box and its children
func (_gab *Box )Validate ()error {return _gab .ValidateWithPath ("\u0042\u006f\u0078")};type DDC struct{};func (_gga *RFC1766 )MarshalXML (e *_fff .Encoder ,start _fff .StartElement )error {start .Name .Local ="\u0052F\u0043\u0031\u0037\u0036\u0036";e .EncodeToken (start );e .EncodeToken (_fff .EndElement {Name :start .Name });return nil ;};func (_cda *DCMIType )UnmarshalXML (d *_fff .Decoder ,start _fff .StartElement )error {for {_ddc ,_acba :=d .Token ();if _acba !=nil {return _dea .Errorf ("p\u0061r\u0073\u0069\u006e\u0067\u0020\u0044\u0043\u004dI\u0054\u0079\u0070\u0065: \u0025\u0073",_acba );};if _dc ,_bdc :=_ddc .(_fff .EndElement );_bdc &&_dc .Name ==start .Name {break ;};};return nil ;};func (_gf *Point )MarshalXML (e *_fff .Encoder ,start _fff .StartElement )error {start .Name .Local ="\u0050\u006f\u0069n\u0074";e .EncodeToken (start );e .EncodeToken (_fff .EndElement {Name :start .Name });return nil ;};func (_aag *Period )MarshalXML (e *_fff .Encoder ,start _fff .StartElement )error {start .Name .Local ="\u0050\u0065\u0072\u0069\u006f\u0064";e .EncodeToken (start );e .EncodeToken (_fff .EndElement {Name :start .Name });return nil ;};

// Validate validates the W3CDTF and its children
func (_gbc *W3CDTF )Validate ()error {return _gbc .ValidateWithPath ("\u0057\u0033\u0043\u0044\u0054\u0046");};func NewW3CDTF ()*W3CDTF {_bga :=&W3CDTF {};return _bga };type URI struct{};

// Validate validates the TGN and its children
func (_bd *TGN )Validate ()error {return _bd .ValidateWithPath ("\u0054\u0047\u004e")};func (_f *DCMIType )MarshalXML (e *_fff .Encoder ,start _fff .StartElement )error {start .Name .Local ="\u0044\u0043\u004d\u0049\u0054\u0079\u0070\u0065";e .EncodeToken (start );e .EncodeToken (_fff .EndElement {Name :start .Name });return nil ;};

// Validate validates the LCC and its children
func (_fe *LCC )Validate ()error {return _fe .ValidateWithPath ("\u004c\u0043\u0043")};func NewLCC ()*LCC {_cd :=&LCC {};return _cd };type UDC struct{};type ElementsAndRefinementsGroupChoice struct{Any []*_dcd .Any ;};func NewURI ()*URI {_ed :=&URI {};return _ed };func (_aab *W3CDTF )UnmarshalXML (d *_fff .Decoder ,start _fff .StartElement )error {for {_e ,_fa :=d .Token ();if _fa !=nil {return _dea .Errorf ("\u0070a\u0072s\u0069\u006e\u0067\u0020\u00573\u0043\u0044T\u0046\u003a\u0020\u0025\u0073",_fa );};if _eb ,_ffd :=_e .(_fff .EndElement );_ffd &&_eb .Name ==start .Name {break ;};};return nil ;};

// ValidateWithPath validates the UDC and its children, prefixing error messages with path
func (_eed *UDC )ValidateWithPath (path string )error {return nil };func (_feg *URI )MarshalXML (e *_fff .Encoder ,start _fff .StartElement )error {start .Name .Local ="\u0055\u0052\u0049";e .EncodeToken (start );e .EncodeToken (_fff .EndElement {Name :start .Name });return nil ;};func (_b *IMT )UnmarshalXML (d *_fff .Decoder ,start _fff .StartElement )error {for {_ggdd ,_fg :=d .Token ();if _fg !=nil {return _dea .Errorf ("\u0070a\u0072s\u0069\u006e\u0067\u0020\u0049\u004d\u0054\u003a\u0020\u0025\u0073",_fg );};if _gac ,_ded :=_ggdd .(_fff .EndElement );_ded &&_gac .Name ==start .Name {break ;};};return nil ;};func (_bbf *ISO3166 )UnmarshalXML (d *_fff .Decoder ,start _fff .StartElement )error {for {_fggd ,_fcd :=d .Token ();if _fcd !=nil {return _dea .Errorf ("\u0070\u0061\u0072\u0073in\u0067\u0020\u0049\u0053\u004f\u0033\u0031\u0036\u0036\u003a\u0020\u0025\u0073",_fcd );};if _ddb ,_a :=_fggd .(_fff .EndElement );_a &&_ddb .Name ==start .Name {break ;};};return nil ;};func (_dec *LCC )UnmarshalXML (d *_fff .Decoder ,start _fff .StartElement )error {for {_dd ,_cgg :=d .Token ();if _cgg !=nil {return _dea .Errorf ("\u0070a\u0072s\u0069\u006e\u0067\u0020\u004c\u0043\u0043\u003a\u0020\u0025\u0073",_cgg );};if _aaa ,_cgc :=_dd .(_fff .EndElement );_cgc &&_aaa .Name ==start .Name {break ;};};return nil ;};func NewRFC3066 ()*RFC3066 {_cg :=&RFC3066 {};return _cg };func (_ag *ISO639_2 )UnmarshalXML (d *_fff .Decoder ,start _fff .StartElement )error {for {_af ,_aabf :=d .Token ();if _aabf !=nil {return _dea .Errorf ("p\u0061r\u0073\u0069\u006e\u0067\u0020\u0049\u0053\u004f6\u0033\u0039\u005f\u0032: \u0025\u0073",_aabf );};if _gg ,_ggd :=_af .(_fff .EndElement );_ggd &&_gg .Name ==start .Name {break ;};};return nil ;};

// ValidateWithPath validates the MESH and its children, prefixing error messages with path
func (_cgf *MESH )ValidateWithPath (path string )error {return nil };func (_bfd *TGN )MarshalXML (e *_fff .Encoder ,start _fff .StartElement )error {start .Name .Local ="\u0054\u0047\u004e";e .EncodeToken (start );e .EncodeToken (_fff .EndElement {Name :start .Name });return nil ;};func NewDCMIType ()*DCMIType {_g :=&DCMIType {};return _g };

// ValidateWithPath validates the Box and its children, prefixing error messages with path
func (_adb *Box )ValidateWithPath (path string )error {return nil };

// ValidateWithPath validates the RFC3066 and its children, prefixing error messages with path
func (_dcg *RFC3066 )ValidateWithPath (path string )error {return nil };

// Validate validates the DDC and its children
func (_ab *DDC )Validate ()error {return _ab .ValidateWithPath ("\u0044\u0044\u0043")};type DCMIType struct{};

// Validate validates the ISO639_2 and its children
func (_ebd *ISO639_2 )Validate ()error {return _ebd .ValidateWithPath ("\u0049\u0053\u004f\u0036\u0033\u0039\u005f\u0032");};

// Validate validates the UDC and its children
func (_agb *UDC )Validate ()error {return _agb .ValidateWithPath ("\u0055\u0044\u0043")};

// Validate validates the LCSH and its children
func (_be *LCSH )Validate ()error {return _be .ValidateWithPath ("\u004c\u0043\u0053\u0048")};func (_dcgf *LCC )MarshalXML (e *_fff .Encoder ,start _fff .StartElement )error {start .Name .Local ="\u004c\u0043\u0043";e .EncodeToken (start );e .EncodeToken (_fff .EndElement {Name :start .Name });return nil ;};func (_ddbe *Box )MarshalXML (e *_fff .Encoder ,start _fff .StartElement )error {start .Name .Local ="\u0042\u006f\u0078";e .EncodeToken (start );e .EncodeToken (_fff .EndElement {Name :start .Name });return nil ;};type Point struct{};func NewElementsAndRefinementsGroup ()*ElementsAndRefinementsGroup {_gea :=&ElementsAndRefinementsGroup {};return _gea ;};func (_ddbb *MESH )UnmarshalXML (d *_fff .Decoder ,start _fff .StartElement )error {for {_fbb ,_caab :=d .Token ();if _caab !=nil {return _dea .Errorf ("\u0070\u0061r\u0073\u0069\u006eg\u0020\u004d\u0045\u0053\u0048\u003a\u0020\u0025\u0073",_caab );};if _fbd ,_gfg :=_fbb .(_fff .EndElement );_gfg &&_fbd .Name ==start .Name {break ;};};return nil ;};type ISO639_2 struct{};func (_fce *Period )UnmarshalXML (d *_fff .Decoder ,start _fff .StartElement )error {for {_eec ,_eedd :=d .Token ();if _eedd !=nil {return _dea .Errorf ("\u0070a\u0072s\u0069\u006e\u0067\u0020\u0050e\u0072\u0069o\u0064\u003a\u0020\u0025\u0073",_eedd );};if _cfa ,_fde :=_eec .(_fff .EndElement );_fde &&_cfa .Name ==start .Name {break ;};};return nil ;};func NewISO3166 ()*ISO3166 {_bde :=&ISO3166 {};return _bde };

// Validate validates the RFC3066 and its children
func (_fb *RFC3066 )Validate ()error {return _fb .ValidateWithPath ("\u0052F\u0043\u0033\u0030\u0036\u0036");};

// ValidateWithPath validates the ISO3166 and its children, prefixing error messages with path
func (_dffa *ISO3166 )ValidateWithPath (path string )error {return nil };

// Validate validates the Period and its children
func (_gb *Period )Validate ()error {return _gb .ValidateWithPath ("\u0050\u0065\u0072\u0069\u006f\u0064");};func init (){_gbb .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u004c\u0043\u0053\u0048",NewLCSH );_gbb .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u004d\u0045\u0053\u0048",NewMESH );_gbb .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u0044\u0044\u0043",NewDDC );_gbb .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u004c\u0043\u0043",NewLCC );_gbb .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u0055\u0044\u0043",NewUDC );_gbb .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u0050\u0065\u0072\u0069\u006f\u0064",NewPeriod );_gbb .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u0057\u0033\u0043\u0044\u0054\u0046",NewW3CDTF );_gbb .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u0044\u0043\u004d\u0049\u0054\u0079\u0070\u0065",NewDCMIType );_gbb .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u0049\u004d\u0054",NewIMT );_gbb .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u0055\u0052\u0049",NewURI );_gbb .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u0049\u0053\u004f\u0036\u0033\u0039\u002d\u0032",NewISO639_2 );_gbb .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u0052F\u0043\u0031\u0037\u0036\u0036",NewRFC1766 );_gbb .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u0052F\u0043\u0033\u0030\u0036\u0036",NewRFC3066 );_gbb .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u0050\u006f\u0069n\u0074",NewPoint );_gbb .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u0049S\u004f\u0033\u0031\u0036\u0036",NewISO3166 );_gbb .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u0042\u006f\u0078",NewBox );_gbb .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u0054\u0047\u004e",NewTGN );_gbb .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u0065\u006c\u0065\u006de\u006e\u0074\u004f\u0072\u0052\u0065\u0066\u0069\u006e\u0065m\u0065n\u0074\u0043\u006f\u006e\u0074\u0061\u0069n\u0065\u0072",NewElementOrRefinementContainer );_gbb .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","e\u006c\u0065\u006d\u0065\u006e\u0074s\u0041\u006e\u0064\u0052\u0065\u0066\u0069\u006e\u0065m\u0065\u006e\u0074s\u0047r\u006f\u0075\u0070",NewElementsAndRefinementsGroup );};