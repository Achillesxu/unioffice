//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package terms ;import (_e "encoding/xml";_g "fmt";_ea "github.com/unidoc/unioffice";_d "github.com/unidoc/unioffice/common/logger";_ed "github.com/unidoc/unioffice/schema/purl.org/dc/elements";);func (_cab *ISO639_2 )UnmarshalXML (d *_e .Decoder ,start _e .StartElement )error {for {_agb ,_bfd :=d .Token ();if _bfd !=nil {return _g .Errorf ("p\u0061r\u0073\u0069\u006e\u0067\u0020\u0049\u0053\u004f6\u0033\u0039\u005f\u0032: \u0025\u0073",_bfd );};if _eab ,_cdg :=_agb .(_e .EndElement );_cdg &&_eab .Name ==start .Name {break ;};};return nil ;};func NewDCMIType ()*DCMIType {_ab :=&DCMIType {};return _ab };

// ValidateWithPath validates the ElementsAndRefinementsGroupChoice and its children, prefixing error messages with path
func (_fca *ElementsAndRefinementsGroupChoice )ValidateWithPath (path string )error {for _gg ,_aab :=range _fca .Any {if _gde :=_aab .ValidateWithPath (_g .Sprintf ("\u0025\u0073\u002f\u0041\u006e\u0079\u005b\u0025\u0064\u005d",path ,_gg ));_gde !=nil {return _gde ;};};return nil ;};

// Validate validates the ISO3166 and its children
func (_eeb *ISO3166 )Validate ()error {return _eeb .ValidateWithPath ("\u0049S\u004f\u0033\u0031\u0036\u0036");};

// Validate validates the MESH and its children
func (_acg *MESH )Validate ()error {return _acg .ValidateWithPath ("\u004d\u0045\u0053\u0048")};func NewElementsAndRefinementsGroupChoice ()*ElementsAndRefinementsGroupChoice {_gadg :=&ElementsAndRefinementsGroupChoice {};return _gadg ;};type ElementsAndRefinementsGroup struct{Choice []*ElementsAndRefinementsGroupChoice ;};

// Validate validates the LCSH and its children
func (_ade *LCSH )Validate ()error {return _ade .ValidateWithPath ("\u004c\u0043\u0053\u0048")};func NewURI ()*URI {_gcc :=&URI {};return _gcc };func NewW3CDTF ()*W3CDTF {_dagf :=&W3CDTF {};return _dagf };func (_ebcg *W3CDTF )UnmarshalXML (d *_e .Decoder ,start _e .StartElement )error {for {_cfc ,_adcb :=d .Token ();if _adcb !=nil {return _g .Errorf ("\u0070a\u0072s\u0069\u006e\u0067\u0020\u00573\u0043\u0044T\u0046\u003a\u0020\u0025\u0073",_adcb );};if _gff ,_bdc :=_cfc .(_e .EndElement );_bdc &&_gff .Name ==start .Name {break ;};};return nil ;};

// ValidateWithPath validates the RFC3066 and its children, prefixing error messages with path
func (_dgg *RFC3066 )ValidateWithPath (path string )error {return nil };func (_be *DDC )MarshalXML (e *_e .Encoder ,start _e .StartElement )error {start .Name .Local ="\u0044\u0044\u0043";e .EncodeToken (start );e .EncodeToken (_e .EndElement {Name :start .Name });return nil ;};type TGN struct{};func (_fcb *Point )UnmarshalXML (d *_e .Decoder ,start _e .StartElement )error {for {_ec ,_aaba :=d .Token ();if _aaba !=nil {return _g .Errorf ("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0050\u006f\u0069\u006et\u003a\u0020\u0025\u0073",_aaba );};if _deb ,_acd :=_ec .(_e .EndElement );_acd &&_deb .Name ==start .Name {break ;};};return nil ;};func (_de *LCC )MarshalXML (e *_e .Encoder ,start _e .StartElement )error {start .Name .Local ="\u004c\u0043\u0043";e .EncodeToken (start );e .EncodeToken (_e .EndElement {Name :start .Name });return nil ;};

// ValidateWithPath validates the LCC and its children, prefixing error messages with path
func (_cgda *LCC )ValidateWithPath (path string )error {return nil };func (_bg *ElementsAndRefinementsGroup )UnmarshalXML (d *_e .Decoder ,start _e .StartElement )error {_fa :for {_fd ,_dag :=d .Token ();if _dag !=nil {return _dag ;};switch _aec :=_fd .(type ){case _e .StartElement :switch _aec .Name {case _e .Name {Space :"\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0072\u0067/\u0064c\u002f\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0073\u002f\u0031\u002e\u0031\u002f",Local :"\u0061\u006e\u0079"}:_ged :=NewElementsAndRefinementsGroupChoice ();if _abe :=d .DecodeElement (&_ged .Any ,&_aec );_abe !=nil {return _abe ;};_bg .Choice =append (_bg .Choice ,_ged );default:_d .Log .Debug ("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020e\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0045\u006ce\u006d\u0065\u006e\u0074\u0073\u0041\u006e\u0064\u0052\u0065\u0066\u0069\u006e\u0065\u006d\u0065\u006et\u0073\u0047\u0072\u006f\u0075\u0070\u0020\u0025\u0076",_aec .Name );if _abd :=d .Skip ();_abd !=nil {return _abd ;};};case _e .EndElement :break _fa ;case _e .CharData :};};return nil ;};func (_cdf *ISO3166 )UnmarshalXML (d *_e .Decoder ,start _e .StartElement )error {for {_cec ,_adc :=d .Token ();if _adc !=nil {return _g .Errorf ("\u0070\u0061\u0072\u0073in\u0067\u0020\u0049\u0053\u004f\u0033\u0031\u0036\u0036\u003a\u0020\u0025\u0073",_adc );};if _abeg ,_fbd :=_cec .(_e .EndElement );_fbd &&_abeg .Name ==start .Name {break ;};};return nil ;};func NewBox ()*Box {_c :=&Box {};return _c };type Box struct{};func (_aadg *TGN )UnmarshalXML (d *_e .Decoder ,start _e .StartElement )error {for {_edc ,_gac :=d .Token ();if _gac !=nil {return _g .Errorf ("\u0070a\u0072s\u0069\u006e\u0067\u0020\u0054\u0047\u004e\u003a\u0020\u0025\u0073",_gac );};if _dcb ,_gdae :=_edc .(_e .EndElement );_gdae &&_dcb .Name ==start .Name {break ;};};return nil ;};func (_cd *ElementsAndRefinementsGroup )MarshalXML (e *_e .Encoder ,start _e .StartElement )error {if _cd .Choice !=nil {for _ ,_fe :=range _cd .Choice {_fe .MarshalXML (e ,_e .StartElement {});};};return nil ;};

// ValidateWithPath validates the W3CDTF and its children, prefixing error messages with path
func (_cdgg *W3CDTF )ValidateWithPath (path string )error {return nil };func (_df *DCMIType )UnmarshalXML (d *_e .Decoder ,start _e .StartElement )error {for {_f ,_ead :=d .Token ();if _ead !=nil {return _g .Errorf ("p\u0061r\u0073\u0069\u006e\u0067\u0020\u0044\u0043\u004dI\u0054\u0079\u0070\u0065: \u0025\u0073",_ead );};if _dc ,_af :=_f .(_e .EndElement );_af &&_dc .Name ==start .Name {break ;};};return nil ;};

// ValidateWithPath validates the ISO3166 and its children, prefixing error messages with path
func (_adf *ISO3166 )ValidateWithPath (path string )error {return nil };type RFC1766 struct{};

// Validate validates the ElementsAndRefinementsGroup and its children
func (_aa *ElementsAndRefinementsGroup )Validate ()error {return _aa .ValidateWithPath ("E\u006c\u0065\u006d\u0065\u006e\u0074s\u0041\u006e\u0064\u0052\u0065\u0066\u0069\u006e\u0065m\u0065\u006e\u0074s\u0047r\u006f\u0075\u0070");};func (_fcf *ElementOrRefinementContainer )MarshalXML (e *_e .Encoder ,start _e .StartElement )error {start .Name .Local ="\u0065\u006c\u0065\u006de\u006e\u0074\u004f\u0072\u0052\u0065\u0066\u0069\u006e\u0065m\u0065n\u0074\u0043\u006f\u006e\u0074\u0061\u0069n\u0065\u0072";e .EncodeToken (start );if _fcf .Choice !=nil {for _ ,_da :=range _fcf .Choice {_da .MarshalXML (e ,_e .StartElement {});};};e .EncodeToken (_e .EndElement {Name :start .Name });return nil ;};type DDC struct{};func (_dba *RFC1766 )UnmarshalXML (d *_e .Decoder ,start _e .StartElement )error {for {_bge ,_cgc :=d .Token ();if _cgc !=nil {return _g .Errorf ("\u0070\u0061\u0072\u0073in\u0067\u0020\u0052\u0046\u0043\u0031\u0037\u0036\u0036\u003a\u0020\u0025\u0073",_cgc );};if _fdeg ,_fdb :=_bge .(_e .EndElement );_fdb &&_fdeg .Name ==start .Name {break ;};};return nil ;};func (_bbe *ISO639_2 )MarshalXML (e *_e .Encoder ,start _e .StartElement )error {start .Name .Local ="\u0049\u0053\u004f\u0036\u0033\u0039\u002d\u0032";e .EncodeToken (start );e .EncodeToken (_e .EndElement {Name :start .Name });return nil ;};func (_dfg *LCSH )UnmarshalXML (d *_e .Decoder ,start _e .StartElement )error {for {_gdf ,_aff :=d .Token ();if _aff !=nil {return _g .Errorf ("\u0070\u0061r\u0073\u0069\u006eg\u0020\u004c\u0043\u0053\u0048\u003a\u0020\u0025\u0073",_aff );};if _cfg ,_gdb :=_gdf .(_e .EndElement );_gdb &&_cfg .Name ==start .Name {break ;};};return nil ;};

// ValidateWithPath validates the URI and its children, prefixing error messages with path
func (_eac *URI )ValidateWithPath (path string )error {return nil };func NewISO639_2 ()*ISO639_2 {_cbbc :=&ISO639_2 {};return _cbbc };func NewPeriod ()*Period {_gaf :=&Period {};return _gaf };

// Validate validates the IMT and its children
func (_abc *IMT )Validate ()error {return _abc .ValidateWithPath ("\u0049\u004d\u0054")};

// ValidateWithPath validates the RFC1766 and its children, prefixing error messages with path
func (_ega *RFC1766 )ValidateWithPath (path string )error {return nil };func (_cgd *IMT )UnmarshalXML (d *_e .Decoder ,start _e .StartElement )error {for {_fde ,_ca :=d .Token ();if _ca !=nil {return _g .Errorf ("\u0070a\u0072s\u0069\u006e\u0067\u0020\u0049\u004d\u0054\u003a\u0020\u0025\u0073",_ca );};if _bfgg ,_dab :=_fde .(_e .EndElement );_dab &&_bfgg .Name ==start .Name {break ;};};return nil ;};

// Validate validates the TGN and its children
func (_bfgf *TGN )Validate ()error {return _bfgf .ValidateWithPath ("\u0054\u0047\u004e")};type MESH struct{};type ElementOrRefinementContainer struct{Choice []*ElementsAndRefinementsGroupChoice ;};

// ValidateWithPath validates the UDC and its children, prefixing error messages with path
func (_cdgb *UDC )ValidateWithPath (path string )error {return nil };type UDC struct{};func (_gc *RFC1766 )MarshalXML (e *_e .Encoder ,start _e .StartElement )error {start .Name .Local ="\u0052F\u0043\u0031\u0037\u0036\u0036";e .EncodeToken (start );e .EncodeToken (_e .EndElement {Name :start .Name });return nil ;};func (_dfeg *Point )MarshalXML (e *_e .Encoder ,start _e .StartElement )error {start .Name .Local ="\u0050\u006f\u0069n\u0074";e .EncodeToken (start );e .EncodeToken (_e .EndElement {Name :start .Name });return nil ;};func NewLCSH ()*LCSH {_aef :=&LCSH {};return _aef };type ISO3166 struct{};func NewMESH ()*MESH {_edda :=&MESH {};return _edda };type LCSH struct{};func NewTGN ()*TGN {_bgf :=&TGN {};return _bgf };

// Validate validates the ISO639_2 and its children
func (_ede *ISO639_2 )Validate ()error {return _ede .ValidateWithPath ("\u0049\u0053\u004f\u0036\u0033\u0039\u005f\u0032");};

// Validate validates the RFC3066 and its children
func (_caf *RFC3066 )Validate ()error {return _caf .ValidateWithPath ("\u0052F\u0043\u0033\u0030\u0036\u0036");};

// ValidateWithPath validates the IMT and its children, prefixing error messages with path
func (_cge *IMT )ValidateWithPath (path string )error {return nil };

// ValidateWithPath validates the DDC and its children, prefixing error messages with path
func (_ge *DDC )ValidateWithPath (path string )error {return nil };func (_egb *LCC )UnmarshalXML (d *_e .Decoder ,start _e .StartElement )error {for {_geb ,_dfc :=d .Token ();if _dfc !=nil {return _g .Errorf ("\u0070a\u0072s\u0069\u006e\u0067\u0020\u004c\u0043\u0043\u003a\u0020\u0025\u0073",_dfc );};if _ceb ,_aad :=_geb .(_e .EndElement );_aad &&_ceb .Name ==start .Name {break ;};};return nil ;};

// ValidateWithPath validates the ElementOrRefinementContainer and its children, prefixing error messages with path
func (_db *ElementOrRefinementContainer )ValidateWithPath (path string )error {for _ebg ,_ad :=range _db .Choice {if _ee :=_ad .ValidateWithPath (_g .Sprintf ("\u0025\u0073\u002f\u0043\u0068\u006f\u0069\u0063\u0065\u005b\u0025\u0064\u005d",path ,_ebg ));_ee !=nil {return _ee ;};};return nil ;};type ElementsAndRefinementsGroupChoice struct{Any []*_ed .Any ;};func (_dg *RFC3066 )UnmarshalXML (d *_e .Decoder ,start _e .StartElement )error {for {_cag ,_fgc :=d .Token ();if _fgc !=nil {return _g .Errorf ("\u0070\u0061\u0072\u0073in\u0067\u0020\u0052\u0046\u0043\u0033\u0030\u0036\u0036\u003a\u0020\u0025\u0073",_fgc );};if _efg ,_aabf :=_cag .(_e .EndElement );_aabf &&_efg .Name ==start .Name {break ;};};return nil ;};func (_fcfe *ElementOrRefinementContainer )UnmarshalXML (d *_e .Decoder ,start _e .StartElement )error {_fb :for {_eg ,_bba :=d .Token ();if _bba !=nil {return _bba ;};switch _fba :=_eg .(type ){case _e .StartElement :switch _fba .Name {case _e .Name {Space :"\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0072\u0067/\u0064c\u002f\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0073\u002f\u0031\u002e\u0031\u002f",Local :"\u0061\u006e\u0079"}:_cfa :=NewElementsAndRefinementsGroupChoice ();if _fcd :=d .DecodeElement (&_cfa .Any ,&_fba );_fcd !=nil {return _fcd ;};_fcfe .Choice =append (_fcfe .Choice ,_cfa );default:_d .Log .Debug ("\u0073k\u0069\u0070\u0070\u0069\u006e\u0067\u0020un\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006de\u006e\u0074 \u006f\u006e\u0020E\u006c\u0065\u006d\u0065\u006e\u0074\u004f\u0072\u0052\u0065\u0066\u0069\u006e\u0065\u006d\u0065n\u0074\u0043on\u0074\u0061\u0069n\u0065\u0072\u0020\u0025\u0076",_fba .Name );if _bfg :=d .Skip ();_bfg !=nil {return _bfg ;};};case _e .EndElement :break _fb ;case _e .CharData :};};return nil ;};

// Validate validates the Period and its children
func (_efc *Period )Validate ()error {return _efc .ValidateWithPath ("\u0050\u0065\u0072\u0069\u006f\u0064");};func (_ce *Box )MarshalXML (e *_e .Encoder ,start _e .StartElement )error {start .Name .Local ="\u0042\u006f\u0078";e .EncodeToken (start );e .EncodeToken (_e .EndElement {Name :start .Name });return nil ;};func (_bga *ElementsAndRefinementsGroupChoice )UnmarshalXML (d *_e .Decoder ,start _e .StartElement )error {_fbf :for {_ebd ,_afb :=d .Token ();if _afb !=nil {return _afb ;};switch _faa :=_ebd .(type ){case _e .StartElement :switch _faa .Name {case _e .Name {Space :"\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0072\u0067/\u0064c\u002f\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0073\u002f\u0031\u002e\u0031\u002f",Local :"\u0061\u006e\u0079"}:_dcf :=_ed .NewAny ();if _ag :=d .DecodeElement (_dcf ,&_faa );_ag !=nil {return _ag ;};_bga .Any =append (_bga .Any ,_dcf );default:_d .Log .Debug ("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0045\u006c\u0065\u006d\u0065\u006e\u0074\u0073\u0041\u006ed\u0052\u0065\u0066\u0069\u006e\u0065\u006d\u0065\u006e\u0074\u0073\u0047\u0072\u006fu\u0070\u0043\u0068o\u0069\u0063\u0065\u0020\u0025\u0076",_faa .Name );if _cbg :=d .Skip ();_cbg !=nil {return _cbg ;};};case _e .EndElement :break _fbf ;case _e .CharData :};};return nil ;};func (_efb *IMT )MarshalXML (e *_e .Encoder ,start _e .StartElement )error {start .Name .Local ="\u0049\u004d\u0054";e .EncodeToken (start );e .EncodeToken (_e .EndElement {Name :start .Name });return nil ;};func (_ga *Box )UnmarshalXML (d *_e .Decoder ,start _e .StartElement )error {for {_b ,_dd :=d .Token ();if _dd !=nil {return _g .Errorf ("\u0070a\u0072s\u0069\u006e\u0067\u0020\u0042\u006f\u0078\u003a\u0020\u0025\u0073",_dd );};if _cb ,_gad :=_b .(_e .EndElement );_gad &&_cb .Name ==start .Name {break ;};};return nil ;};type RFC3066 struct{};func (_dad *ISO3166 )MarshalXML (e *_e .Encoder ,start _e .StartElement )error {start .Name .Local ="\u0049S\u004f\u0033\u0031\u0036\u0036";e .EncodeToken (start );e .EncodeToken (_e .EndElement {Name :start .Name });return nil ;};

// Validate validates the UDC and its children
func (_dadg *UDC )Validate ()error {return _dadg .ValidateWithPath ("\u0055\u0044\u0043")};func NewIMT ()*IMT {_ebc :=&IMT {};return _ebc };func NewRFC1766 ()*RFC1766 {_gggc :=&RFC1766 {};return _gggc };type LCC struct{};func (_aca *TGN )MarshalXML (e *_e .Encoder ,start _e .StartElement )error {start .Name .Local ="\u0054\u0047\u004e";e .EncodeToken (start );e .EncodeToken (_e .EndElement {Name :start .Name });return nil ;};func (_bbd *RFC3066 )MarshalXML (e *_e .Encoder ,start _e .StartElement )error {start .Name .Local ="\u0052F\u0043\u0033\u0030\u0036\u0036";e .EncodeToken (start );e .EncodeToken (_e .EndElement {Name :start .Name });return nil ;};

// ValidateWithPath validates the ISO639_2 and its children, prefixing error messages with path
func (_aeeg *ISO639_2 )ValidateWithPath (path string )error {return nil };

// Validate validates the DCMIType and its children
func (_ae *DCMIType )Validate ()error {return _ae .ValidateWithPath ("\u0044\u0043\u004d\u0049\u0054\u0079\u0070\u0065");};func (_gda *Period )MarshalXML (e *_e .Encoder ,start _e .StartElement )error {start .Name .Local ="\u0050\u0065\u0072\u0069\u006f\u0064";e .EncodeToken (start );e .EncodeToken (_e .EndElement {Name :start .Name });return nil ;};func (_agbd *Period )UnmarshalXML (d *_e .Decoder ,start _e .StartElement )error {for {_dcfc ,_acge :=d .Token ();if _acge !=nil {return _g .Errorf ("\u0070a\u0072s\u0069\u006e\u0067\u0020\u0050e\u0072\u0069o\u0064\u003a\u0020\u0025\u0073",_acge );};if _afd ,_cbgg :=_dcfc .(_e .EndElement );_cbgg &&_afd .Name ==start .Name {break ;};};return nil ;};

// ValidateWithPath validates the Period and its children, prefixing error messages with path
func (_ggg *Period )ValidateWithPath (path string )error {return nil };

// Validate validates the W3CDTF and its children
func (_aaa *W3CDTF )Validate ()error {return _aaa .ValidateWithPath ("\u0057\u0033\u0043\u0044\u0054\u0046");};

// Validate validates the ElementOrRefinementContainer and its children
func (_cg *ElementOrRefinementContainer )Validate ()error {return _cg .ValidateWithPath ("\u0045\u006c\u0065\u006de\u006e\u0074\u004f\u0072\u0052\u0065\u0066\u0069\u006e\u0065m\u0065n\u0074\u0043\u006f\u006e\u0074\u0061\u0069n\u0065\u0072");};func (_afbe *UDC )UnmarshalXML (d *_e .Decoder ,start _e .StartElement )error {for {_deg ,_ceg :=d .Token ();if _ceg !=nil {return _g .Errorf ("\u0070a\u0072s\u0069\u006e\u0067\u0020\u0055\u0044\u0043\u003a\u0020\u0025\u0073",_ceg );};if _ggd ,_eca :=_deg .(_e .EndElement );_eca &&_ggd .Name ==start .Name {break ;};};return nil ;};

// ValidateWithPath validates the MESH and its children, prefixing error messages with path
func (_ege *MESH )ValidateWithPath (path string )error {return nil };func NewElementsAndRefinementsGroup ()*ElementsAndRefinementsGroup {_bc :=&ElementsAndRefinementsGroup {};return _bc ;};type IMT struct{};

// ValidateWithPath validates the DCMIType and its children, prefixing error messages with path
func (_ef *DCMIType )ValidateWithPath (path string )error {return nil };func (_gf *ElementsAndRefinementsGroupChoice )MarshalXML (e *_e .Encoder ,start _e .StartElement )error {if _gf .Any !=nil {_fag :=_e .StartElement {Name :_e .Name {Local :"\u0064\u0063\u003a\u0061\u006e\u0079"}};for _ ,_feb :=range _gf .Any {e .EncodeElement (_feb ,_fag );};};return nil ;};type DCMIType struct{};type ISO639_2 struct{};func (_ccaa *UDC )MarshalXML (e *_e .Encoder ,start _e .StartElement )error {start .Name .Local ="\u0055\u0044\u0043";e .EncodeToken (start );e .EncodeToken (_e .EndElement {Name :start .Name });return nil ;};

// Validate validates the LCC and its children
func (_fcae *LCC )Validate ()error {return _fcae .ValidateWithPath ("\u004c\u0043\u0043")};func (_eb *DCMIType )MarshalXML (e *_e .Encoder ,start _e .StartElement )error {start .Name .Local ="\u0044\u0043\u004d\u0049\u0054\u0079\u0070\u0065";e .EncodeToken (start );e .EncodeToken (_e .EndElement {Name :start .Name });return nil ;};func (_fgg *W3CDTF )MarshalXML (e *_e .Encoder ,start _e .StartElement )error {start .Name .Local ="\u0057\u0033\u0043\u0044\u0054\u0046";e .EncodeToken (start );e .EncodeToken (_e .EndElement {Name :start .Name });return nil ;};type Period struct{};func NewUDC ()*UDC {_ccc :=&UDC {};return _ccc };func NewLCC ()*LCC {_bfb :=&LCC {};return _bfb };

// Validate validates the DDC and its children
func (_afg *DDC )Validate ()error {return _afg .ValidateWithPath ("\u0044\u0044\u0043")};func NewElementOrRefinementContainer ()*ElementOrRefinementContainer {_bef :=&ElementOrRefinementContainer {};return _bef ;};func NewISO3166 ()*ISO3166 {_efbb :=&ISO3166 {};return _efbb };

// Validate validates the URI and its children
func (_dbf *URI )Validate ()error {return _dbf .ValidateWithPath ("\u0055\u0052\u0049")};

// Validate validates the Point and its children
func (_gea *Point )Validate ()error {return _gea .ValidateWithPath ("\u0050\u006f\u0069n\u0074")};

// ValidateWithPath validates the Box and its children, prefixing error messages with path
func (_cc *Box )ValidateWithPath (path string )error {return nil };func NewRFC3066 ()*RFC3066 {_ebe :=&RFC3066 {};return _ebe };

// ValidateWithPath validates the ElementsAndRefinementsGroup and its children, prefixing error messages with path
func (_cbb *ElementsAndRefinementsGroup )ValidateWithPath (path string )error {for _gd ,_ac :=range _cbb .Choice {if _bed :=_ac .ValidateWithPath (_g .Sprintf ("\u0025\u0073\u002f\u0043\u0068\u006f\u0069\u0063\u0065\u005b\u0025\u0064\u005d",path ,_gd ));_bed !=nil {return _bed ;};};return nil ;};func NewPoint ()*Point {_dff :=&Point {};return _dff };

// ValidateWithPath validates the LCSH and its children, prefixing error messages with path
func (_fdg *LCSH )ValidateWithPath (path string )error {return nil };type URI struct{};func (_gebe *MESH )MarshalXML (e *_e .Encoder ,start _e .StartElement )error {start .Name .Local ="\u004d\u0045\u0053\u0048";e .EncodeToken (start );e .EncodeToken (_e .EndElement {Name :start .Name });return nil ;};func (_acc *LCSH )MarshalXML (e *_e .Encoder ,start _e .StartElement )error {start .Name .Local ="\u004c\u0043\u0053\u0048";e .EncodeToken (start );e .EncodeToken (_e .EndElement {Name :start .Name });return nil ;};func (_bd *DDC )UnmarshalXML (d *_e .Decoder ,start _e .StartElement )error {for {_edd ,_cf :=d .Token ();if _cf !=nil {return _g .Errorf ("\u0070a\u0072s\u0069\u006e\u0067\u0020\u0044\u0044\u0043\u003a\u0020\u0025\u0073",_cf );};if _bb ,_cbc :=_edd .(_e .EndElement );_cbc &&_bb .Name ==start .Name {break ;};};return nil ;};func (_eae *URI )MarshalXML (e *_e .Encoder ,start _e .StartElement )error {start .Name .Local ="\u0055\u0052\u0049";e .EncodeToken (start );e .EncodeToken (_e .EndElement {Name :start .Name });return nil ;};

// Validate validates the RFC1766 and its children
func (_gdc *RFC1766 )Validate ()error {return _gdc .ValidateWithPath ("\u0052F\u0043\u0031\u0037\u0036\u0036");};

// Validate validates the Box and its children
func (_bf *Box )Validate ()error {return _bf .ValidateWithPath ("\u0042\u006f\u0078")};

// ValidateWithPath validates the Point and its children, prefixing error messages with path
func (_bgd *Point )ValidateWithPath (path string )error {return nil };func NewDDC ()*DDC {_fc :=&DDC {};return _fc };

// Validate validates the ElementsAndRefinementsGroupChoice and its children
func (_aee *ElementsAndRefinementsGroupChoice )Validate ()error {return _aee .ValidateWithPath ("\u0045\u006c\u0065\u006d\u0065\u006et\u0073\u0041\u006e\u0064\u0052\u0065\u0066\u0069\u006e\u0065\u006d\u0065\u006et\u0073\u0047\u0072\u006f\u0075\u0070\u0043h\u006f\u0069\u0063\u0065");};type Point struct{};

// ValidateWithPath validates the TGN and its children, prefixing error messages with path
func (_bbaa *TGN )ValidateWithPath (path string )error {return nil };type W3CDTF struct{};func (_dcg *MESH )UnmarshalXML (d *_e .Decoder ,start _e .StartElement )error {for {_ba ,_cgb :=d .Token ();if _cgb !=nil {return _g .Errorf ("\u0070\u0061r\u0073\u0069\u006eg\u0020\u004d\u0045\u0053\u0048\u003a\u0020\u0025\u0073",_cgb );};if _ggc ,_fg :=_ba .(_e .EndElement );_fg &&_ggc .Name ==start .Name {break ;};};return nil ;};func (_bec *URI )UnmarshalXML (d *_e .Decoder ,start _e .StartElement )error {for {_gb ,_efd :=d .Token ();if _efd !=nil {return _g .Errorf ("\u0070a\u0072s\u0069\u006e\u0067\u0020\u0055\u0052\u0049\u003a\u0020\u0025\u0073",_efd );};if _fbfc ,_bac :=_gb .(_e .EndElement );_bac &&_fbfc .Name ==start .Name {break ;};};return nil ;};func init (){_ea .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u004c\u0043\u0053\u0048",NewLCSH );_ea .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u004d\u0045\u0053\u0048",NewMESH );_ea .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u0044\u0044\u0043",NewDDC );_ea .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u004c\u0043\u0043",NewLCC );_ea .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u0055\u0044\u0043",NewUDC );_ea .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u0050\u0065\u0072\u0069\u006f\u0064",NewPeriod );_ea .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u0057\u0033\u0043\u0044\u0054\u0046",NewW3CDTF );_ea .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u0044\u0043\u004d\u0049\u0054\u0079\u0070\u0065",NewDCMIType );_ea .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u0049\u004d\u0054",NewIMT );_ea .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u0055\u0052\u0049",NewURI );_ea .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u0049\u0053\u004f\u0036\u0033\u0039\u002d\u0032",NewISO639_2 );_ea .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u0052F\u0043\u0031\u0037\u0036\u0036",NewRFC1766 );_ea .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u0052F\u0043\u0033\u0030\u0036\u0036",NewRFC3066 );_ea .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u0050\u006f\u0069n\u0074",NewPoint );_ea .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u0049S\u004f\u0033\u0031\u0036\u0036",NewISO3166 );_ea .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u0042\u006f\u0078",NewBox );_ea .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u0054\u0047\u004e",NewTGN );_ea .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u0065\u006c\u0065\u006de\u006e\u0074\u004f\u0072\u0052\u0065\u0066\u0069\u006e\u0065m\u0065n\u0074\u0043\u006f\u006e\u0074\u0061\u0069n\u0065\u0072",NewElementOrRefinementContainer );_ea .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","e\u006c\u0065\u006d\u0065\u006e\u0074s\u0041\u006e\u0064\u0052\u0065\u0066\u0069\u006e\u0065m\u0065\u006e\u0074s\u0047r\u006f\u0075\u0070",NewElementsAndRefinementsGroup );};