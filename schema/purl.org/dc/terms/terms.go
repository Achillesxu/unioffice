//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package terms ;import (_b "encoding/xml";_a "fmt";_e "github.com/unidoc/unioffice";_fa "github.com/unidoc/unioffice/common/logger";_bg "github.com/unidoc/unioffice/schema/purl.org/dc/elements";);func (_cfbd *Point )UnmarshalXML (d *_b .Decoder ,start _b .StartElement )error {for {_cfca ,_gac :=d .Token ();if _gac !=nil {return _a .Errorf ("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0050\u006f\u0069\u006et\u003a\u0020\u0025\u0073",_gac );};if _dba ,_bea :=_cfca .(_b .EndElement );_bea &&_dba .Name ==start .Name {break ;};};return nil ;};func NewDDC ()*DDC {_fd :=&DDC {};return _fd };

// ValidateWithPath validates the Box and its children, prefixing error messages with path
func (_ee *Box )ValidateWithPath (path string )error {return nil };

// Validate validates the RFC3066 and its children
func (_eb *RFC3066 )Validate ()error {return _eb .ValidateWithPath ("\u0052F\u0043\u0033\u0030\u0036\u0036");};

// Validate validates the URI and its children
func (_gga *URI )Validate ()error {return _gga .ValidateWithPath ("\u0055\u0052\u0049")};type IMT struct{};func (_ccgd *W3CDTF )UnmarshalXML (d *_b .Decoder ,start _b .StartElement )error {for {_fcda ,_abe :=d .Token ();if _abe !=nil {return _a .Errorf ("\u0070a\u0072s\u0069\u006e\u0067\u0020\u00573\u0043\u0044T\u0046\u003a\u0020\u0025\u0073",_abe );};if _ecfd ,_fbca :=_fcda .(_b .EndElement );_fbca &&_ecfd .Name ==start .Name {break ;};};return nil ;};func (_gb *Box )MarshalXML (e *_b .Encoder ,start _b .StartElement )error {start .Name .Local ="\u0042\u006f\u0078";e .EncodeToken (start );e .EncodeToken (_b .EndElement {Name :start .Name });return nil ;};type Box struct{};func (_da *DCMIType )MarshalXML (e *_b .Encoder ,start _b .StartElement )error {start .Name .Local ="\u0044\u0043\u004d\u0049\u0054\u0079\u0070\u0065";e .EncodeToken (start );e .EncodeToken (_b .EndElement {Name :start .Name });return nil ;};func (_bcg *URI )UnmarshalXML (d *_b .Decoder ,start _b .StartElement )error {for {_dbge ,_agg :=d .Token ();if _agg !=nil {return _a .Errorf ("\u0070a\u0072s\u0069\u006e\u0067\u0020\u0055\u0052\u0049\u003a\u0020\u0025\u0073",_agg );};if _gee ,_dec :=_dbge .(_b .EndElement );_dec &&_gee .Name ==start .Name {break ;};};return nil ;};type ElementsAndRefinementsGroup struct{Choice []*ElementsAndRefinementsGroupChoice ;};func (_bf *ElementsAndRefinementsGroup )UnmarshalXML (d *_b .Decoder ,start _b .StartElement )error {_gc :for {_gg ,_daeg :=d .Token ();if _daeg !=nil {return _daeg ;};switch _cg :=_gg .(type ){case _b .StartElement :switch _cg .Name {case _b .Name {Space :"\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0072\u0067/\u0064c\u002f\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0073\u002f\u0031\u002e\u0031\u002f",Local :"\u0061\u006e\u0079"}:_ac :=NewElementsAndRefinementsGroupChoice ();if _cbf :=d .DecodeElement (&_ac .Any ,&_cg );_cbf !=nil {return _cbf ;};_bf .Choice =append (_bf .Choice ,_ac );default:_fa .Log .Debug ("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020e\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0045\u006ce\u006d\u0065\u006e\u0074\u0073\u0041\u006e\u0064\u0052\u0065\u0066\u0069\u006e\u0065\u006d\u0065\u006et\u0073\u0047\u0072\u006f\u0075\u0070\u0020\u0025\u0076",_cg .Name );if _gda :=d .Skip ();_gda !=nil {return _gda ;};};case _b .EndElement :break _gc ;case _b .CharData :};};return nil ;};

// Validate validates the ElementOrRefinementContainer and its children
func (_cfb *ElementOrRefinementContainer )Validate ()error {return _cfb .ValidateWithPath ("\u0045\u006c\u0065\u006de\u006e\u0074\u004f\u0072\u0052\u0065\u0066\u0069\u006e\u0065m\u0065n\u0074\u0043\u006f\u006e\u0074\u0061\u0069n\u0065\u0072");};func NewLCC ()*LCC {_acg :=&LCC {};return _acg };

// ValidateWithPath validates the ISO3166 and its children, prefixing error messages with path
func (_dgc *ISO3166 )ValidateWithPath (path string )error {return nil };type DCMIType struct{};type DDC struct{};func (_ec *DDC )UnmarshalXML (d *_b .Decoder ,start _b .StartElement )error {for {_fc ,_dac :=d .Token ();if _dac !=nil {return _a .Errorf ("\u0070a\u0072s\u0069\u006e\u0067\u0020\u0044\u0044\u0043\u003a\u0020\u0025\u0073",_dac );};if _ea ,_be :=_fc .(_b .EndElement );_be &&_ea .Name ==start .Name {break ;};};return nil ;};

// ValidateWithPath validates the Point and its children, prefixing error messages with path
func (_fbg *Point )ValidateWithPath (path string )error {return nil };func (_c *DCMIType )UnmarshalXML (d *_b .Decoder ,start _b .StartElement )error {for {_ag ,_aa :=d .Token ();if _aa !=nil {return _a .Errorf ("p\u0061r\u0073\u0069\u006e\u0067\u0020\u0044\u0043\u004dI\u0054\u0079\u0070\u0065: \u0025\u0073",_aa );};if _ff ,_db :=_ag .(_b .EndElement );_db &&_ff .Name ==start .Name {break ;};};return nil ;};func NewDCMIType ()*DCMIType {_d :=&DCMIType {};return _d };type RFC3066 struct{};func NewISO3166 ()*ISO3166 {_fdb :=&ISO3166 {};return _fdb };

// ValidateWithPath validates the LCC and its children, prefixing error messages with path
func (_ffa *LCC )ValidateWithPath (path string )error {return nil };

// ValidateWithPath validates the ISO639_2 and its children, prefixing error messages with path
func (_eadc *ISO639_2 )ValidateWithPath (path string )error {return nil };func NewLCSH ()*LCSH {_fcd :=&LCSH {};return _fcd };func (_gd *ElementOrRefinementContainer )MarshalXML (e *_b .Encoder ,start _b .StartElement )error {start .Name .Local ="\u0065\u006c\u0065\u006de\u006e\u0074\u004f\u0072\u0052\u0065\u0066\u0069\u006e\u0065m\u0065n\u0074\u0043\u006f\u006e\u0074\u0061\u0069n\u0065\u0072";e .EncodeToken (start );if _gd .Choice !=nil {for _ ,_ccb :=range _gd .Choice {_ccb .MarshalXML (e ,_b .StartElement {});};};e .EncodeToken (_b .EndElement {Name :start .Name });return nil ;};func (_gdcc *MESH )MarshalXML (e *_b .Encoder ,start _b .StartElement )error {start .Name .Local ="\u004d\u0045\u0053\u0048";e .EncodeToken (start );e .EncodeToken (_b .EndElement {Name :start .Name });return nil ;};

// ValidateWithPath validates the URI and its children, prefixing error messages with path
func (_dcg *URI )ValidateWithPath (path string )error {return nil };func (_bbc *Period )UnmarshalXML (d *_b .Decoder ,start _b .StartElement )error {for {_ef ,_caba :=d .Token ();if _caba !=nil {return _a .Errorf ("\u0070a\u0072s\u0069\u006e\u0067\u0020\u0050e\u0072\u0069o\u0064\u003a\u0020\u0025\u0073",_caba );};if _dbd ,_ccc :=_ef .(_b .EndElement );_ccc &&_dbd .Name ==start .Name {break ;};};return nil ;};type TGN struct{};

// ValidateWithPath validates the IMT and its children, prefixing error messages with path
func (_eab *IMT )ValidateWithPath (path string )error {return nil };type MESH struct{};func (_adb *ISO3166 )MarshalXML (e *_b .Encoder ,start _b .StartElement )error {start .Name .Local ="\u0049S\u004f\u0033\u0031\u0036\u0036";e .EncodeToken (start );e .EncodeToken (_b .EndElement {Name :start .Name });return nil ;};func (_cceb *IMT )MarshalXML (e *_b .Encoder ,start _b .StartElement )error {start .Name .Local ="\u0049\u004d\u0054";e .EncodeToken (start );e .EncodeToken (_b .EndElement {Name :start .Name });return nil ;};func (_aga *ElementsAndRefinementsGroup )MarshalXML (e *_b .Encoder ,start _b .StartElement )error {if _aga .Choice !=nil {for _ ,_ad :=range _aga .Choice {_ad .MarshalXML (e ,_b .StartElement {});};};return nil ;};

// Validate validates the ISO3166 and its children
func (_gdfd *ISO3166 )Validate ()error {return _gdfd .ValidateWithPath ("\u0049S\u004f\u0033\u0031\u0036\u0036");};func NewW3CDTF ()*W3CDTF {_gdbd :=&W3CDTF {};return _gdbd };func (_dfb *RFC1766 )UnmarshalXML (d *_b .Decoder ,start _b .StartElement )error {for {_efg ,_bfg :=d .Token ();if _bfg !=nil {return _a .Errorf ("\u0070\u0061\u0072\u0073in\u0067\u0020\u0052\u0046\u0043\u0031\u0037\u0036\u0036\u003a\u0020\u0025\u0073",_bfg );};if _fgf ,_gdbg :=_efg .(_b .EndElement );_gdbg &&_fgf .Name ==start .Name {break ;};};return nil ;};func (_bca *RFC3066 )MarshalXML (e *_b .Encoder ,start _b .StartElement )error {start .Name .Local ="\u0052F\u0043\u0033\u0030\u0036\u0036";e .EncodeToken (start );e .EncodeToken (_b .EndElement {Name :start .Name });return nil ;};type W3CDTF struct{};func (_cdf *W3CDTF )MarshalXML (e *_b .Encoder ,start _b .StartElement )error {start .Name .Local ="\u0057\u0033\u0043\u0044\u0054\u0046";e .EncodeToken (start );e .EncodeToken (_b .EndElement {Name :start .Name });return nil ;};func (_deaa *TGN )MarshalXML (e *_b .Encoder ,start _b .StartElement )error {start .Name .Local ="\u0054\u0047\u004e";e .EncodeToken (start );e .EncodeToken (_b .EndElement {Name :start .Name });return nil ;};func (_bffb *ISO639_2 )MarshalXML (e *_b .Encoder ,start _b .StartElement )error {start .Name .Local ="\u0049\u0053\u004f\u0036\u0033\u0039\u002d\u0032";e .EncodeToken (start );e .EncodeToken (_b .EndElement {Name :start .Name });return nil ;};func NewTGN ()*TGN {_fag :=&TGN {};return _fag };func (_gff *UDC )UnmarshalXML (d *_b .Decoder ,start _b .StartElement )error {for {_bcf ,_dfbd :=d .Token ();if _dfbd !=nil {return _a .Errorf ("\u0070a\u0072s\u0069\u006e\u0067\u0020\u0055\u0044\u0043\u003a\u0020\u0025\u0073",_dfbd );};if _bged ,_ffb :=_bcf .(_b .EndElement );_ffb &&_bged .Name ==start .Name {break ;};};return nil ;};func NewRFC1766 ()*RFC1766 {_gdbf :=&RFC1766 {};return _gdbf };func (_fe *Box )UnmarshalXML (d *_b .Decoder ,start _b .StartElement )error {for {_fg ,_eg :=d .Token ();if _eg !=nil {return _a .Errorf ("\u0070a\u0072s\u0069\u006e\u0067\u0020\u0042\u006f\u0078\u003a\u0020\u0025\u0073",_eg );};if _ge ,_gf :=_fg .(_b .EndElement );_gf &&_ge .Name ==start .Name {break ;};};return nil ;};

// ValidateWithPath validates the Period and its children, prefixing error messages with path
func (_ceb *Period )ValidateWithPath (path string )error {return nil };

// ValidateWithPath validates the LCSH and its children, prefixing error messages with path
func (_dbc *LCSH )ValidateWithPath (path string )error {return nil };

// ValidateWithPath validates the UDC and its children, prefixing error messages with path
func (_egc *UDC )ValidateWithPath (path string )error {return nil };func NewPoint ()*Point {_gcg :=&Point {};return _gcg };func NewBox ()*Box {_g :=&Box {};return _g };func (_dc *LCSH )MarshalXML (e *_b .Encoder ,start _b .StartElement )error {start .Name .Local ="\u004c\u0043\u0053\u0048";e .EncodeToken (start );e .EncodeToken (_b .EndElement {Name :start .Name });return nil ;};type ElementsAndRefinementsGroupChoice struct{Any []*_bg .Any ;};

// ValidateWithPath validates the ElementsAndRefinementsGroupChoice and its children, prefixing error messages with path
func (_fff *ElementsAndRefinementsGroupChoice )ValidateWithPath (path string )error {for _fdd ,_feg :=range _fff .Any {if _cfba :=_feg .ValidateWithPath (_a .Sprintf ("\u0025\u0073\u002f\u0041\u006e\u0079\u005b\u0025\u0064\u005d",path ,_fdd ));_cfba !=nil {return _cfba ;};};return nil ;};

// Validate validates the RFC1766 and its children
func (_bcd *RFC1766 )Validate ()error {return _bcd .ValidateWithPath ("\u0052F\u0043\u0031\u0037\u0036\u0036");};

// Validate validates the ElementsAndRefinementsGroupChoice and its children
func (_eae *ElementsAndRefinementsGroupChoice )Validate ()error {return _eae .ValidateWithPath ("\u0045\u006c\u0065\u006d\u0065\u006et\u0073\u0041\u006e\u0064\u0052\u0065\u0066\u0069\u006e\u0065\u006d\u0065\u006et\u0073\u0047\u0072\u006f\u0075\u0070\u0043h\u006f\u0069\u0063\u0065");};func (_bffe *ISO639_2 )UnmarshalXML (d *_b .Decoder ,start _b .StartElement )error {for {_acb ,_feb :=d .Token ();if _feb !=nil {return _a .Errorf ("p\u0061r\u0073\u0069\u006e\u0067\u0020\u0049\u0053\u004f6\u0033\u0039\u005f\u0032: \u0025\u0073",_feb );};if _cfbb ,_ccg :=_acb .(_b .EndElement );_ccg &&_cfbb .Name ==start .Name {break ;};};return nil ;};

// ValidateWithPath validates the W3CDTF and its children, prefixing error messages with path
func (_gdfa *W3CDTF )ValidateWithPath (path string )error {return nil };

// ValidateWithPath validates the TGN and its children, prefixing error messages with path
func (_cea *TGN )ValidateWithPath (path string )error {return nil };

// Validate validates the MESH and its children
func (_fda *MESH )Validate ()error {return _fda .ValidateWithPath ("\u004d\u0045\u0053\u0048")};func NewElementOrRefinementContainer ()*ElementOrRefinementContainer {_cb :=&ElementOrRefinementContainer {};return _cb ;};func (_egf *DDC )MarshalXML (e *_b .Encoder ,start _b .StartElement )error {start .Name .Local ="\u0044\u0044\u0043";e .EncodeToken (start );e .EncodeToken (_b .EndElement {Name :start .Name });return nil ;};type UDC struct{};func (_adg *ElementsAndRefinementsGroupChoice )UnmarshalXML (d *_b .Decoder ,start _b .StartElement )error {_afb :for {_ce ,_gfb :=d .Token ();if _gfb !=nil {return _gfb ;};switch _fae :=_ce .(type ){case _b .StartElement :switch _fae .Name {case _b .Name {Space :"\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0072\u0067/\u0064c\u002f\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0073\u002f\u0031\u002e\u0031\u002f",Local :"\u0061\u006e\u0079"}:_fec :=_bg .NewAny ();if _ffg :=d .DecodeElement (_fec ,&_fae );_ffg !=nil {return _ffg ;};_adg .Any =append (_adg .Any ,_fec );default:_fa .Log .Debug ("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0045\u006c\u0065\u006d\u0065\u006e\u0074\u0073\u0041\u006ed\u0052\u0065\u0066\u0069\u006e\u0065\u006d\u0065\u006e\u0074\u0073\u0047\u0072\u006fu\u0070\u0043\u0068o\u0069\u0063\u0065\u0020\u0025\u0076",_fae .Name );if _fee :=d .Skip ();_fee !=nil {return _fee ;};};case _b .EndElement :break _afb ;case _b .CharData :};};return nil ;};func (_de *LCSH )UnmarshalXML (d *_b .Decoder ,start _b .StartElement )error {for {_cbb ,_bdc :=d .Token ();if _bdc !=nil {return _a .Errorf ("\u0070\u0061r\u0073\u0069\u006eg\u0020\u004c\u0043\u0053\u0048\u003a\u0020\u0025\u0073",_bdc );};if _ccgc ,_dad :=_cbb .(_b .EndElement );_dad &&_ccgc .Name ==start .Name {break ;};};return nil ;};

// ValidateWithPath validates the ElementOrRefinementContainer and its children, prefixing error messages with path
func (_fbc *ElementOrRefinementContainer )ValidateWithPath (path string )error {for _dbe ,_bd :=range _fbc .Choice {if _ead :=_bd .ValidateWithPath (_a .Sprintf ("\u0025\u0073\u002f\u0043\u0068\u006f\u0069\u0063\u0065\u005b\u0025\u0064\u005d",path ,_dbe ));_ead !=nil {return _ead ;};};return nil ;};func (_caf *ElementsAndRefinementsGroupChoice )MarshalXML (e *_b .Encoder ,start _b .StartElement )error {if _caf .Any !=nil {_bff :=_b .StartElement {Name :_b .Name {Local :"\u0064\u0063\u003a\u0061\u006e\u0079"}};for _ ,_cff :=range _caf .Any {e .EncodeElement (_cff ,_bff );};};return nil ;};

// ValidateWithPath validates the MESH and its children, prefixing error messages with path
func (_afc *MESH )ValidateWithPath (path string )error {return nil };func (_ed *RFC3066 )UnmarshalXML (d *_b .Decoder ,start _b .StartElement )error {for {_gab ,_ced :=d .Token ();if _ced !=nil {return _a .Errorf ("\u0070\u0061\u0072\u0073in\u0067\u0020\u0052\u0046\u0043\u0033\u0030\u0036\u0036\u003a\u0020\u0025\u0073",_ced );};if _ba ,_gaf :=_gab .(_b .EndElement );_gaf &&_ba .Name ==start .Name {break ;};};return nil ;};type Point struct{};func (_df *IMT )UnmarshalXML (d *_b .Decoder ,start _b .StartElement )error {for {_cbe ,_cd :=d .Token ();if _cd !=nil {return _a .Errorf ("\u0070a\u0072s\u0069\u006e\u0067\u0020\u0049\u004d\u0054\u003a\u0020\u0025\u0073",_cd );};if _ab ,_gdcd :=_cbe .(_b .EndElement );_gdcd &&_ab .Name ==start .Name {break ;};};return nil ;};type URI struct{};func NewUDC ()*UDC {_fac :=&UDC {};return _fac };func NewISO639_2 ()*ISO639_2 {_bdaa :=&ISO639_2 {};return _bdaa };

// Validate validates the IMT and its children
func (_cab *IMT )Validate ()error {return _cab .ValidateWithPath ("\u0049\u004d\u0054")};

// ValidateWithPath validates the DCMIType and its children, prefixing error messages with path
func (_dae *DCMIType )ValidateWithPath (path string )error {return nil };func NewPeriod ()*Period {_dgg :=&Period {};return _dgg };

// ValidateWithPath validates the DDC and its children, prefixing error messages with path
func (_cc *DDC )ValidateWithPath (path string )error {return nil };func (_cdd *LCC )UnmarshalXML (d *_b .Decoder ,start _b .StartElement )error {for {_fddb ,_ae :=d .Token ();if _ae !=nil {return _a .Errorf ("\u0070a\u0072s\u0069\u006e\u0067\u0020\u004c\u0043\u0043\u003a\u0020\u0025\u0073",_ae );};if _gbe ,_aef :=_fddb .(_b .EndElement );_aef &&_gbe .Name ==start .Name {break ;};};return nil ;};func NewURI ()*URI {_aff :=&URI {};return _aff };type LCSH struct{};func (_faf *UDC )MarshalXML (e *_b .Encoder ,start _b .StartElement )error {start .Name .Local ="\u0055\u0044\u0043";e .EncodeToken (start );e .EncodeToken (_b .EndElement {Name :start .Name });return nil ;};type ElementOrRefinementContainer struct{Choice []*ElementsAndRefinementsGroupChoice ;};

// Validate validates the ElementsAndRefinementsGroup and its children
func (_ca *ElementsAndRefinementsGroup )Validate ()error {return _ca .ValidateWithPath ("E\u006c\u0065\u006d\u0065\u006e\u0074s\u0041\u006e\u0064\u0052\u0065\u0066\u0069\u006e\u0065m\u0065\u006e\u0074s\u0047r\u006f\u0075\u0070");};

// Validate validates the ISO639_2 and its children
func (_bge *ISO639_2 )Validate ()error {return _bge .ValidateWithPath ("\u0049\u0053\u004f\u0036\u0033\u0039\u005f\u0032");};func (_fdf *TGN )UnmarshalXML (d *_b .Decoder ,start _b .StartElement )error {for {_gdfb ,_gfd :=d .Token ();if _gfd !=nil {return _a .Errorf ("\u0070a\u0072s\u0069\u006e\u0067\u0020\u0054\u0047\u004e\u003a\u0020\u0025\u0073",_gfd );};if _gcd ,_ecc :=_gdfb .(_b .EndElement );_ecc &&_gcd .Name ==start .Name {break ;};};return nil ;};func NewRFC3066 ()*RFC3066 {_ddd :=&RFC3066 {};return _ddd };

// ValidateWithPath validates the RFC1766 and its children, prefixing error messages with path
func (_acc *RFC1766 )ValidateWithPath (path string )error {return nil };func (_aac *MESH )UnmarshalXML (d *_b .Decoder ,start _b .StartElement )error {for {_dea ,_cee :=d .Token ();if _cee !=nil {return _a .Errorf ("\u0070\u0061r\u0073\u0069\u006eg\u0020\u004d\u0045\u0053\u0048\u003a\u0020\u0025\u0073",_cee );};if _gdb ,_cddf :=_dea .(_b .EndElement );_cddf &&_gdb .Name ==start .Name {break ;};};return nil ;};

// ValidateWithPath validates the ElementsAndRefinementsGroup and its children, prefixing error messages with path
func (_gdf *ElementsAndRefinementsGroup )ValidateWithPath (path string )error {for _ccef ,_ga :=range _gdf .Choice {if _gcf :=_ga .ValidateWithPath (_a .Sprintf ("\u0025\u0073\u002f\u0043\u0068\u006f\u0069\u0063\u0065\u005b\u0025\u0064\u005d",path ,_ccef ));_gcf !=nil {return _gcf ;};};return nil ;};func NewElementsAndRefinementsGroupChoice ()*ElementsAndRefinementsGroupChoice {_fce :=&ElementsAndRefinementsGroupChoice {};return _fce ;};func NewIMT ()*IMT {_dd :=&IMT {};return _dd };

// Validate validates the LCC and its children
func (_abd *LCC )Validate ()error {return _abd .ValidateWithPath ("\u004c\u0043\u0043")};func (_abc *ISO3166 )UnmarshalXML (d *_b .Decoder ,start _b .StartElement )error {for {_dfd ,_egg :=d .Token ();if _egg !=nil {return _a .Errorf ("\u0070\u0061\u0072\u0073in\u0067\u0020\u0049\u0053\u004f\u0033\u0031\u0036\u0036\u003a\u0020\u0025\u0073",_egg );};if _ddg ,_cdg :=_dfd .(_b .EndElement );_cdg &&_ddg .Name ==start .Name {break ;};};return nil ;};

// ValidateWithPath validates the RFC3066 and its children, prefixing error messages with path
func (_dgcf *RFC3066 )ValidateWithPath (path string )error {return nil };

// Validate validates the Box and its children
func (_fb *Box )Validate ()error {return _fb .ValidateWithPath ("\u0042\u006f\u0078")};

// Validate validates the UDC and its children
func (_ddgd *UDC )Validate ()error {return _ddgd .ValidateWithPath ("\u0055\u0044\u0043")};type LCC struct{};type ISO3166 struct{};

// Validate validates the DDC and its children
func (_bb *DDC )Validate ()error {return _bb .ValidateWithPath ("\u0044\u0044\u0043")};func (_gae *Point )MarshalXML (e *_b .Encoder ,start _b .StartElement )error {start .Name .Local ="\u0050\u006f\u0069n\u0074";e .EncodeToken (start );e .EncodeToken (_b .EndElement {Name :start .Name });return nil ;};

// Validate validates the W3CDTF and its children
func (_ggac *W3CDTF )Validate ()error {return _ggac .ValidateWithPath ("\u0057\u0033\u0043\u0044\u0054\u0046");};

// Validate validates the Point and its children
func (_eff *Point )Validate ()error {return _eff .ValidateWithPath ("\u0050\u006f\u0069n\u0074")};func (_aba *RFC1766 )MarshalXML (e *_b .Encoder ,start _b .StartElement )error {start .Name .Local ="\u0052F\u0043\u0031\u0037\u0036\u0036";e .EncodeToken (start );e .EncodeToken (_b .EndElement {Name :start .Name });return nil ;};

// Validate validates the TGN and its children
func (_dbg *TGN )Validate ()error {return _dbg .ValidateWithPath ("\u0054\u0047\u004e")};type Period struct{};type RFC1766 struct{};func (_bbf *URI )MarshalXML (e *_b .Encoder ,start _b .StartElement )error {start .Name .Local ="\u0055\u0052\u0049";e .EncodeToken (start );e .EncodeToken (_b .EndElement {Name :start .Name });return nil ;};func NewElementsAndRefinementsGroup ()*ElementsAndRefinementsGroup {_gdc :=&ElementsAndRefinementsGroup {};return _gdc ;};func (_af *ElementOrRefinementContainer )UnmarshalXML (d *_b .Decoder ,start _b .StartElement )error {_ecf :for {_fea ,_gbb :=d .Token ();if _gbb !=nil {return _gbb ;};switch _cce :=_fea .(type ){case _b .StartElement :switch _cce .Name {case _b .Name {Space :"\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0072\u0067/\u0064c\u002f\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0073\u002f\u0031\u002e\u0031\u002f",Local :"\u0061\u006e\u0079"}:_bc :=NewElementsAndRefinementsGroupChoice ();if _cfc :=d .DecodeElement (&_bc .Any ,&_cce );_cfc !=nil {return _cfc ;};_af .Choice =append (_af .Choice ,_bc );default:_fa .Log .Debug ("\u0073k\u0069\u0070\u0070\u0069\u006e\u0067\u0020un\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006de\u006e\u0074 \u006f\u006e\u0020E\u006c\u0065\u006d\u0065\u006e\u0074\u004f\u0072\u0052\u0065\u0066\u0069\u006e\u0065\u006d\u0065n\u0074\u0043on\u0074\u0061\u0069n\u0065\u0072\u0020\u0025\u0076",_cce .Name );if _gec :=d .Skip ();_gec !=nil {return _gec ;};};case _b .EndElement :break _ecf ;case _b .CharData :};};return nil ;};

// Validate validates the LCSH and its children
func (_abdb *LCSH )Validate ()error {return _abdb .ValidateWithPath ("\u004c\u0043\u0053\u0048")};func (_gaa *Period )MarshalXML (e *_b .Encoder ,start _b .StartElement )error {start .Name .Local ="\u0050\u0065\u0072\u0069\u006f\u0064";e .EncodeToken (start );e .EncodeToken (_b .EndElement {Name :start .Name });return nil ;};

// Validate validates the Period and its children
func (_ffd *Period )Validate ()error {return _ffd .ValidateWithPath ("\u0050\u0065\u0072\u0069\u006f\u0064");};func (_agf *LCC )MarshalXML (e *_b .Encoder ,start _b .StartElement )error {start .Name .Local ="\u004c\u0043\u0043";e .EncodeToken (start );e .EncodeToken (_b .EndElement {Name :start .Name });return nil ;};

// Validate validates the DCMIType and its children
func (_gbf *DCMIType )Validate ()error {return _gbf .ValidateWithPath ("\u0044\u0043\u004d\u0049\u0054\u0079\u0070\u0065");};type ISO639_2 struct{};func NewMESH ()*MESH {_beg :=&MESH {};return _beg };func init (){_e .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u004c\u0043\u0053\u0048",NewLCSH );_e .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u004d\u0045\u0053\u0048",NewMESH );_e .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u0044\u0044\u0043",NewDDC );_e .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u004c\u0043\u0043",NewLCC );_e .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u0055\u0044\u0043",NewUDC );_e .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u0050\u0065\u0072\u0069\u006f\u0064",NewPeriod );_e .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u0057\u0033\u0043\u0044\u0054\u0046",NewW3CDTF );_e .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u0044\u0043\u004d\u0049\u0054\u0079\u0070\u0065",NewDCMIType );_e .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u0049\u004d\u0054",NewIMT );_e .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u0055\u0052\u0049",NewURI );_e .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u0049\u0053\u004f\u0036\u0033\u0039\u002d\u0032",NewISO639_2 );_e .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u0052F\u0043\u0031\u0037\u0036\u0036",NewRFC1766 );_e .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u0052F\u0043\u0033\u0030\u0036\u0036",NewRFC3066 );_e .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u0050\u006f\u0069n\u0074",NewPoint );_e .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u0049S\u004f\u0033\u0031\u0036\u0036",NewISO3166 );_e .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u0042\u006f\u0078",NewBox );_e .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u0054\u0047\u004e",NewTGN );_e .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u0065\u006c\u0065\u006de\u006e\u0074\u004f\u0072\u0052\u0065\u0066\u0069\u006e\u0065m\u0065n\u0074\u0043\u006f\u006e\u0074\u0061\u0069n\u0065\u0072",NewElementOrRefinementContainer );_e .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","e\u006c\u0065\u006d\u0065\u006e\u0074s\u0041\u006e\u0064\u0052\u0065\u0066\u0069\u006e\u0065m\u0065\u006e\u0074s\u0047r\u006f\u0075\u0070",NewElementsAndRefinementsGroup );};