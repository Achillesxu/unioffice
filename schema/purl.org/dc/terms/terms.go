//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package terms ;import (_e "encoding/xml";_g "fmt";_b "github.com/unidoc/unioffice";_f "github.com/unidoc/unioffice/common/logger";_fe "github.com/unidoc/unioffice/schema/purl.org/dc/elements";);type ElementOrRefinementContainer struct{Choice []*ElementsAndRefinementsGroupChoice ;};func NewElementOrRefinementContainer ()*ElementOrRefinementContainer {_bca :=&ElementOrRefinementContainer {};return _bca ;};type ISO3166 struct{};func (_db *ElementsAndRefinementsGroup )UnmarshalXML (d *_e .Decoder ,start _e .StartElement )error {_eg :for {_fad ,_ab :=d .Token ();if _ab !=nil {return _ab ;};switch _gc :=_fad .(type ){case _e .StartElement :switch _gc .Name {case _e .Name {Space :"\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0072\u0067/\u0064c\u002f\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0073\u002f\u0031\u002e\u0031\u002f",Local :"\u0061\u006e\u0079"}:_gff :=NewElementsAndRefinementsGroupChoice ();if _bag :=d .DecodeElement (&_gff .Any ,&_gc );_bag !=nil {return _bag ;};_db .Choice =append (_db .Choice ,_gff );default:_f .Log .Debug ("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020e\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0045\u006ce\u006d\u0065\u006e\u0074\u0073\u0041\u006e\u0064\u0052\u0065\u0066\u0069\u006e\u0065\u006d\u0065\u006et\u0073\u0047\u0072\u006f\u0075\u0070\u0020\u0025\u0076",_gc .Name );if _fb :=d .Skip ();_fb !=nil {return _fb ;};};case _e .EndElement :break _eg ;case _e .CharData :};};return nil ;};func (_ebd *DDC )UnmarshalXML (d *_e .Decoder ,start _e .StartElement )error {for {_bc ,_be :=d .Token ();if _be !=nil {return _g .Errorf ("\u0070a\u0072s\u0069\u006e\u0067\u0020\u0044\u0044\u0043\u003a\u0020\u0025\u0073",_be );};if _bge ,_gb :=_bc .(_e .EndElement );_gb &&_bge .Name ==start .Name {break ;};};return nil ;};func (_fgg *LCSH )UnmarshalXML (d *_e .Decoder ,start _e .StartElement )error {for {_fgge ,_efag :=d .Token ();if _efag !=nil {return _g .Errorf ("\u0070\u0061r\u0073\u0069\u006eg\u0020\u004c\u0043\u0053\u0048\u003a\u0020\u0025\u0073",_efag );};if _egbb ,_edb :=_fgge .(_e .EndElement );_edb &&_egbb .Name ==start .Name {break ;};};return nil ;};

// Validate validates the IMT and its children
func (_faf *IMT )Validate ()error {return _faf .ValidateWithPath ("\u0049\u004d\u0054")};func (_gee *W3CDTF )MarshalXML (e *_e .Encoder ,start _e .StartElement )error {start .Name .Local ="\u0057\u0033\u0043\u0044\u0054\u0046";e .EncodeToken (start );e .EncodeToken (_e .EndElement {Name :start .Name });return nil ;};

// ValidateWithPath validates the Period and its children, prefixing error messages with path
func (_bcd *Period )ValidateWithPath (path string )error {return nil };

// Validate validates the LCSH and its children
func (_caf *LCSH )Validate ()error {return _caf .ValidateWithPath ("\u004c\u0043\u0053\u0048")};

// Validate validates the RFC1766 and its children
func (_cdd *RFC1766 )Validate ()error {return _cdd .ValidateWithPath ("\u0052F\u0043\u0031\u0037\u0036\u0036");};

// ValidateWithPath validates the ISO639_2 and its children, prefixing error messages with path
func (_baf *ISO639_2 )ValidateWithPath (path string )error {return nil };type RFC1766 struct{};func (_aef *RFC3066 )UnmarshalXML (d *_e .Decoder ,start _e .StartElement )error {for {_dcd ,_ddf :=d .Token ();if _ddf !=nil {return _g .Errorf ("\u0070\u0061\u0072\u0073in\u0067\u0020\u0052\u0046\u0043\u0033\u0030\u0036\u0036\u003a\u0020\u0025\u0073",_ddf );};if _fga ,_egf :=_dcd .(_e .EndElement );_egf &&_fga .Name ==start .Name {break ;};};return nil ;};func (_dbb *IMT )UnmarshalXML (d *_e .Decoder ,start _e .StartElement )error {for {_egb ,_ddc :=d .Token ();if _ddc !=nil {return _g .Errorf ("\u0070a\u0072s\u0069\u006e\u0067\u0020\u0049\u004d\u0054\u003a\u0020\u0025\u0073",_ddc );};if _ea ,_ed :=_egb .(_e .EndElement );_ed &&_ea .Name ==start .Name {break ;};};return nil ;};

// ValidateWithPath validates the MESH and its children, prefixing error messages with path
func (_ec *MESH )ValidateWithPath (path string )error {return nil };func (_fee *URI )MarshalXML (e *_e .Encoder ,start _e .StartElement )error {start .Name .Local ="\u0055\u0052\u0049";e .EncodeToken (start );e .EncodeToken (_e .EndElement {Name :start .Name });return nil ;};

// ValidateWithPath validates the ElementsAndRefinementsGroup and its children, prefixing error messages with path
func (_gdd *ElementsAndRefinementsGroup )ValidateWithPath (path string )error {for _fge ,_dge :=range _gdd .Choice {if _adf :=_dge .ValidateWithPath (_g .Sprintf ("\u0025\u0073\u002f\u0043\u0068\u006f\u0069\u0063\u0065\u005b\u0025\u0064\u005d",path ,_fge ));_adf !=nil {return _adf ;};};return nil ;};

// ValidateWithPath validates the URI and its children, prefixing error messages with path
func (_eed *URI )ValidateWithPath (path string )error {return nil };func (_dc *Box )MarshalXML (e *_e .Encoder ,start _e .StartElement )error {start .Name .Local ="\u0042\u006f\u0078";e .EncodeToken (start );e .EncodeToken (_e .EndElement {Name :start .Name });return nil ;};func (_ebb *Point )MarshalXML (e *_e .Encoder ,start _e .StartElement )error {start .Name .Local ="\u0050\u006f\u0069n\u0074";e .EncodeToken (start );e .EncodeToken (_e .EndElement {Name :start .Name });return nil ;};type MESH struct{};func (_aeg *RFC1766 )MarshalXML (e *_e .Encoder ,start _e .StartElement )error {start .Name .Local ="\u0052F\u0043\u0031\u0037\u0036\u0036";e .EncodeToken (start );e .EncodeToken (_e .EndElement {Name :start .Name });return nil ;};func (_gbe *Period )MarshalXML (e *_e .Encoder ,start _e .StartElement )error {start .Name .Local ="\u0050\u0065\u0072\u0069\u006f\u0064";e .EncodeToken (start );e .EncodeToken (_e .EndElement {Name :start .Name });return nil ;};func (_efa *ISO3166 )UnmarshalXML (d *_e .Decoder ,start _e .StartElement )error {for {_efb ,_gag :=d .Token ();if _gag !=nil {return _g .Errorf ("\u0070\u0061\u0072\u0073in\u0067\u0020\u0049\u0053\u004f\u0033\u0031\u0036\u0036\u003a\u0020\u0025\u0073",_gag );};if _bfff ,_cf :=_efb .(_e .EndElement );_cf &&_bfff .Name ==start .Name {break ;};};return nil ;};func NewUDC ()*UDC {_baff :=&UDC {};return _baff };func (_fae *ElementsAndRefinementsGroupChoice )MarshalXML (e *_e .Encoder ,start _e .StartElement )error {if _fae .Any !=nil {_ff :=_e .StartElement {Name :_e .Name {Local :"\u0064\u0063\u003a\u0061\u006e\u0079"}};for _ ,_bdb :=range _fae .Any {e .EncodeElement (_bdb ,_ff );};};return nil ;};type DCMIType struct{};

// ValidateWithPath validates the RFC1766 and its children, prefixing error messages with path
func (_bgg *RFC1766 )ValidateWithPath (path string )error {return nil };type ISO639_2 struct{};func NewISO3166 ()*ISO3166 {_dda :=&ISO3166 {};return _dda };func NewMESH ()*MESH {_dgg :=&MESH {};return _dgg };func NewDDC ()*DDC {_bb :=&DDC {};return _bb };

// ValidateWithPath validates the RFC3066 and its children, prefixing error messages with path
func (_acf *RFC3066 )ValidateWithPath (path string )error {return nil };func NewISO639_2 ()*ISO639_2 {_cgd :=&ISO639_2 {};return _cgd };func NewW3CDTF ()*W3CDTF {_agf :=&W3CDTF {};return _agf };

// Validate validates the UDC and its children
func (_ffc *UDC )Validate ()error {return _ffc .ValidateWithPath ("\u0055\u0044\u0043")};func NewLCC ()*LCC {_ccd :=&LCC {};return _ccd };

// ValidateWithPath validates the DDC and its children, prefixing error messages with path
func (_ae *DDC )ValidateWithPath (path string )error {return nil };func NewPeriod ()*Period {_bee :=&Period {};return _bee };

// Validate validates the W3CDTF and its children
func (_dfe *W3CDTF )Validate ()error {return _dfe .ValidateWithPath ("\u0057\u0033\u0043\u0044\u0054\u0046");};type LCSH struct{};type DDC struct{};func NewURI ()*URI {_gae :=&URI {};return _gae };func (_cda *LCC )MarshalXML (e *_e .Encoder ,start _e .StartElement )error {start .Name .Local ="\u004c\u0043\u0043";e .EncodeToken (start );e .EncodeToken (_e .EndElement {Name :start .Name });return nil ;};func NewLCSH ()*LCSH {_eaa :=&LCSH {};return _eaa };func (_bd *ElementOrRefinementContainer )MarshalXML (e *_e .Encoder ,start _e .StartElement )error {start .Name .Local ="\u0065\u006c\u0065\u006de\u006e\u0074\u004f\u0072\u0052\u0065\u0066\u0069\u006e\u0065m\u0065n\u0074\u0043\u006f\u006e\u0074\u0061\u0069n\u0065\u0072";e .EncodeToken (start );if _bd .Choice !=nil {for _ ,_ca :=range _bd .Choice {_ca .MarshalXML (e ,_e .StartElement {});};};e .EncodeToken (_e .EndElement {Name :start .Name });return nil ;};func (_cdc *MESH )MarshalXML (e *_e .Encoder ,start _e .StartElement )error {start .Name .Local ="\u004d\u0045\u0053\u0048";e .EncodeToken (start );e .EncodeToken (_e .EndElement {Name :start .Name });return nil ;};func (_ccb *ISO3166 )MarshalXML (e *_e .Encoder ,start _e .StartElement )error {start .Name .Local ="\u0049S\u004f\u0033\u0031\u0036\u0036";e .EncodeToken (start );e .EncodeToken (_e .EndElement {Name :start .Name });return nil ;};func NewPoint ()*Point {_cga :=&Point {};return _cga };type LCC struct{};func NewTGN ()*TGN {_aca :=&TGN {};return _aca };

// Validate validates the ISO639_2 and its children
func (_fbb *ISO639_2 )Validate ()error {return _fbb .ValidateWithPath ("\u0049\u0053\u004f\u0036\u0033\u0039\u005f\u0032");};type ElementsAndRefinementsGroupChoice struct{Any []*_fe .Any ;};type Point struct{};func (_beag *RFC1766 )UnmarshalXML (d *_e .Decoder ,start _e .StartElement )error {for {_ffg ,_eec :=d .Token ();if _eec !=nil {return _g .Errorf ("\u0070\u0061\u0072\u0073in\u0067\u0020\u0052\u0046\u0043\u0031\u0037\u0036\u0036\u003a\u0020\u0025\u0073",_eec );};if _cec ,_fccd :=_ffg .(_e .EndElement );_fccd &&_cec .Name ==start .Name {break ;};};return nil ;};

// ValidateWithPath validates the UDC and its children, prefixing error messages with path
func (_cdf *UDC )ValidateWithPath (path string )error {return nil };func (_efd *ElementOrRefinementContainer )UnmarshalXML (d *_e .Decoder ,start _e .StartElement )error {_dgd :for {_ggb ,_gf :=d .Token ();if _gf !=nil {return _gf ;};switch _bea :=_ggb .(type ){case _e .StartElement :switch _bea .Name {case _e .Name {Space :"\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0072\u0067/\u0064c\u002f\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0073\u002f\u0031\u002e\u0031\u002f",Local :"\u0061\u006e\u0079"}:_bac :=NewElementsAndRefinementsGroupChoice ();if _ag :=d .DecodeElement (&_bac .Any ,&_bea );_ag !=nil {return _ag ;};_efd .Choice =append (_efd .Choice ,_bac );default:_f .Log .Debug ("\u0073k\u0069\u0070\u0070\u0069\u006e\u0067\u0020un\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006de\u006e\u0074 \u006f\u006e\u0020E\u006c\u0065\u006d\u0065\u006e\u0074\u004f\u0072\u0052\u0065\u0066\u0069\u006e\u0065\u006d\u0065n\u0074\u0043on\u0074\u0061\u0069n\u0065\u0072\u0020\u0025\u0076",_bea .Name );if _ac :=d .Skip ();_ac !=nil {return _ac ;};};case _e .EndElement :break _dgd ;case _e .CharData :};};return nil ;};

// Validate validates the Period and its children
func (_ded *Period )Validate ()error {return _ded .ValidateWithPath ("\u0050\u0065\u0072\u0069\u006f\u0064");};

// ValidateWithPath validates the Box and its children, prefixing error messages with path
func (_cg *Box )ValidateWithPath (path string )error {return nil };

// ValidateWithPath validates the ISO3166 and its children, prefixing error messages with path
func (_geg *ISO3166 )ValidateWithPath (path string )error {return nil };

// Validate validates the LCC and its children
func (_ffd *LCC )Validate ()error {return _ffd .ValidateWithPath ("\u004c\u0043\u0043")};type TGN struct{};

// ValidateWithPath validates the LCSH and its children, prefixing error messages with path
func (_dcg *LCSH )ValidateWithPath (path string )error {return nil };type ElementsAndRefinementsGroup struct{Choice []*ElementsAndRefinementsGroupChoice ;};

// ValidateWithPath validates the IMT and its children, prefixing error messages with path
func (_edd *IMT )ValidateWithPath (path string )error {return nil };func (_feb *UDC )UnmarshalXML (d *_e .Decoder ,start _e .StartElement )error {for {_eea ,_dae :=d .Token ();if _dae !=nil {return _g .Errorf ("\u0070a\u0072s\u0069\u006e\u0067\u0020\u0055\u0044\u0043\u003a\u0020\u0025\u0073",_dae );};if _fd ,_aaf :=_eea .(_e .EndElement );_aaf &&_fd .Name ==start .Name {break ;};};return nil ;};

// ValidateWithPath validates the ElementsAndRefinementsGroupChoice and its children, prefixing error messages with path
func (_ce *ElementsAndRefinementsGroupChoice )ValidateWithPath (path string )error {for _bba ,_aea :=range _ce .Any {if _bfd :=_aea .ValidateWithPath (_g .Sprintf ("\u0025\u0073\u002f\u0041\u006e\u0079\u005b\u0025\u0064\u005d",path ,_bba ));_bfd !=nil {return _bfd ;};};return nil ;};

// Validate validates the Point and its children
func (_edde *Point )Validate ()error {return _edde .ValidateWithPath ("\u0050\u006f\u0069n\u0074")};

// ValidateWithPath validates the DCMIType and its children, prefixing error messages with path
func (_ad *DCMIType )ValidateWithPath (path string )error {return nil };func (_ccf *ISO639_2 )UnmarshalXML (d *_e .Decoder ,start _e .StartElement )error {for {_bcg ,_fged :=d .Token ();if _fged !=nil {return _g .Errorf ("p\u0061r\u0073\u0069\u006e\u0067\u0020\u0049\u0053\u004f6\u0033\u0039\u005f\u0032: \u0025\u0073",_fged );};if _cfg ,_fbd :=_bcg .(_e .EndElement );_fbd &&_cfg .Name ==start .Name {break ;};};return nil ;};func (_dbf *ISO639_2 )MarshalXML (e *_e .Encoder ,start _e .StartElement )error {start .Name .Local ="\u0049\u0053\u004f\u0036\u0033\u0039\u002d\u0032";e .EncodeToken (start );e .EncodeToken (_e .EndElement {Name :start .Name });return nil ;};func NewRFC3066 ()*RFC3066 {_bfde :=&RFC3066 {};return _bfde };

// ValidateWithPath validates the LCC and its children, prefixing error messages with path
func (_edc *LCC )ValidateWithPath (path string )error {return nil };func NewElementsAndRefinementsGroup ()*ElementsAndRefinementsGroup {_fa :=&ElementsAndRefinementsGroup {};return _fa ;};func (_ceeg *Point )UnmarshalXML (d *_e .Decoder ,start _e .StartElement )error {for {_aag ,_bead :=d .Token ();if _bead !=nil {return _g .Errorf ("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0050\u006f\u0069\u006et\u003a\u0020\u0025\u0073",_bead );};if _fec ,_ceeb :=_aag .(_e .EndElement );_ceeb &&_fec .Name ==start .Name {break ;};};return nil ;};func (_gd *DCMIType )UnmarshalXML (d *_e .Decoder ,start _e .StartElement )error {for {_ef ,_bg :=d .Token ();if _bg !=nil {return _g .Errorf ("p\u0061r\u0073\u0069\u006e\u0067\u0020\u0044\u0043\u004dI\u0054\u0079\u0070\u0065: \u0025\u0073",_bg );};if _df ,_aa :=_ef .(_e .EndElement );_aa &&_df .Name ==start .Name {break ;};};return nil ;};

// ValidateWithPath validates the W3CDTF and its children, prefixing error messages with path
func (_bcf *W3CDTF )ValidateWithPath (path string )error {return nil };func NewElementsAndRefinementsGroupChoice ()*ElementsAndRefinementsGroupChoice {_aab :=&ElementsAndRefinementsGroupChoice {};return _aab ;};

// ValidateWithPath validates the ElementOrRefinementContainer and its children, prefixing error messages with path
func (_ee *ElementOrRefinementContainer )ValidateWithPath (path string )error {for _efdd ,_bff :=range _ee .Choice {if _fef :=_bff .ValidateWithPath (_g .Sprintf ("\u0025\u0073\u002f\u0043\u0068\u006f\u0069\u0063\u0065\u005b\u0025\u0064\u005d",path ,_efdd ));_fef !=nil {return _fef ;};};return nil ;};func (_cee *LCC )UnmarshalXML (d *_e .Decoder ,start _e .StartElement )error {for {_fbc ,_gdc :=d .Token ();if _gdc !=nil {return _g .Errorf ("\u0070a\u0072s\u0069\u006e\u0067\u0020\u004c\u0043\u0043\u003a\u0020\u0025\u0073",_gdc );};if _bga ,_acg :=_fbc .(_e .EndElement );_acg &&_bga .Name ==start .Name {break ;};};return nil ;};type URI struct{};func (_dd *ElementsAndRefinementsGroupChoice )UnmarshalXML (d *_e .Decoder ,start _e .StartElement )error {_dfb :for {_bdbb ,_fc :=d .Token ();if _fc !=nil {return _fc ;};switch _dgdb :=_bdbb .(type ){case _e .StartElement :switch _dgdb .Name {case _e .Name {Space :"\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0072\u0067/\u0064c\u002f\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0073\u002f\u0031\u002e\u0031\u002f",Local :"\u0061\u006e\u0079"}:_eeg :=_fe .NewAny ();if _dab :=d .DecodeElement (_eeg ,&_dgdb );_dab !=nil {return _dab ;};_dd .Any =append (_dd .Any ,_eeg );default:_f .Log .Debug ("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0045\u006c\u0065\u006d\u0065\u006e\u0074\u0073\u0041\u006ed\u0052\u0065\u0066\u0069\u006e\u0065\u006d\u0065\u006e\u0074\u0073\u0047\u0072\u006fu\u0070\u0043\u0068o\u0069\u0063\u0065\u0020\u0025\u0076",_dgdb .Name );if _dbg :=d .Skip ();_dbg !=nil {return _dbg ;};};case _e .EndElement :break _dfb ;case _e .CharData :};};return nil ;};

// Validate validates the URI and its children
func (_gfe *URI )Validate ()error {return _gfe .ValidateWithPath ("\u0055\u0052\u0049")};func (_cc *DCMIType )MarshalXML (e *_e .Encoder ,start _e .StartElement )error {start .Name .Local ="\u0044\u0043\u004d\u0049\u0054\u0079\u0070\u0065";e .EncodeToken (start );e .EncodeToken (_e .EndElement {Name :start .Name });return nil ;};

// Validate validates the TGN and its children
func (_cge *TGN )Validate ()error {return _cge .ValidateWithPath ("\u0054\u0047\u004e")};type Period struct{};func (_cd *IMT )MarshalXML (e *_e .Encoder ,start _e .StartElement )error {start .Name .Local ="\u0049\u004d\u0054";e .EncodeToken (start );e .EncodeToken (_e .EndElement {Name :start .Name });return nil ;};func (_fba *RFC3066 )MarshalXML (e *_e .Encoder ,start _e .StartElement )error {start .Name .Local ="\u0052F\u0043\u0033\u0030\u0036\u0036";e .EncodeToken (start );e .EncodeToken (_e .EndElement {Name :start .Name });return nil ;};

// Validate validates the RFC3066 and its children
func (_ece *RFC3066 )Validate ()error {return _ece .ValidateWithPath ("\u0052F\u0043\u0033\u0030\u0036\u0036");};func NewDCMIType ()*DCMIType {_gg :=&DCMIType {};return _gg };type RFC3066 struct{};func (_aae *LCSH )MarshalXML (e *_e .Encoder ,start _e .StartElement )error {start .Name .Local ="\u004c\u0043\u0053\u0048";e .EncodeToken (start );e .EncodeToken (_e .EndElement {Name :start .Name });return nil ;};type Box struct{};func (_fgb *Period )UnmarshalXML (d *_e .Decoder ,start _e .StartElement )error {for {_cac ,_bfc :=d .Token ();if _bfc !=nil {return _g .Errorf ("\u0070a\u0072s\u0069\u006e\u0067\u0020\u0050e\u0072\u0069o\u0064\u003a\u0020\u0025\u0073",_bfc );};if _cfge ,_fefg :=_cac .(_e .EndElement );_fefg &&_cfge .Name ==start .Name {break ;};};return nil ;};func (_bdf *W3CDTF )UnmarshalXML (d *_e .Decoder ,start _e .StartElement )error {for {_bgbc ,_eba :=d .Token ();if _eba !=nil {return _g .Errorf ("\u0070a\u0072s\u0069\u006e\u0067\u0020\u00573\u0043\u0044T\u0046\u003a\u0020\u0025\u0073",_eba );};if _geb ,_gddb :=_bgbc .(_e .EndElement );_gddb &&_geb .Name ==start .Name {break ;};};return nil ;};

// Validate validates the Box and its children
func (_eb *Box )Validate ()error {return _eb .ValidateWithPath ("\u0042\u006f\u0078")};

// Validate validates the ElementsAndRefinementsGroupChoice and its children
func (_dbc *ElementsAndRefinementsGroupChoice )Validate ()error {return _dbc .ValidateWithPath ("\u0045\u006c\u0065\u006d\u0065\u006et\u0073\u0041\u006e\u0064\u0052\u0065\u0066\u0069\u006e\u0065\u006d\u0065\u006et\u0073\u0047\u0072\u006f\u0075\u0070\u0043h\u006f\u0069\u0063\u0065");};

// Validate validates the DCMIType and its children
func (_bf *DCMIType )Validate ()error {return _bf .ValidateWithPath ("\u0044\u0043\u004d\u0049\u0054\u0079\u0070\u0065");};func NewIMT ()*IMT {_ffb :=&IMT {};return _ffb };

// Validate validates the MESH and its children
func (_cfga *MESH )Validate ()error {return _cfga .ValidateWithPath ("\u004d\u0045\u0053\u0048")};type UDC struct{};func (_abf *TGN )UnmarshalXML (d *_e .Decoder ,start _e .StartElement )error {for {_bfa ,_fgd :=d .Token ();if _fgd !=nil {return _g .Errorf ("\u0070a\u0072s\u0069\u006e\u0067\u0020\u0054\u0047\u004e\u003a\u0020\u0025\u0073",_fgd );};if _dbgg ,_cba :=_bfa .(_e .EndElement );_cba &&_dbgg .Name ==start .Name {break ;};};return nil ;};func (_ga *ElementsAndRefinementsGroup )MarshalXML (e *_e .Encoder ,start _e .StartElement )error {if _ga .Choice !=nil {for _ ,_dcc :=range _ga .Choice {_dcc .MarshalXML (e ,_e .StartElement {});};};return nil ;};type IMT struct{};

// ValidateWithPath validates the Point and its children, prefixing error messages with path
func (_fcc *Point )ValidateWithPath (path string )error {return nil };

// Validate validates the ISO3166 and its children
func (_dgde *ISO3166 )Validate ()error {return _dgde .ValidateWithPath ("\u0049S\u004f\u0033\u0031\u0036\u0036");};type W3CDTF struct{};

// Validate validates the ElementOrRefinementContainer and its children
func (_afd *ElementOrRefinementContainer )Validate ()error {return _afd .ValidateWithPath ("\u0045\u006c\u0065\u006de\u006e\u0074\u004f\u0072\u0052\u0065\u0066\u0069\u006e\u0065m\u0065n\u0074\u0043\u006f\u006e\u0074\u0061\u0069n\u0065\u0072");};func (_de *Box )UnmarshalXML (d *_e .Decoder ,start _e .StartElement )error {for {_fg ,_c :=d .Token ();if _c !=nil {return _g .Errorf ("\u0070a\u0072s\u0069\u006e\u0067\u0020\u0042\u006f\u0078\u003a\u0020\u0025\u0073",_c );};if _ge ,_a :=_fg .(_e .EndElement );_a &&_ge .Name ==start .Name {break ;};};return nil ;};func (_bgb *TGN )MarshalXML (e *_e .Encoder ,start _e .StartElement )error {start .Name .Local ="\u0054\u0047\u004e";e .EncodeToken (start );e .EncodeToken (_e .EndElement {Name :start .Name });return nil ;};func NewBox ()*Box {_ba :=&Box {};return _ba };func (_dg *DDC )MarshalXML (e *_e .Encoder ,start _e .StartElement )error {start .Name .Local ="\u0044\u0044\u0043";e .EncodeToken (start );e .EncodeToken (_e .EndElement {Name :start .Name });return nil ;};func (_ceb *URI )UnmarshalXML (d *_e .Decoder ,start _e .StartElement )error {for {_dgded ,_aad :=d .Token ();if _aad !=nil {return _g .Errorf ("\u0070a\u0072s\u0069\u006e\u0067\u0020\u0055\u0052\u0049\u003a\u0020\u0025\u0073",_aad );};if _gbf ,_beb :=_dgded .(_e .EndElement );_beb &&_gbf .Name ==start .Name {break ;};};return nil ;};func (_aac *MESH )UnmarshalXML (d *_e .Decoder ,start _e .StartElement )error {for {_ced ,_fgc :=d .Token ();if _fgc !=nil {return _g .Errorf ("\u0070\u0061r\u0073\u0069\u006eg\u0020\u004d\u0045\u0053\u0048\u003a\u0020\u0025\u0073",_fgc );};if _cb ,_gcg :=_ced .(_e .EndElement );_gcg &&_cb .Name ==start .Name {break ;};};return nil ;};func NewRFC1766 ()*RFC1766 {_aba :=&RFC1766 {};return _aba };

// ValidateWithPath validates the TGN and its children, prefixing error messages with path
func (_bfdd *TGN )ValidateWithPath (path string )error {return nil };

// Validate validates the DDC and its children
func (_af *DDC )Validate ()error {return _af .ValidateWithPath ("\u0044\u0044\u0043")};

// Validate validates the ElementsAndRefinementsGroup and its children
func (_afg *ElementsAndRefinementsGroup )Validate ()error {return _afg .ValidateWithPath ("E\u006c\u0065\u006d\u0065\u006e\u0074s\u0041\u006e\u0064\u0052\u0065\u0066\u0069\u006e\u0065m\u0065\u006e\u0074s\u0047r\u006f\u0075\u0070");};func (_dgb *UDC )MarshalXML (e *_e .Encoder ,start _e .StartElement )error {start .Name .Local ="\u0055\u0044\u0043";e .EncodeToken (start );e .EncodeToken (_e .EndElement {Name :start .Name });return nil ;};func init (){_b .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u004c\u0043\u0053\u0048",NewLCSH );_b .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u004d\u0045\u0053\u0048",NewMESH );_b .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u0044\u0044\u0043",NewDDC );_b .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u004c\u0043\u0043",NewLCC );_b .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u0055\u0044\u0043",NewUDC );_b .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u0050\u0065\u0072\u0069\u006f\u0064",NewPeriod );_b .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u0057\u0033\u0043\u0044\u0054\u0046",NewW3CDTF );_b .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u0044\u0043\u004d\u0049\u0054\u0079\u0070\u0065",NewDCMIType );_b .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u0049\u004d\u0054",NewIMT );_b .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u0055\u0052\u0049",NewURI );_b .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u0049\u0053\u004f\u0036\u0033\u0039\u002d\u0032",NewISO639_2 );_b .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u0052F\u0043\u0031\u0037\u0036\u0036",NewRFC1766 );_b .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u0052F\u0043\u0033\u0030\u0036\u0036",NewRFC3066 );_b .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u0050\u006f\u0069n\u0074",NewPoint );_b .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u0049S\u004f\u0033\u0031\u0036\u0036",NewISO3166 );_b .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u0042\u006f\u0078",NewBox );_b .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u0054\u0047\u004e",NewTGN );_b .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u0065\u006c\u0065\u006de\u006e\u0074\u004f\u0072\u0052\u0065\u0066\u0069\u006e\u0065m\u0065n\u0074\u0043\u006f\u006e\u0074\u0061\u0069n\u0065\u0072",NewElementOrRefinementContainer );_b .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","e\u006c\u0065\u006d\u0065\u006e\u0074s\u0041\u006e\u0064\u0052\u0065\u0066\u0069\u006e\u0065m\u0065\u006e\u0074s\u0047r\u006f\u0075\u0070",NewElementsAndRefinementsGroup );};