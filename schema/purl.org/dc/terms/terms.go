//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package terms ;import (_d "encoding/xml";_ab "fmt";_f "github.com/unidoc/unioffice";_b "github.com/unidoc/unioffice/common/logger";_fg "github.com/unidoc/unioffice/schema/purl.org/dc/elements";);func NewTGN ()*TGN {_gagf :=&TGN {};return _gagf };type UDC struct{};

// ValidateWithPath validates the ElementsAndRefinementsGroupChoice and its children, prefixing error messages with path
func (_egb *ElementsAndRefinementsGroupChoice )ValidateWithPath (path string )error {for _fef ,_ceg :=range _egb .Any {if _fgg :=_ceg .ValidateWithPath (_ab .Sprintf ("\u0025\u0073\u002f\u0041\u006e\u0079\u005b\u0025\u0064\u005d",path ,_fef ));_fgg !=nil {return _fgg ;};};return nil ;};func NewDCMIType ()*DCMIType {_bf :=&DCMIType {};return _bf };func NewW3CDTF ()*W3CDTF {_bfg :=&W3CDTF {};return _bfg };type ISO3166 struct{};type Box struct{};func NewLCC ()*LCC {_gac :=&LCC {};return _gac };func (_abf *LCC )UnmarshalXML (d *_d .Decoder ,start _d .StartElement )error {for {_egg ,_eaag :=d .Token ();if _eaag !=nil {return _ab .Errorf ("\u0070a\u0072s\u0069\u006e\u0067\u0020\u004c\u0043\u0043\u003a\u0020\u0025\u0073",_eaag );};if _eaac ,_deg :=_egg .(_d .EndElement );_deg &&_eaac .Name ==start .Name {break ;};};return nil ;};

// ValidateWithPath validates the LCC and its children, prefixing error messages with path
func (_cfd *LCC )ValidateWithPath (path string )error {return nil };

// ValidateWithPath validates the ISO3166 and its children, prefixing error messages with path
func (_eb *ISO3166 )ValidateWithPath (path string )error {return nil };func (_egd *ISO3166 )UnmarshalXML (d *_d .Decoder ,start _d .StartElement )error {for {_fcb ,_bagg :=d .Token ();if _bagg !=nil {return _ab .Errorf ("\u0070\u0061\u0072\u0073in\u0067\u0020\u0049\u0053\u004f\u0033\u0031\u0036\u0036\u003a\u0020\u0025\u0073",_bagg );};if _agce ,_ad :=_fcb .(_d .EndElement );_ad &&_agce .Name ==start .Name {break ;};};return nil ;};

// Validate validates the UDC and its children
func (_aff *UDC )Validate ()error {return _aff .ValidateWithPath ("\u0055\u0044\u0043")};type Period struct{};

// Validate validates the DDC and its children
func (_gg *DDC )Validate ()error {return _gg .ValidateWithPath ("\u0044\u0044\u0043")};

// Validate validates the W3CDTF and its children
func (_bcc *W3CDTF )Validate ()error {return _bcc .ValidateWithPath ("\u0057\u0033\u0043\u0044\u0054\u0046");};

// Validate validates the IMT and its children
func (_dda *IMT )Validate ()error {return _dda .ValidateWithPath ("\u0049\u004d\u0054")};

// Validate validates the LCSH and its children
func (_dab *LCSH )Validate ()error {return _dab .ValidateWithPath ("\u004c\u0043\u0053\u0048")};func (_e *Box )UnmarshalXML (d *_d .Decoder ,start _d .StartElement )error {for {_ag ,_abc :=d .Token ();if _abc !=nil {return _ab .Errorf ("\u0070a\u0072s\u0069\u006e\u0067\u0020\u0042\u006f\u0078\u003a\u0020\u0025\u0073",_abc );};if _agc ,_de :=_ag .(_d .EndElement );_de &&_agc .Name ==start .Name {break ;};};return nil ;};func (_aba *DCMIType )MarshalXML (e *_d .Encoder ,start _d .StartElement )error {start .Name .Local ="\u0044\u0043\u004d\u0049\u0054\u0079\u0070\u0065";e .EncodeToken (start );e .EncodeToken (_d .EndElement {Name :start .Name });return nil ;};func NewDDC ()*DDC {_bb :=&DDC {};return _bb };func NewISO3166 ()*ISO3166 {_aeg :=&ISO3166 {};return _aeg };func (_agd *ElementsAndRefinementsGroupChoice )UnmarshalXML (d *_d .Decoder ,start _d .StartElement )error {_gge :for {_ccg ,_fb :=d .Token ();if _fb !=nil {return _fb ;};switch _eac :=_ccg .(type ){case _d .StartElement :switch _eac .Name {case _d .Name {Space :"\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0072\u0067/\u0064c\u002f\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0073\u002f\u0031\u002e\u0031\u002f",Local :"\u0061\u006e\u0079"}:_dd :=_fg .NewAny ();if _fdg :=d .DecodeElement (_dd ,&_eac );_fdg !=nil {return _fdg ;};_agd .Any =append (_agd .Any ,_dd );default:_b .Log .Debug ("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0045\u006c\u0065\u006d\u0065\u006e\u0074\u0073\u0041\u006ed\u0052\u0065\u0066\u0069\u006e\u0065\u006d\u0065\u006e\u0074\u0073\u0047\u0072\u006fu\u0070\u0043\u0068o\u0069\u0063\u0065\u0020\u0025\u0076",_eac .Name );if _ge :=d .Skip ();_ge !=nil {return _ge ;};};case _d .EndElement :break _gge ;case _d .CharData :};};return nil ;};func NewElementsAndRefinementsGroup ()*ElementsAndRefinementsGroup {_fd :=&ElementsAndRefinementsGroup {};return _fd ;};func (_fcf *W3CDTF )MarshalXML (e *_d .Encoder ,start _d .StartElement )error {start .Name .Local ="\u0057\u0033\u0043\u0044\u0054\u0046";e .EncodeToken (start );e .EncodeToken (_d .EndElement {Name :start .Name });return nil ;};func (_g *Box )MarshalXML (e *_d .Encoder ,start _d .StartElement )error {start .Name .Local ="\u0042\u006f\u0078";e .EncodeToken (start );e .EncodeToken (_d .EndElement {Name :start .Name });return nil ;};

// Validate validates the ISO3166 and its children
func (_gag *ISO3166 )Validate ()error {return _gag .ValidateWithPath ("\u0049S\u004f\u0033\u0031\u0036\u0036");};type LCC struct{};

// ValidateWithPath validates the DDC and its children, prefixing error messages with path
func (_ea *DDC )ValidateWithPath (path string )error {return nil };

// ValidateWithPath validates the URI and its children, prefixing error messages with path
func (_eabd *URI )ValidateWithPath (path string )error {return nil };type TGN struct{};

// ValidateWithPath validates the RFC1766 and its children, prefixing error messages with path
func (_ggfd *RFC1766 )ValidateWithPath (path string )error {return nil };func (_afc *ElementsAndRefinementsGroup )MarshalXML (e *_d .Encoder ,start _d .StartElement )error {if _afc .Choice !=nil {for _ ,_gca :=range _afc .Choice {_gca .MarshalXML (e ,_d .StartElement {});};};return nil ;};func (_fec *LCSH )MarshalXML (e *_d .Encoder ,start _d .StartElement )error {start .Name .Local ="\u004c\u0043\u0053\u0048";e .EncodeToken (start );e .EncodeToken (_d .EndElement {Name :start .Name });return nil ;};func (_ed *DCMIType )UnmarshalXML (d *_d .Decoder ,start _d .StartElement )error {for {_c ,_bc :=d .Token ();if _bc !=nil {return _ab .Errorf ("p\u0061r\u0073\u0069\u006e\u0067\u0020\u0044\u0043\u004dI\u0054\u0079\u0070\u0065: \u0025\u0073",_bc );};if _cf ,_bfa :=_c .(_d .EndElement );_bfa &&_cf .Name ==start .Name {break ;};};return nil ;};

// Validate validates the MESH and its children
func (_ebe *MESH )Validate ()error {return _ebe .ValidateWithPath ("\u004d\u0045\u0053\u0048")};func (_cefb *TGN )UnmarshalXML (d *_d .Decoder ,start _d .StartElement )error {for {_fab ,_fbg :=d .Token ();if _fbg !=nil {return _ab .Errorf ("\u0070a\u0072s\u0069\u006e\u0067\u0020\u0054\u0047\u004e\u003a\u0020\u0025\u0073",_fbg );};if _agcb ,_fee :=_fab .(_d .EndElement );_fee &&_agcb .Name ==start .Name {break ;};};return nil ;};func (_faa *W3CDTF )UnmarshalXML (d *_d .Decoder ,start _d .StartElement )error {for {_gfb ,_baa :=d .Token ();if _baa !=nil {return _ab .Errorf ("\u0070a\u0072s\u0069\u006e\u0067\u0020\u00573\u0043\u0044T\u0046\u003a\u0020\u0025\u0073",_baa );};if _cedc ,_bab :=_gfb .(_d .EndElement );_bab &&_cedc .Name ==start .Name {break ;};};return nil ;};func (_fbc *MESH )MarshalXML (e *_d .Encoder ,start _d .StartElement )error {start .Name .Local ="\u004d\u0045\u0053\u0048";e .EncodeToken (start );e .EncodeToken (_d .EndElement {Name :start .Name });return nil ;};

// ValidateWithPath validates the IMT and its children, prefixing error messages with path
func (_ga *IMT )ValidateWithPath (path string )error {return nil };

// Validate validates the Box and its children
func (_fe *Box )Validate ()error {return _fe .ValidateWithPath ("\u0042\u006f\u0078")};

// Validate validates the DCMIType and its children
func (_cfa *DCMIType )Validate ()error {return _cfa .ValidateWithPath ("\u0044\u0043\u004d\u0049\u0054\u0079\u0070\u0065");};func NewPoint ()*Point {_gde :=&Point {};return _gde };type MESH struct{};

// ValidateWithPath validates the ElementOrRefinementContainer and its children, prefixing error messages with path
func (_acd *ElementOrRefinementContainer )ValidateWithPath (path string )error {for _edc ,_bg :=range _acd .Choice {if _gf :=_bg .ValidateWithPath (_ab .Sprintf ("\u0025\u0073\u002f\u0043\u0068\u006f\u0069\u0063\u0065\u005b\u0025\u0064\u005d",path ,_edc ));_gf !=nil {return _gf ;};};return nil ;};type RFC3066 struct{};

// Validate validates the TGN and its children
func (_ageg *TGN )Validate ()error {return _ageg .ValidateWithPath ("\u0054\u0047\u004e")};

// ValidateWithPath validates the Box and its children, prefixing error messages with path
func (_da *Box )ValidateWithPath (path string )error {return nil };func NewIMT ()*IMT {_eaa :=&IMT {};return _eaa };func (_feg *UDC )MarshalXML (e *_d .Encoder ,start _d .StartElement )error {start .Name .Local ="\u0055\u0044\u0043";e .EncodeToken (start );e .EncodeToken (_d .EndElement {Name :start .Name });return nil ;};func NewUDC ()*UDC {_def :=&UDC {};return _def };type RFC1766 struct{};func (_cbf *RFC1766 )MarshalXML (e *_d .Encoder ,start _d .StartElement )error {start .Name .Local ="\u0052F\u0043\u0031\u0037\u0036\u0036";e .EncodeToken (start );e .EncodeToken (_d .EndElement {Name :start .Name });return nil ;};

// Validate validates the Point and its children
func (_agg *Point )Validate ()error {return _agg .ValidateWithPath ("\u0050\u006f\u0069n\u0074")};

// ValidateWithPath validates the Period and its children, prefixing error messages with path
func (_ebg *Period )ValidateWithPath (path string )error {return nil };func NewRFC3066 ()*RFC3066 {_bfc :=&RFC3066 {};return _bfc };

// ValidateWithPath validates the Point and its children, prefixing error messages with path
func (_fce *Point )ValidateWithPath (path string )error {return nil };type URI struct{};func (_baf *Point )MarshalXML (e *_d .Encoder ,start _d .StartElement )error {start .Name .Local ="\u0050\u006f\u0069n\u0074";e .EncodeToken (start );e .EncodeToken (_d .EndElement {Name :start .Name });return nil ;};func (_bdeg *ISO639_2 )MarshalXML (e *_d .Encoder ,start _d .StartElement )error {start .Name .Local ="\u0049\u0053\u004f\u0036\u0033\u0039\u002d\u0032";e .EncodeToken (start );e .EncodeToken (_d .EndElement {Name :start .Name });return nil ;};func NewURI ()*URI {_ddba :=&URI {};return _ddba };

// Validate validates the ElementsAndRefinementsGroupChoice and its children
func (_bca *ElementsAndRefinementsGroupChoice )Validate ()error {return _bca .ValidateWithPath ("\u0045\u006c\u0065\u006d\u0065\u006et\u0073\u0041\u006e\u0064\u0052\u0065\u0066\u0069\u006e\u0065\u006d\u0065\u006et\u0073\u0047\u0072\u006f\u0075\u0070\u0043h\u006f\u0069\u0063\u0065");};func (_fc *ElementsAndRefinementsGroup )UnmarshalXML (d *_d .Decoder ,start _d .StartElement )error {_cfc :for {_ced ,_dc :=d .Token ();if _dc !=nil {return _dc ;};switch _dg :=_ced .(type ){case _d .StartElement :switch _dg .Name {case _d .Name {Space :"\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0072\u0067/\u0064c\u002f\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0073\u002f\u0031\u002e\u0031\u002f",Local :"\u0061\u006e\u0079"}:_bag :=NewElementsAndRefinementsGroupChoice ();if _cc :=d .DecodeElement (&_bag .Any ,&_dg );_cc !=nil {return _cc ;};_fc .Choice =append (_fc .Choice ,_bag );default:_b .Log .Debug ("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020e\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0045\u006ce\u006d\u0065\u006e\u0074\u0073\u0041\u006e\u0064\u0052\u0065\u0066\u0069\u006e\u0065\u006d\u0065\u006et\u0073\u0047\u0072\u006f\u0075\u0070\u0020\u0025\u0076",_dg .Name );if _ccb :=d .Skip ();_ccb !=nil {return _ccb ;};};case _d .EndElement :break _cfc ;case _d .CharData :};};return nil ;};func (_gec *IMT )MarshalXML (e *_d .Encoder ,start _d .StartElement )error {start .Name .Local ="\u0049\u004d\u0054";e .EncodeToken (start );e .EncodeToken (_d .EndElement {Name :start .Name });return nil ;};

// Validate validates the Period and its children
func (_ee *Period )Validate ()error {return _ee .ValidateWithPath ("\u0050\u0065\u0072\u0069\u006f\u0064");};func NewRFC1766 ()*RFC1766 {_gb :=&RFC1766 {};return _gb };func (_aae *RFC3066 )MarshalXML (e *_d .Encoder ,start _d .StartElement )error {start .Name .Local ="\u0052F\u0043\u0033\u0030\u0036\u0036";e .EncodeToken (start );e .EncodeToken (_d .EndElement {Name :start .Name });return nil ;};

// Validate validates the RFC1766 and its children
func (_acde *RFC1766 )Validate ()error {return _acde .ValidateWithPath ("\u0052F\u0043\u0031\u0037\u0036\u0036");};

// ValidateWithPath validates the LCSH and its children, prefixing error messages with path
func (_eaae *LCSH )ValidateWithPath (path string )error {return nil };func (_bd *ElementOrRefinementContainer )MarshalXML (e *_d .Encoder ,start _d .StartElement )error {start .Name .Local ="\u0065\u006c\u0065\u006de\u006e\u0074\u004f\u0072\u0052\u0065\u0066\u0069\u006e\u0065m\u0065n\u0074\u0043\u006f\u006e\u0074\u0061\u0069n\u0065\u0072";e .EncodeToken (start );if _bd .Choice !=nil {for _ ,_ggf :=range _bd .Choice {_ggf .MarshalXML (e ,_d .StartElement {});};};e .EncodeToken (_d .EndElement {Name :start .Name });return nil ;};type LCSH struct{};type DCMIType struct{};func NewElementOrRefinementContainer ()*ElementOrRefinementContainer {_aa :=&ElementOrRefinementContainer {};return _aa ;};func (_eca *MESH )UnmarshalXML (d *_d .Decoder ,start _d .StartElement )error {for {_bac ,_ggc :=d .Token ();if _ggc !=nil {return _ab .Errorf ("\u0070\u0061r\u0073\u0069\u006eg\u0020\u004d\u0045\u0053\u0048\u003a\u0020\u0025\u0073",_ggc );};if _bgeb ,_fcbf :=_bac .(_d .EndElement );_fcbf &&_bgeb .Name ==start .Name {break ;};};return nil ;};func (_gcc *URI )MarshalXML (e *_d .Encoder ,start _d .StartElement )error {start .Name .Local ="\u0055\u0052\u0049";e .EncodeToken (start );e .EncodeToken (_d .EndElement {Name :start .Name });return nil ;};func (_ccc *LCC )MarshalXML (e *_d .Encoder ,start _d .StartElement )error {start .Name .Local ="\u004c\u0043\u0043";e .EncodeToken (start );e .EncodeToken (_d .EndElement {Name :start .Name });return nil ;};

// ValidateWithPath validates the W3CDTF and its children, prefixing error messages with path
func (_feeg *W3CDTF )ValidateWithPath (path string )error {return nil };func (_eag *TGN )MarshalXML (e *_d .Encoder ,start _d .StartElement )error {start .Name .Local ="\u0054\u0047\u004e";e .EncodeToken (start );e .EncodeToken (_d .EndElement {Name :start .Name });return nil ;};func (_ede *RFC1766 )UnmarshalXML (d *_d .Decoder ,start _d .StartElement )error {for {_dgd ,_gbg :=d .Token ();if _gbg !=nil {return _ab .Errorf ("\u0070\u0061\u0072\u0073in\u0067\u0020\u0052\u0046\u0043\u0031\u0037\u0036\u0036\u003a\u0020\u0025\u0073",_gbg );};if _fgb ,_gfc :=_dgd .(_d .EndElement );_gfc &&_fgb .Name ==start .Name {break ;};};return nil ;};

// ValidateWithPath validates the TGN and its children, prefixing error messages with path
func (_fae *TGN )ValidateWithPath (path string )error {return nil };type IMT struct{};type W3CDTF struct{};func (_cef *ElementsAndRefinementsGroupChoice )MarshalXML (e *_d .Encoder ,start _d .StartElement )error {if _cef .Any !=nil {_acf :=_d .StartElement {Name :_d .Name {Local :"\u0064\u0063\u003a\u0061\u006e\u0079"}};for _ ,_bce :=range _cef .Any {e .EncodeElement (_bce ,_acf );};};return nil ;};func (_ddf *UDC )UnmarshalXML (d *_d .Decoder ,start _d .StartElement )error {for {_ccf ,_gcd :=d .Token ();if _gcd !=nil {return _ab .Errorf ("\u0070a\u0072s\u0069\u006e\u0067\u0020\u0055\u0044\u0043\u003a\u0020\u0025\u0073",_gcd );};if _gged ,_eeg :=_ccf .(_d .EndElement );_eeg &&_gged .Name ==start .Name {break ;};};return nil ;};func NewBox ()*Box {_be :=&Box {};return _be };func (_ddc *RFC3066 )UnmarshalXML (d *_d .Decoder ,start _d .StartElement )error {for {_fdgb ,_ecd :=d .Token ();if _ecd !=nil {return _ab .Errorf ("\u0070\u0061\u0072\u0073in\u0067\u0020\u0052\u0046\u0043\u0033\u0030\u0036\u0036\u003a\u0020\u0025\u0073",_ecd );};if _bged ,_baggd :=_fdgb .(_d .EndElement );_baggd &&_bged .Name ==start .Name {break ;};};return nil ;};

// Validate validates the ElementOrRefinementContainer and its children
func (_ce *ElementOrRefinementContainer )Validate ()error {return _ce .ValidateWithPath ("\u0045\u006c\u0065\u006de\u006e\u0074\u004f\u0072\u0052\u0065\u0066\u0069\u006e\u0065m\u0065n\u0074\u0043\u006f\u006e\u0074\u0061\u0069n\u0065\u0072");};

// Validate validates the ISO639_2 and its children
func (_ddb *ISO639_2 )Validate ()error {return _ddb .ValidateWithPath ("\u0049\u0053\u004f\u0036\u0033\u0039\u005f\u0032");};func (_ef *ElementOrRefinementContainer )UnmarshalXML (d *_d .Decoder ,start _d .StartElement )error {_db :for {_bec ,_ba :=d .Token ();if _ba !=nil {return _ba ;};switch _afde :=_bec .(type ){case _d .StartElement :switch _afde .Name {case _d .Name {Space :"\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0072\u0067/\u0064c\u002f\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0073\u002f\u0031\u002e\u0031\u002f",Local :"\u0061\u006e\u0079"}:_bbe :=NewElementsAndRefinementsGroupChoice ();if _df :=d .DecodeElement (&_bbe .Any ,&_afde );_df !=nil {return _df ;};_ef .Choice =append (_ef .Choice ,_bbe );default:_b .Log .Debug ("\u0073k\u0069\u0070\u0070\u0069\u006e\u0067\u0020un\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006de\u006e\u0074 \u006f\u006e\u0020E\u006c\u0065\u006d\u0065\u006e\u0074\u004f\u0072\u0052\u0065\u0066\u0069\u006e\u0065\u006d\u0065n\u0074\u0043on\u0074\u0061\u0069n\u0065\u0072\u0020\u0025\u0076",_afde .Name );if _bde :=d .Skip ();_bde !=nil {return _bde ;};};case _d .EndElement :break _db ;case _d .CharData :};};return nil ;};type DDC struct{};func (_fdc *Point )UnmarshalXML (d *_d .Decoder ,start _d .StartElement )error {for {_fbf ,_gda :=d .Token ();if _gda !=nil {return _ab .Errorf ("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0050\u006f\u0069\u006et\u003a\u0020\u0025\u0073",_gda );};if _beb ,_eeb :=_fbf .(_d .EndElement );_eeb &&_beb .Name ==start .Name {break ;};};return nil ;};

// Validate validates the URI and its children
func (_aaa *URI )Validate ()error {return _aaa .ValidateWithPath ("\u0055\u0052\u0049")};

// ValidateWithPath validates the RFC3066 and its children, prefixing error messages with path
func (_cag *RFC3066 )ValidateWithPath (path string )error {return nil };func (_bba *IMT )UnmarshalXML (d *_d .Decoder ,start _d .StartElement )error {for {_dge ,_dcb :=d .Token ();if _dcb !=nil {return _ab .Errorf ("\u0070a\u0072s\u0069\u006e\u0067\u0020\u0049\u004d\u0054\u003a\u0020\u0025\u0073",_dcb );};if _aaf ,_eda :=_dge .(_d .EndElement );_eda &&_aaf .Name ==start .Name {break ;};};return nil ;};func NewLCSH ()*LCSH {_cfb :=&LCSH {};return _cfb };

// Validate validates the RFC3066 and its children
func (_fa *RFC3066 )Validate ()error {return _fa .ValidateWithPath ("\u0052F\u0043\u0033\u0030\u0036\u0036");};

// ValidateWithPath validates the DCMIType and its children, prefixing error messages with path
func (_ae *DCMIType )ValidateWithPath (path string )error {return nil };

// Validate validates the ElementsAndRefinementsGroup and its children
func (_eg *ElementsAndRefinementsGroup )Validate ()error {return _eg .ValidateWithPath ("E\u006c\u0065\u006d\u0065\u006e\u0074s\u0041\u006e\u0064\u0052\u0065\u0066\u0069\u006e\u0065m\u0065\u006e\u0074s\u0047r\u006f\u0075\u0070");};

// ValidateWithPath validates the ElementsAndRefinementsGroup and its children, prefixing error messages with path
func (_acdd *ElementsAndRefinementsGroup )ValidateWithPath (path string )error {for _acg ,_cbe :=range _acdd .Choice {if _fedb :=_cbe .ValidateWithPath (_ab .Sprintf ("\u0025\u0073\u002f\u0043\u0068\u006f\u0069\u0063\u0065\u005b\u0025\u0064\u005d",path ,_acg ));_fedb !=nil {return _fedb ;};};return nil ;};func (_bee *URI )UnmarshalXML (d *_d .Decoder ,start _d .StartElement )error {for {_aed ,_aga :=d .Token ();if _aga !=nil {return _ab .Errorf ("\u0070a\u0072s\u0069\u006e\u0067\u0020\u0055\u0052\u0049\u003a\u0020\u0025\u0073",_aga );};if _eee ,_ff :=_aed .(_d .EndElement );_ff &&_eee .Name ==start .Name {break ;};};return nil ;};func (_gdc *Period )UnmarshalXML (d *_d .Decoder ,start _d .StartElement )error {for {_bbaa ,_ca :=d .Token ();if _ca !=nil {return _ab .Errorf ("\u0070a\u0072s\u0069\u006e\u0067\u0020\u0050e\u0072\u0069o\u0064\u003a\u0020\u0025\u0073",_ca );};if _dbg ,_cfdg :=_bbaa .(_d .EndElement );_cfdg &&_dbg .Name ==start .Name {break ;};};return nil ;};func (_eab *LCSH )UnmarshalXML (d *_d .Decoder ,start _d .StartElement )error {for {_gd ,_fdgg :=d .Token ();if _fdgg !=nil {return _ab .Errorf ("\u0070\u0061r\u0073\u0069\u006eg\u0020\u004c\u0043\u0053\u0048\u003a\u0020\u0025\u0073",_fdgg );};if _gcb ,_age :=_gd .(_d .EndElement );_age &&_gcb .Name ==start .Name {break ;};};return nil ;};func (_abg *ISO639_2 )UnmarshalXML (d *_d .Decoder ,start _d .StartElement )error {for {_daa ,_gga :=d .Token ();if _gga !=nil {return _ab .Errorf ("p\u0061r\u0073\u0069\u006e\u0067\u0020\u0049\u0053\u004f6\u0033\u0039\u005f\u0032: \u0025\u0073",_gga );};if _dad ,_adf :=_daa .(_d .EndElement );_adf &&_dad .Name ==start .Name {break ;};};return nil ;};func NewMESH ()*MESH {_add :=&MESH {};return _add };

// ValidateWithPath validates the MESH and its children, prefixing error messages with path
func (_fcg *MESH )ValidateWithPath (path string )error {return nil };

// ValidateWithPath validates the UDC and its children, prefixing error messages with path
func (_fgf *UDC )ValidateWithPath (path string )error {return nil };func (_ege *Period )MarshalXML (e *_d .Encoder ,start _d .StartElement )error {start .Name .Local ="\u0050\u0065\u0072\u0069\u006f\u0064";e .EncodeToken (start );e .EncodeToken (_d .EndElement {Name :start .Name });return nil ;};type Point struct{};func NewElementsAndRefinementsGroupChoice ()*ElementsAndRefinementsGroupChoice {_bcf :=&ElementsAndRefinementsGroupChoice {};return _bcf ;};type ElementsAndRefinementsGroup struct{Choice []*ElementsAndRefinementsGroupChoice ;};func (_af *DDC )UnmarshalXML (d *_d .Decoder ,start _d .StartElement )error {for {_bed ,_gc :=d .Token ();if _gc !=nil {return _ab .Errorf ("\u0070a\u0072s\u0069\u006e\u0067\u0020\u0044\u0044\u0043\u003a\u0020\u0025\u0073",_gc );};if _ac ,_ec :=_bed .(_d .EndElement );_ec &&_ac .Name ==start .Name {break ;};};return nil ;};type ElementsAndRefinementsGroupChoice struct{Any []*_fg .Any ;};func (_cb *DDC )MarshalXML (e *_d .Encoder ,start _d .StartElement )error {start .Name .Local ="\u0044\u0044\u0043";e .EncodeToken (start );e .EncodeToken (_d .EndElement {Name :start .Name });return nil ;};func NewISO639_2 ()*ISO639_2 {_dcg :=&ISO639_2 {};return _dcg };

// ValidateWithPath validates the ISO639_2 and its children, prefixing error messages with path
func (_afa *ISO639_2 )ValidateWithPath (path string )error {return nil };type ElementOrRefinementContainer struct{Choice []*ElementsAndRefinementsGroupChoice ;};type ISO639_2 struct{};

// Validate validates the LCC and its children
func (_cff *LCC )Validate ()error {return _cff .ValidateWithPath ("\u004c\u0043\u0043")};func (_fdf *ISO3166 )MarshalXML (e *_d .Encoder ,start _d .StartElement )error {start .Name .Local ="\u0049S\u004f\u0033\u0031\u0036\u0036";e .EncodeToken (start );e .EncodeToken (_d .EndElement {Name :start .Name });return nil ;};func NewPeriod ()*Period {_eabf :=&Period {};return _eabf };func init (){_f .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u004c\u0043\u0053\u0048",NewLCSH );_f .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u004d\u0045\u0053\u0048",NewMESH );_f .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u0044\u0044\u0043",NewDDC );_f .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u004c\u0043\u0043",NewLCC );_f .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u0055\u0044\u0043",NewUDC );_f .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u0050\u0065\u0072\u0069\u006f\u0064",NewPeriod );_f .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u0057\u0033\u0043\u0044\u0054\u0046",NewW3CDTF );_f .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u0044\u0043\u004d\u0049\u0054\u0079\u0070\u0065",NewDCMIType );_f .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u0049\u004d\u0054",NewIMT );_f .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u0055\u0052\u0049",NewURI );_f .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u0049\u0053\u004f\u0036\u0033\u0039\u002d\u0032",NewISO639_2 );_f .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u0052F\u0043\u0031\u0037\u0036\u0036",NewRFC1766 );_f .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u0052F\u0043\u0033\u0030\u0036\u0036",NewRFC3066 );_f .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u0050\u006f\u0069n\u0074",NewPoint );_f .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u0049S\u004f\u0033\u0031\u0036\u0036",NewISO3166 );_f .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u0042\u006f\u0078",NewBox );_f .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u0054\u0047\u004e",NewTGN );_f .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u0065\u006c\u0065\u006de\u006e\u0074\u004f\u0072\u0052\u0065\u0066\u0069\u006e\u0065m\u0065n\u0074\u0043\u006f\u006e\u0074\u0061\u0069n\u0065\u0072",NewElementOrRefinementContainer );_f .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","e\u006c\u0065\u006d\u0065\u006e\u0074s\u0041\u006e\u0064\u0052\u0065\u0066\u0069\u006e\u0065m\u0065\u006e\u0074s\u0047r\u006f\u0075\u0070",NewElementsAndRefinementsGroup );};