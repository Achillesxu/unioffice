//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package terms ;import (_a "encoding/xml";_d "fmt";_dg "github.com/unidoc/unioffice";_f "github.com/unidoc/unioffice/schema/purl.org/dc/elements";);

// Validate validates the TGN and its children
func (_dcfd *TGN )Validate ()error {return _dcfd .ValidateWithPath ("\u0054\u0047\u004e")};func (_abb *ISO639_2 )MarshalXML (e *_a .Encoder ,start _a .StartElement )error {start .Name .Local ="\u0049\u0053\u004f\u0036\u0033\u0039\u002d\u0032";e .EncodeToken (start );e .EncodeToken (_a .EndElement {Name :start .Name });return nil ;};

// Validate validates the ISO3166 and its children
func (_fad *ISO3166 )Validate ()error {return _fad .ValidateWithPath ("\u0049S\u004f\u0033\u0031\u0036\u0036");};

// Validate validates the MESH and its children
func (_fdf *MESH )Validate ()error {return _fdf .ValidateWithPath ("\u004d\u0045\u0053\u0048")};type LCSH struct{};func (_dbd *ISO3166 )UnmarshalXML (d *_a .Decoder ,start _a .StartElement )error {for {_ccc ,_aga :=d .Token ();if _aga !=nil {return _d .Errorf ("\u0070\u0061\u0072\u0073in\u0067\u0020\u0049\u0053\u004f\u0033\u0031\u0036\u0036\u003a\u0020\u0025\u0073",_aga );};if _ccgf ,_afb :=_ccc .(_a .EndElement );_afb &&_ccgf .Name ==start .Name {break ;};};return nil ;};

// Validate validates the W3CDTF and its children
func (_beae *W3CDTF )Validate ()error {return _beae .ValidateWithPath ("\u0057\u0033\u0043\u0044\u0054\u0046");};

// Validate validates the DCMIType and its children
func (_ce *DCMIType )Validate ()error {return _ce .ValidateWithPath ("\u0044\u0043\u004d\u0049\u0054\u0079\u0070\u0065");};func NewW3CDTF ()*W3CDTF {_fdg :=&W3CDTF {};return _fdg };

// Validate validates the Point and its children
func (_eefa *Point )Validate ()error {return _eefa .ValidateWithPath ("\u0050\u006f\u0069n\u0074")};func NewPoint ()*Point {_cdg :=&Point {};return _cdg };func NewLCC ()*LCC {_fbb :=&LCC {};return _fbb };func (_gf *ElementOrRefinementContainer )UnmarshalXML (d *_a .Decoder ,start _a .StartElement )error {_gg :for {_cd ,_ee :=d .Token ();if _ee !=nil {return _ee ;};switch _feb :=_cd .(type ){case _a .StartElement :switch _feb .Name {case _a .Name {Space :"\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0072\u0067/\u0064c\u002f\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0073\u002f\u0031\u002e\u0031\u002f",Local :"\u0061\u006e\u0079"}:_ef :=NewElementsAndRefinementsGroupChoice ();if _eac :=d .DecodeElement (&_ef .Any ,&_feb );_eac !=nil {return _eac ;};_gf .Choice =append (_gf .Choice ,_ef );default:_dg .Log ("\u0073k\u0069\u0070\u0070\u0069\u006e\u0067\u0020un\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006de\u006e\u0074 \u006f\u006e\u0020E\u006c\u0065\u006d\u0065\u006e\u0074\u004f\u0072\u0052\u0065\u0066\u0069\u006e\u0065\u006d\u0065n\u0074\u0043on\u0074\u0061\u0069n\u0065\u0072\u0020\u0025\u0076",_feb .Name );if _ggf :=d .Skip ();_ggf !=nil {return _ggf ;};};case _a .EndElement :break _gg ;case _a .CharData :};};return nil ;};

// ValidateWithPath validates the UDC and its children, prefixing error messages with path
func (_aef *UDC )ValidateWithPath (path string )error {return nil };func (_aad *Period )UnmarshalXML (d *_a .Decoder ,start _a .StartElement )error {for {_babb ,_bgb :=d .Token ();if _bgb !=nil {return _d .Errorf ("\u0070a\u0072s\u0069\u006e\u0067\u0020\u0050e\u0072\u0069o\u0064\u003a\u0020\u0025\u0073",_bgb );};if _ebf ,_ced :=_babb .(_a .EndElement );_ced &&_ebf .Name ==start .Name {break ;};};return nil ;};func NewElementOrRefinementContainer ()*ElementOrRefinementContainer {_ea :=&ElementOrRefinementContainer {};return _ea ;};type ElementsAndRefinementsGroupChoice struct{Any []*_f .Any ;};func (_babd *IMT )MarshalXML (e *_a .Encoder ,start _a .StartElement )error {start .Name .Local ="\u0049\u004d\u0054";e .EncodeToken (start );e .EncodeToken (_a .EndElement {Name :start .Name });return nil ;};func NewUDC ()*UDC {_dce :=&UDC {};return _dce };func (_add *Point )MarshalXML (e *_a .Encoder ,start _a .StartElement )error {start .Name .Local ="\u0050\u006f\u0069n\u0074";e .EncodeToken (start );e .EncodeToken (_a .EndElement {Name :start .Name });return nil ;};func NewPeriod ()*Period {_aac :=&Period {};return _aac };

// Validate validates the LCC and its children
func (_ffe *LCC )Validate ()error {return _ffe .ValidateWithPath ("\u004c\u0043\u0043")};type IMT struct{};func (_aeg *LCSH )MarshalXML (e *_a .Encoder ,start _a .StartElement )error {start .Name .Local ="\u004c\u0043\u0053\u0048";e .EncodeToken (start );e .EncodeToken (_a .EndElement {Name :start .Name });return nil ;};func (_fef *ElementOrRefinementContainer )MarshalXML (e *_a .Encoder ,start _a .StartElement )error {start .Name .Local ="\u0065\u006c\u0065\u006de\u006e\u0074\u004f\u0072\u0052\u0065\u0066\u0069\u006e\u0065m\u0065n\u0074\u0043\u006f\u006e\u0074\u0061\u0069n\u0065\u0072";e .EncodeToken (start );if _fef .Choice !=nil {for _ ,_cef :=range _fef .Choice {_cef .MarshalXML (e ,_a .StartElement {});};};e .EncodeToken (_a .EndElement {Name :start .Name });return nil ;};func (_beg *ElementsAndRefinementsGroup )UnmarshalXML (d *_a .Decoder ,start _a .StartElement )error {_ad :for {_ed ,_aab :=d .Token ();if _aab !=nil {return _aab ;};switch _baf :=_ed .(type ){case _a .StartElement :switch _baf .Name {case _a .Name {Space :"\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0072\u0067/\u0064c\u002f\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0073\u002f\u0031\u002e\u0031\u002f",Local :"\u0061\u006e\u0079"}:_cec :=NewElementsAndRefinementsGroupChoice ();if _adc :=d .DecodeElement (&_cec .Any ,&_baf );_adc !=nil {return _adc ;};_beg .Choice =append (_beg .Choice ,_cec );default:_dg .Log ("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020e\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0045\u006ce\u006d\u0065\u006e\u0074\u0073\u0041\u006e\u0064\u0052\u0065\u0066\u0069\u006e\u0065\u006d\u0065\u006et\u0073\u0047\u0072\u006f\u0075\u0070\u0020\u0025\u0076",_baf .Name );if _ae :=d .Skip ();_ae !=nil {return _ae ;};};case _a .EndElement :break _ad ;case _a .CharData :};};return nil ;};func (_fgb *RFC3066 )UnmarshalXML (d *_a .Decoder ,start _a .StartElement )error {for {_cfa ,_aba :=d .Token ();if _aba !=nil {return _d .Errorf ("\u0070\u0061\u0072\u0073in\u0067\u0020\u0052\u0046\u0043\u0033\u0030\u0036\u0036\u003a\u0020\u0025\u0073",_aba );};if _adff ,_cdb :=_cfa .(_a .EndElement );_cdb &&_adff .Name ==start .Name {break ;};};return nil ;};

// ValidateWithPath validates the ElementsAndRefinementsGroup and its children, prefixing error messages with path
func (_cb *ElementsAndRefinementsGroup )ValidateWithPath (path string )error {for _eae ,_ead :=range _cb .Choice {if _fc :=_ead .ValidateWithPath (_d .Sprintf ("\u0025\u0073\u002f\u0043\u0068\u006f\u0069\u0063\u0065\u005b\u0025\u0064\u005d",path ,_eae ));_fc !=nil {return _fc ;};};return nil ;};func (_cg *W3CDTF )UnmarshalXML (d *_a .Decoder ,start _a .StartElement )error {for {_afg ,_gfge :=d .Token ();if _gfge !=nil {return _d .Errorf ("\u0070a\u0072s\u0069\u006e\u0067\u0020\u00573\u0043\u0044T\u0046\u003a\u0020\u0025\u0073",_gfge );};if _dgg ,_fee :=_afg .(_a .EndElement );_fee &&_dgg .Name ==start .Name {break ;};};return nil ;};func NewRFC3066 ()*RFC3066 {_dfcd :=&RFC3066 {};return _dfcd };

// Validate validates the ISO639_2 and its children
func (_efe *ISO639_2 )Validate ()error {return _efe .ValidateWithPath ("\u0049\u0053\u004f\u0036\u0033\u0039\u005f\u0032");};type ElementsAndRefinementsGroup struct{Choice []*ElementsAndRefinementsGroupChoice ;};type DCMIType struct{};func (_gdd *LCC )MarshalXML (e *_a .Encoder ,start _a .StartElement )error {start .Name .Local ="\u004c\u0043\u0043";e .EncodeToken (start );e .EncodeToken (_a .EndElement {Name :start .Name });return nil ;};

// Validate validates the DDC and its children
func (_gbc *DDC )Validate ()error {return _gbc .ValidateWithPath ("\u0044\u0044\u0043")};func (_dca *DDC )MarshalXML (e *_a .Encoder ,start _a .StartElement )error {start .Name .Local ="\u0044\u0044\u0043";e .EncodeToken (start );e .EncodeToken (_a .EndElement {Name :start .Name });return nil ;};

// ValidateWithPath validates the ElementsAndRefinementsGroupChoice and its children, prefixing error messages with path
func (_cf *ElementsAndRefinementsGroupChoice )ValidateWithPath (path string )error {for _ade ,_eba :=range _cf .Any {if _ag :=_eba .ValidateWithPath (_d .Sprintf ("\u0025\u0073\u002f\u0041\u006e\u0079\u005b\u0025\u0064\u005d",path ,_ade ));_ag !=nil {return _ag ;};};return nil ;};func NewElementsAndRefinementsGroup ()*ElementsAndRefinementsGroup {_fge :=&ElementsAndRefinementsGroup {};return _fge ;};func (_de *Box )MarshalXML (e *_a .Encoder ,start _a .StartElement )error {start .Name .Local ="\u0042\u006f\u0078";e .EncodeToken (start );e .EncodeToken (_a .EndElement {Name :start .Name });return nil ;};func (_ebgg *Point )UnmarshalXML (d *_a .Decoder ,start _a .StartElement )error {for {_eef ,_dgc :=d .Token ();if _dgc !=nil {return _d .Errorf ("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0050\u006f\u0069\u006et\u003a\u0020\u0025\u0073",_dgc );};if _gfg ,_fadb :=_eef .(_a .EndElement );_fadb &&_gfg .Name ==start .Name {break ;};};return nil ;};type ISO639_2 struct{};func (_fga *MESH )UnmarshalXML (d *_a .Decoder ,start _a .StartElement )error {for {_aed ,_gaa :=d .Token ();if _gaa !=nil {return _d .Errorf ("\u0070\u0061r\u0073\u0069\u006eg\u0020\u004d\u0045\u0053\u0048\u003a\u0020\u0025\u0073",_gaa );};if _ca ,_dgf :=_aed .(_a .EndElement );_dgf &&_ca .Name ==start .Name {break ;};};return nil ;};

// ValidateWithPath validates the RFC1766 and its children, prefixing error messages with path
func (_gef *RFC1766 )ValidateWithPath (path string )error {return nil };

// ValidateWithPath validates the Period and its children, prefixing error messages with path
func (_fbg *Period )ValidateWithPath (path string )error {return nil };func (_efg *Period )MarshalXML (e *_a .Encoder ,start _a .StartElement )error {start .Name .Local ="\u0050\u0065\u0072\u0069\u006f\u0064";e .EncodeToken (start );e .EncodeToken (_a .EndElement {Name :start .Name });return nil ;};func (_ba *DCMIType )UnmarshalXML (d *_a .Decoder ,start _a .StartElement )error {for {_bb ,_gc :=d .Token ();if _gc !=nil {return _d .Errorf ("p\u0061r\u0073\u0069\u006e\u0067\u0020\u0044\u0043\u004dI\u0054\u0079\u0070\u0065: \u0025\u0073",_gc );};if _dgd ,_dff :=_bb .(_a .EndElement );_dff &&_dgd .Name ==start .Name {break ;};};return nil ;};

// Validate validates the IMT and its children
func (_ebb *IMT )Validate ()error {return _ebb .ValidateWithPath ("\u0049\u004d\u0054")};type Point struct{};func NewDCMIType ()*DCMIType {_db :=&DCMIType {};return _db };type MESH struct{};func (_fde *LCSH )UnmarshalXML (d *_a .Decoder ,start _a .StartElement )error {for {_efc ,_ged :=d .Token ();if _ged !=nil {return _d .Errorf ("\u0070\u0061r\u0073\u0069\u006eg\u0020\u004c\u0043\u0053\u0048\u003a\u0020\u0025\u0073",_ged );};if _egd ,_ggfa :=_efc .(_a .EndElement );_ggfa &&_egd .Name ==start .Name {break ;};};return nil ;};type RFC3066 struct{};

// Validate validates the LCSH and its children
func (_aeb *LCSH )Validate ()error {return _aeb .ValidateWithPath ("\u004c\u0043\u0053\u0048")};func (_bcf *MESH )MarshalXML (e *_a .Encoder ,start _a .StartElement )error {start .Name .Local ="\u004d\u0045\u0053\u0048";e .EncodeToken (start );e .EncodeToken (_a .EndElement {Name :start .Name });return nil ;};func NewLCSH ()*LCSH {_gec :=&LCSH {};return _gec };

// ValidateWithPath validates the ElementOrRefinementContainer and its children, prefixing error messages with path
func (_bee *ElementOrRefinementContainer )ValidateWithPath (path string )error {for _fb ,_bab :=range _bee .Choice {if _dge :=_bab .ValidateWithPath (_d .Sprintf ("\u0025\u0073\u002f\u0043\u0068\u006f\u0069\u0063\u0065\u005b\u0025\u0064\u005d",path ,_fb ));_dge !=nil {return _dge ;};};return nil ;};

// ValidateWithPath validates the RFC3066 and its children, prefixing error messages with path
func (_ecc *RFC3066 )ValidateWithPath (path string )error {return nil };func NewMESH ()*MESH {_ggfb :=&MESH {};return _ggfb };func (_fac *ISO639_2 )UnmarshalXML (d *_a .Decoder ,start _a .StartElement )error {for {_ga ,_facc :=d .Token ();if _facc !=nil {return _d .Errorf ("p\u0061r\u0073\u0069\u006e\u0067\u0020\u0049\u0053\u004f6\u0033\u0039\u005f\u0032: \u0025\u0073",_facc );};if _bac ,_edc :=_ga .(_a .EndElement );_edc &&_bac .Name ==start .Name {break ;};};return nil ;};

// Validate validates the UDC and its children
func (_dfe *UDC )Validate ()error {return _dfe .ValidateWithPath ("\u0055\u0044\u0043")};type ElementOrRefinementContainer struct{Choice []*ElementsAndRefinementsGroupChoice ;};type Period struct{};func (_bea *W3CDTF )MarshalXML (e *_a .Encoder ,start _a .StartElement )error {start .Name .Local ="\u0057\u0033\u0043\u0044\u0054\u0046";e .EncodeToken (start );e .EncodeToken (_a .EndElement {Name :start .Name });return nil ;};func (_ada *RFC3066 )MarshalXML (e *_a .Encoder ,start _a .StartElement )error {start .Name .Local ="\u0052F\u0043\u0033\u0030\u0036\u0036";e .EncodeToken (start );e .EncodeToken (_a .EndElement {Name :start .Name });return nil ;};func NewRFC1766 ()*RFC1766 {_bec :=&RFC1766 {};return _bec };type RFC1766 struct{};func (_eg *DDC )UnmarshalXML (d *_a .Decoder ,start _a .StartElement )error {for {_aa ,_gb :=d .Token ();if _gb !=nil {return _d .Errorf ("\u0070a\u0072s\u0069\u006e\u0067\u0020\u0044\u0044\u0043\u003a\u0020\u0025\u0073",_gb );};if _dd ,_gd :=_aa .(_a .EndElement );_gd &&_dd .Name ==start .Name {break ;};};return nil ;};func (_dde *ElementsAndRefinementsGroup )MarshalXML (e *_a .Encoder ,start _a .StartElement )error {if _dde .Choice !=nil {for _ ,_bf :=range _dde .Choice {_bf .MarshalXML (e ,_a .StartElement {});};};return nil ;};

// ValidateWithPath validates the URI and its children, prefixing error messages with path
func (_babbf *URI )ValidateWithPath (path string )error {return nil };func (_be *DCMIType )MarshalXML (e *_a .Encoder ,start _a .StartElement )error {start .Name .Local ="\u0044\u0043\u004d\u0049\u0054\u0079\u0070\u0065";e .EncodeToken (start );e .EncodeToken (_a .EndElement {Name :start .Name });return nil ;};func (_cca *RFC1766 )UnmarshalXML (d *_a .Decoder ,start _a .StartElement )error {for {_fgf ,_agd :=d .Token ();if _agd !=nil {return _d .Errorf ("\u0070\u0061\u0072\u0073in\u0067\u0020\u0052\u0046\u0043\u0031\u0037\u0036\u0036\u003a\u0020\u0025\u0073",_agd );};if _dga ,_abg :=_fgf .(_a .EndElement );_abg &&_dga .Name ==start .Name {break ;};};return nil ;};

// ValidateWithPath validates the DDC and its children, prefixing error messages with path
func (_fg *DDC )ValidateWithPath (path string )error {return nil };

// Validate validates the URI and its children
func (_fcbb *URI )Validate ()error {return _fcbb .ValidateWithPath ("\u0055\u0052\u0049")};

// ValidateWithPath validates the Point and its children, prefixing error messages with path
func (_adf *Point )ValidateWithPath (path string )error {return nil };

// ValidateWithPath validates the W3CDTF and its children, prefixing error messages with path
func (_dbb *W3CDTF )ValidateWithPath (path string )error {return nil };func NewIMT ()*IMT {_af :=&IMT {};return _af };type Box struct{};func NewBox ()*Box {_g :=&Box {};return _g };type W3CDTF struct{};

// Validate validates the RFC1766 and its children
func (_fca *RFC1766 )Validate ()error {return _fca .ValidateWithPath ("\u0052F\u0043\u0031\u0037\u0036\u0036");};func (_dc *Box )UnmarshalXML (d *_a .Decoder ,start _a .StartElement )error {for {_fe ,_da :=d .Token ();if _da !=nil {return _d .Errorf ("\u0070a\u0072s\u0069\u006e\u0067\u0020\u0042\u006f\u0078\u003a\u0020\u0025\u0073",_da );};if _c ,_e :=_fe .(_a .EndElement );_e &&_c .Name ==start .Name {break ;};};return nil ;};func NewTGN ()*TGN {_eff :=&TGN {};return _eff };

// Validate validates the ElementsAndRefinementsGroup and its children
func (_dcf *ElementsAndRefinementsGroup )Validate ()error {return _dcf .ValidateWithPath ("E\u006c\u0065\u006d\u0065\u006e\u0074s\u0041\u006e\u0064\u0052\u0065\u0066\u0069\u006e\u0065m\u0065\u006e\u0074s\u0047r\u006f\u0075\u0070");};func (_ffd *URI )MarshalXML (e *_a .Encoder ,start _a .StartElement )error {start .Name .Local ="\u0055\u0052\u0049";e .EncodeToken (start );e .EncodeToken (_a .EndElement {Name :start .Name });return nil ;};func NewDDC ()*DDC {_cc :=&DDC {};return _cc };

// Validate validates the ElementsAndRefinementsGroupChoice and its children
func (_gga *ElementsAndRefinementsGroupChoice )Validate ()error {return _gga .ValidateWithPath ("\u0045\u006c\u0065\u006d\u0065\u006et\u0073\u0041\u006e\u0064\u0052\u0065\u0066\u0069\u006e\u0065\u006d\u0065\u006et\u0073\u0047\u0072\u006f\u0075\u0070\u0043h\u006f\u0069\u0063\u0065");};func (_ccd *TGN )MarshalXML (e *_a .Encoder ,start _a .StartElement )error {start .Name .Local ="\u0054\u0047\u004e";e .EncodeToken (start );e .EncodeToken (_a .EndElement {Name :start .Name });return nil ;};

// ValidateWithPath validates the ISO3166 and its children, prefixing error messages with path
func (_ebg *ISO3166 )ValidateWithPath (path string )error {return nil };func (_deg *URI )UnmarshalXML (d *_a .Decoder ,start _a .StartElement )error {for {_cee ,_ecf :=d .Token ();if _ecf !=nil {return _d .Errorf ("\u0070a\u0072s\u0069\u006e\u0067\u0020\u0055\u0052\u0049\u003a\u0020\u0025\u0073",_ecf );};if _fadc ,_afbb :=_cee .(_a .EndElement );_afbb &&_fadc .Name ==start .Name {break ;};};return nil ;};

// ValidateWithPath validates the LCC and its children, prefixing error messages with path
func (_fgeb *LCC )ValidateWithPath (path string )error {return nil };

// Validate validates the Box and its children
func (_ec *Box )Validate ()error {return _ec .ValidateWithPath ("\u0042\u006f\u0078")};func (_bfd *UDC )UnmarshalXML (d *_a .Decoder ,start _a .StartElement )error {for {_agf ,_cbe :=d .Token ();if _cbe !=nil {return _d .Errorf ("\u0070a\u0072s\u0069\u006e\u0067\u0020\u0055\u0044\u0043\u003a\u0020\u0025\u0073",_cbe );};if _fcb ,_ffea :=_agf .(_a .EndElement );_ffea &&_fcb .Name ==start .Name {break ;};};return nil ;};

// ValidateWithPath validates the DCMIType and its children, prefixing error messages with path
func (_eb *DCMIType )ValidateWithPath (path string )error {return nil };

// ValidateWithPath validates the Box and its children, prefixing error messages with path
func (_df *Box )ValidateWithPath (path string )error {return nil };

// ValidateWithPath validates the MESH and its children, prefixing error messages with path
func (_egb *MESH )ValidateWithPath (path string )error {return nil };

// ValidateWithPath validates the LCSH and its children, prefixing error messages with path
func (_dcb *LCSH )ValidateWithPath (path string )error {return nil };

// ValidateWithPath validates the TGN and its children, prefixing error messages with path
func (_geg *TGN )ValidateWithPath (path string )error {return nil };

// ValidateWithPath validates the ISO639_2 and its children, prefixing error messages with path
func (_bc *ISO639_2 )ValidateWithPath (path string )error {return nil };func NewISO3166 ()*ISO3166 {_dfc :=&ISO3166 {};return _dfc };func (_agb *UDC )MarshalXML (e *_a .Encoder ,start _a .StartElement )error {start .Name .Local ="\u0055\u0044\u0043";e .EncodeToken (start );e .EncodeToken (_a .EndElement {Name :start .Name });return nil ;};

// Validate validates the RFC3066 and its children
func (_gac *RFC3066 )Validate ()error {return _gac .ValidateWithPath ("\u0052F\u0043\u0033\u0030\u0036\u0036");};func (_eeg *ElementsAndRefinementsGroupChoice )MarshalXML (e *_a .Encoder ,start _a .StartElement )error {if _eeg .Any !=nil {_gcg :=_a .StartElement {Name :_a .Name {Local :"\u0064\u0063\u003a\u0061\u006e\u0079"}};for _ ,_dba :=range _eeg .Any {e .EncodeElement (_dba ,_gcg );};};return nil ;};func (_ccg *ElementsAndRefinementsGroupChoice )UnmarshalXML (d *_a .Decoder ,start _a .StartElement )error {_aaed :for {_dec ,_dbg :=d .Token ();if _dbg !=nil {return _dbg ;};switch _ac :=_dec .(type ){case _a .StartElement :switch _ac .Name {case _a .Name {Space :"\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0072\u0067/\u0064c\u002f\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0073\u002f\u0031\u002e\u0031\u002f",Local :"\u0061\u006e\u0079"}:_gde :=_f .NewAny ();if _cefb :=d .DecodeElement (_gde ,&_ac );_cefb !=nil {return _cefb ;};_ccg .Any =append (_ccg .Any ,_gde );default:_dg .Log ("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0045\u006c\u0065\u006d\u0065\u006e\u0074\u0073\u0041\u006ed\u0052\u0065\u0066\u0069\u006e\u0065\u006d\u0065\u006e\u0074\u0073\u0047\u0072\u006fu\u0070\u0043\u0068o\u0069\u0063\u0065\u0020\u0025\u0076",_ac .Name );if _dag :=d .Skip ();_dag !=nil {return _dag ;};};case _a .EndElement :break _aaed ;case _a .CharData :};};return nil ;};func NewElementsAndRefinementsGroupChoice ()*ElementsAndRefinementsGroupChoice {_fa :=&ElementsAndRefinementsGroupChoice {};return _fa ;};type ISO3166 struct{};func (_bdg *RFC1766 )MarshalXML (e *_a .Encoder ,start _a .StartElement )error {start .Name .Local ="\u0052F\u0043\u0031\u0037\u0036\u0036";e .EncodeToken (start );e .EncodeToken (_a .EndElement {Name :start .Name });return nil ;};

// Validate validates the Period and its children
func (_dae *Period )Validate ()error {return _dae .ValidateWithPath ("\u0050\u0065\u0072\u0069\u006f\u0064");};type TGN struct{};

// ValidateWithPath validates the IMT and its children, prefixing error messages with path
func (_dea *IMT )ValidateWithPath (path string )error {return nil };type URI struct{};func (_abe *TGN )UnmarshalXML (d *_a .Decoder ,start _a .StartElement )error {for {_gfe ,_abba :=d .Token ();if _abba !=nil {return _d .Errorf ("\u0070a\u0072s\u0069\u006e\u0067\u0020\u0054\u0047\u004e\u003a\u0020\u0025\u0073",_abba );};if _cde ,_bcb :=_gfe .(_a .EndElement );_bcb &&_cde .Name ==start .Name {break ;};};return nil ;};func (_gfd *ISO3166 )MarshalXML (e *_a .Encoder ,start _a .StartElement )error {start .Name .Local ="\u0049S\u004f\u0033\u0031\u0036\u0036";e .EncodeToken (start );e .EncodeToken (_a .EndElement {Name :start .Name });return nil ;};func (_ab *IMT )UnmarshalXML (d *_a .Decoder ,start _a .StartElement )error {for {_cdf ,_bg :=d .Token ();if _bg !=nil {return _d .Errorf ("\u0070a\u0072s\u0069\u006e\u0067\u0020\u0049\u004d\u0054\u003a\u0020\u0025\u0073",_bg );};if _febf ,_ge :=_cdf .(_a .EndElement );_ge &&_febf .Name ==start .Name {break ;};};return nil ;};type UDC struct{};func NewURI ()*URI {_bda :=&URI {};return _bda };func (_aaf *LCC )UnmarshalXML (d *_a .Decoder ,start _a .StartElement )error {for {_ded ,_ddf :=d .Token ();if _ddf !=nil {return _d .Errorf ("\u0070a\u0072s\u0069\u006e\u0067\u0020\u004c\u0043\u0043\u003a\u0020\u0025\u0073",_ddf );};if _agg ,_geb :=_ded .(_a .EndElement );_geb &&_agg .Name ==start .Name {break ;};};return nil ;};type LCC struct{};type DDC struct{};

// Validate validates the ElementOrRefinementContainer and its children
func (_fd *ElementOrRefinementContainer )Validate ()error {return _fd .ValidateWithPath ("\u0045\u006c\u0065\u006de\u006e\u0074\u004f\u0072\u0052\u0065\u0066\u0069\u006e\u0065m\u0065n\u0074\u0043\u006f\u006e\u0074\u0061\u0069n\u0065\u0072");};func NewISO639_2 ()*ISO639_2 {_cbg :=&ISO639_2 {};return _cbg };func init (){_dg .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u004c\u0043\u0053\u0048",NewLCSH );_dg .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u004d\u0045\u0053\u0048",NewMESH );_dg .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u0044\u0044\u0043",NewDDC );_dg .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u004c\u0043\u0043",NewLCC );_dg .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u0055\u0044\u0043",NewUDC );_dg .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u0050\u0065\u0072\u0069\u006f\u0064",NewPeriod );_dg .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u0057\u0033\u0043\u0044\u0054\u0046",NewW3CDTF );_dg .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u0044\u0043\u004d\u0049\u0054\u0079\u0070\u0065",NewDCMIType );_dg .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u0049\u004d\u0054",NewIMT );_dg .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u0055\u0052\u0049",NewURI );_dg .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u0049\u0053\u004f\u0036\u0033\u0039\u002d\u0032",NewISO639_2 );_dg .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u0052F\u0043\u0031\u0037\u0036\u0036",NewRFC1766 );_dg .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u0052F\u0043\u0033\u0030\u0036\u0036",NewRFC3066 );_dg .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u0050\u006f\u0069n\u0074",NewPoint );_dg .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u0049S\u004f\u0033\u0031\u0036\u0036",NewISO3166 );_dg .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u0042\u006f\u0078",NewBox );_dg .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u0054\u0047\u004e",NewTGN );_dg .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u0065\u006c\u0065\u006de\u006e\u0074\u004f\u0072\u0052\u0065\u0066\u0069\u006e\u0065m\u0065n\u0074\u0043\u006f\u006e\u0074\u0061\u0069n\u0065\u0072",NewElementOrRefinementContainer );_dg .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","e\u006c\u0065\u006d\u0065\u006e\u0074s\u0041\u006e\u0064\u0052\u0065\u0066\u0069\u006e\u0065m\u0065\u006e\u0074s\u0047r\u006f\u0075\u0070",NewElementsAndRefinementsGroup );};