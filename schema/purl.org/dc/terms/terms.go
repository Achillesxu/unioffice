//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package terms ;import (_g "encoding/xml";_a "fmt";_f "github.com/unidoc/unioffice";_d "github.com/unidoc/unioffice/schema/purl.org/dc/elements";);type ElementsAndRefinementsGroup struct{Choice []*ElementsAndRefinementsGroupChoice ;};

// Validate validates the UDC and its children
func (_abc *UDC )Validate ()error {return _abc .ValidateWithPath ("\u0055\u0044\u0043")};func NewMESH ()*MESH {_ecb :=&MESH {};return _ecb };

// ValidateWithPath validates the ElementOrRefinementContainer and its children, prefixing error messages with path
func (_ba *ElementOrRefinementContainer )ValidateWithPath (path string )error {for _bae ,_ecef :=range _ba .Choice {if _eb :=_ecef .ValidateWithPath (_a .Sprintf ("\u0025\u0073\u002f\u0043\u0068\u006f\u0069\u0063\u0065\u005b\u0025\u0064\u005d",path ,_bae ));_eb !=nil {return _eb ;};};return nil ;};func (_be *IMT )UnmarshalXML (d *_g .Decoder ,start _g .StartElement )error {for {_baee ,_bdg :=d .Token ();if _bdg !=nil {return _a .Errorf ("\u0070a\u0072s\u0069\u006e\u0067\u0020\u0049\u004d\u0054\u003a\u0020\u0025\u0073",_bdg );};if _cd ,_cbc :=_baee .(_g .EndElement );_cbc &&_cd .Name ==start .Name {break ;};};return nil ;};type ElementsAndRefinementsGroupChoice struct{Any []*_d .Any ;};func NewElementOrRefinementContainer ()*ElementOrRefinementContainer {_ac :=&ElementOrRefinementContainer {};return _ac ;};func (_aec *ISO639_2 )UnmarshalXML (d *_g .Decoder ,start _g .StartElement )error {for {_gcfc ,_efe :=d .Token ();if _efe !=nil {return _a .Errorf ("p\u0061r\u0073\u0069\u006e\u0067\u0020\u0049\u0053\u004f6\u0033\u0039\u005f\u0032: \u0025\u0073",_efe );};if _dbc ,_cdd :=_gcfc .(_g .EndElement );_cdd &&_dbc .Name ==start .Name {break ;};};return nil ;};type IMT struct{};

// ValidateWithPath validates the RFC1766 and its children, prefixing error messages with path
func (_eaf *RFC1766 )ValidateWithPath (path string )error {return nil };func (_cg *DCMIType )MarshalXML (e *_g .Encoder ,start _g .StartElement )error {start .Name .Local ="\u0044\u0043\u004d\u0049\u0054\u0079\u0070\u0065";e .EncodeToken (start );e .EncodeToken (_g .EndElement {Name :start .Name });return nil ;};func (_bc *TGN )MarshalXML (e *_g .Encoder ,start _g .StartElement )error {start .Name .Local ="\u0054\u0047\u004e";e .EncodeToken (start );e .EncodeToken (_g .EndElement {Name :start .Name });return nil ;};

// Validate validates the DDC and its children
func (_gfc *DDC )Validate ()error {return _gfc .ValidateWithPath ("\u0044\u0044\u0043")};

// Validate validates the DCMIType and its children
func (_dd *DCMIType )Validate ()error {return _dd .ValidateWithPath ("\u0044\u0043\u004d\u0049\u0054\u0079\u0070\u0065");};func (_ea *Box )MarshalXML (e *_g .Encoder ,start _g .StartElement )error {start .Name .Local ="\u0042\u006f\u0078";e .EncodeToken (start );e .EncodeToken (_g .EndElement {Name :start .Name });return nil ;};func (_aag *RFC1766 )MarshalXML (e *_g .Encoder ,start _g .StartElement )error {start .Name .Local ="\u0052F\u0043\u0031\u0037\u0036\u0036";e .EncodeToken (start );e .EncodeToken (_g .EndElement {Name :start .Name });return nil ;};type MESH struct{};

// ValidateWithPath validates the W3CDTF and its children, prefixing error messages with path
func (_dffc *W3CDTF )ValidateWithPath (path string )error {return nil };func (_acg *ElementsAndRefinementsGroup )UnmarshalXML (d *_g .Decoder ,start _g .StartElement )error {_bba :for {_fef ,_dab :=d .Token ();if _dab !=nil {return _dab ;};switch _fba :=_fef .(type ){case _g .StartElement :switch _fba .Name {case _g .Name {Space :"\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0072\u0067/\u0064c\u002f\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0073\u002f\u0031\u002e\u0031\u002f",Local :"\u0061\u006e\u0079"}:_adc :=NewElementsAndRefinementsGroupChoice ();if _cbf :=d .DecodeElement (&_adc .Any ,&_fba );_cbf !=nil {return _cbf ;};_acg .Choice =append (_acg .Choice ,_adc );default:_f .Log ("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020e\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0045\u006ce\u006d\u0065\u006e\u0074\u0073\u0041\u006e\u0064\u0052\u0065\u0066\u0069\u006e\u0065\u006d\u0065\u006et\u0073\u0047\u0072\u006f\u0075\u0070\u0020\u0025\u0076",_fba .Name );if _ffe :=d .Skip ();_ffe !=nil {return _ffe ;};};case _g .EndElement :break _bba ;case _g .CharData :};};return nil ;};func NewRFC3066 ()*RFC3066 {_bbf :=&RFC3066 {};return _bbf };func (_bdc *TGN )UnmarshalXML (d *_g .Decoder ,start _g .StartElement )error {for {_bbde ,_efd :=d .Token ();if _efd !=nil {return _a .Errorf ("\u0070a\u0072s\u0069\u006e\u0067\u0020\u0054\u0047\u004e\u003a\u0020\u0025\u0073",_efd );};if _edd ,_aab :=_bbde .(_g .EndElement );_aab &&_edd .Name ==start .Name {break ;};};return nil ;};func (_agf *MESH )MarshalXML (e *_g .Encoder ,start _g .StartElement )error {start .Name .Local ="\u004d\u0045\u0053\u0048";e .EncodeToken (start );e .EncodeToken (_g .EndElement {Name :start .Name });return nil ;};

// ValidateWithPath validates the DDC and its children, prefixing error messages with path
func (_bg *DDC )ValidateWithPath (path string )error {return nil };func (_gdce *Point )MarshalXML (e *_g .Encoder ,start _g .StartElement )error {start .Name .Local ="\u0050\u006f\u0069n\u0074";e .EncodeToken (start );e .EncodeToken (_g .EndElement {Name :start .Name });return nil ;};

// Validate validates the ElementsAndRefinementsGroupChoice and its children
func (_ega *ElementsAndRefinementsGroupChoice )Validate ()error {return _ega .ValidateWithPath ("\u0045\u006c\u0065\u006d\u0065\u006et\u0073\u0041\u006e\u0064\u0052\u0065\u0066\u0069\u006e\u0065\u006d\u0065\u006et\u0073\u0047\u0072\u006f\u0075\u0070\u0043h\u006f\u0069\u0063\u0065");};func (_bfg *LCSH )MarshalXML (e *_g .Encoder ,start _g .StartElement )error {start .Name .Local ="\u004c\u0043\u0053\u0048";e .EncodeToken (start );e .EncodeToken (_g .EndElement {Name :start .Name });return nil ;};

// Validate validates the RFC3066 and its children
func (_cfa *RFC3066 )Validate ()error {return _cfa .ValidateWithPath ("\u0052F\u0043\u0033\u0030\u0036\u0036");};

// Validate validates the Point and its children
func (_adf *Point )Validate ()error {return _adf .ValidateWithPath ("\u0050\u006f\u0069n\u0074")};type RFC3066 struct{};func (_caca *LCC )UnmarshalXML (d *_g .Decoder ,start _g .StartElement )error {for {_cda ,_ebg :=d .Token ();if _ebg !=nil {return _a .Errorf ("\u0070a\u0072s\u0069\u006e\u0067\u0020\u004c\u0043\u0043\u003a\u0020\u0025\u0073",_ebg );};if _cgd ,_fcd :=_cda .(_g .EndElement );_fcd &&_cgd .Name ==start .Name {break ;};};return nil ;};type LCC struct{};type Box struct{};

// Validate validates the ISO639_2 and its children
func (_egf *ISO639_2 )Validate ()error {return _egf .ValidateWithPath ("\u0049\u0053\u004f\u0036\u0033\u0039\u005f\u0032");};func (_ccc *LCSH )UnmarshalXML (d *_g .Decoder ,start _g .StartElement )error {for {_adb ,_cdcc :=d .Token ();if _cdcc !=nil {return _a .Errorf ("\u0070\u0061r\u0073\u0069\u006eg\u0020\u004c\u0043\u0053\u0048\u003a\u0020\u0025\u0073",_cdcc );};if _ccfd ,_fa :=_adb .(_g .EndElement );_fa &&_ccfd .Name ==start .Name {break ;};};return nil ;};func NewPeriod ()*Period {_dec :=&Period {};return _dec };func NewUDC ()*UDC {_aad :=&UDC {};return _aad };

// ValidateWithPath validates the Box and its children, prefixing error messages with path
func (_cc *Box )ValidateWithPath (path string )error {return nil };

// ValidateWithPath validates the ISO639_2 and its children, prefixing error messages with path
func (_bdb *ISO639_2 )ValidateWithPath (path string )error {return nil };func (_gd *DDC )MarshalXML (e *_g .Encoder ,start _g .StartElement )error {start .Name .Local ="\u0044\u0044\u0043";e .EncodeToken (start );e .EncodeToken (_g .EndElement {Name :start .Name });return nil ;};type ISO639_2 struct{};

// ValidateWithPath validates the URI and its children, prefixing error messages with path
func (_bfcb *URI )ValidateWithPath (path string )error {return nil };type TGN struct{};type RFC1766 struct{};func NewISO639_2 ()*ISO639_2 {_ebd :=&ISO639_2 {};return _ebd };

// Validate validates the ElementsAndRefinementsGroup and its children
func (_gdb *ElementsAndRefinementsGroup )Validate ()error {return _gdb .ValidateWithPath ("E\u006c\u0065\u006d\u0065\u006e\u0074s\u0041\u006e\u0064\u0052\u0065\u0066\u0069\u006e\u0065m\u0065\u006e\u0074s\u0047r\u006f\u0075\u0070");};func (_fca *ElementOrRefinementContainer )MarshalXML (e *_g .Encoder ,start _g .StartElement )error {start .Name .Local ="\u0065\u006c\u0065\u006de\u006e\u0074\u004f\u0072\u0052\u0065\u0066\u0069\u006e\u0065m\u0065n\u0074\u0043\u006f\u006e\u0074\u0061\u0069n\u0065\u0072";e .EncodeToken (start );if _fca .Choice !=nil {for _ ,_de :=range _fca .Choice {_de .MarshalXML (e ,_g .StartElement {});};};e .EncodeToken (_g .EndElement {Name :start .Name });return nil ;};func (_eda *URI )MarshalXML (e *_g .Encoder ,start _g .StartElement )error {start .Name .Local ="\u0055\u0052\u0049";e .EncodeToken (start );e .EncodeToken (_g .EndElement {Name :start .Name });return nil ;};

// Validate validates the MESH and its children
func (_cdb *MESH )Validate ()error {return _cdb .ValidateWithPath ("\u004d\u0045\u0053\u0048")};func (_fg *ElementsAndRefinementsGroupChoice )MarshalXML (e *_g .Encoder ,start _g .StartElement )error {if _fg .Any !=nil {_ccef :=_g .StartElement {Name :_g .Name {Local :"\u0064\u0063\u003a\u0061\u006e\u0079"}};for _ ,_ecf :=range _fg .Any {e .EncodeElement (_ecf ,_ccef );};};return nil ;};func NewDDC ()*DDC {_ff :=&DDC {};return _ff };

// ValidateWithPath validates the LCC and its children, prefixing error messages with path
func (_cbg *LCC )ValidateWithPath (path string )error {return nil };type Period struct{};func NewIMT ()*IMT {_cec :=&IMT {};return _cec };

// ValidateWithPath validates the MESH and its children, prefixing error messages with path
func (_ggg *MESH )ValidateWithPath (path string )error {return nil };func (_gac *URI )UnmarshalXML (d *_g .Decoder ,start _g .StartElement )error {for {_bge ,_efg :=d .Token ();if _efg !=nil {return _a .Errorf ("\u0070a\u0072s\u0069\u006e\u0067\u0020\u0055\u0052\u0049\u003a\u0020\u0025\u0073",_efg );};if _cdcf ,_abb :=_bge .(_g .EndElement );_abb &&_cdcf .Name ==start .Name {break ;};};return nil ;};type UDC struct{};func (_dc *ISO3166 )UnmarshalXML (d *_g .Decoder ,start _g .StartElement )error {for {_daf ,_caf :=d .Token ();if _caf !=nil {return _a .Errorf ("\u0070\u0061\u0072\u0073in\u0067\u0020\u0049\u0053\u004f\u0033\u0031\u0036\u0036\u003a\u0020\u0025\u0073",_caf );};if _bed ,_bea :=_daf .(_g .EndElement );_bea &&_bed .Name ==start .Name {break ;};};return nil ;};func NewElementsAndRefinementsGroup ()*ElementsAndRefinementsGroup {_gdc :=&ElementsAndRefinementsGroup {};return _gdc ;};

// Validate validates the Period and its children
func (_aff *Period )Validate ()error {return _aff .ValidateWithPath ("\u0050\u0065\u0072\u0069\u006f\u0064");};

// Validate validates the RFC1766 and its children
func (_dbd *RFC1766 )Validate ()error {return _dbd .ValidateWithPath ("\u0052F\u0043\u0031\u0037\u0036\u0036");};func NewISO3166 ()*ISO3166 {_eac :=&ISO3166 {};return _eac };

// ValidateWithPath validates the LCSH and its children, prefixing error messages with path
func (_egc *LCSH )ValidateWithPath (path string )error {return nil };

// Validate validates the ISO3166 and its children
func (_ffd *ISO3166 )Validate ()error {return _ffd .ValidateWithPath ("\u0049S\u004f\u0033\u0031\u0036\u0036");};type ISO3166 struct{};func (_cacg *W3CDTF )UnmarshalXML (d *_g .Decoder ,start _g .StartElement )error {for {_adff ,_cef :=d .Token ();if _cef !=nil {return _a .Errorf ("\u0070a\u0072s\u0069\u006e\u0067\u0020\u00573\u0043\u0044T\u0046\u003a\u0020\u0025\u0073",_cef );};if _cff ,_dffa :=_adff .(_g .EndElement );_dffa &&_cff .Name ==start .Name {break ;};};return nil ;};type DDC struct{};func (_daa *LCC )MarshalXML (e *_g .Encoder ,start _g .StartElement )error {start .Name .Local ="\u004c\u0043\u0043";e .EncodeToken (start );e .EncodeToken (_g .EndElement {Name :start .Name });return nil ;};type LCSH struct{};func (_cfe *UDC )UnmarshalXML (d *_g .Decoder ,start _g .StartElement )error {for {_aaf ,_ccd :=d .Token ();if _ccd !=nil {return _a .Errorf ("\u0070a\u0072s\u0069\u006e\u0067\u0020\u0055\u0044\u0043\u003a\u0020\u0025\u0073",_ccd );};if _bgg ,_ddcg :=_aaf .(_g .EndElement );_ddcg &&_bgg .Name ==start .Name {break ;};};return nil ;};func (_cbed *UDC )MarshalXML (e *_g .Encoder ,start _g .StartElement )error {start .Name .Local ="\u0055\u0044\u0043";e .EncodeToken (start );e .EncodeToken (_g .EndElement {Name :start .Name });return nil ;};type ElementOrRefinementContainer struct{Choice []*ElementsAndRefinementsGroupChoice ;};

// ValidateWithPath validates the RFC3066 and its children, prefixing error messages with path
func (_cge *RFC3066 )ValidateWithPath (path string )error {return nil };func (_gge *RFC3066 )UnmarshalXML (d *_g .Decoder ,start _g .StartElement )error {for {_bfc ,_gaa :=d .Token ();if _gaa !=nil {return _a .Errorf ("\u0070\u0061\u0072\u0073in\u0067\u0020\u0052\u0046\u0043\u0033\u0030\u0036\u0036\u003a\u0020\u0025\u0073",_gaa );};if _ee ,_cea :=_bfc .(_g .EndElement );_cea &&_ee .Name ==start .Name {break ;};};return nil ;};type W3CDTF struct{};func NewLCC ()*LCC {_ccf :=&LCC {};return _ccf };type Point struct{};func NewElementsAndRefinementsGroupChoice ()*ElementsAndRefinementsGroupChoice {_dff :=&ElementsAndRefinementsGroupChoice {};return _dff ;};

// ValidateWithPath validates the UDC and its children, prefixing error messages with path
func (_gae *UDC )ValidateWithPath (path string )error {return nil };

// ValidateWithPath validates the ElementsAndRefinementsGroupChoice and its children, prefixing error messages with path
func (_dfd *ElementsAndRefinementsGroupChoice )ValidateWithPath (path string )error {for _bf ,_gg :=range _dfd .Any {if _bd :=_gg .ValidateWithPath (_a .Sprintf ("\u0025\u0073\u002f\u0041\u006e\u0079\u005b\u0025\u0064\u005d",path ,_bf ));_bd !=nil {return _bd ;};};return nil ;};

// ValidateWithPath validates the ElementsAndRefinementsGroup and its children, prefixing error messages with path
func (_fd *ElementsAndRefinementsGroup )ValidateWithPath (path string )error {for _ag ,_dfe :=range _fd .Choice {if _eaa :=_dfe .ValidateWithPath (_a .Sprintf ("\u0025\u0073\u002f\u0043\u0068\u006f\u0069\u0063\u0065\u005b\u0025\u0064\u005d",path ,_ag ));_eaa !=nil {return _eaa ;};};return nil ;};

// Validate validates the LCC and its children
func (_bec *LCC )Validate ()error {return _bec .ValidateWithPath ("\u004c\u0043\u0043")};func (_gb *ElementsAndRefinementsGroupChoice )UnmarshalXML (d *_g .Decoder ,start _g .StartElement )error {_gff :for {_cbe ,_abf :=d .Token ();if _abf !=nil {return _abf ;};switch _ceb :=_cbe .(type ){case _g .StartElement :switch _ceb .Name {case _g .Name {Space :"\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0072\u0067/\u0064c\u002f\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0073\u002f\u0031\u002e\u0031\u002f",Local :"\u0061\u006e\u0079"}:_bbd :=_d .NewAny ();if _gdcb :=d .DecodeElement (_bbd ,&_ceb );_gdcb !=nil {return _gdcb ;};_gb .Any =append (_gb .Any ,_bbd );default:_f .Log ("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0045\u006c\u0065\u006d\u0065\u006e\u0074\u0073\u0041\u006ed\u0052\u0065\u0066\u0069\u006e\u0065\u006d\u0065\u006e\u0074\u0073\u0047\u0072\u006fu\u0070\u0043\u0068o\u0069\u0063\u0065\u0020\u0025\u0076",_ceb .Name );if _fdf :=d .Skip ();_fdf !=nil {return _fdf ;};};case _g .EndElement :break _gff ;case _g .CharData :};};return nil ;};

// Validate validates the LCSH and its children
func (_beb *LCSH )Validate ()error {return _beb .ValidateWithPath ("\u004c\u0043\u0053\u0048")};type DCMIType struct{};func (_gbf *IMT )MarshalXML (e *_g .Encoder ,start _g .StartElement )error {start .Name .Local ="\u0049\u004d\u0054";e .EncodeToken (start );e .EncodeToken (_g .EndElement {Name :start .Name });return nil ;};func NewTGN ()*TGN {_abe :=&TGN {};return _abe };func (_ffb *DDC )UnmarshalXML (d *_g .Decoder ,start _g .StartElement )error {for {_gad ,_gc :=d .Token ();if _gc !=nil {return _a .Errorf ("\u0070a\u0072s\u0069\u006e\u0067\u0020\u0044\u0044\u0043\u003a\u0020\u0025\u0073",_gc );};if _db ,_bb :=_gad .(_g .EndElement );_bb &&_db .Name ==start .Name {break ;};};return nil ;};func NewLCSH ()*LCSH {_aed :=&LCSH {};return _aed };

// ValidateWithPath validates the Period and its children, prefixing error messages with path
func (_cbbd *Period )ValidateWithPath (path string )error {return nil };

// ValidateWithPath validates the IMT and its children, prefixing error messages with path
func (_cee *IMT )ValidateWithPath (path string )error {return nil };type URI struct{};

// ValidateWithPath validates the Point and its children, prefixing error messages with path
func (_aeg *Point )ValidateWithPath (path string )error {return nil };func (_b *Box )UnmarshalXML (d *_g .Decoder ,start _g .StartElement )error {for {_c ,_ec :=d .Token ();if _ec !=nil {return _a .Errorf ("\u0070a\u0072s\u0069\u006e\u0067\u0020\u0042\u006f\u0078\u003a\u0020\u0025\u0073",_ec );};if _ga ,_fb :=_c .(_g .EndElement );_fb &&_ga .Name ==start .Name {break ;};};return nil ;};func (_cad *RFC1766 )UnmarshalXML (d *_g .Decoder ,start _g .StartElement )error {for {_gcgg ,_ed :=d .Token ();if _ed !=nil {return _a .Errorf ("\u0070\u0061\u0072\u0073in\u0067\u0020\u0052\u0046\u0043\u0031\u0037\u0036\u0036\u003a\u0020\u0025\u0073",_ed );};if _adbf ,_ccb :=_gcgg .(_g .EndElement );_ccb &&_adbf .Name ==start .Name {break ;};};return nil ;};func (_af *ElementOrRefinementContainer )UnmarshalXML (d *_g .Decoder ,start _g .StartElement )error {_ca :for {_gcg ,_fe :=d .Token ();if _fe !=nil {return _fe ;};switch _ae :=_gcg .(type ){case _g .StartElement :switch _ae .Name {case _g .Name {Space :"\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0072\u0067/\u0064c\u002f\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0073\u002f\u0031\u002e\u0031\u002f",Local :"\u0061\u006e\u0079"}:_dde :=NewElementsAndRefinementsGroupChoice ();if _cac :=d .DecodeElement (&_dde .Any ,&_ae );_cac !=nil {return _cac ;};_af .Choice =append (_af .Choice ,_dde );default:_f .Log ("\u0073k\u0069\u0070\u0070\u0069\u006e\u0067\u0020un\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006de\u006e\u0074 \u006f\u006e\u0020E\u006c\u0065\u006d\u0065\u006e\u0074\u004f\u0072\u0052\u0065\u0066\u0069\u006e\u0065\u006d\u0065n\u0074\u0043on\u0074\u0061\u0069n\u0065\u0072\u0020\u0025\u0076",_ae .Name );if _eg :=d .Skip ();_eg !=nil {return _eg ;};};case _g .EndElement :break _ca ;case _g .CharData :};};return nil ;};

// ValidateWithPath validates the ISO3166 and its children, prefixing error messages with path
func (_cf *ISO3166 )ValidateWithPath (path string )error {return nil };

// ValidateWithPath validates the DCMIType and its children, prefixing error messages with path
func (_ead *DCMIType )ValidateWithPath (path string )error {return nil };func (_fge *Point )UnmarshalXML (d *_g .Decoder ,start _g .StartElement )error {for {_gfdg ,_ccg :=d .Token ();if _ccg !=nil {return _a .Errorf ("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0050\u006f\u0069\u006et\u003a\u0020\u0025\u0073",_ccg );};if _cfc ,_daag :=_gfdg .(_g .EndElement );_daag &&_cfc .Name ==start .Name {break ;};};return nil ;};func (_ef *ISO3166 )MarshalXML (e *_g .Encoder ,start _g .StartElement )error {start .Name .Local ="\u0049S\u004f\u0033\u0031\u0036\u0036";e .EncodeToken (start );e .EncodeToken (_g .EndElement {Name :start .Name });return nil ;};func NewBox ()*Box {_gf :=&Box {};return _gf };

// Validate validates the IMT and its children
func (_cdc *IMT )Validate ()error {return _cdc .ValidateWithPath ("\u0049\u004d\u0054")};func NewW3CDTF ()*W3CDTF {_fcf :=&W3CDTF {};return _fcf };func NewURI ()*URI {_aca :=&URI {};return _aca };func NewDCMIType ()*DCMIType {_df :=&DCMIType {};return _df };

// Validate validates the URI and its children
func (_cca *URI )Validate ()error {return _cca .ValidateWithPath ("\u0055\u0052\u0049")};func (_ad *ElementsAndRefinementsGroup )MarshalXML (e *_g .Encoder ,start _g .StartElement )error {if _ad .Choice !=nil {for _ ,_gcf :=range _ad .Choice {_gcf .MarshalXML (e ,_g .StartElement {});};};return nil ;};

// Validate validates the Box and its children
func (_fbf *Box )Validate ()error {return _fbf .ValidateWithPath ("\u0042\u006f\u0078")};func (_ggc *ISO639_2 )MarshalXML (e *_g .Encoder ,start _g .StartElement )error {start .Name .Local ="\u0049\u0053\u004f\u0036\u0033\u0039\u002d\u0032";e .EncodeToken (start );e .EncodeToken (_g .EndElement {Name :start .Name });return nil ;};func (_gaf *W3CDTF )MarshalXML (e *_g .Encoder ,start _g .StartElement )error {start .Name .Local ="\u0057\u0033\u0043\u0044\u0054\u0046";e .EncodeToken (start );e .EncodeToken (_g .EndElement {Name :start .Name });return nil ;};func (_fag *Period )MarshalXML (e *_g .Encoder ,start _g .StartElement )error {start .Name .Local ="\u0050\u0065\u0072\u0069\u006f\u0064";e .EncodeToken (start );e .EncodeToken (_g .EndElement {Name :start .Name });return nil ;};func (_ddg *RFC3066 )MarshalXML (e *_g .Encoder ,start _g .StartElement )error {start .Name .Local ="\u0052F\u0043\u0033\u0030\u0036\u0036";e .EncodeToken (start );e .EncodeToken (_g .EndElement {Name :start .Name });return nil ;};

// ValidateWithPath validates the TGN and its children, prefixing error messages with path
func (_fce *TGN )ValidateWithPath (path string )error {return nil };func (_fc *DCMIType )UnmarshalXML (d *_g .Decoder ,start _g .StartElement )error {for {_da ,_fbfc :=d .Token ();if _fbfc !=nil {return _a .Errorf ("p\u0061r\u0073\u0069\u006e\u0067\u0020\u0044\u0043\u004dI\u0054\u0079\u0070\u0065: \u0025\u0073",_fbfc );};if _ece ,_ce :=_da .(_g .EndElement );_ce &&_ece .Name ==start .Name {break ;};};return nil ;};

// Validate validates the ElementOrRefinementContainer and its children
func (_dae *ElementOrRefinementContainer )Validate ()error {return _dae .ValidateWithPath ("\u0045\u006c\u0065\u006de\u006e\u0074\u004f\u0072\u0052\u0065\u0066\u0069\u006e\u0065m\u0065n\u0074\u0043\u006f\u006e\u0074\u0061\u0069n\u0065\u0072");};func NewRFC1766 ()*RFC1766 {_dege :=&RFC1766 {};return _dege };

// Validate validates the TGN and its children
func (_dfc *TGN )Validate ()error {return _dfc .ValidateWithPath ("\u0054\u0047\u004e")};func (_ffdb *MESH )UnmarshalXML (d *_g .Decoder ,start _g .StartElement )error {for {_cde ,_def :=d .Token ();if _def !=nil {return _a .Errorf ("\u0070\u0061r\u0073\u0069\u006eg\u0020\u004d\u0045\u0053\u0048\u003a\u0020\u0025\u0073",_def );};if _aa ,_cbb :=_cde .(_g .EndElement );_cbb &&_aa .Name ==start .Name {break ;};};return nil ;};func NewPoint ()*Point {_bfa :=&Point {};return _bfa };

// Validate validates the W3CDTF and its children
func (_edf *W3CDTF )Validate ()error {return _edf .ValidateWithPath ("\u0057\u0033\u0043\u0044\u0054\u0046");};func (_ebdc *Period )UnmarshalXML (d *_g .Decoder ,start _g .StartElement )error {for {_aaa ,_gfd :=d .Token ();if _gfd !=nil {return _a .Errorf ("\u0070a\u0072s\u0069\u006e\u0067\u0020\u0050e\u0072\u0069o\u0064\u003a\u0020\u0025\u0073",_gfd );};if _ddc ,_deg :=_aaa .(_g .EndElement );_deg &&_ddc .Name ==start .Name {break ;};};return nil ;};func init (){_f .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u004c\u0043\u0053\u0048",NewLCSH );_f .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u004d\u0045\u0053\u0048",NewMESH );_f .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u0044\u0044\u0043",NewDDC );_f .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u004c\u0043\u0043",NewLCC );_f .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u0055\u0044\u0043",NewUDC );_f .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u0050\u0065\u0072\u0069\u006f\u0064",NewPeriod );_f .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u0057\u0033\u0043\u0044\u0054\u0046",NewW3CDTF );_f .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u0044\u0043\u004d\u0049\u0054\u0079\u0070\u0065",NewDCMIType );_f .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u0049\u004d\u0054",NewIMT );_f .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u0055\u0052\u0049",NewURI );_f .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u0049\u0053\u004f\u0036\u0033\u0039\u002d\u0032",NewISO639_2 );_f .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u0052F\u0043\u0031\u0037\u0036\u0036",NewRFC1766 );_f .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u0052F\u0043\u0033\u0030\u0036\u0036",NewRFC3066 );_f .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u0050\u006f\u0069n\u0074",NewPoint );_f .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u0049S\u004f\u0033\u0031\u0036\u0036",NewISO3166 );_f .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u0042\u006f\u0078",NewBox );_f .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u0054\u0047\u004e",NewTGN );_f .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u0065\u006c\u0065\u006de\u006e\u0074\u004f\u0072\u0052\u0065\u0066\u0069\u006e\u0065m\u0065n\u0074\u0043\u006f\u006e\u0074\u0061\u0069n\u0065\u0072",NewElementOrRefinementContainer );_f .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","e\u006c\u0065\u006d\u0065\u006e\u0074s\u0041\u006e\u0064\u0052\u0065\u0066\u0069\u006e\u0065m\u0065\u006e\u0074s\u0047r\u006f\u0075\u0070",NewElementsAndRefinementsGroup );};