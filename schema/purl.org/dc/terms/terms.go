//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package terms ;import (_d "encoding/xml";_a "fmt";_f "github.com/unidoc/unioffice";_e "github.com/unidoc/unioffice/common/logger";_c "github.com/unidoc/unioffice/schema/purl.org/dc/elements";);

// Validate validates the ElementsAndRefinementsGroupChoice and its children
func (_baa *ElementsAndRefinementsGroupChoice )Validate ()error {return _baa .ValidateWithPath ("\u0045\u006c\u0065\u006d\u0065\u006et\u0073\u0041\u006e\u0064\u0052\u0065\u0066\u0069\u006e\u0065\u006d\u0065\u006et\u0073\u0047\u0072\u006f\u0075\u0070\u0043h\u006f\u0069\u0063\u0065");};

// ValidateWithPath validates the W3CDTF and its children, prefixing error messages with path
func (_ageb *W3CDTF )ValidateWithPath (path string )error {return nil };

// Validate validates the ElementsAndRefinementsGroup and its children
func (_ac *ElementsAndRefinementsGroup )Validate ()error {return _ac .ValidateWithPath ("E\u006c\u0065\u006d\u0065\u006e\u0074s\u0041\u006e\u0064\u0052\u0065\u0066\u0069\u006e\u0065m\u0065\u006e\u0074s\u0047r\u006f\u0075\u0070");};func (_efea *Point )UnmarshalXML (d *_d .Decoder ,start _d .StartElement )error {for {_fba ,_edc :=d .Token ();if _edc !=nil {return _a .Errorf ("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0050\u006f\u0069\u006et\u003a\u0020\u0025\u0073",_edc );};if _gcgd ,_cdc :=_fba .(_d .EndElement );_cdc &&_gcgd .Name ==start .Name {break ;};};return nil ;};func (_ab *ISO3166 )MarshalXML (e *_d .Encoder ,start _d .StartElement )error {start .Name .Local ="\u0049S\u004f\u0033\u0031\u0036\u0036";e .EncodeToken (start );e .EncodeToken (_d .EndElement {Name :start .Name });return nil ;};

// Validate validates the URI and its children
func (_dbe *URI )Validate ()error {return _dbe .ValidateWithPath ("\u0055\u0052\u0049")};type W3CDTF struct{};func (_fb *ISO639_2 )UnmarshalXML (d *_d .Decoder ,start _d .StartElement )error {for {_ggg ,_acc :=d .Token ();if _acc !=nil {return _a .Errorf ("p\u0061r\u0073\u0069\u006e\u0067\u0020\u0049\u0053\u004f6\u0033\u0039\u005f\u0032: \u0025\u0073",_acc );};if _beb ,_ed :=_ggg .(_d .EndElement );_ed &&_beb .Name ==start .Name {break ;};};return nil ;};func (_ecf *LCC )MarshalXML (e *_d .Encoder ,start _d .StartElement )error {start .Name .Local ="\u004c\u0043\u0043";e .EncodeToken (start );e .EncodeToken (_d .EndElement {Name :start .Name });return nil ;};func (_ga *DCMIType )MarshalXML (e *_d .Encoder ,start _d .StartElement )error {start .Name .Local ="\u0044\u0043\u004d\u0049\u0054\u0079\u0070\u0065";e .EncodeToken (start );e .EncodeToken (_d .EndElement {Name :start .Name });return nil ;};type RFC3066 struct{};type LCC struct{};

// Validate validates the ISO639_2 and its children
func (_bea *ISO639_2 )Validate ()error {return _bea .ValidateWithPath ("\u0049\u0053\u004f\u0036\u0033\u0039\u005f\u0032");};func NewDCMIType ()*DCMIType {_da :=&DCMIType {};return _da };

// ValidateWithPath validates the ISO3166 and its children, prefixing error messages with path
func (_efed *ISO3166 )ValidateWithPath (path string )error {return nil };

// Validate validates the TGN and its children
func (_accc *TGN )Validate ()error {return _accc .ValidateWithPath ("\u0054\u0047\u004e")};func (_gabe *ElementsAndRefinementsGroup )UnmarshalXML (d *_d .Decoder ,start _d .StartElement )error {_deb :for {_fee ,_cb :=d .Token ();if _cb !=nil {return _cb ;};switch _gabc :=_fee .(type ){case _d .StartElement :switch _gabc .Name {case _d .Name {Space :"\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0072\u0067/\u0064c\u002f\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0073\u002f\u0031\u002e\u0031\u002f",Local :"\u0061\u006e\u0079"}:_cfd :=NewElementsAndRefinementsGroupChoice ();if _aaf :=d .DecodeElement (&_cfd .Any ,&_gabc );_aaf !=nil {return _aaf ;};_gabe .Choice =append (_gabe .Choice ,_cfd );default:_e .Log .Debug ("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020e\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0045\u006ce\u006d\u0065\u006e\u0074\u0073\u0041\u006e\u0064\u0052\u0065\u0066\u0069\u006e\u0065\u006d\u0065\u006et\u0073\u0047\u0072\u006f\u0075\u0070\u0020\u0025\u0076",_gabc .Name );if _gca :=d .Skip ();_gca !=nil {return _gca ;};};case _d .EndElement :break _deb ;case _d .CharData :};};return nil ;};func (_gbd *RFC3066 )UnmarshalXML (d *_d .Decoder ,start _d .StartElement )error {for {_egf ,_ceg :=d .Token ();if _ceg !=nil {return _a .Errorf ("\u0070\u0061\u0072\u0073in\u0067\u0020\u0052\u0046\u0043\u0033\u0030\u0036\u0036\u003a\u0020\u0025\u0073",_ceg );};if _gce ,_eae :=_egf .(_d .EndElement );_eae &&_gce .Name ==start .Name {break ;};};return nil ;};func (_gee *TGN )MarshalXML (e *_d .Encoder ,start _d .StartElement )error {start .Name .Local ="\u0054\u0047\u004e";e .EncodeToken (start );e .EncodeToken (_d .EndElement {Name :start .Name });return nil ;};

// Validate validates the Box and its children
func (_cgc *Box )Validate ()error {return _cgc .ValidateWithPath ("\u0042\u006f\u0078")};func (_ag *ElementsAndRefinementsGroup )MarshalXML (e *_d .Encoder ,start _d .StartElement )error {if _ag .Choice !=nil {for _ ,_eed :=range _ag .Choice {_eed .MarshalXML (e ,_d .StartElement {});};};return nil ;};func NewISO3166 ()*ISO3166 {_agc :=&ISO3166 {};return _agc };func NewPeriod ()*Period {_cbf :=&Period {};return _cbf };

// Validate validates the DDC and its children
func (_ad *DDC )Validate ()error {return _ad .ValidateWithPath ("\u0044\u0044\u0043")};

// ValidateWithPath validates the LCC and its children, prefixing error messages with path
func (_cfg *LCC )ValidateWithPath (path string )error {return nil };type ElementOrRefinementContainer struct{Choice []*ElementsAndRefinementsGroupChoice ;};func (_gabf *Period )MarshalXML (e *_d .Encoder ,start _d .StartElement )error {start .Name .Local ="\u0050\u0065\u0072\u0069\u006f\u0064";e .EncodeToken (start );e .EncodeToken (_d .EndElement {Name :start .Name });return nil ;};func (_fbe *Point )MarshalXML (e *_d .Encoder ,start _d .StartElement )error {start .Name .Local ="\u0050\u006f\u0069n\u0074";e .EncodeToken (start );e .EncodeToken (_d .EndElement {Name :start .Name });return nil ;};

// Validate validates the ISO3166 and its children
func (_adf *ISO3166 )Validate ()error {return _adf .ValidateWithPath ("\u0049S\u004f\u0033\u0031\u0036\u0036");};func NewElementsAndRefinementsGroupChoice ()*ElementsAndRefinementsGroupChoice {_fad :=&ElementsAndRefinementsGroupChoice {};return _fad ;};func (_cd *ElementOrRefinementContainer )MarshalXML (e *_d .Encoder ,start _d .StartElement )error {start .Name .Local ="\u0065\u006c\u0065\u006de\u006e\u0074\u004f\u0072\u0052\u0065\u0066\u0069\u006e\u0065m\u0065n\u0074\u0043\u006f\u006e\u0074\u0061\u0069n\u0065\u0072";e .EncodeToken (start );if _cd .Choice !=nil {for _ ,_gfe :=range _cd .Choice {_gfe .MarshalXML (e ,_d .StartElement {});};};e .EncodeToken (_d .EndElement {Name :start .Name });return nil ;};func (_ce *Box )UnmarshalXML (d *_d .Decoder ,start _d .StartElement )error {for {_ef ,_ee :=d .Token ();if _ee !=nil {return _a .Errorf ("\u0070a\u0072s\u0069\u006e\u0067\u0020\u0042\u006f\u0078\u003a\u0020\u0025\u0073",_ee );};if _cf ,_df :=_ef .(_d .EndElement );_df &&_cf .Name ==start .Name {break ;};};return nil ;};type ISO3166 struct{};

// ValidateWithPath validates the TGN and its children, prefixing error messages with path
func (_cad *TGN )ValidateWithPath (path string )error {return nil };type RFC1766 struct{};

// Validate validates the Period and its children
func (_ccb *Period )Validate ()error {return _ccb .ValidateWithPath ("\u0050\u0065\u0072\u0069\u006f\u0064");};type DCMIType struct{};func NewLCSH ()*LCSH {_dbfa :=&LCSH {};return _dbfa };

// Validate validates the IMT and its children
func (_eb *IMT )Validate ()error {return _eb .ValidateWithPath ("\u0049\u004d\u0054")};func (_bc *ElementOrRefinementContainer )UnmarshalXML (d *_d .Decoder ,start _d .StartElement )error {_bb :for {_cc ,_dba :=d .Token ();if _dba !=nil {return _dba ;};switch _gd :=_cc .(type ){case _d .StartElement :switch _gd .Name {case _d .Name {Space :"\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0072\u0067/\u0064c\u002f\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0073\u002f\u0031\u002e\u0031\u002f",Local :"\u0061\u006e\u0079"}:_cca :=NewElementsAndRefinementsGroupChoice ();if _ae :=d .DecodeElement (&_cca .Any ,&_gd );_ae !=nil {return _ae ;};_bc .Choice =append (_bc .Choice ,_cca );default:_e .Log .Debug ("\u0073k\u0069\u0070\u0070\u0069\u006e\u0067\u0020un\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006de\u006e\u0074 \u006f\u006e\u0020E\u006c\u0065\u006d\u0065\u006e\u0074\u004f\u0072\u0052\u0065\u0066\u0069\u006e\u0065\u006d\u0065n\u0074\u0043on\u0074\u0061\u0069n\u0065\u0072\u0020\u0025\u0076",_gd .Name );if _gga :=d .Skip ();_gga !=nil {return _gga ;};};case _d .EndElement :break _bb ;case _d .CharData :};};return nil ;};func (_ccaa *URI )UnmarshalXML (d *_d .Decoder ,start _d .StartElement )error {for {_eeg ,_dbb :=d .Token ();if _dbb !=nil {return _a .Errorf ("\u0070a\u0072s\u0069\u006e\u0067\u0020\u0055\u0052\u0049\u003a\u0020\u0025\u0073",_dbb );};if _fda ,_cag :=_eeg .(_d .EndElement );_cag &&_fda .Name ==start .Name {break ;};};return nil ;};

// Validate validates the ElementOrRefinementContainer and its children
func (_gab *ElementOrRefinementContainer )Validate ()error {return _gab .ValidateWithPath ("\u0045\u006c\u0065\u006de\u006e\u0074\u004f\u0072\u0052\u0065\u0066\u0069\u006e\u0065m\u0065n\u0074\u0043\u006f\u006e\u0074\u0061\u0069n\u0065\u0072");};func NewDDC ()*DDC {_de :=&DDC {};return _de };func (_bcc *ElementsAndRefinementsGroupChoice )MarshalXML (e *_d .Encoder ,start _d .StartElement )error {if _bcc .Any !=nil {_dcg :=_d .StartElement {Name :_d .Name {Local :"\u0064\u0063\u003a\u0061\u006e\u0079"}};for _ ,_fg :=range _bcc .Any {e .EncodeElement (_fg ,_dcg );};};return nil ;};func NewMESH ()*MESH {_fdd :=&MESH {};return _fdd };type URI struct{};func NewIMT ()*IMT {_ea :=&IMT {};return _ea };

// Validate validates the LCC and its children
func (_ega *LCC )Validate ()error {return _ega .ValidateWithPath ("\u004c\u0043\u0043")};func (_bd *LCSH )UnmarshalXML (d *_d .Decoder ,start _d .StartElement )error {for {_abc ,_ddd :=d .Token ();if _ddd !=nil {return _a .Errorf ("\u0070\u0061r\u0073\u0069\u006eg\u0020\u004c\u0043\u0053\u0048\u003a\u0020\u0025\u0073",_ddd );};if _age ,_gae :=_abc .(_d .EndElement );_gae &&_age .Name ==start .Name {break ;};};return nil ;};

// ValidateWithPath validates the Point and its children, prefixing error messages with path
func (_fgf *Point )ValidateWithPath (path string )error {return nil };func (_gdg *UDC )UnmarshalXML (d *_d .Decoder ,start _d .StartElement )error {for {_fagb ,_fga :=d .Token ();if _fga !=nil {return _a .Errorf ("\u0070a\u0072s\u0069\u006e\u0067\u0020\u0055\u0044\u0043\u003a\u0020\u0025\u0073",_fga );};if _bbc ,_edd :=_fagb .(_d .EndElement );_edd &&_bbc .Name ==start .Name {break ;};};return nil ;};type IMT struct{};func NewElementOrRefinementContainer ()*ElementOrRefinementContainer {_adg :=&ElementOrRefinementContainer {};return _adg ;};func NewW3CDTF ()*W3CDTF {_abe :=&W3CDTF {};return _abe };type LCSH struct{};func (_feg *IMT )MarshalXML (e *_d .Encoder ,start _d .StartElement )error {start .Name .Local ="\u0049\u004d\u0054";e .EncodeToken (start );e .EncodeToken (_d .EndElement {Name :start .Name });return nil ;};

// ValidateWithPath validates the DCMIType and its children, prefixing error messages with path
func (_bf *DCMIType )ValidateWithPath (path string )error {return nil };func NewLCC ()*LCC {_ccc :=&LCC {};return _ccc };

// ValidateWithPath validates the ElementsAndRefinementsGroup and its children, prefixing error messages with path
func (_fcc *ElementsAndRefinementsGroup )ValidateWithPath (path string )error {for _ffd ,_dcd :=range _fcc .Choice {if _efdd :=_dcd .ValidateWithPath (_a .Sprintf ("\u0025\u0073\u002f\u0043\u0068\u006f\u0069\u0063\u0065\u005b\u0025\u0064\u005d",path ,_ffd ));_efdd !=nil {return _efdd ;};};return nil ;};func (_dbf *ElementsAndRefinementsGroupChoice )UnmarshalXML (d *_d .Decoder ,start _d .StartElement )error {_cde :for {_fdb ,_dad :=d .Token ();if _dad !=nil {return _dad ;};switch _fgd :=_fdb .(type ){case _d .StartElement :switch _fgd .Name {case _d .Name {Space :"\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0072\u0067/\u0064c\u002f\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0073\u002f\u0031\u002e\u0031\u002f",Local :"\u0061\u006e\u0079"}:_ca :=_c .NewAny ();if _dbc :=d .DecodeElement (_ca ,&_fgd );_dbc !=nil {return _dbc ;};_dbf .Any =append (_dbf .Any ,_ca );default:_e .Log .Debug ("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0045\u006c\u0065\u006d\u0065\u006e\u0074\u0073\u0041\u006ed\u0052\u0065\u0066\u0069\u006e\u0065\u006d\u0065\u006e\u0074\u0073\u0047\u0072\u006fu\u0070\u0043\u0068o\u0069\u0063\u0065\u0020\u0025\u0076",_fgd .Name );if _eea :=d .Skip ();_eea !=nil {return _eea ;};};case _d .EndElement :break _cde ;case _d .CharData :};};return nil ;};func (_cef *MESH )MarshalXML (e *_d .Encoder ,start _d .StartElement )error {start .Name .Local ="\u004d\u0045\u0053\u0048";e .EncodeToken (start );e .EncodeToken (_d .EndElement {Name :start .Name });return nil ;};type ElementsAndRefinementsGroupChoice struct{Any []*_c .Any ;};

// Validate validates the MESH and its children
func (_af *MESH )Validate ()error {return _af .ValidateWithPath ("\u004d\u0045\u0053\u0048")};

// ValidateWithPath validates the URI and its children, prefixing error messages with path
func (_fbg *URI )ValidateWithPath (path string )error {return nil };type Period struct{};

// Validate validates the W3CDTF and its children
func (_efa *W3CDTF )Validate ()error {return _efa .ValidateWithPath ("\u0057\u0033\u0043\u0044\u0054\u0046");};

// ValidateWithPath validates the ElementsAndRefinementsGroupChoice and its children, prefixing error messages with path
func (_bgg *ElementsAndRefinementsGroupChoice )ValidateWithPath (path string )error {for _fea ,_ffc :=range _bgg .Any {if _gcg :=_ffc .ValidateWithPath (_a .Sprintf ("\u0025\u0073\u002f\u0041\u006e\u0079\u005b\u0025\u0064\u005d",path ,_fea ));_gcg !=nil {return _gcg ;};};return nil ;};func (_bdg *W3CDTF )UnmarshalXML (d *_d .Decoder ,start _d .StartElement )error {for {_gag ,_dcf :=d .Token ();if _dcf !=nil {return _a .Errorf ("\u0070a\u0072s\u0069\u006e\u0067\u0020\u00573\u0043\u0044T\u0046\u003a\u0020\u0025\u0073",_dcf );};if _faf ,_fbf :=_gag .(_d .EndElement );_fbf &&_faf .Name ==start .Name {break ;};};return nil ;};

// Validate validates the UDC and its children
func (_bgc *UDC )Validate ()error {return _bgc .ValidateWithPath ("\u0055\u0044\u0043")};func (_cae *TGN )UnmarshalXML (d *_d .Decoder ,start _d .StartElement )error {for {_aef ,_bac :=d .Token ();if _bac !=nil {return _a .Errorf ("\u0070a\u0072s\u0069\u006e\u0067\u0020\u0054\u0047\u004e\u003a\u0020\u0025\u0073",_bac );};if _ggd ,_abd :=_aef .(_d .EndElement );_abd &&_ggd .Name ==start .Name {break ;};};return nil ;};func NewUDC ()*UDC {_fdbc :=&UDC {};return _fdbc };

// Validate validates the Point and its children
func (_ece *Point )Validate ()error {return _ece .ValidateWithPath ("\u0050\u006f\u0069n\u0074")};

// Validate validates the DCMIType and its children
func (_efd *DCMIType )Validate ()error {return _efd .ValidateWithPath ("\u0044\u0043\u004d\u0049\u0054\u0079\u0070\u0065");};func (_ede *LCC )UnmarshalXML (d *_d .Decoder ,start _d .StartElement )error {for {_ebf ,_eg :=d .Token ();if _eg !=nil {return _a .Errorf ("\u0070a\u0072s\u0069\u006e\u0067\u0020\u004c\u0043\u0043\u003a\u0020\u0025\u0073",_eg );};if _bfg ,_aea :=_ebf .(_d .EndElement );_aea &&_bfg .Name ==start .Name {break ;};};return nil ;};

// ValidateWithPath validates the MESH and its children, prefixing error messages with path
func (_fag *MESH )ValidateWithPath (path string )error {return nil };func NewISO639_2 ()*ISO639_2 {_dg :=&ISO639_2 {};return _dg };type DDC struct{};type UDC struct{};

// ValidateWithPath validates the ElementOrRefinementContainer and its children, prefixing error messages with path
func (_dc *ElementOrRefinementContainer )ValidateWithPath (path string )error {for _ada ,_gdd :=range _dc .Choice {if _ge :=_gdd .ValidateWithPath (_a .Sprintf ("\u0025\u0073\u002f\u0043\u0068\u006f\u0069\u0063\u0065\u005b\u0025\u0064\u005d",path ,_ada ));_ge !=nil {return _ge ;};};return nil ;};func (_ged *URI )MarshalXML (e *_d .Encoder ,start _d .StartElement )error {start .Name .Local ="\u0055\u0052\u0049";e .EncodeToken (start );e .EncodeToken (_d .EndElement {Name :start .Name });return nil ;};func (_cg *Box )MarshalXML (e *_d .Encoder ,start _d .StartElement )error {start .Name .Local ="\u0042\u006f\u0078";e .EncodeToken (start );e .EncodeToken (_d .EndElement {Name :start .Name });return nil ;};func NewTGN ()*TGN {_fcdg :=&TGN {};return _fcdg };func (_gfef *ISO3166 )UnmarshalXML (d *_d .Decoder ,start _d .StartElement )error {for {_fcd ,_bad :=d .Token ();if _bad !=nil {return _a .Errorf ("\u0070\u0061\u0072\u0073in\u0067\u0020\u0049\u0053\u004f\u0033\u0031\u0036\u0036\u003a\u0020\u0025\u0073",_bad );};if _ggf ,_gda :=_fcd .(_d .EndElement );_gda &&_ggf .Name ==start .Name {break ;};};return nil ;};

// ValidateWithPath validates the IMT and its children, prefixing error messages with path
func (_be *IMT )ValidateWithPath (path string )error {return nil };type ISO639_2 struct{};

// Validate validates the LCSH and its children
func (_dga *LCSH )Validate ()error {return _dga .ValidateWithPath ("\u004c\u0043\u0053\u0048")};func NewRFC3066 ()*RFC3066 {_bdaf :=&RFC3066 {};return _bdaf };

// ValidateWithPath validates the LCSH and its children, prefixing error messages with path
func (_bdb *LCSH )ValidateWithPath (path string )error {return nil };

// ValidateWithPath validates the RFC1766 and its children, prefixing error messages with path
func (_fde *RFC1766 )ValidateWithPath (path string )error {return nil };type TGN struct{};

// ValidateWithPath validates the UDC and its children, prefixing error messages with path
func (_cab *UDC )ValidateWithPath (path string )error {return nil };func NewPoint ()*Point {_dcc :=&Point {};return _dcc };func (_fe *DDC )UnmarshalXML (d *_d .Decoder ,start _d .StartElement )error {for {_db ,_fc :=d .Token ();if _fc !=nil {return _a .Errorf ("\u0070a\u0072s\u0069\u006e\u0067\u0020\u0044\u0044\u0043\u003a\u0020\u0025\u0073",_fc );};if _ced ,_gg :=_db .(_d .EndElement );_gg &&_ced .Name ==start .Name {break ;};};return nil ;};

// ValidateWithPath validates the ISO639_2 and its children, prefixing error messages with path
func (_gb *ISO639_2 )ValidateWithPath (path string )error {return nil };func (_dd *ISO639_2 )MarshalXML (e *_d .Encoder ,start _d .StartElement )error {start .Name .Local ="\u0049\u0053\u004f\u0036\u0033\u0039\u002d\u0032";e .EncodeToken (start );e .EncodeToken (_d .EndElement {Name :start .Name });return nil ;};func (_aac *IMT )UnmarshalXML (d *_d .Decoder ,start _d .StartElement )error {for {_fdc ,_dbcf :=d .Token ();if _dbcf !=nil {return _a .Errorf ("\u0070a\u0072s\u0069\u006e\u0067\u0020\u0049\u004d\u0054\u003a\u0020\u0025\u0073",_dbcf );};if _dbd ,_efe :=_fdc .(_d .EndElement );_efe &&_dbd .Name ==start .Name {break ;};};return nil ;};func (_cda *RFC1766 )UnmarshalXML (d *_d .Decoder ,start _d .StartElement )error {for {_bebc ,_bda :=d .Token ();if _bda !=nil {return _a .Errorf ("\u0070\u0061\u0072\u0073in\u0067\u0020\u0052\u0046\u0043\u0031\u0037\u0036\u0036\u003a\u0020\u0025\u0073",_bda );};if _ddb ,_gcc :=_bebc .(_d .EndElement );_gcc &&_ddb .Name ==start .Name {break ;};};return nil ;};func (_cfe *DCMIType )UnmarshalXML (d *_d .Decoder ,start _d .StartElement )error {for {_fd ,_aa :=d .Token ();if _aa !=nil {return _a .Errorf ("p\u0061r\u0073\u0069\u006e\u0067\u0020\u0044\u0043\u004dI\u0054\u0079\u0070\u0065: \u0025\u0073",_aa );};if _b ,_ec :=_fd .(_d .EndElement );_ec &&_b .Name ==start .Name {break ;};};return nil ;};func NewRFC1766 ()*RFC1766 {_bge :=&RFC1766 {};return _bge };func (_efc *Period )UnmarshalXML (d *_d .Decoder ,start _d .StartElement )error {for {_bfgd ,_gfc :=d .Token ();if _gfc !=nil {return _a .Errorf ("\u0070a\u0072s\u0069\u006e\u0067\u0020\u0050e\u0072\u0069o\u0064\u003a\u0020\u0025\u0073",_gfc );};if _fab ,_ceb :=_bfgd .(_d .EndElement );_ceb &&_fab .Name ==start .Name {break ;};};return nil ;};

// Validate validates the RFC3066 and its children
func (_fef *RFC3066 )Validate ()error {return _fef .ValidateWithPath ("\u0052F\u0043\u0033\u0030\u0036\u0036");};func (_cdd *LCSH )MarshalXML (e *_d .Encoder ,start _d .StartElement )error {start .Name .Local ="\u004c\u0043\u0053\u0048";e .EncodeToken (start );e .EncodeToken (_d .EndElement {Name :start .Name });return nil ;};

// Validate validates the RFC1766 and its children
func (_ege *RFC1766 )Validate ()error {return _ege .ValidateWithPath ("\u0052F\u0043\u0031\u0037\u0036\u0036");};

// ValidateWithPath validates the Box and its children, prefixing error messages with path
func (_ff *Box )ValidateWithPath (path string )error {return nil };type Point struct{};func (_beg *RFC1766 )MarshalXML (e *_d .Encoder ,start _d .StartElement )error {start .Name .Local ="\u0052F\u0043\u0031\u0037\u0036\u0036";e .EncodeToken (start );e .EncodeToken (_d .EndElement {Name :start .Name });return nil ;};func (_aeg *W3CDTF )MarshalXML (e *_d .Encoder ,start _d .StartElement )error {start .Name .Local ="\u0057\u0033\u0043\u0044\u0054\u0046";e .EncodeToken (start );e .EncodeToken (_d .EndElement {Name :start .Name });return nil ;};func (_gc *DDC )MarshalXML (e *_d .Encoder ,start _d .StartElement )error {start .Name .Local ="\u0044\u0044\u0043";e .EncodeToken (start );e .EncodeToken (_d .EndElement {Name :start .Name });return nil ;};

// ValidateWithPath validates the RFC3066 and its children, prefixing error messages with path
func (_efg *RFC3066 )ValidateWithPath (path string )error {return nil };type Box struct{};func NewBox ()*Box {_gf :=&Box {};return _gf };func (_bec *RFC3066 )MarshalXML (e *_d .Encoder ,start _d .StartElement )error {start .Name .Local ="\u0052F\u0043\u0033\u0030\u0036\u0036";e .EncodeToken (start );e .EncodeToken (_d .EndElement {Name :start .Name });return nil ;};func (_dbg *UDC )MarshalXML (e *_d .Encoder ,start _d .StartElement )error {start .Name .Local ="\u0055\u0044\u0043";e .EncodeToken (start );e .EncodeToken (_d .EndElement {Name :start .Name });return nil ;};func (_eec *MESH )UnmarshalXML (d *_d .Decoder ,start _d .StartElement )error {for {_daa ,_eee :=d .Token ();if _eee !=nil {return _a .Errorf ("\u0070\u0061r\u0073\u0069\u006eg\u0020\u004d\u0045\u0053\u0048\u003a\u0020\u0025\u0073",_eee );};if _fbc ,_gba :=_daa .(_d .EndElement );_gba &&_fbc .Name ==start .Name {break ;};};return nil ;};func NewURI ()*URI {_fagc :=&URI {};return _fagc };

// ValidateWithPath validates the Period and its children, prefixing error messages with path
func (_ggad *Period )ValidateWithPath (path string )error {return nil };

// ValidateWithPath validates the DDC and its children, prefixing error messages with path
func (_ba *DDC )ValidateWithPath (path string )error {return nil };type MESH struct{};type ElementsAndRefinementsGroup struct{Choice []*ElementsAndRefinementsGroupChoice ;};func NewElementsAndRefinementsGroup ()*ElementsAndRefinementsGroup {_bg :=&ElementsAndRefinementsGroup {};return _bg ;};func init (){_f .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u004c\u0043\u0053\u0048",NewLCSH );_f .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u004d\u0045\u0053\u0048",NewMESH );_f .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u0044\u0044\u0043",NewDDC );_f .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u004c\u0043\u0043",NewLCC );_f .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u0055\u0044\u0043",NewUDC );_f .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u0050\u0065\u0072\u0069\u006f\u0064",NewPeriod );_f .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u0057\u0033\u0043\u0044\u0054\u0046",NewW3CDTF );_f .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u0044\u0043\u004d\u0049\u0054\u0079\u0070\u0065",NewDCMIType );_f .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u0049\u004d\u0054",NewIMT );_f .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u0055\u0052\u0049",NewURI );_f .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u0049\u0053\u004f\u0036\u0033\u0039\u002d\u0032",NewISO639_2 );_f .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u0052F\u0043\u0031\u0037\u0036\u0036",NewRFC1766 );_f .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u0052F\u0043\u0033\u0030\u0036\u0036",NewRFC3066 );_f .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u0050\u006f\u0069n\u0074",NewPoint );_f .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u0049S\u004f\u0033\u0031\u0036\u0036",NewISO3166 );_f .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u0042\u006f\u0078",NewBox );_f .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u0054\u0047\u004e",NewTGN );_f .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u0065\u006c\u0065\u006de\u006e\u0074\u004f\u0072\u0052\u0065\u0066\u0069\u006e\u0065m\u0065n\u0074\u0043\u006f\u006e\u0074\u0061\u0069n\u0065\u0072",NewElementOrRefinementContainer );_f .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","e\u006c\u0065\u006d\u0065\u006e\u0074s\u0041\u006e\u0064\u0052\u0065\u0066\u0069\u006e\u0065m\u0065\u006e\u0074s\u0047r\u006f\u0075\u0070",NewElementsAndRefinementsGroup );};