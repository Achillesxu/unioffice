//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package terms ;import (_d "encoding/xml";_b "fmt";_be "github.com/unidoc/unioffice";_bc "github.com/unidoc/unioffice/schema/purl.org/dc/elements";);

// ValidateWithPath validates the TGN and its children, prefixing error messages with path
func (_gca *TGN )ValidateWithPath (path string )error {return nil };

// ValidateWithPath validates the RFC1766 and its children, prefixing error messages with path
func (_ace *RFC1766 )ValidateWithPath (path string )error {return nil };type LCSH struct{};func (_cc *ElementsAndRefinementsGroup )UnmarshalXML (d *_d .Decoder ,start _d .StartElement )error {_ced :for {_ded ,_ggf :=d .Token ();if _ggf !=nil {return _ggf ;};switch _fd :=_ded .(type ){case _d .StartElement :switch _fd .Name {case _d .Name {Space :"\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0072\u0067/\u0064c\u002f\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0073\u002f\u0031\u002e\u0031\u002f",Local :"\u0061\u006e\u0079"}:_agd :=NewElementsAndRefinementsGroupChoice ();if _df :=d .DecodeElement (&_agd .Any ,&_fd );_df !=nil {return _df ;};_cc .Choice =append (_cc .Choice ,_agd );default:_be .Log ("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020e\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0045\u006ce\u006d\u0065\u006e\u0074\u0073\u0041\u006e\u0064\u0052\u0065\u0066\u0069\u006e\u0065\u006d\u0065\u006et\u0073\u0047\u0072\u006f\u0075\u0070\u0020\u0025\u0076",_fd .Name );if _edf :=d .Skip ();_edf !=nil {return _edf ;};};case _d .EndElement :break _ced ;case _d .CharData :};};return nil ;};func (_cg *ElementOrRefinementContainer )MarshalXML (e *_d .Encoder ,start _d .StartElement )error {start .Name .Local ="\u0065\u006c\u0065\u006de\u006e\u0074\u004f\u0072\u0052\u0065\u0066\u0069\u006e\u0065m\u0065n\u0074\u0043\u006f\u006e\u0074\u0061\u0069n\u0065\u0072";e .EncodeToken (start );if _cg .Choice !=nil {for _ ,_eba :=range _cg .Choice {_eba .MarshalXML (e ,_d .StartElement {});};};e .EncodeToken (_d .EndElement {Name :start .Name });return nil ;};

// ValidateWithPath validates the ElementsAndRefinementsGroup and its children, prefixing error messages with path
func (_cga *ElementsAndRefinementsGroup )ValidateWithPath (path string )error {for _bcf ,_db :=range _cga .Choice {if _cd :=_db .ValidateWithPath (_b .Sprintf ("\u0025\u0073\u002f\u0043\u0068\u006f\u0069\u0063\u0065\u005b\u0025\u0064\u005d",path ,_bcf ));_cd !=nil {return _cd ;};};return nil ;};func (_cbc *ISO3166 )UnmarshalXML (d *_d .Decoder ,start _d .StartElement )error {for {_cgad ,_aab :=d .Token ();if _aab !=nil {return _b .Errorf ("\u0070\u0061\u0072\u0073in\u0067\u0020\u0049\u0053\u004f\u0033\u0031\u0036\u0036\u003a\u0020\u0025\u0073",_aab );};if _bdfg ,_gfd :=_cgad .(_d .EndElement );_gfd &&_bdfg .Name ==start .Name {break ;};};return nil ;};func (_bba *RFC3066 )UnmarshalXML (d *_d .Decoder ,start _d .StartElement )error {for {_dgg ,_aed :=d .Token ();if _aed !=nil {return _b .Errorf ("\u0070\u0061\u0072\u0073in\u0067\u0020\u0052\u0046\u0043\u0033\u0030\u0036\u0036\u003a\u0020\u0025\u0073",_aed );};if _ab ,_aec :=_dgg .(_d .EndElement );_aec &&_ab .Name ==start .Name {break ;};};return nil ;};type Period struct{};

// Validate validates the Period and its children
func (_deg *Period )Validate ()error {return _deg .ValidateWithPath ("\u0050\u0065\u0072\u0069\u006f\u0064");};

// ValidateWithPath validates the ElementOrRefinementContainer and its children, prefixing error messages with path
func (_bf *ElementOrRefinementContainer )ValidateWithPath (path string )error {for _dd ,_ed :=range _bf .Choice {if _ead :=_ed .ValidateWithPath (_b .Sprintf ("\u0025\u0073\u002f\u0043\u0068\u006f\u0069\u0063\u0065\u005b\u0025\u0064\u005d",path ,_dd ));_ead !=nil {return _ead ;};};return nil ;};

// ValidateWithPath validates the DDC and its children, prefixing error messages with path
func (_ec *DDC )ValidateWithPath (path string )error {return nil };func (_ebc *Point )MarshalXML (e *_d .Encoder ,start _d .StartElement )error {start .Name .Local ="\u0050\u006f\u0069n\u0074";e .EncodeToken (start );e .EncodeToken (_d .EndElement {Name :start .Name });return nil ;};func (_cdc *MESH )MarshalXML (e *_d .Encoder ,start _d .StartElement )error {start .Name .Local ="\u004d\u0045\u0053\u0048";e .EncodeToken (start );e .EncodeToken (_d .EndElement {Name :start .Name });return nil ;};

// Validate validates the RFC1766 and its children
func (_afg *RFC1766 )Validate ()error {return _afg .ValidateWithPath ("\u0052F\u0043\u0031\u0037\u0036\u0036");};func NewISO3166 ()*ISO3166 {_eca :=&ISO3166 {};return _eca };type IMT struct{};type LCC struct{};

// Validate validates the UDC and its children
func (_ccbc *UDC )Validate ()error {return _ccbc .ValidateWithPath ("\u0055\u0044\u0043")};func NewURI ()*URI {_fce :=&URI {};return _fce };

// ValidateWithPath validates the ISO639_2 and its children, prefixing error messages with path
func (_dca *ISO639_2 )ValidateWithPath (path string )error {return nil };func (_bbe *LCSH )MarshalXML (e *_d .Encoder ,start _d .StartElement )error {start .Name .Local ="\u004c\u0043\u0053\u0048";e .EncodeToken (start );e .EncodeToken (_d .EndElement {Name :start .Name });return nil ;};func NewLCC ()*LCC {_bge :=&LCC {};return _bge };func (_ccd *ISO639_2 )UnmarshalXML (d *_d .Decoder ,start _d .StartElement )error {for {_edb ,_ccf :=d .Token ();if _ccf !=nil {return _b .Errorf ("p\u0061r\u0073\u0069\u006e\u0067\u0020\u0049\u0053\u004f6\u0033\u0039\u005f\u0032: \u0025\u0073",_ccf );};if _dedd ,_fcg :=_edb .(_d .EndElement );_fcg &&_dedd .Name ==start .Name {break ;};};return nil ;};func NewElementOrRefinementContainer ()*ElementOrRefinementContainer {_ggg :=&ElementOrRefinementContainer {};return _ggg ;};type ISO639_2 struct{};func NewElementsAndRefinementsGroup ()*ElementsAndRefinementsGroup {_acg :=&ElementsAndRefinementsGroup {};return _acg ;};func NewPoint ()*Point {_fg :=&Point {};return _fg };type RFC1766 struct{};func (_bab *URI )UnmarshalXML (d *_d .Decoder ,start _d .StartElement )error {for {_abe ,_dfa :=d .Token ();if _dfa !=nil {return _b .Errorf ("\u0070a\u0072s\u0069\u006e\u0067\u0020\u0055\u0052\u0049\u003a\u0020\u0025\u0073",_dfa );};if _gbcb ,_dac :=_abe .(_d .EndElement );_dac &&_gbcb .Name ==start .Name {break ;};};return nil ;};func NewPeriod ()*Period {_aeg :=&Period {};return _aeg };

// Validate validates the Box and its children
func (_dc *Box )Validate ()error {return _dc .ValidateWithPath ("\u0042\u006f\u0078")};func (_fag *TGN )MarshalXML (e *_d .Encoder ,start _d .StartElement )error {start .Name .Local ="\u0054\u0047\u004e";e .EncodeToken (start );e .EncodeToken (_d .EndElement {Name :start .Name });return nil ;};

// ValidateWithPath validates the LCSH and its children, prefixing error messages with path
func (_ebb *LCSH )ValidateWithPath (path string )error {return nil };func (_ccb *ISO639_2 )MarshalXML (e *_d .Encoder ,start _d .StartElement )error {start .Name .Local ="\u0049\u0053\u004f\u0036\u0033\u0039\u002d\u0032";e .EncodeToken (start );e .EncodeToken (_d .EndElement {Name :start .Name });return nil ;};func (_ce *Box )MarshalXML (e *_d .Encoder ,start _d .StartElement )error {start .Name .Local ="\u0042\u006f\u0078";e .EncodeToken (start );e .EncodeToken (_d .EndElement {Name :start .Name });return nil ;};

// Validate validates the ElementsAndRefinementsGroup and its children
func (_cgg *ElementsAndRefinementsGroup )Validate ()error {return _cgg .ValidateWithPath ("E\u006c\u0065\u006d\u0065\u006e\u0074s\u0041\u006e\u0064\u0052\u0065\u0066\u0069\u006e\u0065m\u0065\u006e\u0074s\u0047r\u006f\u0075\u0070");};

// Validate validates the RFC3066 and its children
func (_bff *RFC3066 )Validate ()error {return _bff .ValidateWithPath ("\u0052F\u0043\u0033\u0030\u0036\u0036");};func (_dg *ElementOrRefinementContainer )UnmarshalXML (d *_d .Decoder ,start _d .StartElement )error {_efe :for {_gcb ,_feb :=d .Token ();if _feb !=nil {return _feb ;};switch _bca :=_gcb .(type ){case _d .StartElement :switch _bca .Name {case _d .Name {Space :"\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0072\u0067/\u0064c\u002f\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0073\u002f\u0031\u002e\u0031\u002f",Local :"\u0061\u006e\u0079"}:_dgc :=NewElementsAndRefinementsGroupChoice ();if _ag :=d .DecodeElement (&_dgc .Any ,&_bca );_ag !=nil {return _ag ;};_dg .Choice =append (_dg .Choice ,_dgc );default:_be .Log ("\u0073k\u0069\u0070\u0070\u0069\u006e\u0067\u0020un\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006de\u006e\u0074 \u006f\u006e\u0020E\u006c\u0065\u006d\u0065\u006e\u0074\u004f\u0072\u0052\u0065\u0066\u0069\u006e\u0065\u006d\u0065n\u0074\u0043on\u0074\u0061\u0069n\u0065\u0072\u0020\u0025\u0076",_bca .Name );if _dee :=d .Skip ();_dee !=nil {return _dee ;};};case _d .EndElement :break _efe ;case _d .CharData :};};return nil ;};

// ValidateWithPath validates the LCC and its children, prefixing error messages with path
func (_ae *LCC )ValidateWithPath (path string )error {return nil };func (_bce *LCC )UnmarshalXML (d *_d .Decoder ,start _d .StartElement )error {for {_ada ,_febg :=d .Token ();if _febg !=nil {return _b .Errorf ("\u0070a\u0072s\u0069\u006e\u0067\u0020\u004c\u0043\u0043\u003a\u0020\u0025\u0073",_febg );};if _fcf ,_bcg :=_ada .(_d .EndElement );_bcg &&_fcf .Name ==start .Name {break ;};};return nil ;};func NewBox ()*Box {_bd :=&Box {};return _bd };func (_bg *IMT )UnmarshalXML (d *_d .Decoder ,start _d .StartElement )error {for {_cgf ,_faa :=d .Token ();if _faa !=nil {return _b .Errorf ("\u0070a\u0072s\u0069\u006e\u0067\u0020\u0049\u004d\u0054\u003a\u0020\u0025\u0073",_faa );};if _acc ,_ga :=_cgf .(_d .EndElement );_ga &&_acc .Name ==start .Name {break ;};};return nil ;};

// ValidateWithPath validates the Box and its children, prefixing error messages with path
func (_e *Box )ValidateWithPath (path string )error {return nil };func (_ff *DDC )UnmarshalXML (d *_d .Decoder ,start _d .StartElement )error {for {_ea ,_fe :=d .Token ();if _fe !=nil {return _b .Errorf ("\u0070a\u0072s\u0069\u006e\u0067\u0020\u0044\u0044\u0043\u003a\u0020\u0025\u0073",_fe );};if _bea ,_ad :=_ea .(_d .EndElement );_ad &&_bea .Name ==start .Name {break ;};};return nil ;};func (_eff *MESH )UnmarshalXML (d *_d .Decoder ,start _d .StartElement )error {for {_fcd ,_dcaa :=d .Token ();if _dcaa !=nil {return _b .Errorf ("\u0070\u0061r\u0073\u0069\u006eg\u0020\u004d\u0045\u0053\u0048\u003a\u0020\u0025\u0073",_dcaa );};if _ede ,_ccc :=_fcd .(_d .EndElement );_ccc &&_ede .Name ==start .Name {break ;};};return nil ;};

// ValidateWithPath validates the W3CDTF and its children, prefixing error messages with path
func (_bbf *W3CDTF )ValidateWithPath (path string )error {return nil };func NewRFC1766 ()*RFC1766 {_aafg :=&RFC1766 {};return _aafg };

// Validate validates the Point and its children
func (_feeg *Point )Validate ()error {return _feeg .ValidateWithPath ("\u0050\u006f\u0069n\u0074")};func (_gg *DCMIType )MarshalXML (e *_d .Encoder ,start _d .StartElement )error {start .Name .Local ="\u0044\u0043\u004d\u0049\u0054\u0079\u0070\u0065";e .EncodeToken (start );e .EncodeToken (_d .EndElement {Name :start .Name });return nil ;};

// Validate validates the ISO639_2 and its children
func (_bga *ISO639_2 )Validate ()error {return _bga .ValidateWithPath ("\u0049\u0053\u004f\u0036\u0033\u0039\u005f\u0032");};

// Validate validates the MESH and its children
func (_da *MESH )Validate ()error {return _da .ValidateWithPath ("\u004d\u0045\u0053\u0048")};func NewW3CDTF ()*W3CDTF {_dfaa :=&W3CDTF {};return _dfaa };type UDC struct{};func (_ca *Box )UnmarshalXML (d *_d .Decoder ,start _d .StartElement )error {for {_g ,_cae :=d .Token ();if _cae !=nil {return _b .Errorf ("\u0070a\u0072s\u0069\u006e\u0067\u0020\u0042\u006f\u0078\u003a\u0020\u0025\u0073",_cae );};if _f ,_a :=_g .(_d .EndElement );_a &&_f .Name ==start .Name {break ;};};return nil ;};

// ValidateWithPath validates the Period and its children, prefixing error messages with path
func (_dbc *Period )ValidateWithPath (path string )error {return nil };

// Validate validates the LCC and its children
func (_gfb *LCC )Validate ()error {return _gfb .ValidateWithPath ("\u004c\u0043\u0043")};func NewISO639_2 ()*ISO639_2 {_deda :=&ISO639_2 {};return _deda };type MESH struct{};func (_geg *W3CDTF )UnmarshalXML (d *_d .Decoder ,start _d .StartElement )error {for {_ecfb ,_gcg :=d .Token ();if _gcg !=nil {return _b .Errorf ("\u0070a\u0072s\u0069\u006e\u0067\u0020\u00573\u0043\u0044T\u0046\u003a\u0020\u0025\u0073",_gcg );};if _bbdb ,_gdb :=_ecfb .(_d .EndElement );_gdb &&_bbdb .Name ==start .Name {break ;};};return nil ;};type ElementsAndRefinementsGroupChoice struct{Any []*_bc .Any ;};

// ValidateWithPath validates the RFC3066 and its children, prefixing error messages with path
func (_eda *RFC3066 )ValidateWithPath (path string )error {return nil };func (_bgb *Period )MarshalXML (e *_d .Encoder ,start _d .StartElement )error {start .Name .Local ="\u0050\u0065\u0072\u0069\u006f\u0064";e .EncodeToken (start );e .EncodeToken (_d .EndElement {Name :start .Name });return nil ;};

// ValidateWithPath validates the Point and its children, prefixing error messages with path
func (_fcb *Point )ValidateWithPath (path string )error {return nil };func (_gff *ElementsAndRefinementsGroup )MarshalXML (e *_d .Encoder ,start _d .StartElement )error {if _gff .Choice !=nil {for _ ,_cb :=range _gff .Choice {_cb .MarshalXML (e ,_d .StartElement {});};};return nil ;};func (_fa *DDC )MarshalXML (e *_d .Encoder ,start _d .StartElement )error {start .Name .Local ="\u0044\u0044\u0043";e .EncodeToken (start );e .EncodeToken (_d .EndElement {Name :start .Name });return nil ;};

// Validate validates the W3CDTF and its children
func (_aad *W3CDTF )Validate ()error {return _aad .ValidateWithPath ("\u0057\u0033\u0043\u0044\u0054\u0046");};func (_ccg *TGN )UnmarshalXML (d *_d .Decoder ,start _d .StartElement )error {for {_bgee ,_ebf :=d .Token ();if _ebf !=nil {return _b .Errorf ("\u0070a\u0072s\u0069\u006e\u0067\u0020\u0054\u0047\u004e\u003a\u0020\u0025\u0073",_ebf );};if _ceg ,_egg :=_bgee .(_d .EndElement );_egg &&_ceg .Name ==start .Name {break ;};};return nil ;};type TGN struct{};

// Validate validates the ElementOrRefinementContainer and its children
func (_fc *ElementOrRefinementContainer )Validate ()error {return _fc .ValidateWithPath ("\u0045\u006c\u0065\u006de\u006e\u0074\u004f\u0072\u0052\u0065\u0066\u0069\u006e\u0065m\u0065n\u0074\u0043\u006f\u006e\u0074\u0061\u0069n\u0065\u0072");};

// ValidateWithPath validates the ISO3166 and its children, prefixing error messages with path
func (_cfa *ISO3166 )ValidateWithPath (path string )error {return nil };type URI struct{};type W3CDTF struct{};func (_cacd *UDC )MarshalXML (e *_d .Encoder ,start _d .StartElement )error {start .Name .Local ="\u0055\u0044\u0043";e .EncodeToken (start );e .EncodeToken (_d .EndElement {Name :start .Name });return nil ;};

// ValidateWithPath validates the URI and its children, prefixing error messages with path
func (_aedb *URI )ValidateWithPath (path string )error {return nil };

// Validate validates the LCSH and its children
func (_ggga *LCSH )Validate ()error {return _ggga .ValidateWithPath ("\u004c\u0043\u0053\u0048")};func (_gag *Period )UnmarshalXML (d *_d .Decoder ,start _d .StartElement )error {for {_aag ,_fff :=d .Token ();if _fff !=nil {return _b .Errorf ("\u0070a\u0072s\u0069\u006e\u0067\u0020\u0050e\u0072\u0069o\u0064\u003a\u0020\u0025\u0073",_fff );};if _dff ,_beab :=_aag .(_d .EndElement );_beab &&_dff .Name ==start .Name {break ;};};return nil ;};func NewMESH ()*MESH {_cdd :=&MESH {};return _cdd };type Point struct{};func (_acgb *ElementsAndRefinementsGroupChoice )MarshalXML (e *_d .Encoder ,start _d .StartElement )error {if _acgb .Any !=nil {_fdc :=_d .StartElement {Name :_d .Name {Local :"\u0064\u0063\u003a\u0061\u006e\u0079"}};for _ ,_fb :=range _acgb .Any {e .EncodeElement (_fb ,_fdc );};};return nil ;};func NewRFC3066 ()*RFC3066 {_fad :=&RFC3066 {};return _fad };type ISO3166 struct{};type DDC struct{};

// Validate validates the URI and its children
func (_bdb *URI )Validate ()error {return _bdb .ValidateWithPath ("\u0055\u0052\u0049")};

// Validate validates the ISO3166 and its children
func (_ege *ISO3166 )Validate ()error {return _ege .ValidateWithPath ("\u0049S\u004f\u0033\u0031\u0036\u0036");};func NewUDC ()*UDC {_gec :=&UDC {};return _gec };func NewDDC ()*DDC {_gc :=&DDC {};return _gc };

// ValidateWithPath validates the ElementsAndRefinementsGroupChoice and its children, prefixing error messages with path
func (_eg *ElementsAndRefinementsGroupChoice )ValidateWithPath (path string )error {for _ba ,_dce :=range _eg .Any {if _gcf :=_dce .ValidateWithPath (_b .Sprintf ("\u0025\u0073\u002f\u0041\u006e\u0079\u005b\u0025\u0064\u005d",path ,_ba ));_gcf !=nil {return _gcf ;};};return nil ;};type Box struct{};func NewTGN ()*TGN {_efgf :=&TGN {};return _efgf };func (_deed *W3CDTF )MarshalXML (e *_d .Encoder ,start _d .StartElement )error {start .Name .Local ="\u0057\u0033\u0043\u0044\u0054\u0046";e .EncodeToken (start );e .EncodeToken (_d .EndElement {Name :start .Name });return nil ;};func NewElementsAndRefinementsGroupChoice ()*ElementsAndRefinementsGroupChoice {_fdd :=&ElementsAndRefinementsGroupChoice {};return _fdd ;};func (_edc *RFC3066 )MarshalXML (e *_d .Encoder ,start _d .StartElement )error {start .Name .Local ="\u0052F\u0043\u0033\u0030\u0036\u0036";e .EncodeToken (start );e .EncodeToken (_d .EndElement {Name :start .Name });return nil ;};type RFC3066 struct{};func (_cf *IMT )MarshalXML (e *_d .Encoder ,start _d .StartElement )error {start .Name .Local ="\u0049\u004d\u0054";e .EncodeToken (start );e .EncodeToken (_d .EndElement {Name :start .Name });return nil ;};

// Validate validates the TGN and its children
func (_cca *TGN )Validate ()error {return _cca .ValidateWithPath ("\u0054\u0047\u004e")};type DCMIType struct{};

// Validate validates the IMT and its children
func (_dcd *IMT )Validate ()error {return _dcd .ValidateWithPath ("\u0049\u004d\u0054")};

// ValidateWithPath validates the MESH and its children, prefixing error messages with path
func (_ffg *MESH )ValidateWithPath (path string )error {return nil };type ElementOrRefinementContainer struct{Choice []*ElementsAndRefinementsGroupChoice ;};

// ValidateWithPath validates the IMT and its children, prefixing error messages with path
func (_baa *IMT )ValidateWithPath (path string )error {return nil };

// ValidateWithPath validates the DCMIType and its children, prefixing error messages with path
func (_aa *DCMIType )ValidateWithPath (path string )error {return nil };type ElementsAndRefinementsGroup struct{Choice []*ElementsAndRefinementsGroupChoice ;};

// Validate validates the DCMIType and its children
func (_ef *DCMIType )Validate ()error {return _ef .ValidateWithPath ("\u0044\u0043\u004d\u0049\u0054\u0079\u0070\u0065");};func (_ebac *ISO3166 )MarshalXML (e *_d .Encoder ,start _d .StartElement )error {start .Name .Local ="\u0049S\u004f\u0033\u0031\u0036\u0036";e .EncodeToken (start );e .EncodeToken (_d .EndElement {Name :start .Name });return nil ;};func (_cbf *RFC1766 )MarshalXML (e *_d .Encoder ,start _d .StartElement )error {start .Name .Local ="\u0052F\u0043\u0031\u0037\u0036\u0036";e .EncodeToken (start );e .EncodeToken (_d .EndElement {Name :start .Name });return nil ;};func NewDCMIType ()*DCMIType {_eb :=&DCMIType {};return _eb };func (_gd *Point )UnmarshalXML (d *_d .Decoder ,start _d .StartElement )error {for {_bda ,_aabd :=d .Token ();if _aabd !=nil {return _b .Errorf ("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0050\u006f\u0069\u006et\u003a\u0020\u0025\u0073",_aabd );};if _bgf ,_dcg :=_bda .(_d .EndElement );_dcg &&_bgf .Name ==start .Name {break ;};};return nil ;};func (_ggb *DCMIType )UnmarshalXML (d *_d .Decoder ,start _d .StartElement )error {for {_ac ,_gf :=d .Token ();if _gf !=nil {return _b .Errorf ("p\u0061r\u0073\u0069\u006e\u0067\u0020\u0044\u0043\u004dI\u0054\u0079\u0070\u0065: \u0025\u0073",_gf );};if _de ,_ceb :=_ac .(_d .EndElement );_ceb &&_de .Name ==start .Name {break ;};};return nil ;};func (_efg *LCC )MarshalXML (e *_d .Encoder ,start _d .StartElement )error {start .Name .Local ="\u004c\u0043\u0043";e .EncodeToken (start );e .EncodeToken (_d .EndElement {Name :start .Name });return nil ;};func (_gb *LCSH )UnmarshalXML (d *_d .Decoder ,start _d .StartElement )error {for {_fcc ,_aeb :=d .Token ();if _aeb !=nil {return _b .Errorf ("\u0070\u0061r\u0073\u0069\u006eg\u0020\u004c\u0043\u0053\u0048\u003a\u0020\u0025\u0073",_aeb );};if _ge ,_dgb :=_fcc .(_d .EndElement );_dgb &&_ge .Name ==start .Name {break ;};};return nil ;};func (_agde *URI )MarshalXML (e *_d .Encoder ,start _d .StartElement )error {start .Name .Local ="\u0055\u0052\u0049";e .EncodeToken (start );e .EncodeToken (_d .EndElement {Name :start .Name });return nil ;};func NewIMT ()*IMT {_cce :=&IMT {};return _cce };

// ValidateWithPath validates the UDC and its children, prefixing error messages with path
func (_bbd *UDC )ValidateWithPath (path string )error {return nil };

// Validate validates the ElementsAndRefinementsGroupChoice and its children
func (_bb *ElementsAndRefinementsGroupChoice )Validate ()error {return _bb .ValidateWithPath ("\u0045\u006c\u0065\u006d\u0065\u006et\u0073\u0041\u006e\u0064\u0052\u0065\u0066\u0069\u006e\u0065\u006d\u0065\u006et\u0073\u0047\u0072\u006f\u0075\u0070\u0043h\u006f\u0069\u0063\u0065");};func NewLCSH ()*LCSH {_fcgc :=&LCSH {};return _fcgc };func (_fef *UDC )UnmarshalXML (d *_d .Decoder ,start _d .StartElement )error {for {_gac ,_baag :=d .Token ();if _baag !=nil {return _b .Errorf ("\u0070a\u0072s\u0069\u006e\u0067\u0020\u0055\u0044\u0043\u003a\u0020\u0025\u0073",_baag );};if _ffe ,_gbc :=_gac .(_d .EndElement );_gbc &&_ffe .Name ==start .Name {break ;};};return nil ;};func (_af *ElementsAndRefinementsGroupChoice )UnmarshalXML (d *_d .Decoder ,start _d .StartElement )error {_fda :for {_ecd ,_cac :=d .Token ();if _cac !=nil {return _cac ;};switch _aaf :=_ecd .(type ){case _d .StartElement :switch _aaf .Name {case _d .Name {Space :"\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0072\u0067/\u0064c\u002f\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0073\u002f\u0031\u002e\u0031\u002f",Local :"\u0061\u006e\u0079"}:_ecf :=_bc .NewAny ();if _adc :=d .DecodeElement (_ecf ,&_aaf );_adc !=nil {return _adc ;};_af .Any =append (_af .Any ,_ecf );default:_be .Log ("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0045\u006c\u0065\u006d\u0065\u006e\u0074\u0073\u0041\u006ed\u0052\u0065\u0066\u0069\u006e\u0065\u006d\u0065\u006e\u0074\u0073\u0047\u0072\u006fu\u0070\u0043\u0068o\u0069\u0063\u0065\u0020\u0025\u0076",_aaf .Name );if _dfg :=d .Skip ();_dfg !=nil {return _dfg ;};};case _d .EndElement :break _fda ;case _d .CharData :};};return nil ;};

// Validate validates the DDC and its children
func (_adb *DDC )Validate ()error {return _adb .ValidateWithPath ("\u0044\u0044\u0043")};func (_caeg *RFC1766 )UnmarshalXML (d *_d .Decoder ,start _d .StartElement )error {for {_caa ,_cdcb :=d .Token ();if _cdcb !=nil {return _b .Errorf ("\u0070\u0061\u0072\u0073in\u0067\u0020\u0052\u0046\u0043\u0031\u0037\u0036\u0036\u003a\u0020\u0025\u0073",_cdcb );};if _gcd ,_egf :=_caa .(_d .EndElement );_egf &&_gcd .Name ==start .Name {break ;};};return nil ;};func init (){_be .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u004c\u0043\u0053\u0048",NewLCSH );_be .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u004d\u0045\u0053\u0048",NewMESH );_be .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u0044\u0044\u0043",NewDDC );_be .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u004c\u0043\u0043",NewLCC );_be .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u0055\u0044\u0043",NewUDC );_be .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u0050\u0065\u0072\u0069\u006f\u0064",NewPeriod );_be .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u0057\u0033\u0043\u0044\u0054\u0046",NewW3CDTF );_be .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u0044\u0043\u004d\u0049\u0054\u0079\u0070\u0065",NewDCMIType );_be .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u0049\u004d\u0054",NewIMT );_be .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u0055\u0052\u0049",NewURI );_be .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u0049\u0053\u004f\u0036\u0033\u0039\u002d\u0032",NewISO639_2 );_be .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u0052F\u0043\u0031\u0037\u0036\u0036",NewRFC1766 );_be .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u0052F\u0043\u0033\u0030\u0036\u0036",NewRFC3066 );_be .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u0050\u006f\u0069n\u0074",NewPoint );_be .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u0049S\u004f\u0033\u0031\u0036\u0036",NewISO3166 );_be .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u0042\u006f\u0078",NewBox );_be .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u0054\u0047\u004e",NewTGN );_be .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","\u0065\u006c\u0065\u006de\u006e\u0074\u004f\u0072\u0052\u0065\u0066\u0069\u006e\u0065m\u0065n\u0074\u0043\u006f\u006e\u0074\u0061\u0069n\u0065\u0072",NewElementOrRefinementContainer );_be .RegisterConstructor ("\u0068t\u0074\u0070\u003a\u002f/\u0070\u0075\u0072\u006c\u002eo\u0072g\u002fd\u0063\u002f\u0074\u0065\u0072\u006d\u0073/","e\u006c\u0065\u006d\u0065\u006e\u0074s\u0041\u006e\u0064\u0052\u0065\u0066\u0069\u006e\u0065m\u0065\u006e\u0074s\u0047r\u006f\u0075\u0070",NewElementsAndRefinementsGroup );};