//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package content_types ;import (_b "encoding/xml";_f "fmt";_bf "github.com/unidoc/unioffice";_ea "regexp";);func (_g *CT_Default )MarshalXML (e *_b .Encoder ,start _b .StartElement )error {start .Attr =append (start .Attr ,_b .Attr {Name :_b .Name {Local :"\u0045x\u0074\u0065\u006e\u0073\u0069\u006fn"},Value :_f .Sprintf ("\u0025\u0076",_g .ExtensionAttr )});start .Attr =append (start .Attr ,_b .Attr {Name :_b .Name {Local :"C\u006f\u006e\u0074\u0065\u006e\u0074\u0054\u0079\u0070\u0065"},Value :_f .Sprintf ("\u0025\u0076",_g .ContentTypeAttr )});e .EncodeToken (start );e .EncodeToken (_b .EndElement {Name :start .Name });return nil ;};

// ValidateWithPath validates the CT_Default and its children, prefixing error messages with path
func (_cg *CT_Default )ValidateWithPath (path string )error {if !ST_ExtensionPatternRe .MatchString (_cg .ExtensionAttr ){return _f .Errorf ("\u0025s\u002f\u006d.\u0045\u0078\u0074\u0065n\u0073\u0069\u006fn\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074 m\u0061\u0074\u0063h\u0020\u0027%\u0073\u0027\u0020\u0028\u0068\u0061v\u0065\u0020%\u0076\u0029",path ,ST_ExtensionPatternRe ,_cg .ExtensionAttr );};if !ST_ContentTypePatternRe .MatchString (_cg .ContentTypeAttr ){return _f .Errorf ("\u0025\u0073/\u006d\u002e\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0054\u0079\u0070\u0065\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u006d\u0061\u0074\u0063\u0068\u0020\u0027\u0025\u0073\u0027\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029",path ,ST_ContentTypePatternRe ,_cg .ContentTypeAttr );};return nil ;};func NewDefault ()*Default {_fef :=&Default {};_fef .CT_Default =*NewCT_Default ();return _fef };

// Validate validates the CT_Default and its children
func (_gb *CT_Default )Validate ()error {return _gb .ValidateWithPath ("\u0043\u0054\u005f\u0044\u0065\u0066\u0061\u0075\u006c\u0074");};

// ValidateWithPath validates the Default and its children, prefixing error messages with path
func (_bfg *Default )ValidateWithPath (path string )error {if _de :=_bfg .CT_Default .ValidateWithPath (path );_de !=nil {return _de ;};return nil ;};

// Validate validates the Override and its children
func (_eca *Override )Validate ()error {return _eca .ValidateWithPath ("\u004f\u0076\u0065\u0072\u0072\u0069\u0064\u0065");};type CT_Types struct{Default []*Default ;Override []*Override ;};func (_fbd *CT_Types )MarshalXML (e *_b .Encoder ,start _b .StartElement )error {e .EncodeToken (start );if _fbd .Default !=nil {_ced :=_b .StartElement {Name :_b .Name {Local :"\u0044e\u0066\u0061\u0075\u006c\u0074"}};for _ ,_dd :=range _fbd .Default {e .EncodeElement (_dd ,_ced );};};if _fbd .Override !=nil {_dgf :=_b .StartElement {Name :_b .Name {Local :"\u004f\u0076\u0065\u0072\u0072\u0069\u0064\u0065"}};for _ ,_ffa :=range _fbd .Override {e .EncodeElement (_ffa ,_dgf );};};e .EncodeToken (_b .EndElement {Name :start .Name });return nil ;};func NewCT_Types ()*CT_Types {_ef :=&CT_Types {};return _ef };type CT_Override struct{ContentTypeAttr string ;PartNameAttr string ;};func (_bag *Override )MarshalXML (e *_b .Encoder ,start _b .StartElement )error {return _bag .CT_Override .MarshalXML (e ,start );};func NewCT_Override ()*CT_Override {_fa :=&CT_Override {};_fa .ContentTypeAttr ="\u0061p\u0070l\u0069\u0063\u0061\u0074\u0069\u006f\u006e\u002f\u0078\u006d\u006c";return _fa ;};

// Validate validates the Default and its children
func (_gccf *Default )Validate ()error {return _gccf .ValidateWithPath ("\u0044e\u0066\u0061\u0075\u006c\u0074");};func (_bg *Types )UnmarshalXML (d *_b .Decoder ,start _b .StartElement )error {_bg .CT_Types =*NewCT_Types ();_ffdd :for {_def ,_be :=d .Token ();if _be !=nil {return _be ;};switch _bbg :=_def .(type ){case _b .StartElement :switch _bbg .Name {case _b .Name {Space :"ht\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0070\u0061\u0063\u006b\u0061\u0067\u0065\u002f\u00320\u00306\u002f\u0063\u006f\u006e\u0074\u0065\u006e\u0074-\u0074y\u0070\u0065s",Local :"\u0044e\u0066\u0061\u0075\u006c\u0074"}:_gdf :=NewDefault ();if _cbg :=d .DecodeElement (_gdf ,&_bbg );_cbg !=nil {return _cbg ;};_bg .Default =append (_bg .Default ,_gdf );case _b .Name {Space :"ht\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0070\u0061\u0063\u006b\u0061\u0067\u0065\u002f\u00320\u00306\u002f\u0063\u006f\u006e\u0074\u0065\u006e\u0074-\u0074y\u0070\u0065s",Local :"\u004f\u0076\u0065\u0072\u0072\u0069\u0064\u0065"}:_cedb :=NewOverride ();if _abb :=d .DecodeElement (_cedb ,&_bbg );_abb !=nil {return _abb ;};_bg .Override =append (_bg .Override ,_cedb );default:_bf .Log ("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006fn \u0054\u0079\u0070e\u0073 \u0025\u0076",_bbg .Name );if _fcb :=d .Skip ();_fcb !=nil {return _fcb ;};};case _b .EndElement :break _ffdd ;case _b .CharData :};};return nil ;};func (_ffg *Override )UnmarshalXML (d *_b .Decoder ,start _b .StartElement )error {_ffg .CT_Override =*NewCT_Override ();for _ ,_dga :=range start .Attr {if _dga .Name .Local =="C\u006f\u006e\u0074\u0065\u006e\u0074\u0054\u0079\u0070\u0065"{_ed ,_fefg :=_dga .Value ,error (nil );if _fefg !=nil {return _fefg ;};_ffg .ContentTypeAttr =_ed ;continue ;};if _dga .Name .Local =="\u0050\u0061\u0072\u0074\u004e\u0061\u006d\u0065"{_eed ,_ag :=_dga .Value ,error (nil );if _ag !=nil {return _ag ;};_ffg .PartNameAttr =_eed ;continue ;};};for {_eb ,_gdd :=d .Token ();if _gdd !=nil {return _f .Errorf ("p\u0061r\u0073\u0069\u006e\u0067\u0020\u004f\u0076\u0065r\u0072\u0069\u0064\u0065: \u0025\u0073",_gdd );};if _fee ,_bbd :=_eb .(_b .EndElement );_bbd &&_fee .Name ==start .Name {break ;};};return nil ;};

// ValidateWithPath validates the CT_Types and its children, prefixing error messages with path
func (_fcd *CT_Types )ValidateWithPath (path string )error {for _cfg ,_fdg :=range _fcd .Default {if _cgf :=_fdg .ValidateWithPath (_f .Sprintf ("\u0025\u0073\u002f\u0044\u0065\u0066\u0061\u0075\u006ct\u005b\u0025\u0064\u005d",path ,_cfg ));_cgf !=nil {return _cgf ;};};for _ac ,_fbf :=range _fcd .Override {if _ffd :=_fbf .ValidateWithPath (_f .Sprintf ("\u0025s\u002fO\u0076\u0065\u0072\u0072\u0069\u0064\u0065\u005b\u0025\u0064\u005d",path ,_ac ));_ffd !=nil {return _ffd ;};};return nil ;};func NewTypes ()*Types {_cfe :=&Types {};_cfe .CT_Types =*NewCT_Types ();return _cfe };type Types struct{CT_Types };const ST_ExtensionPattern ="\u0028\u005b\u0021\u0024\u0026\u0027\\\u0028\u005c\u0029\u005c\u002a\\\u002b\u002c\u003a\u003d\u005d\u007c(\u0025\u005b\u0030\u002d\u0039a\u002d\u0066\u0041\u002d\u0046\u005d\u005b\u0030\u002d\u0039\u0061\u002df\u0041\u002d\u0046\u005d\u0029\u007c\u005b\u003a\u0040\u005d\u007c\u005b\u0061\u002d\u007aA\u002d\u005a\u0030\u002d\u0039\u005c\u002d\u005f~\u005d\u0029\u002b";func (_bb *CT_Types )UnmarshalXML (d *_b .Decoder ,start _b .StartElement )error {_ab :for {_ca ,_fbg :=d .Token ();if _fbg !=nil {return _fbg ;};switch _fg :=_ca .(type ){case _b .StartElement :switch _fg .Name {case _b .Name {Space :"ht\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0070\u0061\u0063\u006b\u0061\u0067\u0065\u002f\u00320\u00306\u002f\u0063\u006f\u006e\u0074\u0065\u006e\u0074-\u0074y\u0070\u0065s",Local :"\u0044e\u0066\u0061\u0075\u006c\u0074"}:_dbc :=NewDefault ();if _ege :=d .DecodeElement (_dbc ,&_fg );_ege !=nil {return _ege ;};_bb .Default =append (_bb .Default ,_dbc );case _b .Name {Space :"ht\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0070\u0061\u0063\u006b\u0061\u0067\u0065\u002f\u00320\u00306\u002f\u0063\u006f\u006e\u0074\u0065\u006e\u0074-\u0074y\u0070\u0065s",Local :"\u004f\u0076\u0065\u0072\u0072\u0069\u0064\u0065"}:_gd :=NewOverride ();if _gg :=d .DecodeElement (_gd ,&_fg );_gg !=nil {return _gg ;};_bb .Override =append (_bb .Override ,_gd );default:_bf .Log ("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0054\u0079\u0070\u0065\u0073\u0020\u0025\u0076",_fg .Name );if _bfab :=d .Skip ();_bfab !=nil {return _bfab ;};};case _b .EndElement :break _ab ;case _b .CharData :};};return nil ;};

// ValidateWithPath validates the CT_Override and its children, prefixing error messages with path
func (_ff *CT_Override )ValidateWithPath (path string )error {if !ST_ContentTypePatternRe .MatchString (_ff .ContentTypeAttr ){return _f .Errorf ("\u0025\u0073/\u006d\u002e\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0054\u0079\u0070\u0065\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u006d\u0061\u0074\u0063\u0068\u0020\u0027\u0025\u0073\u0027\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029",path ,ST_ContentTypePatternRe ,_ff .ContentTypeAttr );};return nil ;};var ST_ContentTypePatternRe =_ea .MustCompile (ST_ContentTypePattern );type Default struct{CT_Default };const ST_ContentTypePattern ="\u005e\\\u0070{\u004c\u0061\u0074\u0069\u006e\u007d\u002b\u002f\u002e\u002a\u0024";func (_cgb *Types )MarshalXML (e *_b .Encoder ,start _b .StartElement )error {start .Attr =append (start .Attr ,_b .Attr {Name :_b .Name {Local :"\u0078\u006d\u006cn\u0073"},Value :"ht\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0070\u0061\u0063\u006b\u0061\u0067\u0065\u002f\u00320\u00306\u002f\u0063\u006f\u006e\u0074\u0065\u006e\u0074-\u0074y\u0070\u0065s"});start .Attr =append (start .Attr ,_b .Attr {Name :_b .Name {Local :"\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"},Value :"\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"});start .Name .Local ="\u0054\u0079\u0070e\u0073";return _cgb .CT_Types .MarshalXML (e ,start );};func (_bfa *CT_Default )UnmarshalXML (d *_b .Decoder ,start _b .StartElement )error {_bfa .ExtensionAttr ="\u0078\u006d\u006c";_bfa .ContentTypeAttr ="\u0061p\u0070l\u0069\u0063\u0061\u0074\u0069\u006f\u006e\u002f\u0078\u006d\u006c";for _ ,_d :=range start .Attr {if _d .Name .Local =="\u0045x\u0074\u0065\u006e\u0073\u0069\u006fn"{_c ,_fd :=_d .Value ,error (nil );if _fd !=nil {return _fd ;};_bfa .ExtensionAttr =_c ;continue ;};if _d .Name .Local =="C\u006f\u006e\u0074\u0065\u006e\u0074\u0054\u0079\u0070\u0065"{_dg ,_ee :=_d .Value ,error (nil );if _ee !=nil {return _ee ;};_bfa .ContentTypeAttr =_dg ;continue ;};};for {_df ,_ba :=d .Token ();if _ba !=nil {return _f .Errorf ("\u0070\u0061\u0072\u0073in\u0067\u0020\u0043\u0054\u005f\u0044\u0065\u0066\u0061\u0075\u006c\u0074\u003a\u0020%\u0073",_ba );};if _cc ,_db :=_df .(_b .EndElement );_db &&_cc .Name ==start .Name {break ;};};return nil ;};func (_gf *Default )UnmarshalXML (d *_b .Decoder ,start _b .StartElement )error {_gf .CT_Default =*NewCT_Default ();for _ ,_cgc :=range start .Attr {if _cgc .Name .Local =="\u0045x\u0074\u0065\u006e\u0073\u0069\u006fn"{_abd ,_gfa :=_cgc .Value ,error (nil );if _gfa !=nil {return _gfa ;};_gf .ExtensionAttr =_abd ;continue ;};if _cgc .Name .Local =="C\u006f\u006e\u0074\u0065\u006e\u0074\u0054\u0079\u0070\u0065"{_dbe ,_bbe :=_cgc .Value ,error (nil );if _bbe !=nil {return _bbe ;};_gf .ContentTypeAttr =_dbe ;continue ;};};for {_fgc ,_egc :=d .Token ();if _egc !=nil {return _f .Errorf ("\u0070\u0061\u0072\u0073in\u0067\u0020\u0044\u0065\u0066\u0061\u0075\u006c\u0074\u003a\u0020\u0025\u0073",_egc );};if _aa ,_bbef :=_fgc .(_b .EndElement );_bbef &&_aa .Name ==start .Name {break ;};};return nil ;};

// ValidateWithPath validates the Override and its children, prefixing error messages with path
func (_efc *Override )ValidateWithPath (path string )error {if _agf :=_efc .CT_Override .ValidateWithPath (path );_agf !=nil {return _agf ;};return nil ;};func (_bd *CT_Override )UnmarshalXML (d *_b .Decoder ,start _b .StartElement )error {_bd .ContentTypeAttr ="\u0061p\u0070l\u0069\u0063\u0061\u0074\u0069\u006f\u006e\u002f\u0078\u006d\u006c";for _ ,_cb :=range start .Attr {if _cb .Name .Local =="C\u006f\u006e\u0074\u0065\u006e\u0074\u0054\u0079\u0070\u0065"{_eg ,_fc :=_cb .Value ,error (nil );if _fc !=nil {return _fc ;};_bd .ContentTypeAttr =_eg ;continue ;};if _cb .Name .Local =="\u0050\u0061\u0072\u0074\u004e\u0061\u006d\u0065"{_ce ,_ec :=_cb .Value ,error (nil );if _ec !=nil {return _ec ;};_bd .PartNameAttr =_ce ;continue ;};};for {_egf ,_bdg :=d .Token ();if _bdg !=nil {return _f .Errorf ("\u0070\u0061\u0072si\u006e\u0067\u0020\u0043\u0054\u005f\u004f\u0076\u0065\u0072\u0072\u0069\u0064\u0065\u003a\u0020\u0025\u0073",_bdg );};if _a ,_feg :=_egf .(_b .EndElement );_feg &&_a .Name ==start .Name {break ;};};return nil ;};

// Validate validates the CT_Override and its children
func (_da *CT_Override )Validate ()error {return _da .ValidateWithPath ("C\u0054\u005f\u004f\u0076\u0065\u0072\u0072\u0069\u0064\u0065");};func NewOverride ()*Override {_cgd :=&Override {};_cgd .CT_Override =*NewCT_Override ();return _cgd };

// Validate validates the CT_Types and its children
func (_cf *CT_Types )Validate ()error {return _cf .ValidateWithPath ("\u0043\u0054\u005f\u0054\u0079\u0070\u0065\u0073");};var ST_ExtensionPatternRe =_ea .MustCompile (ST_ExtensionPattern );

// Validate validates the Types and its children
func (_beb *Types )Validate ()error {return _beb .ValidateWithPath ("\u0054\u0079\u0070e\u0073")};func (_dbg *Default )MarshalXML (e *_b .Encoder ,start _b .StartElement )error {return _dbg .CT_Default .MarshalXML (e ,start );};func NewCT_Default ()*CT_Default {_fe :=&CT_Default {};_fe .ExtensionAttr ="\u0078\u006d\u006c";_fe .ContentTypeAttr ="\u0061p\u0070l\u0069\u0063\u0061\u0074\u0069\u006f\u006e\u002f\u0078\u006d\u006c";return _fe ;};func (_eeb *CT_Override )MarshalXML (e *_b .Encoder ,start _b .StartElement )error {start .Attr =append (start .Attr ,_b .Attr {Name :_b .Name {Local :"C\u006f\u006e\u0074\u0065\u006e\u0074\u0054\u0079\u0070\u0065"},Value :_f .Sprintf ("\u0025\u0076",_eeb .ContentTypeAttr )});start .Attr =append (start .Attr ,_b .Attr {Name :_b .Name {Local :"\u0050\u0061\u0072\u0074\u004e\u0061\u006d\u0065"},Value :_f .Sprintf ("\u0025\u0076",_eeb .PartNameAttr )});e .EncodeToken (start );e .EncodeToken (_b .EndElement {Name :start .Name });return nil ;};

// ValidateWithPath validates the Types and its children, prefixing error messages with path
func (_bebd *Types )ValidateWithPath (path string )error {if _gce :=_bebd .CT_Types .ValidateWithPath (path );_gce !=nil {return _gce ;};return nil ;};type Override struct{CT_Override };type CT_Default struct{ExtensionAttr string ;ContentTypeAttr string ;};func init (){_bf .RegisterConstructor ("ht\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0070\u0061\u0063\u006b\u0061\u0067\u0065\u002f\u00320\u00306\u002f\u0063\u006f\u006e\u0074\u0065\u006e\u0074-\u0074y\u0070\u0065s","\u0043\u0054\u005f\u0054\u0079\u0070\u0065\u0073",NewCT_Types );_bf .RegisterConstructor ("ht\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0070\u0061\u0063\u006b\u0061\u0067\u0065\u002f\u00320\u00306\u002f\u0063\u006f\u006e\u0074\u0065\u006e\u0074-\u0074y\u0070\u0065s","\u0043\u0054\u005f\u0044\u0065\u0066\u0061\u0075\u006c\u0074",NewCT_Default );_bf .RegisterConstructor ("ht\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0070\u0061\u0063\u006b\u0061\u0067\u0065\u002f\u00320\u00306\u002f\u0063\u006f\u006e\u0074\u0065\u006e\u0074-\u0074y\u0070\u0065s","C\u0054\u005f\u004f\u0076\u0065\u0072\u0072\u0069\u0064\u0065",NewCT_Override );_bf .RegisterConstructor ("ht\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0070\u0061\u0063\u006b\u0061\u0067\u0065\u002f\u00320\u00306\u002f\u0063\u006f\u006e\u0074\u0065\u006e\u0074-\u0074y\u0070\u0065s","\u0054\u0079\u0070e\u0073",NewTypes );_bf .RegisterConstructor ("ht\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0070\u0061\u0063\u006b\u0061\u0067\u0065\u002f\u00320\u00306\u002f\u0063\u006f\u006e\u0074\u0065\u006e\u0074-\u0074y\u0070\u0065s","\u0044e\u0066\u0061\u0075\u006c\u0074",NewDefault );_bf .RegisterConstructor ("ht\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0070\u0061\u0063\u006b\u0061\u0067\u0065\u002f\u00320\u00306\u002f\u0063\u006f\u006e\u0074\u0065\u006e\u0074-\u0074y\u0070\u0065s","\u004f\u0076\u0065\u0072\u0072\u0069\u0064\u0065",NewOverride );};