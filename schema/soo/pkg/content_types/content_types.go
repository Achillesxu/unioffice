//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package content_types ;import (_a "encoding/xml";_d "fmt";_f "github.com/unidoc/unioffice";_c "regexp";);

// Validate validates the CT_Default and its children
func (_eg *CT_Default )Validate ()error {return _eg .ValidateWithPath ("\u0043\u0054\u005f\u0044\u0065\u0066\u0061\u0075\u006c\u0074");};func NewCT_Default ()*CT_Default {_af :=&CT_Default {};_af .ExtensionAttr ="\u0078\u006d\u006c";_af .ContentTypeAttr ="\u0061p\u0070l\u0069\u0063\u0061\u0074\u0069\u006f\u006e\u002f\u0078\u006d\u006c";return _af ;};func (_ffc *Types )UnmarshalXML (d *_a .Decoder ,start _a .StartElement )error {_ffc .CT_Types =*NewCT_Types ();_ce :for {_gbf ,_beg :=d .Token ();if _beg !=nil {return _beg ;};switch _efc :=_gbf .(type ){case _a .StartElement :switch _efc .Name {case _a .Name {Space :"ht\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0070\u0061\u0063\u006b\u0061\u0067\u0065\u002f\u00320\u00306\u002f\u0063\u006f\u006e\u0074\u0065\u006e\u0074-\u0074y\u0070\u0065s",Local :"\u0044e\u0066\u0061\u0075\u006c\u0074"}:_bb :=NewDefault ();if _aec :=d .DecodeElement (_bb ,&_efc );_aec !=nil {return _aec ;};_ffc .Default =append (_ffc .Default ,_bb );case _a .Name {Space :"ht\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0070\u0061\u0063\u006b\u0061\u0067\u0065\u002f\u00320\u00306\u002f\u0063\u006f\u006e\u0074\u0065\u006e\u0074-\u0074y\u0070\u0065s",Local :"\u004f\u0076\u0065\u0072\u0072\u0069\u0064\u0065"}:_gdbe :=NewOverride ();if _gcab :=d .DecodeElement (_gdbe ,&_efc );_gcab !=nil {return _gcab ;};_ffc .Override =append (_ffc .Override ,_gdbe );default:_f .Log ("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006fn \u0054\u0079\u0070e\u0073 \u0025\u0076",_efc .Name );if _aeg :=d .Skip ();_aeg !=nil {return _aeg ;};};case _a .EndElement :break _ce ;case _a .CharData :};};return nil ;};

// Validate validates the CT_Types and its children
func (_eefa *CT_Types )Validate ()error {return _eefa .ValidateWithPath ("\u0043\u0054\u005f\u0054\u0079\u0070\u0065\u0073");};func NewCT_Override ()*CT_Override {_fc :=&CT_Override {};_fc .ContentTypeAttr ="\u0061p\u0070l\u0069\u0063\u0061\u0074\u0069\u006f\u006e\u002f\u0078\u006d\u006c";return _fc ;};func (_ggc *Override )UnmarshalXML (d *_a .Decoder ,start _a .StartElement )error {_ggc .CT_Override =*NewCT_Override ();for _ ,_de :=range start .Attr {if _de .Name .Local =="C\u006f\u006e\u0074\u0065\u006e\u0074\u0054\u0079\u0070\u0065"{_ebc ,_eee :=_de .Value ,error (nil );if _eee !=nil {return _eee ;};_ggc .ContentTypeAttr =_ebc ;continue ;};if _de .Name .Local =="\u0050\u0061\u0072\u0074\u004e\u0061\u006d\u0065"{_egb ,_cg :=_de .Value ,error (nil );if _cg !=nil {return _cg ;};_ggc .PartNameAttr =_egb ;continue ;};};for {_gdb ,_ff :=d .Token ();if _ff !=nil {return _d .Errorf ("p\u0061r\u0073\u0069\u006e\u0067\u0020\u004f\u0076\u0065r\u0072\u0069\u0064\u0065: \u0025\u0073",_ff );};if _bcf ,_gcac :=_gdb .(_a .EndElement );_gcac &&_bcf .Name ==start .Name {break ;};};return nil ;};type CT_Types struct{Default []*Default ;Override []*Override ;};func (_fce *Types )MarshalXML (e *_a .Encoder ,start _a .StartElement )error {start .Attr =append (start .Attr ,_a .Attr {Name :_a .Name {Local :"\u0078\u006d\u006cn\u0073"},Value :"ht\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0070\u0061\u0063\u006b\u0061\u0067\u0065\u002f\u00320\u00306\u002f\u0063\u006f\u006e\u0074\u0065\u006e\u0074-\u0074y\u0070\u0065s"});start .Attr =append (start .Attr ,_a .Attr {Name :_a .Name {Local :"\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"},Value :"\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"});start .Name .Local ="\u0054\u0079\u0070e\u0073";return _fce .CT_Types .MarshalXML (e ,start );};const ST_ExtensionPattern ="\u0028\u005b\u0021\u0024\u0026\u0027\\\u0028\u005c\u0029\u005c\u002a\\\u002b\u002c\u003a\u003d\u005d\u007c(\u0025\u005b\u0030\u002d\u0039a\u002d\u0066\u0041\u002d\u0046\u005d\u005b\u0030\u002d\u0039\u0061\u002df\u0041\u002d\u0046\u005d\u0029\u007c\u005b\u003a\u0040\u005d\u007c\u005b\u0061\u002d\u007aA\u002d\u005a\u0030\u002d\u0039\u005c\u002d\u005f~\u005d\u0029\u002b";func (_gca *Default )MarshalXML (e *_a .Encoder ,start _a .StartElement )error {return _gca .CT_Default .MarshalXML (e ,start );};

// Validate validates the Default and its children
func (_ccd *Default )Validate ()error {return _ccd .ValidateWithPath ("\u0044e\u0066\u0061\u0075\u006c\u0074");};type Default struct{CT_Default };func (_ba *CT_Types )MarshalXML (e *_a .Encoder ,start _a .StartElement )error {e .EncodeToken (start );if _ba .Default !=nil {_dbaa :=_a .StartElement {Name :_a .Name {Local :"\u0044e\u0066\u0061\u0075\u006c\u0074"}};for _ ,_gd :=range _ba .Default {e .EncodeElement (_gd ,_dbaa );};};if _ba .Override !=nil {_fa :=_a .StartElement {Name :_a .Name {Local :"\u004f\u0076\u0065\u0072\u0072\u0069\u0064\u0065"}};for _ ,_cd :=range _ba .Override {e .EncodeElement (_cd ,_fa );};};e .EncodeToken (_a .EndElement {Name :start .Name });return nil ;};var ST_ContentTypePatternRe =_c .MustCompile (ST_ContentTypePattern );

// ValidateWithPath validates the Default and its children, prefixing error messages with path
func (_efe *Default )ValidateWithPath (path string )error {if _dce :=_efe .CT_Default .ValidateWithPath (path );_dce !=nil {return _dce ;};return nil ;};

// Validate validates the Types and its children
func (_dae *Types )Validate ()error {return _dae .ValidateWithPath ("\u0054\u0079\u0070e\u0073")};

// ValidateWithPath validates the Types and its children, prefixing error messages with path
func (_adc *Types )ValidateWithPath (path string )error {if _bab :=_adc .CT_Types .ValidateWithPath (path );_bab !=nil {return _bab ;};return nil ;};

// Validate validates the Override and its children
func (_bgb *Override )Validate ()error {return _bgb .ValidateWithPath ("\u004f\u0076\u0065\u0072\u0072\u0069\u0064\u0065");};func NewOverride ()*Override {_baa :=&Override {};_baa .CT_Override =*NewCT_Override ();return _baa };type CT_Override struct{ContentTypeAttr string ;PartNameAttr string ;};var ST_ExtensionPatternRe =_c .MustCompile (ST_ExtensionPattern );func NewTypes ()*Types {_cbfb :=&Types {};_cbfb .CT_Types =*NewCT_Types ();return _cbfb };func (_ed *CT_Types )UnmarshalXML (d *_a .Decoder ,start _a .StartElement )error {_cbd :for {_fee ,_fdf :=d .Token ();if _fdf !=nil {return _fdf ;};switch _efd :=_fee .(type ){case _a .StartElement :switch _efd .Name {case _a .Name {Space :"ht\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0070\u0061\u0063\u006b\u0061\u0067\u0065\u002f\u00320\u00306\u002f\u0063\u006f\u006e\u0074\u0065\u006e\u0074-\u0074y\u0070\u0065s",Local :"\u0044e\u0066\u0061\u0075\u006c\u0074"}:_dgb :=NewDefault ();if _eef :=d .DecodeElement (_dgb ,&_efd );_eef !=nil {return _eef ;};_ed .Default =append (_ed .Default ,_dgb );case _a .Name {Space :"ht\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0070\u0061\u0063\u006b\u0061\u0067\u0065\u002f\u00320\u00306\u002f\u0063\u006f\u006e\u0074\u0065\u006e\u0074-\u0074y\u0070\u0065s",Local :"\u004f\u0076\u0065\u0072\u0072\u0069\u0064\u0065"}:_ea :=NewOverride ();if _bd :=d .DecodeElement (_ea ,&_efd );_bd !=nil {return _bd ;};_ed .Override =append (_ed .Override ,_ea );default:_f .Log ("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0054\u0079\u0070\u0065\u0073\u0020\u0025\u0076",_efd .Name );if _gg :=d .Skip ();_gg !=nil {return _gg ;};};case _a .EndElement :break _cbd ;case _a .CharData :};};return nil ;};

// Validate validates the CT_Override and its children
func (_be *CT_Override )Validate ()error {return _be .ValidateWithPath ("C\u0054\u005f\u004f\u0076\u0065\u0072\u0072\u0069\u0064\u0065");};func (_afg *Default )UnmarshalXML (d *_a .Decoder ,start _a .StartElement )error {_afg .CT_Default =*NewCT_Default ();for _ ,_cbe :=range start .Attr {if _cbe .Name .Local =="\u0045x\u0074\u0065\u006e\u0073\u0069\u006fn"{_cde ,_bc :=_cbe .Value ,error (nil );if _bc !=nil {return _bc ;};_afg .ExtensionAttr =_cde ;continue ;};if _cbe .Name .Local =="C\u006f\u006e\u0074\u0065\u006e\u0074\u0054\u0079\u0070\u0065"{_dfb ,_aed :=_cbe .Value ,error (nil );if _aed !=nil {return _aed ;};_afg .ContentTypeAttr =_dfb ;continue ;};};for {_cca ,_cbf :=d .Token ();if _cbf !=nil {return _d .Errorf ("\u0070\u0061\u0072\u0073in\u0067\u0020\u0044\u0065\u0066\u0061\u0075\u006c\u0074\u003a\u0020\u0025\u0073",_cbf );};if _ad ,_aa :=_cca .(_a .EndElement );_aa &&_ad .Name ==start .Name {break ;};};return nil ;};

// ValidateWithPath validates the CT_Default and its children, prefixing error messages with path
func (_fe *CT_Default )ValidateWithPath (path string )error {if !ST_ExtensionPatternRe .MatchString (_fe .ExtensionAttr ){return _d .Errorf ("\u0025s\u002f\u006d.\u0045\u0078\u0074\u0065n\u0073\u0069\u006fn\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074 m\u0061\u0074\u0063h\u0020\u0027%\u0073\u0027\u0020\u0028\u0068\u0061v\u0065\u0020%\u0076\u0029",path ,ST_ExtensionPatternRe ,_fe .ExtensionAttr );};if !ST_ContentTypePatternRe .MatchString (_fe .ContentTypeAttr ){return _d .Errorf ("\u0025\u0073/\u006d\u002e\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0054\u0079\u0070\u0065\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u006d\u0061\u0074\u0063\u0068\u0020\u0027\u0025\u0073\u0027\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029",path ,ST_ContentTypePatternRe ,_fe .ContentTypeAttr );};return nil ;};

// ValidateWithPath validates the Override and its children, prefixing error messages with path
func (_aad *Override )ValidateWithPath (path string )error {if _gfa :=_aad .CT_Override .ValidateWithPath (path );_gfa !=nil {return _gfa ;};return nil ;};func (_fd *CT_Override )UnmarshalXML (d *_a .Decoder ,start _a .StartElement )error {_fd .ContentTypeAttr ="\u0061p\u0070l\u0069\u0063\u0061\u0074\u0069\u006f\u006e\u002f\u0078\u006d\u006c";for _ ,_fg :=range start .Attr {if _fg .Name .Local =="C\u006f\u006e\u0074\u0065\u006e\u0074\u0054\u0079\u0070\u0065"{_ec ,_cc :=_fg .Value ,error (nil );if _cc !=nil {return _cc ;};_fd .ContentTypeAttr =_ec ;continue ;};if _fg .Name .Local =="\u0050\u0061\u0072\u0074\u004e\u0061\u006d\u0065"{_df ,_gba :=_fg .Value ,error (nil );if _gba !=nil {return _gba ;};_fd .PartNameAttr =_df ;continue ;};};for {_dbf ,_ge :=d .Token ();if _ge !=nil {return _d .Errorf ("\u0070\u0061\u0072si\u006e\u0067\u0020\u0043\u0054\u005f\u004f\u0076\u0065\u0072\u0072\u0069\u0064\u0065\u003a\u0020\u0025\u0073",_ge );};if _fca ,_da :=_dbf .(_a .EndElement );_da &&_fca .Name ==start .Name {break ;};};return nil ;};func (_g *CT_Default )MarshalXML (e *_a .Encoder ,start _a .StartElement )error {start .Attr =append (start .Attr ,_a .Attr {Name :_a .Name {Local :"\u0045x\u0074\u0065\u006e\u0073\u0069\u006fn"},Value :_d .Sprintf ("\u0025\u0076",_g .ExtensionAttr )});start .Attr =append (start .Attr ,_a .Attr {Name :_a .Name {Local :"C\u006f\u006e\u0074\u0065\u006e\u0074\u0054\u0079\u0070\u0065"},Value :_d .Sprintf ("\u0025\u0076",_g .ContentTypeAttr )});e .EncodeToken (start );e .EncodeToken (_a .EndElement {Name :start .Name });return nil ;};func NewCT_Types ()*CT_Types {_bf :=&CT_Types {};return _bf };func (_dg *CT_Default )UnmarshalXML (d *_a .Decoder ,start _a .StartElement )error {_dg .ExtensionAttr ="\u0078\u006d\u006c";_dg .ContentTypeAttr ="\u0061p\u0070l\u0069\u0063\u0061\u0074\u0069\u006f\u006e\u002f\u0078\u006d\u006c";for _ ,_dc :=range start .Attr {if _dc .Name .Local =="\u0045x\u0074\u0065\u006e\u0073\u0069\u006fn"{_db ,_ef :=_dc .Value ,error (nil );if _ef !=nil {return _ef ;};_dg .ExtensionAttr =_db ;continue ;};if _dc .Name .Local =="C\u006f\u006e\u0074\u0065\u006e\u0074\u0054\u0079\u0070\u0065"{_dba ,_cf :=_dc .Value ,error (nil );if _cf !=nil {return _cf ;};_dg .ContentTypeAttr =_dba ;continue ;};};for {_gb ,_dd :=d .Token ();if _dd !=nil {return _d .Errorf ("\u0070\u0061\u0072\u0073in\u0067\u0020\u0043\u0054\u005f\u0044\u0065\u0066\u0061\u0075\u006c\u0074\u003a\u0020%\u0073",_dd );};if _cb ,_eb :=_gb .(_a .EndElement );_eb &&_cb .Name ==start .Name {break ;};};return nil ;};type Types struct{CT_Types };const ST_ContentTypePattern ="\u005e\\\u0070{\u004c\u0061\u0074\u0069\u006e\u007d\u002b\u002f\u002e\u002a\u0024";

// ValidateWithPath validates the CT_Types and its children, prefixing error messages with path
func (_gee *CT_Types )ValidateWithPath (path string )error {for _ag ,_bg :=range _gee .Default {if _fcb :=_bg .ValidateWithPath (_d .Sprintf ("\u0025\u0073\u002f\u0044\u0065\u0066\u0061\u0075\u006ct\u005b\u0025\u0064\u005d",path ,_ag ));_fcb !=nil {return _fcb ;};};for _cdf ,_bgc :=range _gee .Override {if _dca :=_bgc .ValidateWithPath (_d .Sprintf ("\u0025s\u002fO\u0076\u0065\u0072\u0072\u0069\u0064\u0065\u005b\u0025\u0064\u005d",path ,_cdf ));_dca !=nil {return _dca ;};};return nil ;};type Override struct{CT_Override };type CT_Default struct{ExtensionAttr string ;ContentTypeAttr string ;};func (_gf *CT_Override )MarshalXML (e *_a .Encoder ,start _a .StartElement )error {start .Attr =append (start .Attr ,_a .Attr {Name :_a .Name {Local :"C\u006f\u006e\u0074\u0065\u006e\u0074\u0054\u0079\u0070\u0065"},Value :_d .Sprintf ("\u0025\u0076",_gf .ContentTypeAttr )});start .Attr =append (start .Attr ,_a .Attr {Name :_a .Name {Local :"\u0050\u0061\u0072\u0074\u004e\u0061\u006d\u0065"},Value :_d .Sprintf ("\u0025\u0076",_gf .PartNameAttr )});e .EncodeToken (start );e .EncodeToken (_a .EndElement {Name :start .Name });return nil ;};

// ValidateWithPath validates the CT_Override and its children, prefixing error messages with path
func (_fb *CT_Override )ValidateWithPath (path string )error {if !ST_ContentTypePatternRe .MatchString (_fb .ContentTypeAttr ){return _d .Errorf ("\u0025\u0073/\u006d\u002e\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0054\u0079\u0070\u0065\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u006d\u0061\u0074\u0063\u0068\u0020\u0027\u0025\u0073\u0027\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029",path ,ST_ContentTypePatternRe ,_fb .ContentTypeAttr );};return nil ;};func NewDefault ()*Default {_bec :=&Default {};_bec .CT_Default =*NewCT_Default ();return _bec };func (_feg *Override )MarshalXML (e *_a .Encoder ,start _a .StartElement )error {return _feg .CT_Override .MarshalXML (e ,start );};func init (){_f .RegisterConstructor ("ht\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0070\u0061\u0063\u006b\u0061\u0067\u0065\u002f\u00320\u00306\u002f\u0063\u006f\u006e\u0074\u0065\u006e\u0074-\u0074y\u0070\u0065s","\u0043\u0054\u005f\u0054\u0079\u0070\u0065\u0073",NewCT_Types );_f .RegisterConstructor ("ht\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0070\u0061\u0063\u006b\u0061\u0067\u0065\u002f\u00320\u00306\u002f\u0063\u006f\u006e\u0074\u0065\u006e\u0074-\u0074y\u0070\u0065s","\u0043\u0054\u005f\u0044\u0065\u0066\u0061\u0075\u006c\u0074",NewCT_Default );_f .RegisterConstructor ("ht\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0070\u0061\u0063\u006b\u0061\u0067\u0065\u002f\u00320\u00306\u002f\u0063\u006f\u006e\u0074\u0065\u006e\u0074-\u0074y\u0070\u0065s","C\u0054\u005f\u004f\u0076\u0065\u0072\u0072\u0069\u0064\u0065",NewCT_Override );_f .RegisterConstructor ("ht\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0070\u0061\u0063\u006b\u0061\u0067\u0065\u002f\u00320\u00306\u002f\u0063\u006f\u006e\u0074\u0065\u006e\u0074-\u0074y\u0070\u0065s","\u0054\u0079\u0070e\u0073",NewTypes );_f .RegisterConstructor ("ht\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0070\u0061\u0063\u006b\u0061\u0067\u0065\u002f\u00320\u00306\u002f\u0063\u006f\u006e\u0074\u0065\u006e\u0074-\u0074y\u0070\u0065s","\u0044e\u0066\u0061\u0075\u006c\u0074",NewDefault );_f .RegisterConstructor ("ht\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0070\u0061\u0063\u006b\u0061\u0067\u0065\u002f\u00320\u00306\u002f\u0063\u006f\u006e\u0074\u0065\u006e\u0074-\u0074y\u0070\u0065s","\u004f\u0076\u0065\u0072\u0072\u0069\u0064\u0065",NewOverride );};