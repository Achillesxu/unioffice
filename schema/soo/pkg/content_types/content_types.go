//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package content_types ;import (_dce "encoding/xml";_fce "fmt";_b "github.com/unidoc/unioffice";_ce "regexp";);func NewCT_Override ()*CT_Override {_gf :=&CT_Override {};_gf .ContentTypeAttr ="\u0061p\u0070l\u0069\u0063\u0061\u0074\u0069\u006f\u006e\u002f\u0078\u006d\u006c";return _gf ;};func (_fe *Default )UnmarshalXML (d *_dce .Decoder ,start _dce .StartElement )error {_fe .CT_Default =*NewCT_Default ();for _ ,_faf :=range start .Attr {if _faf .Name .Local =="\u0045x\u0074\u0065\u006e\u0073\u0069\u006fn"{_gbbf ,_gbb :=_faf .Value ,error (nil );if _gbb !=nil {return _gbb ;};_fe .ExtensionAttr =_gbbf ;continue ;};if _faf .Name .Local =="C\u006f\u006e\u0074\u0065\u006e\u0074\u0054\u0079\u0070\u0065"{_fg ,_faff :=_faf .Value ,error (nil );if _faff !=nil {return _faff ;};_fe .ContentTypeAttr =_fg ;continue ;};};for {_ea ,_ccc :=d .Token ();if _ccc !=nil {return _fce .Errorf ("\u0070\u0061\u0072\u0073in\u0067\u0020\u0044\u0065\u0066\u0061\u0075\u006c\u0074\u003a\u0020\u0025\u0073",_ccc );};if _cg ,_ec :=_ea .(_dce .EndElement );_ec &&_cg .Name ==start .Name {break ;};};return nil ;};func (_fea *CT_Types )MarshalXML (e *_dce .Encoder ,start _dce .StartElement )error {e .EncodeToken (start );if _fea .Default !=nil {_gc :=_dce .StartElement {Name :_dce .Name {Local :"\u0044e\u0066\u0061\u0075\u006c\u0074"}};for _ ,_gef :=range _fea .Default {e .EncodeElement (_gef ,_gc );};};if _fea .Override !=nil {_fa :=_dce .StartElement {Name :_dce .Name {Local :"\u004f\u0076\u0065\u0072\u0072\u0069\u0064\u0065"}};for _ ,_db :=range _fea .Override {e .EncodeElement (_db ,_fa );};};e .EncodeToken (_dce .EndElement {Name :start .Name });return nil ;};

// ValidateWithPath validates the Override and its children, prefixing error messages with path
func (_abf *Override )ValidateWithPath (path string )error {if _efa :=_abf .CT_Override .ValidateWithPath (path );_efa !=nil {return _efa ;};return nil ;};

// Validate validates the Override and its children
func (_fcc *Override )Validate ()error {return _fcc .ValidateWithPath ("\u004f\u0076\u0065\u0072\u0072\u0069\u0064\u0065");};const ST_ContentTypePattern ="\u005e\\\u0070{\u004c\u0061\u0074\u0069\u006e\u007d\u002b\u002f\u002e\u002a\u0024";const ST_ExtensionPattern ="\u0028\u005b\u0021\u0024\u0026\u0027\\\u0028\u005c\u0029\u005c\u002a\\\u002b\u002c\u003a\u003d\u005d\u007c(\u0025\u005b\u0030\u002d\u0039a\u002d\u0066\u0041\u002d\u0046\u005d\u005b\u0030\u002d\u0039\u0061\u002df\u0041\u002d\u0046\u005d\u0029\u007c\u005b\u003a\u0040\u005d\u007c\u005b\u0061\u002d\u007aA\u002d\u005a\u0030\u002d\u0039\u005c\u002d\u005f~\u005d\u0029\u002b";func NewCT_Types ()*CT_Types {_bc :=&CT_Types {};return _bc };type Types struct{CT_Types };

// Validate validates the CT_Types and its children
func (_abe *CT_Types )Validate ()error {return _abe .ValidateWithPath ("\u0043\u0054\u005f\u0054\u0079\u0070\u0065\u0073");};

// ValidateWithPath validates the CT_Types and its children, prefixing error messages with path
func (_ab *CT_Types )ValidateWithPath (path string )error {for _bef ,_fef :=range _ab .Default {if _df :=_fef .ValidateWithPath (_fce .Sprintf ("\u0025\u0073\u002f\u0044\u0065\u0066\u0061\u0075\u006ct\u005b\u0025\u0064\u005d",path ,_bef ));_df !=nil {return _df ;};};for _ccb ,_ca :=range _ab .Override {if _fca :=_ca .ValidateWithPath (_fce .Sprintf ("\u0025s\u002fO\u0076\u0065\u0072\u0072\u0069\u0064\u0065\u005b\u0025\u0064\u005d",path ,_ccb ));_fca !=nil {return _fca ;};};return nil ;};

// Validate validates the CT_Default and its children
func (_bfg *CT_Default )Validate ()error {return _bfg .ValidateWithPath ("\u0043\u0054\u005f\u0044\u0065\u0066\u0061\u0075\u006c\u0074");};

// Validate validates the CT_Override and its children
func (_cb *CT_Override )Validate ()error {return _cb .ValidateWithPath ("C\u0054\u005f\u004f\u0076\u0065\u0072\u0072\u0069\u0064\u0065");};func (_fd *Default )MarshalXML (e *_dce .Encoder ,start _dce .StartElement )error {return _fd .CT_Default .MarshalXML (e ,start );};func NewTypes ()*Types {_feag :=&Types {};_feag .CT_Types =*NewCT_Types ();return _feag };func (_f *CT_Default )UnmarshalXML (d *_dce .Decoder ,start _dce .StartElement )error {_f .ExtensionAttr ="\u0078\u006d\u006c";_f .ContentTypeAttr ="\u0061p\u0070l\u0069\u0063\u0061\u0074\u0069\u006f\u006e\u002f\u0078\u006d\u006c";for _ ,_da :=range start .Attr {if _da .Name .Local =="\u0045x\u0074\u0065\u006e\u0073\u0069\u006fn"{_cec ,_ede :=_da .Value ,error (nil );if _ede !=nil {return _ede ;};_f .ExtensionAttr =_cec ;continue ;};if _da .Name .Local =="C\u006f\u006e\u0074\u0065\u006e\u0074\u0054\u0079\u0070\u0065"{_dca ,_ffbe :=_da .Value ,error (nil );if _ffbe !=nil {return _ffbe ;};_f .ContentTypeAttr =_dca ;continue ;};};for {_eea ,_gd :=d .Token ();if _gd !=nil {return _fce .Errorf ("\u0070\u0061\u0072\u0073in\u0067\u0020\u0043\u0054\u005f\u0044\u0065\u0066\u0061\u0075\u006c\u0074\u003a\u0020%\u0073",_gd );};if _fda ,_cga :=_eea .(_dce .EndElement );_cga &&_fda .Name ==start .Name {break ;};};return nil ;};func NewDefault ()*Default {_af :=&Default {};_af .CT_Default =*NewCT_Default ();return _af };func (_bd *CT_Override )UnmarshalXML (d *_dce .Decoder ,start _dce .StartElement )error {_bd .ContentTypeAttr ="\u0061p\u0070l\u0069\u0063\u0061\u0074\u0069\u006f\u006e\u002f\u0078\u006d\u006c";for _ ,_ba :=range start .Attr {if _ba .Name .Local =="C\u006f\u006e\u0074\u0065\u006e\u0074\u0054\u0079\u0070\u0065"{_cbf ,_be :=_ba .Value ,error (nil );if _be !=nil {return _be ;};_bd .ContentTypeAttr =_cbf ;continue ;};if _ba .Name .Local =="\u0050\u0061\u0072\u0074\u004e\u0061\u006d\u0065"{_fb ,_dc :=_ba .Value ,error (nil );if _dc !=nil {return _dc ;};_bd .PartNameAttr =_fb ;continue ;};};for {_afe ,_afg :=d .Token ();if _afg !=nil {return _fce .Errorf ("\u0070\u0061\u0072si\u006e\u0067\u0020\u0043\u0054\u005f\u004f\u0076\u0065\u0072\u0072\u0069\u0064\u0065\u003a\u0020\u0025\u0073",_afg );};if _bcb ,_gfg :=_afe .(_dce .EndElement );_gfg &&_bcb .Name ==start .Name {break ;};};return nil ;};func (_dg *CT_Types )UnmarshalXML (d *_dce .Decoder ,start _dce .StartElement )error {_edd :for {_ffb ,_fdd :=d .Token ();if _fdd !=nil {return _fdd ;};switch _cda :=_ffb .(type ){case _dce .StartElement :switch _cda .Name {case _dce .Name {Space :"ht\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0070\u0061\u0063\u006b\u0061\u0067\u0065\u002f\u00320\u00306\u002f\u0063\u006f\u006e\u0074\u0065\u006e\u0074-\u0074y\u0070\u0065s",Local :"\u0044e\u0066\u0061\u0075\u006c\u0074"}:_gb :=NewDefault ();if _fga :=d .DecodeElement (_gb ,&_cda );_fga !=nil {return _fga ;};_dg .Default =append (_dg .Default ,_gb );case _dce .Name {Space :"ht\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0070\u0061\u0063\u006b\u0061\u0067\u0065\u002f\u00320\u00306\u002f\u0063\u006f\u006e\u0074\u0065\u006e\u0074-\u0074y\u0070\u0065s",Local :"\u004f\u0076\u0065\u0072\u0072\u0069\u0064\u0065"}:_fefg :=NewOverride ();if _bfc :=d .DecodeElement (_fefg ,&_cda );_bfc !=nil {return _bfc ;};_dg .Override =append (_dg .Override ,_fefg );default:_b .Log ("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0054\u0079\u0070\u0065\u0073\u0020\u0025\u0076",_cda .Name );if _ge :=d .Skip ();_ge !=nil {return _ge ;};};case _dce .EndElement :break _edd ;case _dce .CharData :};};return nil ;};type Override struct{CT_Override };func (_ef *Types )UnmarshalXML (d *_dce .Decoder ,start _dce .StartElement )error {_ef .CT_Types =*NewCT_Types ();_ada :for {_dd ,_fec :=d .Token ();if _fec !=nil {return _fec ;};switch _ff :=_dd .(type ){case _dce .StartElement :switch _ff .Name {case _dce .Name {Space :"ht\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0070\u0061\u0063\u006b\u0061\u0067\u0065\u002f\u00320\u00306\u002f\u0063\u006f\u006e\u0074\u0065\u006e\u0074-\u0074y\u0070\u0065s",Local :"\u0044e\u0066\u0061\u0075\u006c\u0074"}:_a :=NewDefault ();if _fae :=d .DecodeElement (_a ,&_ff );_fae !=nil {return _fae ;};_ef .Default =append (_ef .Default ,_a );case _dce .Name {Space :"ht\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0070\u0061\u0063\u006b\u0061\u0067\u0065\u002f\u00320\u00306\u002f\u0063\u006f\u006e\u0074\u0065\u006e\u0074-\u0074y\u0070\u0065s",Local :"\u004f\u0076\u0065\u0072\u0072\u0069\u0064\u0065"}:_fab :=NewOverride ();if _cd :=d .DecodeElement (_fab ,&_ff );_cd !=nil {return _cd ;};_ef .Override =append (_ef .Override ,_fab );default:_b .Log ("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006fn \u0054\u0079\u0070e\u0073 \u0025\u0076",_ff .Name );if _cc :=d .Skip ();_cc !=nil {return _cc ;};};case _dce .EndElement :break _ada ;case _dce .CharData :};};return nil ;};

// ValidateWithPath validates the Default and its children, prefixing error messages with path
func (_bad *Default )ValidateWithPath (path string )error {if _cee :=_bad .CT_Default .ValidateWithPath (path );_cee !=nil {return _cee ;};return nil ;};func (_de *Types )MarshalXML (e *_dce .Encoder ,start _dce .StartElement )error {start .Attr =append (start .Attr ,_dce .Attr {Name :_dce .Name {Local :"\u0078\u006d\u006cn\u0073"},Value :"ht\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0070\u0061\u0063\u006b\u0061\u0067\u0065\u002f\u00320\u00306\u002f\u0063\u006f\u006e\u0074\u0065\u006e\u0074-\u0074y\u0070\u0065s"});start .Attr =append (start .Attr ,_dce .Attr {Name :_dce .Name {Local :"\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"},Value :"\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"});start .Name .Local ="\u0054\u0079\u0070e\u0073";return _de .CT_Types .MarshalXML (e ,start );};type Default struct{CT_Default };var ST_ContentTypePatternRe =_ce .MustCompile (ST_ContentTypePattern );func NewCT_Default ()*CT_Default {_c :=&CT_Default {};_c .ExtensionAttr ="\u0078\u006d\u006c";_c .ContentTypeAttr ="\u0061p\u0070l\u0069\u0063\u0061\u0074\u0069\u006f\u006e\u002f\u0078\u006d\u006c";return _c ;};func (_edb *Override )UnmarshalXML (d *_dce .Decoder ,start _dce .StartElement )error {_edb .CT_Override =*NewCT_Override ();for _ ,_dfc :=range start .Attr {if _dfc .Name .Local =="C\u006f\u006e\u0074\u0065\u006e\u0074\u0054\u0079\u0070\u0065"{_bb ,_cae :=_dfc .Value ,error (nil );if _cae !=nil {return _cae ;};_edb .ContentTypeAttr =_bb ;continue ;};if _dfc .Name .Local =="\u0050\u0061\u0072\u0074\u004e\u0061\u006d\u0065"{_fbe ,_fgf :=_dfc .Value ,error (nil );if _fgf !=nil {return _fgf ;};_edb .PartNameAttr =_fbe ;continue ;};};for {_ae ,_d :=d .Token ();if _d !=nil {return _fce .Errorf ("p\u0061r\u0073\u0069\u006e\u0067\u0020\u004f\u0076\u0065r\u0072\u0069\u0064\u0065: \u0025\u0073",_d );};if _bba ,_ed :=_ae .(_dce .EndElement );_ed &&_bba .Name ==start .Name {break ;};};return nil ;};func NewOverride ()*Override {_cccb :=&Override {};_cccb .CT_Override =*NewCT_Override ();return _cccb ;};

// ValidateWithPath validates the CT_Default and its children, prefixing error messages with path
func (_fgd *CT_Default )ValidateWithPath (path string )error {if !ST_ExtensionPatternRe .MatchString (_fgd .ExtensionAttr ){return _fce .Errorf ("\u0025s\u002f\u006d.\u0045\u0078\u0074\u0065n\u0073\u0069\u006fn\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074 m\u0061\u0074\u0063h\u0020\u0027%\u0073\u0027\u0020\u0028\u0068\u0061v\u0065\u0020%\u0076\u0029",path ,ST_ExtensionPatternRe ,_fgd .ExtensionAttr );};if !ST_ContentTypePatternRe .MatchString (_fgd .ContentTypeAttr ){return _fce .Errorf ("\u0025\u0073/\u006d\u002e\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0054\u0079\u0070\u0065\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u006d\u0061\u0074\u0063\u0068\u0020\u0027\u0025\u0073\u0027\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029",path ,ST_ContentTypePatternRe ,_fgd .ContentTypeAttr );};return nil ;};func (_fgc *CT_Override )MarshalXML (e *_dce .Encoder ,start _dce .StartElement )error {start .Attr =append (start .Attr ,_dce .Attr {Name :_dce .Name {Local :"C\u006f\u006e\u0074\u0065\u006e\u0074\u0054\u0079\u0070\u0065"},Value :_fce .Sprintf ("\u0025\u0076",_fgc .ContentTypeAttr )});start .Attr =append (start .Attr ,_dce .Attr {Name :_dce .Name {Local :"\u0050\u0061\u0072\u0074\u004e\u0061\u006d\u0065"},Value :_fce .Sprintf ("\u0025\u0076",_fgc .PartNameAttr )});e .EncodeToken (start );e .EncodeToken (_dce .EndElement {Name :start .Name });return nil ;};func (_bf *CT_Default )MarshalXML (e *_dce .Encoder ,start _dce .StartElement )error {start .Attr =append (start .Attr ,_dce .Attr {Name :_dce .Name {Local :"\u0045x\u0074\u0065\u006e\u0073\u0069\u006fn"},Value :_fce .Sprintf ("\u0025\u0076",_bf .ExtensionAttr )});start .Attr =append (start .Attr ,_dce .Attr {Name :_dce .Name {Local :"C\u006f\u006e\u0074\u0065\u006e\u0074\u0054\u0079\u0070\u0065"},Value :_fce .Sprintf ("\u0025\u0076",_bf .ContentTypeAttr )});e .EncodeToken (start );e .EncodeToken (_dce .EndElement {Name :start .Name });return nil ;};type CT_Default struct{ExtensionAttr string ;ContentTypeAttr string ;};type CT_Override struct{ContentTypeAttr string ;PartNameAttr string ;};

// Validate validates the Default and its children
func (_ddg *Default )Validate ()error {return _ddg .ValidateWithPath ("\u0044e\u0066\u0061\u0075\u006c\u0074");};

// ValidateWithPath validates the CT_Override and its children, prefixing error messages with path
func (_ee *CT_Override )ValidateWithPath (path string )error {if !ST_ContentTypePatternRe .MatchString (_ee .ContentTypeAttr ){return _fce .Errorf ("\u0025\u0073/\u006d\u002e\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0054\u0079\u0070\u0065\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u006d\u0061\u0074\u0063\u0068\u0020\u0027\u0025\u0073\u0027\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029",path ,ST_ContentTypePatternRe ,_ee .ContentTypeAttr );};return nil ;};type CT_Types struct{Default []*Default ;Override []*Override ;};func (_aee *Override )MarshalXML (e *_dce .Encoder ,start _dce .StartElement )error {return _aee .CT_Override .MarshalXML (e ,start );};var ST_ExtensionPatternRe =_ce .MustCompile (ST_ExtensionPattern );

// Validate validates the Types and its children
func (_ac *Types )Validate ()error {return _ac .ValidateWithPath ("\u0054\u0079\u0070e\u0073")};

// ValidateWithPath validates the Types and its children, prefixing error messages with path
func (_fc *Types )ValidateWithPath (path string )error {if _e :=_fc .CT_Types .ValidateWithPath (path );_e !=nil {return _e ;};return nil ;};func init (){_b .RegisterConstructor ("ht\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0070\u0061\u0063\u006b\u0061\u0067\u0065\u002f\u00320\u00306\u002f\u0063\u006f\u006e\u0074\u0065\u006e\u0074-\u0074y\u0070\u0065s","\u0043\u0054\u005f\u0054\u0079\u0070\u0065\u0073",NewCT_Types );_b .RegisterConstructor ("ht\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0070\u0061\u0063\u006b\u0061\u0067\u0065\u002f\u00320\u00306\u002f\u0063\u006f\u006e\u0074\u0065\u006e\u0074-\u0074y\u0070\u0065s","\u0043\u0054\u005f\u0044\u0065\u0066\u0061\u0075\u006c\u0074",NewCT_Default );_b .RegisterConstructor ("ht\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0070\u0061\u0063\u006b\u0061\u0067\u0065\u002f\u00320\u00306\u002f\u0063\u006f\u006e\u0074\u0065\u006e\u0074-\u0074y\u0070\u0065s","C\u0054\u005f\u004f\u0076\u0065\u0072\u0072\u0069\u0064\u0065",NewCT_Override );_b .RegisterConstructor ("ht\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0070\u0061\u0063\u006b\u0061\u0067\u0065\u002f\u00320\u00306\u002f\u0063\u006f\u006e\u0074\u0065\u006e\u0074-\u0074y\u0070\u0065s","\u0054\u0079\u0070e\u0073",NewTypes );_b .RegisterConstructor ("ht\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0070\u0061\u0063\u006b\u0061\u0067\u0065\u002f\u00320\u00306\u002f\u0063\u006f\u006e\u0074\u0065\u006e\u0074-\u0074y\u0070\u0065s","\u0044e\u0066\u0061\u0075\u006c\u0074",NewDefault );_b .RegisterConstructor ("ht\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0070\u0061\u0063\u006b\u0061\u0067\u0065\u002f\u00320\u00306\u002f\u0063\u006f\u006e\u0074\u0065\u006e\u0074-\u0074y\u0070\u0065s","\u004f\u0076\u0065\u0072\u0072\u0069\u0064\u0065",NewOverride );};