//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package content_types ;import (_ab "encoding/xml";_ef "fmt";_c "github.com/unidoc/unioffice";_f "github.com/unidoc/unioffice/common/logger";_e "regexp";);

// ValidateWithPath validates the Default and its children, prefixing error messages with path
func (_afd *Default )ValidateWithPath (path string )error {if _cbb :=_afd .CT_Default .ValidateWithPath (path );_cbb !=nil {return _cbb ;};return nil ;};

// Validate validates the Override and its children
func (_gca *Override )Validate ()error {return _gca .ValidateWithPath ("\u004f\u0076\u0065\u0072\u0072\u0069\u0064\u0065");};func (_cff *Override )MarshalXML (e *_ab .Encoder ,start _ab .StartElement )error {return _cff .CT_Override .MarshalXML (e ,start );};

// Validate validates the CT_Types and its children
func (_bcg *CT_Types )Validate ()error {return _bcg .ValidateWithPath ("\u0043\u0054\u005f\u0054\u0079\u0070\u0065\u0073");};type CT_Override struct{ContentTypeAttr string ;PartNameAttr string ;};func NewCT_Types ()*CT_Types {_agf :=&CT_Types {};return _agf };func (_fa *CT_Default )UnmarshalXML (d *_ab .Decoder ,start _ab .StartElement )error {_fa .ExtensionAttr ="\u0078\u006d\u006c";_fa .ContentTypeAttr ="\u0061p\u0070l\u0069\u0063\u0061\u0074\u0069\u006f\u006e\u002f\u0078\u006d\u006c";for _ ,_ca :=range start .Attr {if _ca .Name .Local =="\u0045x\u0074\u0065\u006e\u0073\u0069\u006fn"{_ae ,_aa :=_ca .Value ,error (nil );if _aa !=nil {return _aa ;};_fa .ExtensionAttr =_ae ;continue ;};if _ca .Name .Local =="C\u006f\u006e\u0074\u0065\u006e\u0074\u0054\u0079\u0070\u0065"{_ag ,_ed :=_ca .Value ,error (nil );if _ed !=nil {return _ed ;};_fa .ContentTypeAttr =_ag ;continue ;};};for {_fe ,_eg :=d .Token ();if _eg !=nil {return _ef .Errorf ("\u0070\u0061\u0072\u0073in\u0067\u0020\u0043\u0054\u005f\u0044\u0065\u0066\u0061\u0075\u006c\u0074\u003a\u0020%\u0073",_eg );};if _df ,_feb :=_fe .(_ab .EndElement );_feb &&_df .Name ==start .Name {break ;};};return nil ;};func NewDefault ()*Default {_ge :=&Default {};_ge .CT_Default =*NewCT_Default ();return _ge };

// ValidateWithPath validates the CT_Types and its children, prefixing error messages with path
func (_cc *CT_Types )ValidateWithPath (path string )error {for _fc ,_cf :=range _cc .Default {if _gg :=_cf .ValidateWithPath (_ef .Sprintf ("\u0025\u0073\u002f\u0044\u0065\u0066\u0061\u0075\u006ct\u005b\u0025\u0064\u005d",path ,_fc ));_gg !=nil {return _gg ;};};for _ceg ,_feg :=range _cc .Override {if _bf :=_feg .ValidateWithPath (_ef .Sprintf ("\u0025s\u002fO\u0076\u0065\u0072\u0072\u0069\u0064\u0065\u005b\u0025\u0064\u005d",path ,_ceg ));_bf !=nil {return _bf ;};};return nil ;};type Default struct{CT_Default };func (_cead *Override )UnmarshalXML (d *_ab .Decoder ,start _ab .StartElement )error {_cead .CT_Override =*NewCT_Override ();for _ ,_becf :=range start .Attr {if _becf .Name .Local =="C\u006f\u006e\u0074\u0065\u006e\u0074\u0054\u0079\u0070\u0065"{_gc ,_cg :=_becf .Value ,error (nil );if _cg !=nil {return _cg ;};_cead .ContentTypeAttr =_gc ;continue ;};if _becf .Name .Local =="\u0050\u0061\u0072\u0074\u004e\u0061\u006d\u0065"{_cbd ,_ggf :=_becf .Value ,error (nil );if _ggf !=nil {return _ggf ;};_cead .PartNameAttr =_cbd ;continue ;};};for {_afgd ,_agfb :=d .Token ();if _agfb !=nil {return _ef .Errorf ("p\u0061r\u0073\u0069\u006e\u0067\u0020\u004f\u0076\u0065r\u0072\u0069\u0064\u0065: \u0025\u0073",_agfb );};if _acb ,_cge :=_afgd .(_ab .EndElement );_cge &&_acb .Name ==start .Name {break ;};};return nil ;};type Types struct{CT_Types };func (_cbab *Default )UnmarshalXML (d *_ab .Decoder ,start _ab .StartElement )error {_cbab .CT_Default =*NewCT_Default ();for _ ,_edb :=range start .Attr {if _edb .Name .Local =="\u0045x\u0074\u0065\u006e\u0073\u0069\u006fn"{_dcd ,_gfg :=_edb .Value ,error (nil );if _gfg !=nil {return _gfg ;};_cbab .ExtensionAttr =_dcd ;continue ;};if _edb .Name .Local =="C\u006f\u006e\u0074\u0065\u006e\u0074\u0054\u0079\u0070\u0065"{_dee ,_abc :=_edb .Value ,error (nil );if _abc !=nil {return _abc ;};_cbab .ContentTypeAttr =_dee ;continue ;};};for {_cea ,_dgf :=d .Token ();if _dgf !=nil {return _ef .Errorf ("\u0070\u0061\u0072\u0073in\u0067\u0020\u0044\u0065\u0066\u0061\u0075\u006c\u0074\u003a\u0020\u0025\u0073",_dgf );};if _fea ,_bbc :=_cea .(_ab .EndElement );_bbc &&_fea .Name ==start .Name {break ;};};return nil ;};

// Validate validates the Default and its children
func (_gfd *Default )Validate ()error {return _gfd .ValidateWithPath ("\u0044e\u0066\u0061\u0075\u006c\u0074");};

// ValidateWithPath validates the CT_Default and its children, prefixing error messages with path
func (_b *CT_Default )ValidateWithPath (path string )error {if !ST_ExtensionPatternRe .MatchString (_b .ExtensionAttr ){return _ef .Errorf ("\u0025s\u002f\u006d.\u0045\u0078\u0074\u0065n\u0073\u0069\u006fn\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074 m\u0061\u0074\u0063h\u0020\u0027%\u0073\u0027\u0020\u0028\u0068\u0061v\u0065\u0020%\u0076\u0029",path ,ST_ExtensionPatternRe ,_b .ExtensionAttr );};if !ST_ContentTypePatternRe .MatchString (_b .ContentTypeAttr ){return _ef .Errorf ("\u0025\u0073/\u006d\u002e\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0054\u0079\u0070\u0065\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u006d\u0061\u0074\u0063\u0068\u0020\u0027\u0025\u0073\u0027\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029",path ,ST_ContentTypePatternRe ,_b .ContentTypeAttr );};return nil ;};func NewTypes ()*Types {_dd :=&Types {};_dd .CT_Types =*NewCT_Types ();return _dd };

// ValidateWithPath validates the CT_Override and its children, prefixing error messages with path
func (_eee *CT_Override )ValidateWithPath (path string )error {if !ST_ContentTypePatternRe .MatchString (_eee .ContentTypeAttr ){return _ef .Errorf ("\u0025\u0073/\u006d\u002e\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0054\u0079\u0070\u0065\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u006d\u0061\u0074\u0063\u0068\u0020\u0027\u0025\u0073\u0027\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029",path ,ST_ContentTypePatternRe ,_eee .ContentTypeAttr );};return nil ;};func (_af *CT_Override )MarshalXML (e *_ab .Encoder ,start _ab .StartElement )error {start .Attr =append (start .Attr ,_ab .Attr {Name :_ab .Name {Local :"C\u006f\u006e\u0074\u0065\u006e\u0074\u0054\u0079\u0070\u0065"},Value :_ef .Sprintf ("\u0025\u0076",_af .ContentTypeAttr )});start .Attr =append (start .Attr ,_ab .Attr {Name :_ab .Name {Local :"\u0050\u0061\u0072\u0074\u004e\u0061\u006d\u0065"},Value :_ef .Sprintf ("\u0025\u0076",_af .PartNameAttr )});e .EncodeToken (start );e .EncodeToken (_ab .EndElement {Name :start .Name });return nil ;};func (_cba *CT_Override )UnmarshalXML (d *_ab .Decoder ,start _ab .StartElement )error {_cba .ContentTypeAttr ="\u0061p\u0070l\u0069\u0063\u0061\u0074\u0069\u006f\u006e\u002f\u0078\u006d\u006c";for _ ,_bca :=range start .Attr {if _bca .Name .Local =="C\u006f\u006e\u0074\u0065\u006e\u0074\u0054\u0079\u0070\u0065"{_dc ,_abe :=_bca .Value ,error (nil );if _abe !=nil {return _abe ;};_cba .ContentTypeAttr =_dc ;continue ;};if _bca .Name .Local =="\u0050\u0061\u0072\u0074\u004e\u0061\u006d\u0065"{_ac ,_g :=_bca .Value ,error (nil );if _g !=nil {return _g ;};_cba .PartNameAttr =_ac ;continue ;};};for {_adc ,_ba :=d .Token ();if _ba !=nil {return _ef .Errorf ("\u0070\u0061\u0072si\u006e\u0067\u0020\u0043\u0054\u005f\u004f\u0076\u0065\u0072\u0072\u0069\u0064\u0065\u003a\u0020\u0025\u0073",_ba );};if _ce ,_gf :=_adc .(_ab .EndElement );_gf &&_ce .Name ==start .Name {break ;};};return nil ;};func (_dg *CT_Types )MarshalXML (e *_ab .Encoder ,start _ab .StartElement )error {e .EncodeToken (start );if _dg .Default !=nil {_bb :=_ab .StartElement {Name :_ab .Name {Local :"\u0044e\u0066\u0061\u0075\u006c\u0074"}};for _ ,_egb :=range _dg .Default {e .EncodeElement (_egb ,_bb );};};if _dg .Override !=nil {_eea :=_ab .StartElement {Name :_ab .Name {Local :"\u004f\u0076\u0065\u0072\u0072\u0069\u0064\u0065"}};for _ ,_cad :=range _dg .Override {e .EncodeElement (_cad ,_eea );};};e .EncodeToken (_ab .EndElement {Name :start .Name });return nil ;};func (_dgfb *Types )UnmarshalXML (d *_ab .Decoder ,start _ab .StartElement )error {_dgfb .CT_Types =*NewCT_Types ();_cadc :for {_fec ,_bd :=d .Token ();if _bd !=nil {return _bd ;};switch _gfda :=_fec .(type ){case _ab .StartElement :switch _gfda .Name {case _ab .Name {Space :"ht\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0070\u0061\u0063\u006b\u0061\u0067\u0065\u002f\u00320\u00306\u002f\u0063\u006f\u006e\u0074\u0065\u006e\u0074-\u0074y\u0070\u0065s",Local :"\u0044e\u0066\u0061\u0075\u006c\u0074"}:_bcgc :=NewDefault ();if _cgg :=d .DecodeElement (_bcgc ,&_gfda );_cgg !=nil {return _cgg ;};_dgfb .Default =append (_dgfb .Default ,_bcgc );case _ab .Name {Space :"ht\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0070\u0061\u0063\u006b\u0061\u0067\u0065\u002f\u00320\u00306\u002f\u0063\u006f\u006e\u0074\u0065\u006e\u0074-\u0074y\u0070\u0065s",Local :"\u004f\u0076\u0065\u0072\u0072\u0069\u0064\u0065"}:_cfa :=NewOverride ();if _bed :=d .DecodeElement (_cfa ,&_gfda );_bed !=nil {return _bed ;};_dgfb .Override =append (_dgfb .Override ,_cfa );default:_f .Log .Debug ("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006fn \u0054\u0079\u0070e\u0073 \u0025\u0076",_gfda .Name );if _ddd :=d .Skip ();_ddd !=nil {return _ddd ;};};case _ab .EndElement :break _cadc ;case _ab .CharData :};};return nil ;};func NewCT_Default ()*CT_Default {_cb :=&CT_Default {};_cb .ExtensionAttr ="\u0078\u006d\u006c";_cb .ContentTypeAttr ="\u0061p\u0070l\u0069\u0063\u0061\u0074\u0069\u006f\u006e\u002f\u0078\u006d\u006c";return _cb ;};func (_ad *CT_Default )MarshalXML (e *_ab .Encoder ,start _ab .StartElement )error {start .Attr =append (start .Attr ,_ab .Attr {Name :_ab .Name {Local :"\u0045x\u0074\u0065\u006e\u0073\u0069\u006fn"},Value :_ef .Sprintf ("\u0025\u0076",_ad .ExtensionAttr )});start .Attr =append (start .Attr ,_ab .Attr {Name :_ab .Name {Local :"C\u006f\u006e\u0074\u0065\u006e\u0074\u0054\u0079\u0070\u0065"},Value :_ef .Sprintf ("\u0025\u0076",_ad .ContentTypeAttr )});e .EncodeToken (start );e .EncodeToken (_ab .EndElement {Name :start .Name });return nil ;};type CT_Default struct{ExtensionAttr string ;ContentTypeAttr string ;};func (_dec *Types )MarshalXML (e *_ab .Encoder ,start _ab .StartElement )error {start .Attr =append (start .Attr ,_ab .Attr {Name :_ab .Name {Local :"\u0078\u006d\u006cn\u0073"},Value :"ht\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0070\u0061\u0063\u006b\u0061\u0067\u0065\u002f\u00320\u00306\u002f\u0063\u006f\u006e\u0074\u0065\u006e\u0074-\u0074y\u0070\u0065s"});start .Attr =append (start .Attr ,_ab .Attr {Name :_ab .Name {Local :"\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"},Value :"\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"});start .Name .Local ="\u0054\u0079\u0070e\u0073";return _dec .CT_Types .MarshalXML (e ,start );};

// ValidateWithPath validates the Types and its children, prefixing error messages with path
func (_feaa *Types )ValidateWithPath (path string )error {if _dcc :=_feaa .CT_Types .ValidateWithPath (path );_dcc !=nil {return _dcc ;};return nil ;};var ST_ContentTypePatternRe =_e .MustCompile (ST_ContentTypePattern );const ST_ContentTypePattern ="\u005e\\\u0070{\u004c\u0061\u0074\u0069\u006e\u007d\u002b\u002f\u002e\u002a\u0024";

// ValidateWithPath validates the Override and its children, prefixing error messages with path
func (_deed *Override )ValidateWithPath (path string )error {if _fcf :=_deed .CT_Override .ValidateWithPath (path );_fcf !=nil {return _fcf ;};return nil ;};type CT_Types struct{Default []*Default ;Override []*Override ;};func NewCT_Override ()*CT_Override {_be :=&CT_Override {};_be .ContentTypeAttr ="\u0061p\u0070l\u0069\u0063\u0061\u0074\u0069\u006f\u006e\u002f\u0078\u006d\u006c";return _be ;};func (_eeef *CT_Types )UnmarshalXML (d *_ab .Decoder ,start _ab .StartElement )error {_eb :for {_bbf ,_dga :=d .Token ();if _dga !=nil {return _dga ;};switch _acf :=_bbf .(type ){case _ab .StartElement :switch _acf .Name {case _ab .Name {Space :"ht\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0070\u0061\u0063\u006b\u0061\u0067\u0065\u002f\u00320\u00306\u002f\u0063\u006f\u006e\u0074\u0065\u006e\u0074-\u0074y\u0070\u0065s",Local :"\u0044e\u0066\u0061\u0075\u006c\u0074"}:_bec :=NewDefault ();if _afe :=d .DecodeElement (_bec ,&_acf );_afe !=nil {return _afe ;};_eeef .Default =append (_eeef .Default ,_bec );case _ab .Name {Space :"ht\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0070\u0061\u0063\u006b\u0061\u0067\u0065\u002f\u00320\u00306\u002f\u0063\u006f\u006e\u0074\u0065\u006e\u0074-\u0074y\u0070\u0065s",Local :"\u004f\u0076\u0065\u0072\u0072\u0069\u0064\u0065"}:_gfb :=NewOverride ();if _ada :=d .DecodeElement (_gfb ,&_acf );_ada !=nil {return _ada ;};_eeef .Override =append (_eeef .Override ,_gfb );default:_f .Log .Debug ("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0054\u0079\u0070\u0065\u0073\u0020\u0025\u0076",_acf .Name );if _cd :=d .Skip ();_cd !=nil {return _cd ;};};case _ab .EndElement :break _eb ;case _ab .CharData :};};return nil ;};type Override struct{CT_Override };

// Validate validates the Types and its children
func (_bee *Types )Validate ()error {return _bee .ValidateWithPath ("\u0054\u0079\u0070e\u0073")};func NewOverride ()*Override {_becc :=&Override {};_becc .CT_Override =*NewCT_Override ();return _becc ;};

// Validate validates the CT_Default and its children
func (_febc *CT_Default )Validate ()error {return _febc .ValidateWithPath ("\u0043\u0054\u005f\u0044\u0065\u0066\u0061\u0075\u006c\u0074");};var ST_ExtensionPatternRe =_e .MustCompile (ST_ExtensionPattern );

// Validate validates the CT_Override and its children
func (_ee *CT_Override )Validate ()error {return _ee .ValidateWithPath ("C\u0054\u005f\u004f\u0076\u0065\u0072\u0072\u0069\u0064\u0065");};const ST_ExtensionPattern ="\u0028\u005b\u0021\u0024\u0026\u0027\\\u0028\u005c\u0029\u005c\u002a\\\u002b\u002c\u003a\u003d\u005d\u007c(\u0025\u005b\u0030\u002d\u0039a\u002d\u0066\u0041\u002d\u0046\u005d\u005b\u0030\u002d\u0039\u0061\u002df\u0041\u002d\u0046\u005d\u0029\u007c\u005b\u003a\u0040\u005d\u007c\u005b\u0061\u002d\u007aA\u002d\u005a\u0030\u002d\u0039\u005c\u002d\u005f~\u005d\u0029\u002b";func (_de *Default )MarshalXML (e *_ab .Encoder ,start _ab .StartElement )error {return _de .CT_Default .MarshalXML (e ,start );};func init (){_c .RegisterConstructor ("ht\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0070\u0061\u0063\u006b\u0061\u0067\u0065\u002f\u00320\u00306\u002f\u0063\u006f\u006e\u0074\u0065\u006e\u0074-\u0074y\u0070\u0065s","\u0043\u0054\u005f\u0054\u0079\u0070\u0065\u0073",NewCT_Types );_c .RegisterConstructor ("ht\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0070\u0061\u0063\u006b\u0061\u0067\u0065\u002f\u00320\u00306\u002f\u0063\u006f\u006e\u0074\u0065\u006e\u0074-\u0074y\u0070\u0065s","\u0043\u0054\u005f\u0044\u0065\u0066\u0061\u0075\u006c\u0074",NewCT_Default );_c .RegisterConstructor ("ht\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0070\u0061\u0063\u006b\u0061\u0067\u0065\u002f\u00320\u00306\u002f\u0063\u006f\u006e\u0074\u0065\u006e\u0074-\u0074y\u0070\u0065s","C\u0054\u005f\u004f\u0076\u0065\u0072\u0072\u0069\u0064\u0065",NewCT_Override );_c .RegisterConstructor ("ht\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0070\u0061\u0063\u006b\u0061\u0067\u0065\u002f\u00320\u00306\u002f\u0063\u006f\u006e\u0074\u0065\u006e\u0074-\u0074y\u0070\u0065s","\u0054\u0079\u0070e\u0073",NewTypes );_c .RegisterConstructor ("ht\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0070\u0061\u0063\u006b\u0061\u0067\u0065\u002f\u00320\u00306\u002f\u0063\u006f\u006e\u0074\u0065\u006e\u0074-\u0074y\u0070\u0065s","\u0044e\u0066\u0061\u0075\u006c\u0074",NewDefault );_c .RegisterConstructor ("ht\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0070\u0061\u0063\u006b\u0061\u0067\u0065\u002f\u00320\u00306\u002f\u0063\u006f\u006e\u0074\u0065\u006e\u0074-\u0074y\u0070\u0065s","\u004f\u0076\u0065\u0072\u0072\u0069\u0064\u0065",NewOverride );};