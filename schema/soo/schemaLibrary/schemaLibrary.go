//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package schemaLibrary ;import (_f "encoding/xml";_ea "fmt";_g "github.com/unidoc/unioffice";);

// Validate validates the SchemaLibrary and its children
func (_ab *SchemaLibrary )Validate ()error {return _ab .ValidateWithPath ("\u0053\u0063\u0068\u0065\u006d\u0061\u004c\u0069\u0062\u0072\u0061\u0072\u0079");};func (_gb *CT_Schema )UnmarshalXML (d *_f .Decoder ,start _f .StartElement )error {for _ ,_c :=range start .Attr {if _c .Name .Local =="\u0075\u0072\u0069"{_ge ,_ca :=_c .Value ,error (nil );if _ca !=nil {return _ca ;};_gb .UriAttr =&_ge ;continue ;};if _c .Name .Local =="\u006d\u0061n\u0069\u0066\u0065s\u0074\u004c\u006f\u0063\u0061\u0074\u0069\u006f\u006e"{_cg ,_ef :=_c .Value ,error (nil );if _ef !=nil {return _ef ;};_gb .ManifestLocationAttr =&_cg ;continue ;};if _c .Name .Local =="\u0073\u0063\u0068\u0065\u006d\u0061\u004c\u006f\u0063a\u0074\u0069\u006f\u006e"{_ee ,_b :=_c .Value ,error (nil );if _b !=nil {return _b ;};_gb .SchemaLocationAttr =&_ee ;continue ;};if _c .Name .Local =="\u0073\u0063\u0068\u0065\u006d\u0061\u004c\u0061\u006eg\u0075\u0061\u0067\u0065"{_cgd ,_fa :=_c .Value ,error (nil );if _fa !=nil {return _fa ;};_gb .SchemaLanguageAttr =&_cgd ;continue ;};};for {_gbg ,_ag :=d .Token ();if _ag !=nil {return _ea .Errorf ("p\u0061\u0072\u0073\u0069ng\u0020C\u0054\u005f\u0053\u0063\u0068e\u006d\u0061\u003a\u0020\u0025\u0073",_ag );};if _cb ,_gd :=_gbg .(_f .EndElement );_gd &&_cb .Name ==start .Name {break ;};};return nil ;};func NewCT_Schema ()*CT_Schema {_a :=&CT_Schema {};return _a };

// Validate validates the CT_Schema and its children
func (_d *CT_Schema )Validate ()error {return _d .ValidateWithPath ("\u0043T\u005f\u0053\u0063\u0068\u0065\u006da");};

// ValidateWithPath validates the CT_Schema and its children, prefixing error messages with path
func (_fab *CT_Schema )ValidateWithPath (path string )error {return nil };func NewCT_SchemaLibrary ()*CT_SchemaLibrary {_gfb :=&CT_SchemaLibrary {};return _gfb };type CT_Schema struct{UriAttr *string ;ManifestLocationAttr *string ;SchemaLocationAttr *string ;SchemaLanguageAttr *string ;};

// Validate validates the CT_SchemaLibrary and its children
func (_bd *CT_SchemaLibrary )Validate ()error {return _bd .ValidateWithPath ("\u0043\u0054_\u0053\u0063\u0068e\u006d\u0061\u004c\u0069\u0062\u0072\u0061\u0072\u0079");};type SchemaLibrary struct{CT_SchemaLibrary };func (_gf *CT_Schema )MarshalXML (e *_f .Encoder ,start _f .StartElement )error {if _gf .UriAttr !=nil {start .Attr =append (start .Attr ,_f .Attr {Name :_f .Name {Local :"\u006d\u0061\u003a\u0075\u0072\u0069"},Value :_ea .Sprintf ("\u0025\u0076",*_gf .UriAttr )});};if _gf .ManifestLocationAttr !=nil {start .Attr =append (start .Attr ,_f .Attr {Name :_f .Name {Local :"\u006d\u0061\u003a\u006dan\u0069\u0066\u0065\u0073\u0074\u004c\u006f\u0063\u0061\u0074\u0069\u006f\u006e"},Value :_ea .Sprintf ("\u0025\u0076",*_gf .ManifestLocationAttr )});};if _gf .SchemaLocationAttr !=nil {start .Attr =append (start .Attr ,_f .Attr {Name :_f .Name {Local :"\u006d\u0061\u003a\u0073\u0063\u0068\u0065\u006d\u0061\u004c\u006f\u0063a\u0074\u0069\u006f\u006e"},Value :_ea .Sprintf ("\u0025\u0076",*_gf .SchemaLocationAttr )});};if _gf .SchemaLanguageAttr !=nil {start .Attr =append (start .Attr ,_f .Attr {Name :_f .Name {Local :"\u006d\u0061\u003a\u0073\u0063\u0068\u0065\u006d\u0061\u004c\u0061\u006eg\u0075\u0061\u0067\u0065"},Value :_ea .Sprintf ("\u0025\u0076",*_gf .SchemaLanguageAttr )});};e .EncodeToken (start );e .EncodeToken (_f .EndElement {Name :start .Name });return nil ;};func (_db *SchemaLibrary )MarshalXML (e *_f .Encoder ,start _f .StartElement )error {start .Attr =append (start .Attr ,_f .Attr {Name :_f .Name {Local :"\u0078\u006d\u006cn\u0073"},Value :"\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0063\u0068\u0065\u006da\u004c\u0069\u0062\u0072\u0061\u0072\u0079\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"});start .Attr =append (start .Attr ,_f .Attr {Name :_f .Name {Local :"\u0078\u006d\u006c\u006e\u0073\u003a\u006d\u0061"},Value :"\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0063\u0068\u0065\u006da\u004c\u0069\u0062\u0072\u0061\u0072\u0079\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"});start .Attr =append (start .Attr ,_f .Attr {Name :_f .Name {Local :"\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"},Value :"\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"});start .Name .Local ="\u006d\u0061:\u0073\u0063\u0068e\u006d\u0061\u004c\u0069\u0062\u0072\u0061\u0072\u0079";return _db .CT_SchemaLibrary .MarshalXML (e ,start );};func (_gef *CT_SchemaLibrary )UnmarshalXML (d *_f .Decoder ,start _f .StartElement )error {_gda :for {_fg ,_cgc :=d .Token ();if _cgc !=nil {return _cgc ;};switch _aa :=_fg .(type ){case _f .StartElement :switch _aa .Name {case _f .Name {Space :"\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0063\u0068\u0065\u006da\u004c\u0069\u0062\u0072\u0061\u0072\u0079\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e",Local :"\u0073\u0063\u0068\u0065\u006d\u0061"}:_cbe :=NewCT_Schema ();if _gc :=d .DecodeElement (_cbe ,&_aa );_gc !=nil {return _gc ;};_gef .Schema =append (_gef .Schema ,_cbe );default:_g .Log ("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0053\u0063\u0068\u0065\u006d\u0061\u004c\u0069\u0062\u0072\u0061\u0072\u0079\u0020\u0025v",_aa .Name );if _ae :=d .Skip ();_ae !=nil {return _ae ;};};case _f .EndElement :break _gda ;case _f .CharData :};};return nil ;};type CT_SchemaLibrary struct{Schema []*CT_Schema ;};func (_bdg *SchemaLibrary )UnmarshalXML (d *_f .Decoder ,start _f .StartElement )error {_bdg .CT_SchemaLibrary =*NewCT_SchemaLibrary ();_gcc :for {_gg ,_gdf :=d .Token ();if _gdf !=nil {return _gdf ;};switch _eaf :=_gg .(type ){case _f .StartElement :switch _eaf .Name {case _f .Name {Space :"\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0063\u0068\u0065\u006da\u004c\u0069\u0062\u0072\u0061\u0072\u0079\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e",Local :"\u0073\u0063\u0068\u0065\u006d\u0061"}:_gfd :=NewCT_Schema ();if _fd :=d .DecodeElement (_gfd ,&_eaf );_fd !=nil {return _fd ;};_bdg .Schema =append (_bdg .Schema ,_gfd );default:_g .Log ("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0053\u0063\u0068\u0065m\u0061\u004c\u0069\u0062\u0072\u0061\u0072\u0079 \u0025\u0076",_eaf .Name );if _dd :=d .Skip ();_dd !=nil {return _dd ;};};case _f .EndElement :break _gcc ;case _f .CharData :};};return nil ;};

// ValidateWithPath validates the CT_SchemaLibrary and its children, prefixing error messages with path
func (_agc *CT_SchemaLibrary )ValidateWithPath (path string )error {for _ged ,_gfg :=range _agc .Schema {if _bc :=_gfg .ValidateWithPath (_ea .Sprintf ("\u0025\u0073\u002f\u0053\u0063\u0068\u0065\u006d\u0061\u005b\u0025\u0064\u005d",path ,_ged ));_bc !=nil {return _bc ;};};return nil ;};func (_bg *CT_SchemaLibrary )MarshalXML (e *_f .Encoder ,start _f .StartElement )error {e .EncodeToken (start );if _bg .Schema !=nil {_bb :=_f .StartElement {Name :_f .Name {Local :"\u006da\u003a\u0073\u0063\u0068\u0065\u006da"}};for _ ,_gdd :=range _bg .Schema {e .EncodeElement (_gdd ,_bb );};};e .EncodeToken (_f .EndElement {Name :start .Name });return nil ;};

// ValidateWithPath validates the SchemaLibrary and its children, prefixing error messages with path
func (_af *SchemaLibrary )ValidateWithPath (path string )error {if _fga :=_af .CT_SchemaLibrary .ValidateWithPath (path );_fga !=nil {return _fga ;};return nil ;};func NewSchemaLibrary ()*SchemaLibrary {_cgf :=&SchemaLibrary {};_cgf .CT_SchemaLibrary =*NewCT_SchemaLibrary ();return _cgf ;};func init (){_g .RegisterConstructor ("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0063\u0068\u0065\u006da\u004c\u0069\u0062\u0072\u0061\u0072\u0079\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e","\u0043T\u005f\u0053\u0063\u0068\u0065\u006da",NewCT_Schema );_g .RegisterConstructor ("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0063\u0068\u0065\u006da\u004c\u0069\u0062\u0072\u0061\u0072\u0079\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e","\u0043\u0054_\u0053\u0063\u0068e\u006d\u0061\u004c\u0069\u0062\u0072\u0061\u0072\u0079",NewCT_SchemaLibrary );_g .RegisterConstructor ("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0063\u0068\u0065\u006da\u004c\u0069\u0062\u0072\u0061\u0072\u0079\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e","\u0073\u0063\u0068\u0065\u006d\u0061\u004c\u0069\u0062\u0072\u0061\u0072\u0079",NewSchemaLibrary );};