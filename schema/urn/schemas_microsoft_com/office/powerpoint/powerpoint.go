//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package powerpoint ;import (_de "encoding/xml";_dd "fmt";_a "github.com/unidoc/unioffice";);func (_ff *CT_Rel )MarshalXML (e *_de .Encoder ,start _de .StartElement )error {if _ff .IdAttr !=nil {start .Attr =append (start .Attr ,_de .Attr {Name :_de .Name {Local :"\u0069\u0064"},Value :_dd .Sprintf ("\u0025\u0076",*_ff .IdAttr )});};e .EncodeToken (start );e .EncodeToken (_de .EndElement {Name :start .Name });return nil ;};

// ValidateWithPath validates the CT_Rel and its children, prefixing error messages with path
func (_bf *CT_Rel )ValidateWithPath (path string )error {return nil };

// ValidateWithPath validates the Iscomment and its children, prefixing error messages with path
func (_efc *Iscomment )ValidateWithPath (path string )error {if _gb :=_efc .CT_Empty .ValidateWithPath (path );_gb !=nil {return _gb ;};return nil ;};type Textdata struct{CT_Rel };func NewCT_Rel ()*CT_Rel {_c :=&CT_Rel {};return _c };func (_fg *Textdata )UnmarshalXML (d *_de .Decoder ,start _de .StartElement )error {_fg .CT_Rel =*NewCT_Rel ();for _ ,_bb :=range start .Attr {if _bb .Name .Local =="\u0069\u0064"{_ab ,_ddc :=_bb .Value ,error (nil );if _ddc !=nil {return _ddc ;};_fg .IdAttr =&_ab ;continue ;};};for {_ddd ,_agb :=d .Token ();if _agb !=nil {return _dd .Errorf ("p\u0061r\u0073\u0069\u006e\u0067\u0020\u0054\u0065\u0078t\u0064\u0061\u0074\u0061: \u0025\u0073",_agb );};if _ebf ,_gaa :=_ddd .(_de .EndElement );_gaa &&_ebf .Name ==start .Name {break ;};};return nil ;};func NewCT_Empty ()*CT_Empty {_f :=&CT_Empty {};return _f };func NewTextdata ()*Textdata {_ag :=&Textdata {};_ag .CT_Rel =*NewCT_Rel ();return _ag };

// Validate validates the CT_Rel and its children
func (_gd *CT_Rel )Validate ()error {return _gd .ValidateWithPath ("\u0043\u0054\u005f\u0052\u0065\u006c");};func (_cda *Iscomment )MarshalXML (e *_de .Encoder ,start _de .StartElement )error {start .Attr =append (start .Attr ,_de .Attr {Name :_de .Name {Local :"\u0078\u006d\u006cn\u0073"},Value :"\u0075\u0072\u006e\u003a\u0073\u0063\u0068e\u006d\u0061\u0073-\u006d\u0069\u0063\u0072o\u0073\u006f\u0066\u0074\u002d\u0063\u006f\u006d\u003a\u006f\u0066\u0066\u0069\u0063\u0065\u003a\u0070\u006f\u0077\u0065\u0072\u0070\u006f\u0069\u006e\u0074"});start .Attr =append (start .Attr ,_de .Attr {Name :_de .Name {Local :"\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"},Value :"\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"});start .Name .Local ="\u0069s\u0063\u006f\u006d\u006d\u0065\u006et";return _cda .CT_Empty .MarshalXML (e ,start );};func NewIscomment ()*Iscomment {_ea :=&Iscomment {};_ea .CT_Empty =*NewCT_Empty ();return _ea };

// Validate validates the Iscomment and its children
func (_ge *Iscomment )Validate ()error {return _ge .ValidateWithPath ("\u0049s\u0063\u006f\u006d\u006d\u0065\u006et");};type CT_Rel struct{IdAttr *string ;};

// ValidateWithPath validates the CT_Empty and its children, prefixing error messages with path
func (_ac *CT_Empty )ValidateWithPath (path string )error {return nil };func (_eac *Iscomment )UnmarshalXML (d *_de .Decoder ,start _de .StartElement )error {_eac .CT_Empty =*NewCT_Empty ();for {_gdf ,_gdg :=d .Token ();if _gdg !=nil {return _dd .Errorf ("p\u0061\u0072\u0073\u0069ng\u0020I\u0073\u0063\u006f\u006d\u006de\u006e\u0074\u003a\u0020\u0025\u0073",_gdg );};if _gff ,_gfd :=_gdf .(_de .EndElement );_gfd &&_gff .Name ==start .Name {break ;};};return nil ;};type CT_Empty struct{};type Iscomment struct{CT_Empty };func (_e *CT_Rel )UnmarshalXML (d *_de .Decoder ,start _de .StartElement )error {for _ ,_cd :=range start .Attr {if _cd .Name .Local =="\u0069\u0064"{_eb ,_ga :=_cd .Value ,error (nil );if _ga !=nil {return _ga ;};_e .IdAttr =&_eb ;continue ;};};for {_ef ,_efe :=d .Token ();if _efe !=nil {return _dd .Errorf ("\u0070a\u0072s\u0069\u006e\u0067\u0020\u0043T\u005f\u0052e\u006c\u003a\u0020\u0025\u0073",_efe );};if _gge ,_eba :=_ef .(_de .EndElement );_eba &&_gge .Name ==start .Name {break ;};};return nil ;};func (_aa *CT_Empty )MarshalXML (e *_de .Encoder ,start _de .StartElement )error {e .EncodeToken (start );e .EncodeToken (_de .EndElement {Name :start .Name });return nil ;};

// Validate validates the Textdata and its children
func (_gc *Textdata )Validate ()error {return _gc .ValidateWithPath ("\u0054\u0065\u0078\u0074\u0064\u0061\u0074\u0061");};func (_ad *CT_Empty )UnmarshalXML (d *_de .Decoder ,start _de .StartElement )error {for {_g ,_gg :=d .Token ();if _gg !=nil {return _dd .Errorf ("p\u0061r\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005fE\u006d\u0070\u0074\u0079: \u0025\u0073",_gg );};if _da ,_b :=_g .(_de .EndElement );_b &&_da .Name ==start .Name {break ;};};return nil ;};func (_ec *Textdata )MarshalXML (e *_de .Encoder ,start _de .StartElement )error {start .Attr =append (start .Attr ,_de .Attr {Name :_de .Name {Local :"\u0078\u006d\u006cn\u0073"},Value :"\u0075\u0072\u006e\u003a\u0073\u0063\u0068e\u006d\u0061\u0073-\u006d\u0069\u0063\u0072o\u0073\u006f\u0066\u0074\u002d\u0063\u006f\u006d\u003a\u006f\u0066\u0066\u0069\u0063\u0065\u003a\u0070\u006f\u0077\u0065\u0072\u0070\u006f\u0069\u006e\u0074"});start .Attr =append (start .Attr ,_de .Attr {Name :_de .Name {Local :"\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"},Value :"\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"});start .Name .Local ="\u0074\u0065\u0078\u0074\u0064\u0061\u0074\u0061";return _ec .CT_Rel .MarshalXML (e ,start );};

// Validate validates the CT_Empty and its children
func (_gf *CT_Empty )Validate ()error {return _gf .ValidateWithPath ("\u0043\u0054\u005f\u0045\u006d\u0070\u0074\u0079");};

// ValidateWithPath validates the Textdata and its children, prefixing error messages with path
func (_efca *Textdata )ValidateWithPath (path string )error {if _eg :=_efca .CT_Rel .ValidateWithPath (path );_eg !=nil {return _eg ;};return nil ;};func init (){_a .RegisterConstructor ("\u0075\u0072\u006e\u003a\u0073\u0063\u0068e\u006d\u0061\u0073-\u006d\u0069\u0063\u0072o\u0073\u006f\u0066\u0074\u002d\u0063\u006f\u006d\u003a\u006f\u0066\u0066\u0069\u0063\u0065\u003a\u0070\u006f\u0077\u0065\u0072\u0070\u006f\u0069\u006e\u0074","\u0043\u0054\u005f\u0045\u006d\u0070\u0074\u0079",NewCT_Empty );_a .RegisterConstructor ("\u0075\u0072\u006e\u003a\u0073\u0063\u0068e\u006d\u0061\u0073-\u006d\u0069\u0063\u0072o\u0073\u006f\u0066\u0074\u002d\u0063\u006f\u006d\u003a\u006f\u0066\u0066\u0069\u0063\u0065\u003a\u0070\u006f\u0077\u0065\u0072\u0070\u006f\u0069\u006e\u0074","\u0043\u0054\u005f\u0052\u0065\u006c",NewCT_Rel );_a .RegisterConstructor ("\u0075\u0072\u006e\u003a\u0073\u0063\u0068e\u006d\u0061\u0073-\u006d\u0069\u0063\u0072o\u0073\u006f\u0066\u0074\u002d\u0063\u006f\u006d\u003a\u006f\u0066\u0066\u0069\u0063\u0065\u003a\u0070\u006f\u0077\u0065\u0072\u0070\u006f\u0069\u006e\u0074","\u0069s\u0063\u006f\u006d\u006d\u0065\u006et",NewIscomment );_a .RegisterConstructor ("\u0075\u0072\u006e\u003a\u0073\u0063\u0068e\u006d\u0061\u0073-\u006d\u0069\u0063\u0072o\u0073\u006f\u0066\u0074\u002d\u0063\u006f\u006d\u003a\u006f\u0066\u0066\u0069\u0063\u0065\u003a\u0070\u006f\u0077\u0065\u0072\u0070\u006f\u0069\u006e\u0074","\u0074\u0065\u0078\u0074\u0064\u0061\u0074\u0061",NewTextdata );};