//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package powerpoint ;import (_f "encoding/xml";_e "fmt";_a "github.com/unidoc/unioffice";);func (_eb *CT_Empty )UnmarshalXML (d *_f .Decoder ,start _f .StartElement )error {for {_dc ,_b :=d .Token ();if _b !=nil {return _e .Errorf ("p\u0061r\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005fE\u006d\u0070\u0074\u0079: \u0025\u0073",_b );};if _bg ,_fa :=_dc .(_f .EndElement );_fa &&_bg .Name ==start .Name {break ;};};return nil ;};

// Validate validates the Iscomment and its children
func (_bdb *Iscomment )Validate ()error {return _bdb .ValidateWithPath ("\u0049s\u0063\u006f\u006d\u006d\u0065\u006et");};func (_dab *Textdata )UnmarshalXML (d *_f .Decoder ,start _f .StartElement )error {_dab .CT_Rel =*NewCT_Rel ();for _ ,_bb :=range start .Attr {if _bb .Name .Local =="\u0069\u0064"{_ebf ,_db :=_bb .Value ,error (nil );if _db !=nil {return _db ;};_dab .IdAttr =&_ebf ;continue ;};};for {_gb ,_cc :=d .Token ();if _cc !=nil {return _e .Errorf ("p\u0061r\u0073\u0069\u006e\u0067\u0020\u0054\u0065\u0078t\u0064\u0061\u0074\u0061: \u0025\u0073",_cc );};if _ba ,_eae :=_gb .(_f .EndElement );_eae &&_ba .Name ==start .Name {break ;};};return nil ;};

// Validate validates the CT_Rel and its children
func (_ad *CT_Rel )Validate ()error {return _ad .ValidateWithPath ("\u0043\u0054\u005f\u0052\u0065\u006c");};func (_ab *CT_Empty )MarshalXML (e *_f .Encoder ,start _f .StartElement )error {e .EncodeToken (start );e .EncodeToken (_f .EndElement {Name :start .Name });return nil ;};func NewCT_Empty ()*CT_Empty {_d :=&CT_Empty {};return _d };func NewCT_Rel ()*CT_Rel {_be :=&CT_Rel {};return _be };func (_bc *Iscomment )UnmarshalXML (d *_f .Decoder ,start _f .StartElement )error {_bc .CT_Empty =*NewCT_Empty ();for {_bd ,_cdd :=d .Token ();if _cdd !=nil {return _e .Errorf ("p\u0061\u0072\u0073\u0069ng\u0020I\u0073\u0063\u006f\u006d\u006de\u006e\u0074\u003a\u0020\u0025\u0073",_cdd );};if _ac ,_ea :=_bd .(_f .EndElement );_ea &&_ac .Name ==start .Name {break ;};};return nil ;};func (_ca *CT_Rel )MarshalXML (e *_f .Encoder ,start _f .StartElement )error {if _ca .IdAttr !=nil {start .Attr =append (start .Attr ,_f .Attr {Name :_f .Name {Local :"\u0069\u0064"},Value :_e .Sprintf ("\u0025\u0076",*_ca .IdAttr )});};e .EncodeToken (start );e .EncodeToken (_f .EndElement {Name :start .Name });return nil ;};type CT_Empty struct{};

// Validate validates the CT_Empty and its children
func (_eg *CT_Empty )Validate ()error {return _eg .ValidateWithPath ("\u0043\u0054\u005f\u0045\u006d\u0070\u0074\u0079");};type CT_Rel struct{IdAttr *string ;};type Textdata struct{CT_Rel };type Iscomment struct{CT_Empty };

// Validate validates the Textdata and its children
func (_ff *Textdata )Validate ()error {return _ff .ValidateWithPath ("\u0054\u0065\u0078\u0074\u0064\u0061\u0074\u0061");};func NewIscomment ()*Iscomment {_g :=&Iscomment {};_g .CT_Empty =*NewCT_Empty ();return _g };

// ValidateWithPath validates the CT_Rel and its children, prefixing error messages with path
func (_adg *CT_Rel )ValidateWithPath (path string )error {return nil };func (_dg *Textdata )MarshalXML (e *_f .Encoder ,start _f .StartElement )error {start .Attr =append (start .Attr ,_f .Attr {Name :_f .Name {Local :"\u0078\u006d\u006cn\u0073"},Value :"\u0075\u0072\u006e\u003a\u0073\u0063\u0068e\u006d\u0061\u0073-\u006d\u0069\u0063\u0072o\u0073\u006f\u0066\u0074\u002d\u0063\u006f\u006d\u003a\u006f\u0066\u0066\u0069\u0063\u0065\u003a\u0070\u006f\u0077\u0065\u0072\u0070\u006f\u0069\u006e\u0074"});start .Attr =append (start .Attr ,_f .Attr {Name :_f .Name {Local :"\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"},Value :"\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"});start .Name .Local ="\u0074\u0065\u0078\u0074\u0064\u0061\u0074\u0061";return _dg .CT_Rel .MarshalXML (e ,start );};

// ValidateWithPath validates the Textdata and its children, prefixing error messages with path
func (_bgac *Textdata )ValidateWithPath (path string )error {if _gc :=_bgac .CT_Rel .ValidateWithPath (path );_gc !=nil {return _gc ;};return nil ;};func (_cf *CT_Rel )UnmarshalXML (d *_f .Decoder ,start _f .StartElement )error {for _ ,_bga :=range start .Attr {if _bga .Name .Local =="\u0069\u0064"{_ce ,_ag :=_bga .Value ,error (nil );if _ag !=nil {return _ag ;};_cf .IdAttr =&_ce ;continue ;};};for {_ed ,_da :=d .Token ();if _da !=nil {return _e .Errorf ("\u0070a\u0072s\u0069\u006e\u0067\u0020\u0043T\u005f\u0052e\u006c\u003a\u0020\u0025\u0073",_da );};if _ebd ,_cg :=_ed .(_f .EndElement );_cg &&_ebd .Name ==start .Name {break ;};};return nil ;};

// ValidateWithPath validates the CT_Empty and its children, prefixing error messages with path
func (_fg *CT_Empty )ValidateWithPath (path string )error {return nil };func (_cd *Iscomment )MarshalXML (e *_f .Encoder ,start _f .StartElement )error {start .Attr =append (start .Attr ,_f .Attr {Name :_f .Name {Local :"\u0078\u006d\u006cn\u0073"},Value :"\u0075\u0072\u006e\u003a\u0073\u0063\u0068e\u006d\u0061\u0073-\u006d\u0069\u0063\u0072o\u0073\u006f\u0066\u0074\u002d\u0063\u006f\u006d\u003a\u006f\u0066\u0066\u0069\u0063\u0065\u003a\u0070\u006f\u0077\u0065\u0072\u0070\u006f\u0069\u006e\u0074"});start .Attr =append (start .Attr ,_f .Attr {Name :_f .Name {Local :"\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"},Value :"\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"});start .Name .Local ="\u0069s\u0063\u006f\u006d\u006d\u0065\u006et";return _cd .CT_Empty .MarshalXML (e ,start );};

// ValidateWithPath validates the Iscomment and its children, prefixing error messages with path
func (_dd *Iscomment )ValidateWithPath (path string )error {if _fgf :=_dd .CT_Empty .ValidateWithPath (path );_fgf !=nil {return _fgf ;};return nil ;};func NewTextdata ()*Textdata {_cfa :=&Textdata {};_cfa .CT_Rel =*NewCT_Rel ();return _cfa };func init (){_a .RegisterConstructor ("\u0075\u0072\u006e\u003a\u0073\u0063\u0068e\u006d\u0061\u0073-\u006d\u0069\u0063\u0072o\u0073\u006f\u0066\u0074\u002d\u0063\u006f\u006d\u003a\u006f\u0066\u0066\u0069\u0063\u0065\u003a\u0070\u006f\u0077\u0065\u0072\u0070\u006f\u0069\u006e\u0074","\u0043\u0054\u005f\u0045\u006d\u0070\u0074\u0079",NewCT_Empty );_a .RegisterConstructor ("\u0075\u0072\u006e\u003a\u0073\u0063\u0068e\u006d\u0061\u0073-\u006d\u0069\u0063\u0072o\u0073\u006f\u0066\u0074\u002d\u0063\u006f\u006d\u003a\u006f\u0066\u0066\u0069\u0063\u0065\u003a\u0070\u006f\u0077\u0065\u0072\u0070\u006f\u0069\u006e\u0074","\u0043\u0054\u005f\u0052\u0065\u006c",NewCT_Rel );_a .RegisterConstructor ("\u0075\u0072\u006e\u003a\u0073\u0063\u0068e\u006d\u0061\u0073-\u006d\u0069\u0063\u0072o\u0073\u006f\u0066\u0074\u002d\u0063\u006f\u006d\u003a\u006f\u0066\u0066\u0069\u0063\u0065\u003a\u0070\u006f\u0077\u0065\u0072\u0070\u006f\u0069\u006e\u0074","\u0069s\u0063\u006f\u006d\u006d\u0065\u006et",NewIscomment );_a .RegisterConstructor ("\u0075\u0072\u006e\u003a\u0073\u0063\u0068e\u006d\u0061\u0073-\u006d\u0069\u0063\u0072o\u0073\u006f\u0066\u0074\u002d\u0063\u006f\u006d\u003a\u006f\u0066\u0066\u0069\u0063\u0065\u003a\u0070\u006f\u0077\u0065\u0072\u0070\u006f\u0069\u006e\u0074","\u0074\u0065\u0078\u0074\u0064\u0061\u0074\u0061",NewTextdata );};