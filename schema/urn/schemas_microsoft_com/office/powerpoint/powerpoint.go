//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package powerpoint ;import (_cd "encoding/xml";_g "fmt";_d "github.com/unidoc/unioffice";);func NewCT_Rel ()*CT_Rel {_fg :=&CT_Rel {};return _fg };func NewCT_Empty ()*CT_Empty {_de :=&CT_Empty {};return _de };type CT_Empty struct{};func (_b *CT_Rel )UnmarshalXML (d *_cd .Decoder ,start _cd .StartElement )error {for _ ,_df :=range start .Attr {if _df .Name .Local =="\u0069\u0064"{_ag ,_dfd :=_df .Value ,error (nil );if _dfd !=nil {return _dfd ;};_b .IdAttr =&_ag ;continue ;};};for {_fb ,_fec :=d .Token ();if _fec !=nil {return _g .Errorf ("\u0070a\u0072s\u0069\u006e\u0067\u0020\u0043T\u005f\u0052e\u006c\u003a\u0020\u0025\u0073",_fec );};if _dgf ,_cf :=_fb .(_cd .EndElement );_cf &&_dgf .Name ==start .Name {break ;};};return nil ;};func NewIscomment ()*Iscomment {_gga :=&Iscomment {};_gga .CT_Empty =*NewCT_Empty ();return _gga };func (_dd *CT_Empty )UnmarshalXML (d *_cd .Decoder ,start _cd .StartElement )error {for {_gg ,_gc :=d .Token ();if _gc !=nil {return _g .Errorf ("p\u0061r\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005fE\u006d\u0070\u0074\u0079: \u0025\u0073",_gc );};if _f ,_a :=_gg .(_cd .EndElement );_a &&_f .Name ==start .Name {break ;};};return nil ;};

// Validate validates the CT_Rel and its children
func (_cg *CT_Rel )Validate ()error {return _cg .ValidateWithPath ("\u0043\u0054\u005f\u0052\u0065\u006c");};func (_dee *Iscomment )MarshalXML (e *_cd .Encoder ,start _cd .StartElement )error {start .Attr =append (start .Attr ,_cd .Attr {Name :_cd .Name {Local :"\u0078\u006d\u006cn\u0073"},Value :"\u0075\u0072\u006e\u003a\u0073\u0063\u0068e\u006d\u0061\u0073-\u006d\u0069\u0063\u0072o\u0073\u006f\u0066\u0074\u002d\u0063\u006f\u006d\u003a\u006f\u0066\u0066\u0069\u0063\u0065\u003a\u0070\u006f\u0077\u0065\u0072\u0070\u006f\u0069\u006e\u0074"});start .Attr =append (start .Attr ,_cd .Attr {Name :_cd .Name {Local :"\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"},Value :"\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"});start .Name .Local ="\u0069s\u0063\u006f\u006d\u006d\u0065\u006et";return _dee .CT_Empty .MarshalXML (e ,start );};type Iscomment struct{CT_Empty };func (_dg *CT_Empty )MarshalXML (e *_cd .Encoder ,start _cd .StartElement )error {e .EncodeToken (start );e .EncodeToken (_cd .EndElement {Name :start .Name });return nil ;};type Textdata struct{CT_Rel };

// ValidateWithPath validates the Iscomment and its children, prefixing error messages with path
func (_bbb *Iscomment )ValidateWithPath (path string )error {if _gge :=_bbb .CT_Empty .ValidateWithPath (path );_gge !=nil {return _gge ;};return nil ;};

// ValidateWithPath validates the CT_Rel and its children, prefixing error messages with path
func (_e *CT_Rel )ValidateWithPath (path string )error {return nil };

// ValidateWithPath validates the Textdata and its children, prefixing error messages with path
func (_fge *Textdata )ValidateWithPath (path string )error {if _agb :=_fge .CT_Rel .ValidateWithPath (path );_agb !=nil {return _agb ;};return nil ;};func (_bg *Iscomment )UnmarshalXML (d *_cd .Decoder ,start _cd .StartElement )error {_bg .CT_Empty =*NewCT_Empty ();for {_bb ,_aec :=d .Token ();if _aec !=nil {return _g .Errorf ("p\u0061\u0072\u0073\u0069ng\u0020I\u0073\u0063\u006f\u006d\u006de\u006e\u0074\u003a\u0020\u0025\u0073",_aec );};if _bf ,_ef :=_bb .(_cd .EndElement );_ef &&_bf .Name ==start .Name {break ;};};return nil ;};type CT_Rel struct{IdAttr *string ;};func (_ea *Textdata )MarshalXML (e *_cd .Encoder ,start _cd .StartElement )error {start .Attr =append (start .Attr ,_cd .Attr {Name :_cd .Name {Local :"\u0078\u006d\u006cn\u0073"},Value :"\u0075\u0072\u006e\u003a\u0073\u0063\u0068e\u006d\u0061\u0073-\u006d\u0069\u0063\u0072o\u0073\u006f\u0066\u0074\u002d\u0063\u006f\u006d\u003a\u006f\u0066\u0066\u0069\u0063\u0065\u003a\u0070\u006f\u0077\u0065\u0072\u0070\u006f\u0069\u006e\u0074"});start .Attr =append (start .Attr ,_cd .Attr {Name :_cd .Name {Local :"\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"},Value :"\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"});start .Name .Local ="\u0074\u0065\u0078\u0074\u0064\u0061\u0074\u0061";return _ea .CT_Rel .MarshalXML (e ,start );};

// Validate validates the CT_Empty and its children
func (_fe *CT_Empty )Validate ()error {return _fe .ValidateWithPath ("\u0043\u0054\u005f\u0045\u006d\u0070\u0074\u0079");};func (_dfc *Textdata )UnmarshalXML (d *_cd .Decoder ,start _cd .StartElement )error {_dfc .CT_Rel =*NewCT_Rel ();for _ ,_bfb :=range start .Attr {if _bfb .Name .Local =="\u0069\u0064"{_ac ,_cb :=_bfb .Value ,error (nil );if _cb !=nil {return _cb ;};_dfc .IdAttr =&_ac ;continue ;};};for {_cff ,_cab :=d .Token ();if _cab !=nil {return _g .Errorf ("p\u0061r\u0073\u0069\u006e\u0067\u0020\u0054\u0065\u0078t\u0064\u0061\u0074\u0061: \u0025\u0073",_cab );};if _fa ,_cdg :=_cff .(_cd .EndElement );_cdg &&_fa .Name ==start .Name {break ;};};return nil ;};

// ValidateWithPath validates the CT_Empty and its children, prefixing error messages with path
func (_db *CT_Empty )ValidateWithPath (path string )error {return nil };

// Validate validates the Iscomment and its children
func (_cgg *Iscomment )Validate ()error {return _cgg .ValidateWithPath ("\u0049s\u0063\u006f\u006d\u006d\u0065\u006et");};func NewTextdata ()*Textdata {_bge :=&Textdata {};_bge .CT_Rel =*NewCT_Rel ();return _bge };

// Validate validates the Textdata and its children
func (_ee *Textdata )Validate ()error {return _ee .ValidateWithPath ("\u0054\u0065\u0078\u0074\u0064\u0061\u0074\u0061");};func (_ae *CT_Rel )MarshalXML (e *_cd .Encoder ,start _cd .StartElement )error {if _ae .IdAttr !=nil {start .Attr =append (start .Attr ,_cd .Attr {Name :_cd .Name {Local :"\u0069\u0064"},Value :_g .Sprintf ("\u0025\u0076",*_ae .IdAttr )});};e .EncodeToken (start );e .EncodeToken (_cd .EndElement {Name :start .Name });return nil ;};func init (){_d .RegisterConstructor ("\u0075\u0072\u006e\u003a\u0073\u0063\u0068e\u006d\u0061\u0073-\u006d\u0069\u0063\u0072o\u0073\u006f\u0066\u0074\u002d\u0063\u006f\u006d\u003a\u006f\u0066\u0066\u0069\u0063\u0065\u003a\u0070\u006f\u0077\u0065\u0072\u0070\u006f\u0069\u006e\u0074","\u0043\u0054\u005f\u0045\u006d\u0070\u0074\u0079",NewCT_Empty );_d .RegisterConstructor ("\u0075\u0072\u006e\u003a\u0073\u0063\u0068e\u006d\u0061\u0073-\u006d\u0069\u0063\u0072o\u0073\u006f\u0066\u0074\u002d\u0063\u006f\u006d\u003a\u006f\u0066\u0066\u0069\u0063\u0065\u003a\u0070\u006f\u0077\u0065\u0072\u0070\u006f\u0069\u006e\u0074","\u0043\u0054\u005f\u0052\u0065\u006c",NewCT_Rel );_d .RegisterConstructor ("\u0075\u0072\u006e\u003a\u0073\u0063\u0068e\u006d\u0061\u0073-\u006d\u0069\u0063\u0072o\u0073\u006f\u0066\u0074\u002d\u0063\u006f\u006d\u003a\u006f\u0066\u0066\u0069\u0063\u0065\u003a\u0070\u006f\u0077\u0065\u0072\u0070\u006f\u0069\u006e\u0074","\u0069s\u0063\u006f\u006d\u006d\u0065\u006et",NewIscomment );_d .RegisterConstructor ("\u0075\u0072\u006e\u003a\u0073\u0063\u0068e\u006d\u0061\u0073-\u006d\u0069\u0063\u0072o\u0073\u006f\u0066\u0074\u002d\u0063\u006f\u006d\u003a\u006f\u0066\u0066\u0069\u0063\u0065\u003a\u0070\u006f\u0077\u0065\u0072\u0070\u006f\u0069\u006e\u0074","\u0074\u0065\u0078\u0074\u0064\u0061\u0074\u0061",NewTextdata );};