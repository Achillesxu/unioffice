//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package powerpoint ;import (_c "encoding/xml";_a "fmt";_af "github.com/unidoc/unioffice";);func (_g *CT_Empty )UnmarshalXML (d *_c .Decoder ,start _c .StartElement )error {for {_ee ,_ec :=d .Token ();if _ec !=nil {return _a .Errorf ("p\u0061r\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005fE\u006d\u0070\u0074\u0079: \u0025\u0073",_ec );};if _da ,_dc :=_ee .(_c .EndElement );_dc &&_da .Name ==start .Name {break ;};};return nil ;};func (_e *CT_Empty )MarshalXML (e *_c .Encoder ,start _c .StartElement )error {e .EncodeToken (start );e .EncodeToken (_c .EndElement {Name :start .Name });return nil ;};

// ValidateWithPath validates the Textdata and its children, prefixing error messages with path
func (_gef *Textdata )ValidateWithPath (path string )error {if _dg :=_gef .CT_Rel .ValidateWithPath (path );_dg !=nil {return _dg ;};return nil ;};type CT_Empty struct{};type Iscomment struct{CT_Empty };func NewCT_Rel ()*CT_Rel {_fc :=&CT_Rel {};return _fc };func (_bd *Iscomment )MarshalXML (e *_c .Encoder ,start _c .StartElement )error {start .Attr =append (start .Attr ,_c .Attr {Name :_c .Name {Local :"\u0078\u006d\u006cn\u0073"},Value :"\u0075\u0072\u006e\u003a\u0073\u0063\u0068e\u006d\u0061\u0073-\u006d\u0069\u0063\u0072o\u0073\u006f\u0066\u0074\u002d\u0063\u006f\u006d\u003a\u006f\u0066\u0066\u0069\u0063\u0065\u003a\u0070\u006f\u0077\u0065\u0072\u0070\u006f\u0069\u006e\u0074"});start .Attr =append (start .Attr ,_c .Attr {Name :_c .Name {Local :"\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"},Value :"\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"});start .Name .Local ="\u0069s\u0063\u006f\u006d\u006d\u0065\u006et";return _bd .CT_Empty .MarshalXML (e ,start );};func (_ce *CT_Rel )UnmarshalXML (d *_c .Decoder ,start _c .StartElement )error {for _ ,_eec :=range start .Attr {if _eec .Name .Local =="\u0069\u0064"{_ge ,_cd :=_eec .Value ,error (nil );if _cd !=nil {return _cd ;};_ce .IdAttr =&_ge ;continue ;};};for {_ac ,_de :=d .Token ();if _de !=nil {return _a .Errorf ("\u0070a\u0072s\u0069\u006e\u0067\u0020\u0043T\u005f\u0052e\u006c\u003a\u0020\u0025\u0073",_de );};if _dd ,_eb :=_ac .(_c .EndElement );_eb &&_dd .Name ==start .Name {break ;};};return nil ;};func NewCT_Empty ()*CT_Empty {_d :=&CT_Empty {};return _d };func (_afd *Iscomment )UnmarshalXML (d *_c .Decoder ,start _c .StartElement )error {_afd .CT_Empty =*NewCT_Empty ();for {_fce ,_gea :=d .Token ();if _gea !=nil {return _a .Errorf ("p\u0061\u0072\u0073\u0069ng\u0020I\u0073\u0063\u006f\u006d\u006de\u006e\u0074\u003a\u0020\u0025\u0073",_gea );};if _cbe ,_fg :=_fce .(_c .EndElement );_fg &&_cbe .Name ==start .Name {break ;};};return nil ;};

// ValidateWithPath validates the CT_Rel and its children, prefixing error messages with path
func (_b *CT_Rel )ValidateWithPath (path string )error {return nil };

// Validate validates the Textdata and its children
func (_fcec *Textdata )Validate ()error {return _fcec .ValidateWithPath ("\u0054\u0065\u0078\u0074\u0064\u0061\u0074\u0061");};

// ValidateWithPath validates the Iscomment and its children, prefixing error messages with path
func (_gf *Iscomment )ValidateWithPath (path string )error {if _geg :=_gf .CT_Empty .ValidateWithPath (path );_geg !=nil {return _geg ;};return nil ;};

// Validate validates the Iscomment and its children
func (_bg *Iscomment )Validate ()error {return _bg .ValidateWithPath ("\u0049s\u0063\u006f\u006d\u006d\u0065\u006et");};type Textdata struct{CT_Rel };func NewIscomment ()*Iscomment {_fa :=&Iscomment {};_fa .CT_Empty =*NewCT_Empty ();return _fa };

// ValidateWithPath validates the CT_Empty and its children, prefixing error messages with path
func (_afa *CT_Empty )ValidateWithPath (path string )error {return nil };type CT_Rel struct{IdAttr *string ;};func NewTextdata ()*Textdata {_eef :=&Textdata {};_eef .CT_Rel =*NewCT_Rel ();return _eef };

// Validate validates the CT_Rel and its children
func (_gg *CT_Rel )Validate ()error {return _gg .ValidateWithPath ("\u0043\u0054\u005f\u0052\u0065\u006c");};func (_ff *Textdata )UnmarshalXML (d *_c .Decoder ,start _c .StartElement )error {_ff .CT_Rel =*NewCT_Rel ();for _ ,_fge :=range start .Attr {if _fge .Name .Local =="\u0069\u0064"{_cc ,_aa :=_fge .Value ,error (nil );if _aa !=nil {return _aa ;};_ff .IdAttr =&_cc ;continue ;};};for {_ebc ,_ag :=d .Token ();if _ag !=nil {return _a .Errorf ("p\u0061r\u0073\u0069\u006e\u0067\u0020\u0054\u0065\u0078t\u0064\u0061\u0074\u0061: \u0025\u0073",_ag );};if _ecb ,_gc :=_ebc .(_c .EndElement );_gc &&_ecb .Name ==start .Name {break ;};};return nil ;};func (_cg *CT_Rel )MarshalXML (e *_c .Encoder ,start _c .StartElement )error {if _cg .IdAttr !=nil {start .Attr =append (start .Attr ,_c .Attr {Name :_c .Name {Local :"\u0069\u0064"},Value :_a .Sprintf ("\u0025\u0076",*_cg .IdAttr )});};e .EncodeToken (start );e .EncodeToken (_c .EndElement {Name :start .Name });return nil ;};func (_cbef *Textdata )MarshalXML (e *_c .Encoder ,start _c .StartElement )error {start .Attr =append (start .Attr ,_c .Attr {Name :_c .Name {Local :"\u0078\u006d\u006cn\u0073"},Value :"\u0075\u0072\u006e\u003a\u0073\u0063\u0068e\u006d\u0061\u0073-\u006d\u0069\u0063\u0072o\u0073\u006f\u0066\u0074\u002d\u0063\u006f\u006d\u003a\u006f\u0066\u0066\u0069\u0063\u0065\u003a\u0070\u006f\u0077\u0065\u0072\u0070\u006f\u0069\u006e\u0074"});start .Attr =append (start .Attr ,_c .Attr {Name :_c .Name {Local :"\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"},Value :"\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"});start .Name .Local ="\u0074\u0065\u0078\u0074\u0064\u0061\u0074\u0061";return _cbef .CT_Rel .MarshalXML (e ,start );};

// Validate validates the CT_Empty and its children
func (_ed *CT_Empty )Validate ()error {return _ed .ValidateWithPath ("\u0043\u0054\u005f\u0045\u006d\u0070\u0074\u0079");};func init (){_af .RegisterConstructor ("\u0075\u0072\u006e\u003a\u0073\u0063\u0068e\u006d\u0061\u0073-\u006d\u0069\u0063\u0072o\u0073\u006f\u0066\u0074\u002d\u0063\u006f\u006d\u003a\u006f\u0066\u0066\u0069\u0063\u0065\u003a\u0070\u006f\u0077\u0065\u0072\u0070\u006f\u0069\u006e\u0074","\u0043\u0054\u005f\u0045\u006d\u0070\u0074\u0079",NewCT_Empty );_af .RegisterConstructor ("\u0075\u0072\u006e\u003a\u0073\u0063\u0068e\u006d\u0061\u0073-\u006d\u0069\u0063\u0072o\u0073\u006f\u0066\u0074\u002d\u0063\u006f\u006d\u003a\u006f\u0066\u0066\u0069\u0063\u0065\u003a\u0070\u006f\u0077\u0065\u0072\u0070\u006f\u0069\u006e\u0074","\u0043\u0054\u005f\u0052\u0065\u006c",NewCT_Rel );_af .RegisterConstructor ("\u0075\u0072\u006e\u003a\u0073\u0063\u0068e\u006d\u0061\u0073-\u006d\u0069\u0063\u0072o\u0073\u006f\u0066\u0074\u002d\u0063\u006f\u006d\u003a\u006f\u0066\u0066\u0069\u0063\u0065\u003a\u0070\u006f\u0077\u0065\u0072\u0070\u006f\u0069\u006e\u0074","\u0069s\u0063\u006f\u006d\u006d\u0065\u006et",NewIscomment );_af .RegisterConstructor ("\u0075\u0072\u006e\u003a\u0073\u0063\u0068e\u006d\u0061\u0073-\u006d\u0069\u0063\u0072o\u0073\u006f\u0066\u0074\u002d\u0063\u006f\u006d\u003a\u006f\u0066\u0066\u0069\u0063\u0065\u003a\u0070\u006f\u0077\u0065\u0072\u0070\u006f\u0069\u006e\u0074","\u0074\u0065\u0078\u0074\u0064\u0061\u0074\u0061",NewTextdata );};