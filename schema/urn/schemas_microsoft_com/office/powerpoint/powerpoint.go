//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package powerpoint ;import (_ba "encoding/xml";_fa "fmt";_a "github.com/unidoc/unioffice";);func NewCT_Empty ()*CT_Empty {_dgg :=&CT_Empty {};return _dgg };

// ValidateWithPath validates the CT_Rel and its children, prefixing error messages with path
func (_db *CT_Rel )ValidateWithPath (path string )error {return nil };func (_ag *CT_Empty )UnmarshalXML (d *_ba .Decoder ,start _ba .StartElement )error {for {_ec ,_g :=d .Token ();if _g !=nil {return _fa .Errorf ("p\u0061r\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005fE\u006d\u0070\u0074\u0079: \u0025\u0073",_g );};if _egc ,_ac :=_ec .(_ba .EndElement );_ac &&_egc .Name ==start .Name {break ;};};return nil ;};type CT_Empty struct{};

// Validate validates the Textdata and its children
func (_dd *Textdata )Validate ()error {return _dd .ValidateWithPath ("\u0054\u0065\u0078\u0074\u0064\u0061\u0074\u0061");};

// Validate validates the CT_Empty and its children
func (_bc *CT_Empty )Validate ()error {return _bc .ValidateWithPath ("\u0043\u0054\u005f\u0045\u006d\u0070\u0074\u0079");};func (_bf *CT_Empty )MarshalXML (e *_ba .Encoder ,start _ba .StartElement )error {e .EncodeToken (start );e .EncodeToken (_ba .EndElement {Name :start .Name });return nil ;};

// Validate validates the CT_Rel and its children
func (_eee *CT_Rel )Validate ()error {return _eee .ValidateWithPath ("\u0043\u0054\u005f\u0052\u0065\u006c");};func NewIscomment ()*Iscomment {_eb :=&Iscomment {};_eb .CT_Empty =*NewCT_Empty ();return _eb };func (_caf *CT_Rel )UnmarshalXML (d *_ba .Decoder ,start _ba .StartElement )error {for _ ,_ef :=range start .Attr {if _ef .Name .Local =="\u0069\u0064"{_fc ,_aa :=_ef .Value ,error (nil );if _aa !=nil {return _aa ;};_caf .IdAttr =&_fc ;continue ;};};for {_e ,_ad :=d .Token ();if _ad !=nil {return _fa .Errorf ("\u0070a\u0072s\u0069\u006e\u0067\u0020\u0043T\u005f\u0052e\u006c\u003a\u0020\u0025\u0073",_ad );};if _f ,_d :=_e .(_ba .EndElement );_d &&_f .Name ==start .Name {break ;};};return nil ;};func (_c *Textdata )UnmarshalXML (d *_ba .Decoder ,start _ba .StartElement )error {_c .CT_Rel =*NewCT_Rel ();for _ ,_cf :=range start .Attr {if _cf .Name .Local =="\u0069\u0064"{_ee ,_cb :=_cf .Value ,error (nil );if _cb !=nil {return _cb ;};_c .IdAttr =&_ee ;continue ;};};for {_cg ,_dee :=d .Token ();if _dee !=nil {return _fa .Errorf ("p\u0061r\u0073\u0069\u006e\u0067\u0020\u0054\u0065\u0078t\u0064\u0061\u0074\u0061: \u0025\u0073",_dee );};if _fcg ,_dg :=_cg .(_ba .EndElement );_dg &&_fcg .Name ==start .Name {break ;};};return nil ;};

// ValidateWithPath validates the Iscomment and its children, prefixing error messages with path
func (_bg *Iscomment )ValidateWithPath (path string )error {if _def :=_bg .CT_Empty .ValidateWithPath (path );_def !=nil {return _def ;};return nil ;};func (_adf *Textdata )MarshalXML (e *_ba .Encoder ,start _ba .StartElement )error {start .Attr =append (start .Attr ,_ba .Attr {Name :_ba .Name {Local :"\u0078\u006d\u006cn\u0073"},Value :"\u0075\u0072\u006e\u003a\u0073\u0063\u0068e\u006d\u0061\u0073-\u006d\u0069\u0063\u0072o\u0073\u006f\u0066\u0074\u002d\u0063\u006f\u006d\u003a\u006f\u0066\u0066\u0069\u0063\u0065\u003a\u0070\u006f\u0077\u0065\u0072\u0070\u006f\u0069\u006e\u0074"});start .Attr =append (start .Attr ,_ba .Attr {Name :_ba .Name {Local :"\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"},Value :"\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"});start .Name .Local ="\u0074\u0065\u0078\u0074\u0064\u0061\u0074\u0061";return _adf .CT_Rel .MarshalXML (e ,start );};

// ValidateWithPath validates the CT_Empty and its children, prefixing error messages with path
func (_b *CT_Empty )ValidateWithPath (path string )error {return nil };

// ValidateWithPath validates the Textdata and its children, prefixing error messages with path
func (_cfc *Textdata )ValidateWithPath (path string )error {if _ca :=_cfc .CT_Rel .ValidateWithPath (path );_ca !=nil {return _ca ;};return nil ;};func NewTextdata ()*Textdata {_abf :=&Textdata {};_abf .CT_Rel =*NewCT_Rel ();return _abf };func (_ed *Iscomment )UnmarshalXML (d *_ba .Decoder ,start _ba .StartElement )error {_ed .CT_Empty =*NewCT_Empty ();for {_de ,_df :=d .Token ();if _df !=nil {return _fa .Errorf ("p\u0061\u0072\u0073\u0069ng\u0020I\u0073\u0063\u006f\u006d\u006de\u006e\u0074\u003a\u0020\u0025\u0073",_df );};if _abc ,_gg :=_de .(_ba .EndElement );_gg &&_abc .Name ==start .Name {break ;};};return nil ;};func (_eg *CT_Rel )MarshalXML (e *_ba .Encoder ,start _ba .StartElement )error {if _eg .IdAttr !=nil {start .Attr =append (start .Attr ,_ba .Attr {Name :_ba .Name {Local :"\u0069\u0064"},Value :_fa .Sprintf ("\u0025\u0076",*_eg .IdAttr )});};e .EncodeToken (start );e .EncodeToken (_ba .EndElement {Name :start .Name });return nil ;};type Textdata struct{CT_Rel };func (_edg *Iscomment )MarshalXML (e *_ba .Encoder ,start _ba .StartElement )error {start .Attr =append (start .Attr ,_ba .Attr {Name :_ba .Name {Local :"\u0078\u006d\u006cn\u0073"},Value :"\u0075\u0072\u006e\u003a\u0073\u0063\u0068e\u006d\u0061\u0073-\u006d\u0069\u0063\u0072o\u0073\u006f\u0066\u0074\u002d\u0063\u006f\u006d\u003a\u006f\u0066\u0066\u0069\u0063\u0065\u003a\u0070\u006f\u0077\u0065\u0072\u0070\u006f\u0069\u006e\u0074"});start .Attr =append (start .Attr ,_ba .Attr {Name :_ba .Name {Local :"\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"},Value :"\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"});start .Name .Local ="\u0069s\u0063\u006f\u006d\u006d\u0065\u006et";return _edg .CT_Empty .MarshalXML (e ,start );};

// Validate validates the Iscomment and its children
func (_ab *Iscomment )Validate ()error {return _ab .ValidateWithPath ("\u0049s\u0063\u006f\u006d\u006d\u0065\u006et");};func NewCT_Rel ()*CT_Rel {_da :=&CT_Rel {};return _da };type CT_Rel struct{IdAttr *string ;};type Iscomment struct{CT_Empty };func init (){_a .RegisterConstructor ("\u0075\u0072\u006e\u003a\u0073\u0063\u0068e\u006d\u0061\u0073-\u006d\u0069\u0063\u0072o\u0073\u006f\u0066\u0074\u002d\u0063\u006f\u006d\u003a\u006f\u0066\u0066\u0069\u0063\u0065\u003a\u0070\u006f\u0077\u0065\u0072\u0070\u006f\u0069\u006e\u0074","\u0043\u0054\u005f\u0045\u006d\u0070\u0074\u0079",NewCT_Empty );_a .RegisterConstructor ("\u0075\u0072\u006e\u003a\u0073\u0063\u0068e\u006d\u0061\u0073-\u006d\u0069\u0063\u0072o\u0073\u006f\u0066\u0074\u002d\u0063\u006f\u006d\u003a\u006f\u0066\u0066\u0069\u0063\u0065\u003a\u0070\u006f\u0077\u0065\u0072\u0070\u006f\u0069\u006e\u0074","\u0043\u0054\u005f\u0052\u0065\u006c",NewCT_Rel );_a .RegisterConstructor ("\u0075\u0072\u006e\u003a\u0073\u0063\u0068e\u006d\u0061\u0073-\u006d\u0069\u0063\u0072o\u0073\u006f\u0066\u0074\u002d\u0063\u006f\u006d\u003a\u006f\u0066\u0066\u0069\u0063\u0065\u003a\u0070\u006f\u0077\u0065\u0072\u0070\u006f\u0069\u006e\u0074","\u0069s\u0063\u006f\u006d\u006d\u0065\u006et",NewIscomment );_a .RegisterConstructor ("\u0075\u0072\u006e\u003a\u0073\u0063\u0068e\u006d\u0061\u0073-\u006d\u0069\u0063\u0072o\u0073\u006f\u0066\u0074\u002d\u0063\u006f\u006d\u003a\u006f\u0066\u0066\u0069\u0063\u0065\u003a\u0070\u006f\u0077\u0065\u0072\u0070\u006f\u0069\u006e\u0074","\u0074\u0065\u0078\u0074\u0064\u0061\u0074\u0061",NewTextdata );};