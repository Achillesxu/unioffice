//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package powerpoint ;import (_g "encoding/xml";_ge "fmt";_ga "github.com/unidoc/unioffice";);

// Validate validates the Textdata and its children
func (_af *Textdata )Validate ()error {return _af .ValidateWithPath ("\u0054\u0065\u0078\u0074\u0064\u0061\u0074\u0061");};func (_ae *Textdata )UnmarshalXML (d *_g .Decoder ,start _g .StartElement )error {_ae .CT_Rel =*NewCT_Rel ();for _ ,_eg :=range start .Attr {if _eg .Name .Local =="\u0069\u0064"{_cfb ,_bf :=_eg .Value ,error (nil );if _bf !=nil {return _bf ;};_ae .IdAttr =&_cfb ;continue ;};};for {_ca ,_gc :=d .Token ();if _gc !=nil {return _ge .Errorf ("p\u0061r\u0073\u0069\u006e\u0067\u0020\u0054\u0065\u0078t\u0064\u0061\u0074\u0061: \u0025\u0073",_gc );};if _be ,_cb :=_ca .(_g .EndElement );_cb &&_be .Name ==start .Name {break ;};};return nil ;};type CT_Empty struct{};

// ValidateWithPath validates the CT_Rel and its children, prefixing error messages with path
func (_faa *CT_Rel )ValidateWithPath (path string )error {return nil };type Textdata struct{CT_Rel };

// ValidateWithPath validates the Textdata and its children, prefixing error messages with path
func (_fab *Textdata )ValidateWithPath (path string )error {if _bgb :=_fab .CT_Rel .ValidateWithPath (path );_bgb !=nil {return _bgb ;};return nil ;};type Iscomment struct{CT_Empty };func (_fe *CT_Rel )MarshalXML (e *_g .Encoder ,start _g .StartElement )error {if _fe .IdAttr !=nil {start .Attr =append (start .Attr ,_g .Attr {Name :_g .Name {Local :"\u0069\u0064"},Value :_ge .Sprintf ("\u0025\u0076",*_fe .IdAttr )});};e .EncodeToken (start );e .EncodeToken (_g .EndElement {Name :start .Name });return nil ;};

// Validate validates the CT_Empty and its children
func (_f *CT_Empty )Validate ()error {return _f .ValidateWithPath ("\u0043\u0054\u005f\u0045\u006d\u0070\u0074\u0079");};func NewTextdata ()*Textdata {_abd :=&Textdata {};_abd .CT_Rel =*NewCT_Rel ();return _abd };func (_fg *Iscomment )MarshalXML (e *_g .Encoder ,start _g .StartElement )error {start .Attr =append (start .Attr ,_g .Attr {Name :_g .Name {Local :"\u0078\u006d\u006cn\u0073"},Value :"\u0075\u0072\u006e\u003a\u0073\u0063\u0068e\u006d\u0061\u0073-\u006d\u0069\u0063\u0072o\u0073\u006f\u0066\u0074\u002d\u0063\u006f\u006d\u003a\u006f\u0066\u0066\u0069\u0063\u0065\u003a\u0070\u006f\u0077\u0065\u0072\u0070\u006f\u0069\u006e\u0074"});start .Attr =append (start .Attr ,_g .Attr {Name :_g .Name {Local :"\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"},Value :"\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"});start .Name .Local ="\u0069s\u0063\u006f\u006d\u006d\u0065\u006et";return _fg .CT_Empty .MarshalXML (e ,start );};func (_c *CT_Empty )UnmarshalXML (d *_g .Decoder ,start _g .StartElement )error {for {_bc ,_d :=d .Token ();if _d !=nil {return _ge .Errorf ("p\u0061r\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005fE\u006d\u0070\u0074\u0079: \u0025\u0073",_d );};if _ce ,_dg :=_bc .(_g .EndElement );_dg &&_ce .Name ==start .Name {break ;};};return nil ;};func (_fc *CT_Rel )UnmarshalXML (d *_g .Decoder ,start _g .StartElement )error {for _ ,_gee :=range start .Attr {if _gee .Name .Local =="\u0069\u0064"{_dc ,_ee :=_gee .Value ,error (nil );if _ee !=nil {return _ee ;};_fc .IdAttr =&_dc ;continue ;};};for {_bd ,_cf :=d .Token ();if _cf !=nil {return _ge .Errorf ("\u0070a\u0072s\u0069\u006e\u0067\u0020\u0043T\u005f\u0052e\u006c\u003a\u0020\u0025\u0073",_cf );};if _bg ,_ba :=_bd .(_g .EndElement );_ba &&_bg .Name ==start .Name {break ;};};return nil ;};func NewCT_Rel ()*CT_Rel {_gg :=&CT_Rel {};return _gg };

// ValidateWithPath validates the CT_Empty and its children, prefixing error messages with path
func (_fa *CT_Empty )ValidateWithPath (path string )error {return nil };func NewCT_Empty ()*CT_Empty {_b :=&CT_Empty {};return _b };func (_a *CT_Empty )MarshalXML (e *_g .Encoder ,start _g .StartElement )error {e .EncodeToken (start );e .EncodeToken (_g .EndElement {Name :start .Name });return nil ;};

// Validate validates the Iscomment and its children
func (_efa *Iscomment )Validate ()error {return _efa .ValidateWithPath ("\u0049s\u0063\u006f\u006d\u006d\u0065\u006et");};func (_fgb *Textdata )MarshalXML (e *_g .Encoder ,start _g .StartElement )error {start .Attr =append (start .Attr ,_g .Attr {Name :_g .Name {Local :"\u0078\u006d\u006cn\u0073"},Value :"\u0075\u0072\u006e\u003a\u0073\u0063\u0068e\u006d\u0061\u0073-\u006d\u0069\u0063\u0072o\u0073\u006f\u0066\u0074\u002d\u0063\u006f\u006d\u003a\u006f\u0066\u0066\u0069\u0063\u0065\u003a\u0070\u006f\u0077\u0065\u0072\u0070\u006f\u0069\u006e\u0074"});start .Attr =append (start .Attr ,_g .Attr {Name :_g .Name {Local :"\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"},Value :"\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"});start .Name .Local ="\u0074\u0065\u0078\u0074\u0064\u0061\u0074\u0061";return _fgb .CT_Rel .MarshalXML (e ,start );};

// Validate validates the CT_Rel and its children
func (_dd *CT_Rel )Validate ()error {return _dd .ValidateWithPath ("\u0043\u0054\u005f\u0052\u0065\u006c");};

// ValidateWithPath validates the Iscomment and its children, prefixing error messages with path
func (_eedf *Iscomment )ValidateWithPath (path string )error {if _gec :=_eedf .CT_Empty .ValidateWithPath (path );_gec !=nil {return _gec ;};return nil ;};func NewIscomment ()*Iscomment {_da :=&Iscomment {};_da .CT_Empty =*NewCT_Empty ();return _da };type CT_Rel struct{IdAttr *string ;};func (_ab *Iscomment )UnmarshalXML (d *_g .Decoder ,start _g .StartElement )error {_ab .CT_Empty =*NewCT_Empty ();for {_db ,_eed :=d .Token ();if _eed !=nil {return _ge .Errorf ("p\u0061\u0072\u0073\u0069ng\u0020I\u0073\u0063\u006f\u006d\u006de\u006e\u0074\u003a\u0020\u0025\u0073",_eed );};if _ea ,_bb :=_db .(_g .EndElement );_bb &&_ea .Name ==start .Name {break ;};};return nil ;};func init (){_ga .RegisterConstructor ("\u0075\u0072\u006e\u003a\u0073\u0063\u0068e\u006d\u0061\u0073-\u006d\u0069\u0063\u0072o\u0073\u006f\u0066\u0074\u002d\u0063\u006f\u006d\u003a\u006f\u0066\u0066\u0069\u0063\u0065\u003a\u0070\u006f\u0077\u0065\u0072\u0070\u006f\u0069\u006e\u0074","\u0043\u0054\u005f\u0045\u006d\u0070\u0074\u0079",NewCT_Empty );_ga .RegisterConstructor ("\u0075\u0072\u006e\u003a\u0073\u0063\u0068e\u006d\u0061\u0073-\u006d\u0069\u0063\u0072o\u0073\u006f\u0066\u0074\u002d\u0063\u006f\u006d\u003a\u006f\u0066\u0066\u0069\u0063\u0065\u003a\u0070\u006f\u0077\u0065\u0072\u0070\u006f\u0069\u006e\u0074","\u0043\u0054\u005f\u0052\u0065\u006c",NewCT_Rel );_ga .RegisterConstructor ("\u0075\u0072\u006e\u003a\u0073\u0063\u0068e\u006d\u0061\u0073-\u006d\u0069\u0063\u0072o\u0073\u006f\u0066\u0074\u002d\u0063\u006f\u006d\u003a\u006f\u0066\u0066\u0069\u0063\u0065\u003a\u0070\u006f\u0077\u0065\u0072\u0070\u006f\u0069\u006e\u0074","\u0069s\u0063\u006f\u006d\u006d\u0065\u006et",NewIscomment );_ga .RegisterConstructor ("\u0075\u0072\u006e\u003a\u0073\u0063\u0068e\u006d\u0061\u0073-\u006d\u0069\u0063\u0072o\u0073\u006f\u0066\u0074\u002d\u0063\u006f\u006d\u003a\u006f\u0066\u0066\u0069\u0063\u0065\u003a\u0070\u006f\u0077\u0065\u0072\u0070\u006f\u0069\u006e\u0074","\u0074\u0065\u0078\u0074\u0064\u0061\u0074\u0061",NewTextdata );};