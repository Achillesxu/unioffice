//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package powerpoint ;import (_a "encoding/xml";_af "fmt";_e "github.com/unidoc/unioffice";);func (_dc *Textdata )MarshalXML (e *_a .Encoder ,start _a .StartElement )error {start .Attr =append (start .Attr ,_a .Attr {Name :_a .Name {Local :"\u0078\u006d\u006cn\u0073"},Value :"\u0075\u0072\u006e\u003a\u0073\u0063\u0068e\u006d\u0061\u0073-\u006d\u0069\u0063\u0072o\u0073\u006f\u0066\u0074\u002d\u0063\u006f\u006d\u003a\u006f\u0066\u0066\u0069\u0063\u0065\u003a\u0070\u006f\u0077\u0065\u0072\u0070\u006f\u0069\u006e\u0074"});start .Attr =append (start .Attr ,_a .Attr {Name :_a .Name {Local :"\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"},Value :"\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"});start .Name .Local ="\u0074\u0065\u0078\u0074\u0064\u0061\u0074\u0061";return _dc .CT_Rel .MarshalXML (e ,start );};

// Validate validates the Iscomment and its children
func (_fa *Iscomment )Validate ()error {return _fa .ValidateWithPath ("\u0049s\u0063\u006f\u006d\u006d\u0065\u006et");};func (_cc *CT_Empty )MarshalXML (e *_a .Encoder ,start _a .StartElement )error {e .EncodeToken (start );e .EncodeToken (_a .EndElement {Name :start .Name });return nil ;};

// ValidateWithPath validates the Iscomment and its children, prefixing error messages with path
func (_faa *Iscomment )ValidateWithPath (path string )error {if _bde :=_faa .CT_Empty .ValidateWithPath (path );_bde !=nil {return _bde ;};return nil ;};

// ValidateWithPath validates the Textdata and its children, prefixing error messages with path
func (_gfa *Textdata )ValidateWithPath (path string )error {if _cfe :=_gfa .CT_Rel .ValidateWithPath (path );_cfe !=nil {return _cfe ;};return nil ;};func (_aa *Iscomment )UnmarshalXML (d *_a .Decoder ,start _a .StartElement )error {_aa .CT_Empty =*NewCT_Empty ();for {_eaf ,_cb :=d .Token ();if _cb !=nil {return _af .Errorf ("p\u0061\u0072\u0073\u0069ng\u0020I\u0073\u0063\u006f\u006d\u006de\u006e\u0074\u003a\u0020\u0025\u0073",_cb );};if _ec ,_fe :=_eaf .(_a .EndElement );_fe &&_ec .Name ==start .Name {break ;};};return nil ;};func NewCT_Empty ()*CT_Empty {_afe :=&CT_Empty {};return _afe };type CT_Rel struct{IdAttr *string ;};

// Validate validates the CT_Rel and its children
func (_dg *CT_Rel )Validate ()error {return _dg .ValidateWithPath ("\u0043\u0054\u005f\u0052\u0065\u006c");};

// Validate validates the Textdata and its children
func (_bbe *Textdata )Validate ()error {return _bbe .ValidateWithPath ("\u0054\u0065\u0078\u0074\u0064\u0061\u0074\u0061");};type Iscomment struct{CT_Empty };type Textdata struct{CT_Rel };

// ValidateWithPath validates the CT_Empty and its children, prefixing error messages with path
func (_be *CT_Empty )ValidateWithPath (path string )error {return nil };func (_f *CT_Empty )UnmarshalXML (d *_a .Decoder ,start _a .StartElement )error {for {_g ,_b :=d .Token ();if _b !=nil {return _af .Errorf ("p\u0061r\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005fE\u006d\u0070\u0074\u0079: \u0025\u0073",_b );};if _fb ,_bf :=_g .(_a .EndElement );_bf &&_fb .Name ==start .Name {break ;};};return nil ;};func (_ba *Iscomment )MarshalXML (e *_a .Encoder ,start _a .StartElement )error {start .Attr =append (start .Attr ,_a .Attr {Name :_a .Name {Local :"\u0078\u006d\u006cn\u0073"},Value :"\u0075\u0072\u006e\u003a\u0073\u0063\u0068e\u006d\u0061\u0073-\u006d\u0069\u0063\u0072o\u0073\u006f\u0066\u0074\u002d\u0063\u006f\u006d\u003a\u006f\u0066\u0066\u0069\u0063\u0065\u003a\u0070\u006f\u0077\u0065\u0072\u0070\u006f\u0069\u006e\u0074"});start .Attr =append (start .Attr ,_a .Attr {Name :_a .Name {Local :"\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"},Value :"\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"});start .Name .Local ="\u0069s\u0063\u006f\u006d\u006d\u0065\u006et";return _ba .CT_Empty .MarshalXML (e ,start );};

// ValidateWithPath validates the CT_Rel and its children, prefixing error messages with path
func (_gb *CT_Rel )ValidateWithPath (path string )error {return nil };func (_gd *CT_Rel )UnmarshalXML (d *_a .Decoder ,start _a .StartElement )error {for _ ,_ea :=range start .Attr {if _ea .Name .Local =="\u0069\u0064"{_ff ,_ed :=_ea .Value ,error (nil );if _ed !=nil {return _ed ;};_gd .IdAttr =&_ff ;continue ;};};for {_gg ,_bd :=d .Token ();if _bd !=nil {return _af .Errorf ("\u0070a\u0072s\u0069\u006e\u0067\u0020\u0043T\u005f\u0052e\u006c\u003a\u0020\u0025\u0073",_bd );};if _cf ,_gc :=_gg .(_a .EndElement );_gc &&_cf .Name ==start .Name {break ;};};return nil ;};func (_egd *CT_Rel )MarshalXML (e *_a .Encoder ,start _a .StartElement )error {if _egd .IdAttr !=nil {start .Attr =append (start .Attr ,_a .Attr {Name :_a .Name {Local :"\u0069\u0064"},Value :_af .Sprintf ("\u0025\u0076",*_egd .IdAttr )});};e .EncodeToken (start );e .EncodeToken (_a .EndElement {Name :start .Name });return nil ;};type CT_Empty struct{};func NewCT_Rel ()*CT_Rel {_eg :=&CT_Rel {};return _eg };func NewIscomment ()*Iscomment {_gf :=&Iscomment {};_gf .CT_Empty =*NewCT_Empty ();return _gf };func (_beb *Textdata )UnmarshalXML (d *_a .Decoder ,start _a .StartElement )error {_beb .CT_Rel =*NewCT_Rel ();for _ ,_ad :=range start .Attr {if _ad .Name .Local =="\u0069\u0064"{_bea ,_fad :=_ad .Value ,error (nil );if _fad !=nil {return _fad ;};_beb .IdAttr =&_bea ;continue ;};};for {_fd ,_db :=d .Token ();if _db !=nil {return _af .Errorf ("p\u0061r\u0073\u0069\u006e\u0067\u0020\u0054\u0065\u0078t\u0064\u0061\u0074\u0061: \u0025\u0073",_db );};if _gfd ,_dd :=_fd .(_a .EndElement );_dd &&_gfd .Name ==start .Name {break ;};};return nil ;};func NewTextdata ()*Textdata {_afa :=&Textdata {};_afa .CT_Rel =*NewCT_Rel ();return _afa };

// Validate validates the CT_Empty and its children
func (_bb *CT_Empty )Validate ()error {return _bb .ValidateWithPath ("\u0043\u0054\u005f\u0045\u006d\u0070\u0074\u0079");};func init (){_e .RegisterConstructor ("\u0075\u0072\u006e\u003a\u0073\u0063\u0068e\u006d\u0061\u0073-\u006d\u0069\u0063\u0072o\u0073\u006f\u0066\u0074\u002d\u0063\u006f\u006d\u003a\u006f\u0066\u0066\u0069\u0063\u0065\u003a\u0070\u006f\u0077\u0065\u0072\u0070\u006f\u0069\u006e\u0074","\u0043\u0054\u005f\u0045\u006d\u0070\u0074\u0079",NewCT_Empty );_e .RegisterConstructor ("\u0075\u0072\u006e\u003a\u0073\u0063\u0068e\u006d\u0061\u0073-\u006d\u0069\u0063\u0072o\u0073\u006f\u0066\u0074\u002d\u0063\u006f\u006d\u003a\u006f\u0066\u0066\u0069\u0063\u0065\u003a\u0070\u006f\u0077\u0065\u0072\u0070\u006f\u0069\u006e\u0074","\u0043\u0054\u005f\u0052\u0065\u006c",NewCT_Rel );_e .RegisterConstructor ("\u0075\u0072\u006e\u003a\u0073\u0063\u0068e\u006d\u0061\u0073-\u006d\u0069\u0063\u0072o\u0073\u006f\u0066\u0074\u002d\u0063\u006f\u006d\u003a\u006f\u0066\u0066\u0069\u0063\u0065\u003a\u0070\u006f\u0077\u0065\u0072\u0070\u006f\u0069\u006e\u0074","\u0069s\u0063\u006f\u006d\u006d\u0065\u006et",NewIscomment );_e .RegisterConstructor ("\u0075\u0072\u006e\u003a\u0073\u0063\u0068e\u006d\u0061\u0073-\u006d\u0069\u0063\u0072o\u0073\u006f\u0066\u0074\u002d\u0063\u006f\u006d\u003a\u006f\u0066\u0066\u0069\u0063\u0065\u003a\u0070\u006f\u0077\u0065\u0072\u0070\u006f\u0069\u006e\u0074","\u0074\u0065\u0078\u0074\u0064\u0061\u0074\u0061",NewTextdata );};