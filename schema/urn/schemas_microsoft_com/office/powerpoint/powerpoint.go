//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package powerpoint ;import (_e "encoding/xml";_b "fmt";_be "github.com/unidoc/unioffice";);func (_ad *CT_Rel )UnmarshalXML (d *_e .Decoder ,start _e .StartElement )error {for _ ,_ef :=range start .Attr {if _ef .Name .Local =="\u0069\u0064"{_cdc ,_ee :=_ef .Value ,error (nil );if _ee !=nil {return _ee ;};_ad .IdAttr =&_cdc ;continue ;};};for {_db ,_ec :=d .Token ();if _ec !=nil {return _b .Errorf ("\u0070a\u0072s\u0069\u006e\u0067\u0020\u0043T\u005f\u0052e\u006c\u003a\u0020\u0025\u0073",_ec );};if _ae ,_bcf :=_db .(_e .EndElement );_bcf &&_ae .Name ==start .Name {break ;};};return nil ;};func NewIscomment ()*Iscomment {_ecc :=&Iscomment {};_ecc .CT_Empty =*NewCT_Empty ();return _ecc };func (_eb *CT_Empty )UnmarshalXML (d *_e .Decoder ,start _e .StartElement )error {for {_af ,_g :=d .Token ();if _g !=nil {return _b .Errorf ("p\u0061r\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005fE\u006d\u0070\u0074\u0079: \u0025\u0073",_g );};if _d ,_gf :=_af .(_e .EndElement );_gf &&_d .Name ==start .Name {break ;};};return nil ;};

// Validate validates the CT_Empty and its children
func (_df *CT_Empty )Validate ()error {return _df .ValidateWithPath ("\u0043\u0054\u005f\u0045\u006d\u0070\u0074\u0079");};

// ValidateWithPath validates the Iscomment and its children, prefixing error messages with path
func (_gc *Iscomment )ValidateWithPath (path string )error {if _aed :=_gc .CT_Empty .ValidateWithPath (path );_aed !=nil {return _aed ;};return nil ;};func (_de *Iscomment )UnmarshalXML (d *_e .Decoder ,start _e .StartElement )error {_de .CT_Empty =*NewCT_Empty ();for {_ede ,_gg :=d .Token ();if _gg !=nil {return _b .Errorf ("p\u0061\u0072\u0073\u0069ng\u0020I\u0073\u0063\u006f\u006d\u006de\u006e\u0074\u003a\u0020\u0025\u0073",_gg );};if _bed ,_cdf :=_ede .(_e .EndElement );_cdf &&_bed .Name ==start .Name {break ;};};return nil ;};func NewTextdata ()*Textdata {_ccd :=&Textdata {};_ccd .CT_Rel =*NewCT_Rel ();return _ccd };type Iscomment struct{CT_Empty };type CT_Rel struct{IdAttr *string ;};func (_aa *CT_Empty )MarshalXML (e *_e .Encoder ,start _e .StartElement )error {e .EncodeToken (start );e .EncodeToken (_e .EndElement {Name :start .Name });return nil ;};

// ValidateWithPath validates the CT_Empty and its children, prefixing error messages with path
func (_cc *CT_Empty )ValidateWithPath (path string )error {return nil };

// ValidateWithPath validates the Textdata and its children, prefixing error messages with path
func (_fa *Textdata )ValidateWithPath (path string )error {if _feb :=_fa .CT_Rel .ValidateWithPath (path );_feb !=nil {return _feb ;};return nil ;};func (_efb *Iscomment )MarshalXML (e *_e .Encoder ,start _e .StartElement )error {start .Attr =append (start .Attr ,_e .Attr {Name :_e .Name {Local :"\u0078\u006d\u006cn\u0073"},Value :"\u0075\u0072\u006e\u003a\u0073\u0063\u0068e\u006d\u0061\u0073-\u006d\u0069\u0063\u0072o\u0073\u006f\u0066\u0074\u002d\u0063\u006f\u006d\u003a\u006f\u0066\u0066\u0069\u0063\u0065\u003a\u0070\u006f\u0077\u0065\u0072\u0070\u006f\u0069\u006e\u0074"});start .Attr =append (start .Attr ,_e .Attr {Name :_e .Name {Local :"\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"},Value :"\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"});start .Name .Local ="\u0069s\u0063\u006f\u006d\u006d\u0065\u006et";return _efb .CT_Empty .MarshalXML (e ,start );};

// ValidateWithPath validates the CT_Rel and its children, prefixing error messages with path
func (_eba *CT_Rel )ValidateWithPath (path string )error {return nil };func (_cd *CT_Rel )MarshalXML (e *_e .Encoder ,start _e .StartElement )error {if _cd .IdAttr !=nil {start .Attr =append (start .Attr ,_e .Attr {Name :_e .Name {Local :"\u0069\u0064"},Value :_b .Sprintf ("\u0025\u0076",*_cd .IdAttr )});};e .EncodeToken (start );e .EncodeToken (_e .EndElement {Name :start .Name });return nil ;};func NewCT_Rel ()*CT_Rel {_ed :=&CT_Rel {};return _ed };func (_fd *Textdata )MarshalXML (e *_e .Encoder ,start _e .StartElement )error {start .Attr =append (start .Attr ,_e .Attr {Name :_e .Name {Local :"\u0078\u006d\u006cn\u0073"},Value :"\u0075\u0072\u006e\u003a\u0073\u0063\u0068e\u006d\u0061\u0073-\u006d\u0069\u0063\u0072o\u0073\u006f\u0066\u0074\u002d\u0063\u006f\u006d\u003a\u006f\u0066\u0066\u0069\u0063\u0065\u003a\u0070\u006f\u0077\u0065\u0072\u0070\u006f\u0069\u006e\u0074"});start .Attr =append (start .Attr ,_e .Attr {Name :_e .Name {Local :"\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"},Value :"\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"});start .Name .Local ="\u0074\u0065\u0078\u0074\u0064\u0061\u0074\u0061";return _fd .CT_Rel .MarshalXML (e ,start );};type CT_Empty struct{};

// Validate validates the Iscomment and its children
func (_f *Iscomment )Validate ()error {return _f .ValidateWithPath ("\u0049s\u0063\u006f\u006d\u006d\u0065\u006et");};func (_fe *Textdata )UnmarshalXML (d *_e .Decoder ,start _e .StartElement )error {_fe .CT_Rel =*NewCT_Rel ();for _ ,_dc :=range start .Attr {if _dc .Name .Local =="\u0069\u0064"{_cdd ,_gfa :=_dc .Value ,error (nil );if _gfa !=nil {return _gfa ;};_fe .IdAttr =&_cdd ;continue ;};};for {_ab ,_dd :=d .Token ();if _dd !=nil {return _b .Errorf ("p\u0061r\u0073\u0069\u006e\u0067\u0020\u0054\u0065\u0078t\u0064\u0061\u0074\u0061: \u0025\u0073",_dd );};if _cb ,_fb :=_ab .(_e .EndElement );_fb &&_cb .Name ==start .Name {break ;};};return nil ;};func NewCT_Empty ()*CT_Empty {_c :=&CT_Empty {};return _c };type Textdata struct{CT_Rel };

// Validate validates the CT_Rel and its children
func (_aea *CT_Rel )Validate ()error {return _aea .ValidateWithPath ("\u0043\u0054\u005f\u0052\u0065\u006c");};

// Validate validates the Textdata and its children
func (_abe *Textdata )Validate ()error {return _abe .ValidateWithPath ("\u0054\u0065\u0078\u0074\u0064\u0061\u0074\u0061");};func init (){_be .RegisterConstructor ("\u0075\u0072\u006e\u003a\u0073\u0063\u0068e\u006d\u0061\u0073-\u006d\u0069\u0063\u0072o\u0073\u006f\u0066\u0074\u002d\u0063\u006f\u006d\u003a\u006f\u0066\u0066\u0069\u0063\u0065\u003a\u0070\u006f\u0077\u0065\u0072\u0070\u006f\u0069\u006e\u0074","\u0043\u0054\u005f\u0045\u006d\u0070\u0074\u0079",NewCT_Empty );_be .RegisterConstructor ("\u0075\u0072\u006e\u003a\u0073\u0063\u0068e\u006d\u0061\u0073-\u006d\u0069\u0063\u0072o\u0073\u006f\u0066\u0074\u002d\u0063\u006f\u006d\u003a\u006f\u0066\u0066\u0069\u0063\u0065\u003a\u0070\u006f\u0077\u0065\u0072\u0070\u006f\u0069\u006e\u0074","\u0043\u0054\u005f\u0052\u0065\u006c",NewCT_Rel );_be .RegisterConstructor ("\u0075\u0072\u006e\u003a\u0073\u0063\u0068e\u006d\u0061\u0073-\u006d\u0069\u0063\u0072o\u0073\u006f\u0066\u0074\u002d\u0063\u006f\u006d\u003a\u006f\u0066\u0066\u0069\u0063\u0065\u003a\u0070\u006f\u0077\u0065\u0072\u0070\u006f\u0069\u006e\u0074","\u0069s\u0063\u006f\u006d\u006d\u0065\u006et",NewIscomment );_be .RegisterConstructor ("\u0075\u0072\u006e\u003a\u0073\u0063\u0068e\u006d\u0061\u0073-\u006d\u0069\u0063\u0072o\u0073\u006f\u0066\u0074\u002d\u0063\u006f\u006d\u003a\u006f\u0066\u0066\u0069\u0063\u0065\u003a\u0070\u006f\u0077\u0065\u0072\u0070\u006f\u0069\u006e\u0074","\u0074\u0065\u0078\u0074\u0064\u0061\u0074\u0061",NewTextdata );};