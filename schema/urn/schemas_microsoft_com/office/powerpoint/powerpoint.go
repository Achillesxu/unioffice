//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package powerpoint ;import (_c "encoding/xml";_a "fmt";_d "github.com/unidoc/unioffice";);

// Validate validates the Iscomment and its children
func (_bd *Iscomment )Validate ()error {return _bd .ValidateWithPath ("\u0049s\u0063\u006f\u006d\u006d\u0065\u006et");};

// Validate validates the Textdata and its children
func (_cgg *Textdata )Validate ()error {return _cgg .ValidateWithPath ("\u0054\u0065\u0078\u0074\u0064\u0061\u0074\u0061");};

// Validate validates the CT_Empty and its children
func (_df *CT_Empty )Validate ()error {return _df .ValidateWithPath ("\u0043\u0054\u005f\u0045\u006d\u0070\u0074\u0079");};type Textdata struct{CT_Rel };

// Validate validates the CT_Rel and its children
func (_db *CT_Rel )Validate ()error {return _db .ValidateWithPath ("\u0043\u0054\u005f\u0052\u0065\u006c");};func (_fe *CT_Rel )MarshalXML (e *_c .Encoder ,start _c .StartElement )error {if _fe .IdAttr !=nil {start .Attr =append (start .Attr ,_c .Attr {Name :_c .Name {Local :"\u0069\u0064"},Value :_a .Sprintf ("\u0025\u0076",*_fe .IdAttr )});};e .EncodeToken (start );e .EncodeToken (_c .EndElement {Name :start .Name });return nil ;};func NewCT_Rel ()*CT_Rel {_ad :=&CT_Rel {};return _ad };

// ValidateWithPath validates the CT_Rel and its children, prefixing error messages with path
func (_dd *CT_Rel )ValidateWithPath (path string )error {return nil };func (_cb *CT_Rel )UnmarshalXML (d *_c .Decoder ,start _c .StartElement )error {for _ ,_ba :=range start .Attr {if _ba .Name .Local =="\u0069\u0064"{_eea ,_be :=_ba .Value ,error (nil );if _be !=nil {return _be ;};_cb .IdAttr =&_eea ;continue ;};};for {_ed ,_ec :=d .Token ();if _ec !=nil {return _a .Errorf ("\u0070a\u0072s\u0069\u006e\u0067\u0020\u0043T\u005f\u0052e\u006c\u003a\u0020\u0025\u0073",_ec );};if _adf ,_eg :=_ed .(_c .EndElement );_eg &&_adf .Name ==start .Name {break ;};};return nil ;};func (_ee *CT_Empty )UnmarshalXML (d *_c .Decoder ,start _c .StartElement )error {for {_b ,_cf :=d .Token ();if _cf !=nil {return _a .Errorf ("p\u0061r\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005fE\u006d\u0070\u0074\u0079: \u0025\u0073",_cf );};if _ce ,_cea :=_b .(_c .EndElement );_cea &&_ce .Name ==start .Name {break ;};};return nil ;};type CT_Rel struct{IdAttr *string ;};func NewTextdata ()*Textdata {_fc :=&Textdata {};_fc .CT_Rel =*NewCT_Rel ();return _fc };func (_cg *Iscomment )UnmarshalXML (d *_c .Decoder ,start _c .StartElement )error {_cg .CT_Empty =*NewCT_Empty ();for {_gg ,_gb :=d .Token ();if _gb !=nil {return _a .Errorf ("p\u0061\u0072\u0073\u0069ng\u0020I\u0073\u0063\u006f\u006d\u006de\u006e\u0074\u003a\u0020\u0025\u0073",_gb );};if _gd ,_cde :=_gg .(_c .EndElement );_cde &&_gd .Name ==start .Name {break ;};};return nil ;};

// ValidateWithPath validates the Iscomment and its children, prefixing error messages with path
func (_ddg *Iscomment )ValidateWithPath (path string )error {if _dg :=_ddg .CT_Empty .ValidateWithPath (path );_dg !=nil {return _dg ;};return nil ;};type CT_Empty struct{};func (_ag *CT_Empty )MarshalXML (e *_c .Encoder ,start _c .StartElement )error {e .EncodeToken (start );e .EncodeToken (_c .EndElement {Name :start .Name });return nil ;};

// ValidateWithPath validates the Textdata and its children, prefixing error messages with path
func (_ca *Textdata )ValidateWithPath (path string )error {if _eff :=_ca .CT_Rel .ValidateWithPath (path );_eff !=nil {return _eff ;};return nil ;};type Iscomment struct{CT_Empty };func NewCT_Empty ()*CT_Empty {_e :=&CT_Empty {};return _e };func (_gc *Textdata )UnmarshalXML (d *_c .Decoder ,start _c .StartElement )error {_gc .CT_Rel =*NewCT_Rel ();for _ ,_adfc :=range start .Attr {if _adfc .Name .Local =="\u0069\u0064"{_dgg ,_da :=_adfc .Value ,error (nil );if _da !=nil {return _da ;};_gc .IdAttr =&_dgg ;continue ;};};for {_eeaf ,_fcg :=d .Token ();if _fcg !=nil {return _a .Errorf ("p\u0061r\u0073\u0069\u006e\u0067\u0020\u0054\u0065\u0078t\u0064\u0061\u0074\u0061: \u0025\u0073",_fcg );};if _bg ,_ecba :=_eeaf .(_c .EndElement );_ecba &&_bg .Name ==start .Name {break ;};};return nil ;};func (_bf *Textdata )MarshalXML (e *_c .Encoder ,start _c .StartElement )error {start .Attr =append (start .Attr ,_c .Attr {Name :_c .Name {Local :"\u0078\u006d\u006cn\u0073"},Value :"\u0075\u0072\u006e\u003a\u0073\u0063\u0068e\u006d\u0061\u0073-\u006d\u0069\u0063\u0072o\u0073\u006f\u0066\u0074\u002d\u0063\u006f\u006d\u003a\u006f\u0066\u0066\u0069\u0063\u0065\u003a\u0070\u006f\u0077\u0065\u0072\u0070\u006f\u0069\u006e\u0074"});start .Attr =append (start .Attr ,_c .Attr {Name :_c .Name {Local :"\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"},Value :"\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"});start .Name .Local ="\u0074\u0065\u0078\u0074\u0064\u0061\u0074\u0061";return _bf .CT_Rel .MarshalXML (e ,start );};func (_fd *Iscomment )MarshalXML (e *_c .Encoder ,start _c .StartElement )error {start .Attr =append (start .Attr ,_c .Attr {Name :_c .Name {Local :"\u0078\u006d\u006cn\u0073"},Value :"\u0075\u0072\u006e\u003a\u0073\u0063\u0068e\u006d\u0061\u0073-\u006d\u0069\u0063\u0072o\u0073\u006f\u0066\u0074\u002d\u0063\u006f\u006d\u003a\u006f\u0066\u0066\u0069\u0063\u0065\u003a\u0070\u006f\u0077\u0065\u0072\u0070\u006f\u0069\u006e\u0074"});start .Attr =append (start .Attr ,_c .Attr {Name :_c .Name {Local :"\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"},Value :"\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"});start .Name .Local ="\u0069s\u0063\u006f\u006d\u006d\u0065\u006et";return _fd .CT_Empty .MarshalXML (e ,start );};

// ValidateWithPath validates the CT_Empty and its children, prefixing error messages with path
func (_f *CT_Empty )ValidateWithPath (path string )error {return nil };func NewIscomment ()*Iscomment {_ecb :=&Iscomment {};_ecb .CT_Empty =*NewCT_Empty ();return _ecb };func init (){_d .RegisterConstructor ("\u0075\u0072\u006e\u003a\u0073\u0063\u0068e\u006d\u0061\u0073-\u006d\u0069\u0063\u0072o\u0073\u006f\u0066\u0074\u002d\u0063\u006f\u006d\u003a\u006f\u0066\u0066\u0069\u0063\u0065\u003a\u0070\u006f\u0077\u0065\u0072\u0070\u006f\u0069\u006e\u0074","\u0043\u0054\u005f\u0045\u006d\u0070\u0074\u0079",NewCT_Empty );_d .RegisterConstructor ("\u0075\u0072\u006e\u003a\u0073\u0063\u0068e\u006d\u0061\u0073-\u006d\u0069\u0063\u0072o\u0073\u006f\u0066\u0074\u002d\u0063\u006f\u006d\u003a\u006f\u0066\u0066\u0069\u0063\u0065\u003a\u0070\u006f\u0077\u0065\u0072\u0070\u006f\u0069\u006e\u0074","\u0043\u0054\u005f\u0052\u0065\u006c",NewCT_Rel );_d .RegisterConstructor ("\u0075\u0072\u006e\u003a\u0073\u0063\u0068e\u006d\u0061\u0073-\u006d\u0069\u0063\u0072o\u0073\u006f\u0066\u0074\u002d\u0063\u006f\u006d\u003a\u006f\u0066\u0066\u0069\u0063\u0065\u003a\u0070\u006f\u0077\u0065\u0072\u0070\u006f\u0069\u006e\u0074","\u0069s\u0063\u006f\u006d\u006d\u0065\u006et",NewIscomment );_d .RegisterConstructor ("\u0075\u0072\u006e\u003a\u0073\u0063\u0068e\u006d\u0061\u0073-\u006d\u0069\u0063\u0072o\u0073\u006f\u0066\u0074\u002d\u0063\u006f\u006d\u003a\u006f\u0066\u0066\u0069\u0063\u0065\u003a\u0070\u006f\u0077\u0065\u0072\u0070\u006f\u0069\u006e\u0074","\u0074\u0065\u0078\u0074\u0064\u0061\u0074\u0061",NewTextdata );};